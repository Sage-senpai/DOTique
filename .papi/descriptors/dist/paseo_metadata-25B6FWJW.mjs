// .papi/descriptors/src/paseo_metadata.ts
var binMeta = "bWV0YRDhEAAMHHNwX2NvcmUYY3J5cHRvLEFjY291bnRJZDMyAAAEAAQBIFt1ODsgMzJdAAAEAAADIAAAAAgACAAABQMADAgwZnJhbWVfc3lzdGVtLEFjY291bnRJbmZvCBROb25jZQEQLEFjY291bnREYXRhARQAFAEUbm9uY2UQARROb25jZQABJGNvbnN1bWVycxABIFJlZkNvdW50AAEkcHJvdmlkZXJzEAEgUmVmQ291bnQAASxzdWZmaWNpZW50cxABIFJlZkNvdW50AAEQZGF0YRQBLEFjY291bnREYXRhAAAQAAAFBQAUDDxwYWxsZXRfYmFsYW5jZXMUdHlwZXMsQWNjb3VudERhdGEEHEJhbGFuY2UBGAAQARBmcmVlGAEcQmFsYW5jZQABIHJlc2VydmVkGAEcQmFsYW5jZQABGGZyb3plbhgBHEJhbGFuY2UAARRmbGFncxwBKEV4dHJhRmxhZ3MAABgAAAUHABwMPHBhbGxldF9iYWxhbmNlcxR0eXBlcyhFeHRyYUZsYWdzAAAEABgBEHUxMjgAACAAAAUAACQMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2hAUGVyRGlzcGF0Y2hDbGFzcwQEVAEoAAwBGG5vcm1hbCgBBFQAASxvcGVyYXRpb25hbCgBBFQAASRtYW5kYXRvcnkoAQRUAAAoDChzcF93ZWlnaHRzJHdlaWdodF92MhhXZWlnaHQAAAgBIHJlZl90aW1lLAEMdTY0AAEocHJvb2Zfc2l6ZSwBDHU2NAAALAAABjAAMAAABQYANAg8cHJpbWl0aXZlX3R5cGVzEEgyNTYAAAQABAEgW3U4OyAzMl0AADgAAAIIADwQKHNwX3J1bnRpbWUcZ2VuZXJpYxhkaWdlc3QYRGlnZXN0AAAEARBsb2dzQAE8VmVjPERpZ2VzdEl0ZW0+AABAAAACRABEEChzcF9ydW50aW1lHGdlbmVyaWMYZGlnZXN0KERpZ2VzdEl0ZW0AARQoUHJlUnVudGltZQgASAFEQ29uc2Vuc3VzRW5naW5lSWQAADgBHFZlYzx1OD4ABgAkQ29uc2Vuc3VzCABIAURDb25zZW5zdXNFbmdpbmVJZAAAOAEcVmVjPHU4PgAEABBTZWFsCABIAURDb25zZW5zdXNFbmdpbmVJZAAAOAEcVmVjPHU4PgAFABRPdGhlcgQAOAEcVmVjPHU4PgAAAGRSdW50aW1lRW52aXJvbm1lbnRVcGRhdGVkAAgAAEgAAAMEAAAACABMAAACUABQCDBmcmFtZV9zeXN0ZW0sRXZlbnRSZWNvcmQIBEUBVARUATQADAEUcGhhc2XZCAEUUGhhc2UAARRldmVudFQBBEUAARh0b3BpY3PJAQEYVmVjPFQ+AABUCDRwYXNlb19ydW50aW1lMFJ1bnRpbWVFdmVudAABsBhTeXN0ZW0EAFgBcGZyYW1lX3N5c3RlbTo6RXZlbnQ8UnVudGltZT4AAAAkU2NoZWR1bGVyBACAAYBwYWxsZXRfc2NoZWR1bGVyOjpFdmVudDxSdW50aW1lPgABACBQcmVpbWFnZQQAlAF8cGFsbGV0X3ByZWltYWdlOjpFdmVudDxSdW50aW1lPgAKABxJbmRpY2VzBACYAXhwYWxsZXRfaW5kaWNlczo6RXZlbnQ8UnVudGltZT4ABAAgQmFsYW5jZXMEAJwBfHBhbGxldF9iYWxhbmNlczo6RXZlbnQ8UnVudGltZT4ABQBIVHJhbnNhY3Rpb25QYXltZW50BACoAahwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudDo6RXZlbnQ8UnVudGltZT4AIAAcU3Rha2luZwQArAF4cGFsbGV0X3N0YWtpbmc6OkV2ZW50PFJ1bnRpbWU+AAcAIE9mZmVuY2VzBADIAVhwYWxsZXRfb2ZmZW5jZXM6OkV2ZW50AAgAKEhpc3RvcmljYWwEANABiHNlc3Npb25faGlzdG9yaWNhbDo6RXZlbnQ8UnVudGltZT4AIQAcU2Vzc2lvbgQA1AF4cGFsbGV0X3Nlc3Npb246OkV2ZW50PFJ1bnRpbWU+AAkAHEdyYW5kcGEEANgBVHBhbGxldF9ncmFuZHBhOjpFdmVudAALACBUcmVhc3VyeQQA6AF8cGFsbGV0X3RyZWFzdXJ5OjpFdmVudDxSdW50aW1lPgATAEBDb252aWN0aW9uVm90aW5nBACRAQGgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nOjpFdmVudDxSdW50aW1lPgAUACRSZWZlcmVuZGEEAKEBAYBwYWxsZXRfcmVmZXJlbmRhOjpFdmVudDxSdW50aW1lPgAVACRXaGl0ZWxpc3QEAA0IAYBwYWxsZXRfd2hpdGVsaXN0OjpFdmVudDxSdW50aW1lPgAXABhDbGFpbXMEAB0IAVhjbGFpbXM6OkV2ZW50PFJ1bnRpbWU+ABgAHFZlc3RpbmcEACEIAXhwYWxsZXRfdmVzdGluZzo6RXZlbnQ8UnVudGltZT4AGQAcVXRpbGl0eQQAJQgBVHBhbGxldF91dGlsaXR5OjpFdmVudAAaABRQcm94eQQAKQgBcHBhbGxldF9wcm94eTo6RXZlbnQ8UnVudGltZT4AHQAgTXVsdGlzaWcEADEIAXxwYWxsZXRfbXVsdGlzaWc6OkV2ZW50PFJ1bnRpbWU+AB4AIEJvdW50aWVzBAA1CAF8cGFsbGV0X2JvdW50aWVzOjpFdmVudDxSdW50aW1lPgAiADRDaGlsZEJvdW50aWVzBAA5CAGUcGFsbGV0X2NoaWxkX2JvdW50aWVzOjpFdmVudDxSdW50aW1lPgAmAGhFbGVjdGlvblByb3ZpZGVyTXVsdGlQaGFzZQQAPQgB0HBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZTo6RXZlbnQ8UnVudGltZT4AJAAkVm90ZXJMaXN0BABNCAH0cGFsbGV0X2JhZ3NfbGlzdDo6RXZlbnQ8UnVudGltZSwgcGFsbGV0X2JhZ3NfbGlzdDo6SW5zdGFuY2UxPgAlADxOb21pbmF0aW9uUG9vbHMEAFEIAZxwYWxsZXRfbm9taW5hdGlvbl9wb29sczo6RXZlbnQ8UnVudGltZT4AJwAsRmFzdFVuc3Rha2UEAFkIAYxwYWxsZXRfZmFzdF91bnN0YWtlOjpFdmVudDxSdW50aW1lPgAoAEBEZWxlZ2F0ZWRTdGFraW5nBABdCAGgcGFsbGV0X2RlbGVnYXRlZF9zdGFraW5nOjpFdmVudDxSdW50aW1lPgApADxTdGFraW5nQWhDbGllbnQEAGEIAbhwYWxsZXRfc3Rha2luZ19hc3luY19haF9jbGllbnQ6OkV2ZW50PFJ1bnRpbWU+ACoANFBhcmFJbmNsdXNpb24EAGkIAZBwYXJhY2hhaW5zX2luY2x1c2lvbjo6RXZlbnQ8UnVudGltZT4ANQAUUGFyYXMEAHkIAYBwYXJhY2hhaW5zX3BhcmFzOjpFdmVudDxSdW50aW1lPgA4ABBIcm1wBAB9CAF8cGFyYWNoYWluc19ocm1wOjpFdmVudDxSdW50aW1lPgA8ADRQYXJhc0Rpc3B1dGVzBACBCAGMcGFyYWNoYWluc19kaXNwdXRlczo6RXZlbnQ8UnVudGltZT4APgAgT25EZW1hbmQEAI0IAZBwYXJhY2hhaW5zX29uX2RlbWFuZDo6RXZlbnQ8UnVudGltZT4AQAAkUmVnaXN0cmFyBACRCAF8cGFyYXNfcmVnaXN0cmFyOjpFdmVudDxSdW50aW1lPgBGABRTbG90cwQAlQgBVHNsb3RzOjpFdmVudDxSdW50aW1lPgBHACBBdWN0aW9ucwQAmQgBYGF1Y3Rpb25zOjpFdmVudDxSdW50aW1lPgBIACRDcm93ZGxvYW4EAJ0IAWRjcm93ZGxvYW46OkV2ZW50PFJ1bnRpbWU+AEkAIENvcmV0aW1lBAChCAFgY29yZXRpbWU6OkV2ZW50PFJ1bnRpbWU+AEoASFN0YXRlVHJpZU1pZ3JhdGlvbgQApQgBrHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbjo6RXZlbnQ8UnVudGltZT4AYgAkWGNtUGFsbGV0BACxCAFocGFsbGV0X3hjbTo6RXZlbnQ8UnVudGltZT4AYwAwTWVzc2FnZVF1ZXVlBADBCAGQcGFsbGV0X21lc3NhZ2VfcXVldWU6OkV2ZW50PFJ1bnRpbWU+AGQAJEFzc2V0UmF0ZQQAyQgBhHBhbGxldF9hc3NldF9yYXRlOjpFdmVudDxSdW50aW1lPgBlABBTdWRvBADNCAFscGFsbGV0X3N1ZG86OkV2ZW50PFJ1bnRpbWU+APsAKFJjTWlncmF0b3IEANEIAYhwYWxsZXRfcmNfbWlncmF0b3I6OkV2ZW50PFJ1bnRpbWU+AP8AAFgMMGZyYW1lX3N5c3RlbRhwYWxsZXQURXZlbnQEBFQAASBARXh0cmluc2ljU3VjY2VzcwQBNGRpc3BhdGNoX2luZm9cAUREaXNwYXRjaEV2ZW50SW5mbwAABJBBbiBleHRyaW5zaWMgY29tcGxldGVkIHN1Y2Nlc3NmdWxseS48RXh0cmluc2ljRmFpbGVkCAE4ZGlzcGF0Y2hfZXJyb3JoATREaXNwYXRjaEVycm9yAAE0ZGlzcGF0Y2hfaW5mb1wBRERpc3BhdGNoRXZlbnRJbmZvAAEEUEFuIGV4dHJpbnNpYyBmYWlsZWQuLENvZGVVcGRhdGVkAAIEUGA6Y29kZWAgd2FzIHVwZGF0ZWQuKE5ld0FjY291bnQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAMEaEEgbmV3IGFjY291bnQgd2FzIGNyZWF0ZWQuNEtpbGxlZEFjY291bnQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAQEWEFuIGFjY291bnQgd2FzIHJlYXBlZC4gUmVtYXJrZWQIARhzZW5kZXIAATBUOjpBY2NvdW50SWQAARBoYXNoNAEcVDo6SGFzaAAFBHBPbiBvbi1jaGFpbiByZW1hcmsgaGFwcGVuZWQuRFVwZ3JhZGVBdXRob3JpemVkCAEkY29kZV9oYXNoNAEcVDo6SGFzaAABNGNoZWNrX3ZlcnNpb24gARBib29sAAYEaEFuIHVwZ3JhZGUgd2FzIGF1dGhvcml6ZWQugFJlamVjdGVkSW52YWxpZEF1dGhvcml6ZWRVcGdyYWRlCAEkY29kZV9oYXNoNAEcVDo6SGFzaAABFGVycm9yaAE0RGlzcGF0Y2hFcnJvcgAHBBEBQW4gaW52YWxpZCBhdXRob3JpemVkIHVwZ3JhZGUgd2FzIHJlamVjdGVkIHdoaWxlIHRyeWluZyB0byBhcHBseSBpdC4EcEV2ZW50IGZvciB0aGUgU3lzdGVtIHBhbGxldC5cCDBmcmFtZV9zeXN0ZW1ERGlzcGF0Y2hFdmVudEluZm8AAAwBGHdlaWdodCgBGFdlaWdodAABFGNsYXNzYAE0RGlzcGF0Y2hDbGFzcwABIHBheXNfZmVlZAEQUGF5cwAAYAw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaDREaXNwYXRjaENsYXNzAAEMGE5vcm1hbAAAACxPcGVyYXRpb25hbAABACRNYW5kYXRvcnkAAgAAZAw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaBBQYXlzAAEIDFllcwAAAAhObwABAABoCChzcF9ydW50aW1lNERpc3BhdGNoRXJyb3IAATwUT3RoZXIAAAAwQ2Fubm90TG9va3VwAAEAJEJhZE9yaWdpbgACABhNb2R1bGUEAGwBLE1vZHVsZUVycm9yAAMARENvbnN1bWVyUmVtYWluaW5nAAQALE5vUHJvdmlkZXJzAAUAQFRvb01hbnlDb25zdW1lcnMABgAUVG9rZW4EAHABKFRva2VuRXJyb3IABwAoQXJpdGhtZXRpYwQAdAE8QXJpdGhtZXRpY0Vycm9yAAgANFRyYW5zYWN0aW9uYWwEAHgBSFRyYW5zYWN0aW9uYWxFcnJvcgAJACRFeGhhdXN0ZWQACgAoQ29ycnVwdGlvbgALACxVbmF2YWlsYWJsZQAMADhSb290Tm90QWxsb3dlZAANABBUcmllBAB8ASRUcmllRXJyb3IADgAAbAgoc3BfcnVudGltZSxNb2R1bGVFcnJvcgAACAEUaW5kZXgIAQh1OAABFGVycm9ySAGMW3U4OyBNQVhfTU9EVUxFX0VSUk9SX0VOQ09ERURfU0laRV0AAHAIKHNwX3J1bnRpbWUoVG9rZW5FcnJvcgABKEBGdW5kc1VuYXZhaWxhYmxlAAAAME9ubHlQcm92aWRlcgABADBCZWxvd01pbmltdW0AAgAwQ2Fubm90Q3JlYXRlAAMAMFVua25vd25Bc3NldAAEABhGcm96ZW4ABQAsVW5zdXBwb3J0ZWQABgBAQ2Fubm90Q3JlYXRlSG9sZAAHADROb3RFeHBlbmRhYmxlAAgAHEJsb2NrZWQACQAAdAg0c3BfYXJpdGhtZXRpYzxBcml0aG1ldGljRXJyb3IAAQwkVW5kZXJmbG93AAAAIE92ZXJmbG93AAEAOERpdmlzaW9uQnlaZXJvAAIAAHgIKHNwX3J1bnRpbWVIVHJhbnNhY3Rpb25hbEVycm9yAAEIMExpbWl0UmVhY2hlZAAAABxOb0xheWVyAAEAAHwMKHNwX3J1bnRpbWUwcHJvdmluZ190cmllJFRyaWVFcnJvcgABOEBJbnZhbGlkU3RhdGVSb290AAAASEluY29tcGxldGVEYXRhYmFzZQABAFBWYWx1ZUF0SW5jb21wbGV0ZUtleQACADBEZWNvZGVyRXJyb3IAAwAsSW52YWxpZEhhc2gABAAwRHVwbGljYXRlS2V5AAUAOEV4dHJhbmVvdXNOb2RlAAYAPEV4dHJhbmVvdXNWYWx1ZQAHAFxFeHRyYW5lb3VzSGFzaFJlZmVyZW5jZQAIAFRJbnZhbGlkQ2hpbGRSZWZlcmVuY2UACQA0VmFsdWVNaXNtYXRjaAAKADxJbmNvbXBsZXRlUHJvb2YACwAwUm9vdE1pc21hdGNoAAwALERlY29kZUVycm9yAA0AAIAMQHBhbGxldF9zY2hlZHVsZXIYcGFsbGV0FEV2ZW50BARUAAEoJFNjaGVkdWxlZAgBEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgABFGluZGV4EAEMdTMyAAAEUFNjaGVkdWxlZCBzb21lIHRhc2suIENhbmNlbGVkCAEQd2hlbhABREJsb2NrTnVtYmVyRm9yPFQ+AAEUaW5kZXgQAQx1MzIAAQRMQ2FuY2VsZWQgc29tZSB0YXNrLihEaXNwYXRjaGVkDAEQdGFza4QBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkiAFAT3B0aW9uPFRhc2tOYW1lPgABGHJlc3VsdIwBOERpc3BhdGNoUmVzdWx0AAIEVERpc3BhdGNoZWQgc29tZSB0YXNrLiBSZXRyeVNldBABEHRhc2uEAXhUYXNrQWRkcmVzczxCbG9ja051bWJlckZvcjxUPj4AAQhpZIgBQE9wdGlvbjxUYXNrTmFtZT4AARhwZXJpb2QQAURCbG9ja051bWJlckZvcjxUPgABHHJldHJpZXMIAQh1OAADBKBTZXQgYSByZXRyeSBjb25maWd1cmF0aW9uIGZvciBzb21lIHRhc2suOFJldHJ5Q2FuY2VsbGVkCAEQdGFza4QBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkiAFAT3B0aW9uPFRhc2tOYW1lPgAEBKxDYW5jZWwgYSByZXRyeSBjb25maWd1cmF0aW9uIGZvciBzb21lIHRhc2suPENhbGxVbmF2YWlsYWJsZQgBEHRhc2uEAXhUYXNrQWRkcmVzczxCbG9ja051bWJlckZvcjxUPj4AAQhpZIgBQE9wdGlvbjxUYXNrTmFtZT4ABQQpAVRoZSBjYWxsIGZvciB0aGUgcHJvdmlkZWQgaGFzaCB3YXMgbm90IGZvdW5kIHNvIHRoZSB0YXNrIGhhcyBiZWVuIGFib3J0ZWQuOFBlcmlvZGljRmFpbGVkCAEQdGFza4QBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkiAFAT3B0aW9uPFRhc2tOYW1lPgAGBD0BVGhlIGdpdmVuIHRhc2sgd2FzIHVuYWJsZSB0byBiZSByZW5ld2VkIHNpbmNlIHRoZSBhZ2VuZGEgaXMgZnVsbCBhdCB0aGF0IGJsb2NrLixSZXRyeUZhaWxlZAgBEHRhc2uEAXhUYXNrQWRkcmVzczxCbG9ja051bWJlckZvcjxUPj4AAQhpZIgBQE9wdGlvbjxUYXNrTmFtZT4ABwhdAVRoZSBnaXZlbiB0YXNrIHdhcyB1bmFibGUgdG8gYmUgcmV0cmllZCBzaW5jZSB0aGUgYWdlbmRhIGlzIGZ1bGwgYXQgdGhhdCBibG9jayBvciB0aGVyZZx3YXMgbm90IGVub3VnaCB3ZWlnaHQgdG8gcmVzY2hlZHVsZSBpdC5UUGVybWFuZW50bHlPdmVyd2VpZ2h0CAEQdGFza4QBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkiAFAT3B0aW9uPFRhc2tOYW1lPgAIBPBUaGUgZ2l2ZW4gdGFzayBjYW4gbmV2ZXIgYmUgZXhlY3V0ZWQgc2luY2UgaXQgaXMgb3ZlcndlaWdodC5AQWdlbmRhSW5jb21wbGV0ZQQBEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgAJBIRBZ2VuZGEgaXMgaW5jb21wbGV0ZSBmcm9tIGB3aGVuYC4EMEV2ZW50cyB0eXBlLoQAAAQIEBAAiAQYT3B0aW9uBARUAQQBCBBOb25lAAAAEFNvbWUEAAQAAAEAAIwEGFJlc3VsdAgEVAGQBEUBaAEICE9rBACQAAAAAAxFcnIEAGgAAAEAAJAAAAQAAJQMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQURXZlbnQEBFQAAQwUTm90ZWQEARBoYXNoNAEcVDo6SGFzaAAABGhBIHByZWltYWdlIGhhcyBiZWVuIG5vdGVkLiRSZXF1ZXN0ZWQEARBoYXNoNAEcVDo6SGFzaAABBHhBIHByZWltYWdlIGhhcyBiZWVuIHJlcXVlc3RlZC4cQ2xlYXJlZAQBEGhhc2g0ARxUOjpIYXNoAAIEbEEgcHJlaW1hZ2UgaGFzIGJlbiBjbGVhcmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldJgMOHBhbGxldF9pbmRpY2VzGHBhbGxldBRFdmVudAQEVAABEDRJbmRleEFzc2lnbmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEUaW5kZXgQATxUOjpBY2NvdW50SW5kZXgAAAR0QSBhY2NvdW50IGluZGV4IHdhcyBhc3NpZ25lZC4oSW5kZXhGcmVlZAQBFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAEEvEEgYWNjb3VudCBpbmRleCBoYXMgYmVlbiBmcmVlZCB1cCAodW5hc3NpZ25lZCkuLEluZGV4RnJvemVuCAEUaW5kZXgQATxUOjpBY2NvdW50SW5kZXgAAQx3aG8AATBUOjpBY2NvdW50SWQAAgToQSBhY2NvdW50IGluZGV4IGhhcyBiZWVuIGZyb3plbiB0byBpdHMgY3VycmVudCBhY2NvdW50IElELjBEZXBvc2l0UG9rZWQQAQx3aG8AATBUOjpBY2NvdW50SWQAARRpbmRleBABPFQ6OkFjY291bnRJbmRleAABLG9sZF9kZXBvc2l0GAEwQmFsYW5jZU9mPFQ+AAEsbmV3X2RlcG9zaXQYATBCYWxhbmNlT2Y8VD4AAwToQSBkZXBvc2l0IHRvIHJlc2VydmUgYW4gaW5kZXggaGFzIGJlZW4gcG9rZWQvcmVjb25zaWRlcmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldJwMPHBhbGxldF9iYWxhbmNlcxhwYWxsZXQURXZlbnQIBFQABEkAAVwcRW5kb3dlZAgBHGFjY291bnQAATBUOjpBY2NvdW50SWQAATBmcmVlX2JhbGFuY2UYAShUOjpCYWxhbmNlAAAEuEFuIGFjY291bnQgd2FzIGNyZWF0ZWQgd2l0aCBzb21lIGZyZWUgYmFsYW5jZS4gRHVzdExvc3QIARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQABCD0BQW4gYWNjb3VudCB3YXMgcmVtb3ZlZCB3aG9zZSBiYWxhbmNlIHdhcyBub24temVybyBidXQgYmVsb3cgRXhpc3RlbnRpYWxEZXBvc2l0LHhyZXN1bHRpbmcgaW4gYW4gb3V0cmlnaHQgbG9zcy4gVHJhbnNmZXIMARBmcm9tAAEwVDo6QWNjb3VudElkAAEIdG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAIETFRyYW5zZmVyIHN1Y2NlZWRlZC4oQmFsYW5jZVNldAgBDHdobwABMFQ6OkFjY291bnRJZAABEGZyZWUYAShUOjpCYWxhbmNlAAMEaEEgYmFsYW5jZSB3YXMgc2V0IGJ5IHJvb3QuIFJlc2VydmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAEBOBTb21lIGJhbGFuY2Ugd2FzIHJlc2VydmVkIChtb3ZlZCBmcm9tIGZyZWUgdG8gcmVzZXJ2ZWQpLihVbnJlc2VydmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAFBOhTb21lIGJhbGFuY2Ugd2FzIHVucmVzZXJ2ZWQgKG1vdmVkIGZyb20gcmVzZXJ2ZWQgdG8gZnJlZSkuSFJlc2VydmVSZXBhdHJpYXRlZBABEGZyb20AATBUOjpBY2NvdW50SWQAAQh0bwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UAAUhkZXN0aW5hdGlvbl9zdGF0dXOgARhTdGF0dXMABghNAVNvbWUgYmFsYW5jZSB3YXMgbW92ZWQgZnJvbSB0aGUgcmVzZXJ2ZSBvZiB0aGUgZmlyc3QgYWNjb3VudCB0byB0aGUgc2Vjb25kIGFjY291bnQu2EZpbmFsIGFyZ3VtZW50IGluZGljYXRlcyB0aGUgZGVzdGluYXRpb24gYmFsYW5jZSB0eXBlLhxEZXBvc2l0CAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAHBNhTb21lIGFtb3VudCB3YXMgZGVwb3NpdGVkIChlLmcuIGZvciB0cmFuc2FjdGlvbiBmZWVzKS4gV2l0aGRyYXcIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAgEHQFTb21lIGFtb3VudCB3YXMgd2l0aGRyYXduIGZyb20gdGhlIGFjY291bnQgKGUuZy4gZm9yIHRyYW5zYWN0aW9uIGZlZXMpLhxTbGFzaGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAJBAEBU29tZSBhbW91bnQgd2FzIHJlbW92ZWQgZnJvbSB0aGUgYWNjb3VudCAoZS5nLiBmb3IgbWlzYmVoYXZpb3IpLhhNaW50ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAoEnFNvbWUgYW1vdW50IHdhcyBtaW50ZWQgaW50byBhbiBhY2NvdW50LhhCdXJuZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAsEnFNvbWUgYW1vdW50IHdhcyBidXJuZWQgZnJvbSBhbiBhY2NvdW50LiRTdXNwZW5kZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAwEFQFTb21lIGFtb3VudCB3YXMgc3VzcGVuZGVkIGZyb20gYW4gYWNjb3VudCAoaXQgY2FuIGJlIHJlc3RvcmVkIGxhdGVyKS4gUmVzdG9yZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAA0EpFNvbWUgYW1vdW50IHdhcyByZXN0b3JlZCBpbnRvIGFuIGFjY291bnQuIFVwZ3JhZGVkBAEMd2hvAAEwVDo6QWNjb3VudElkAA4EYEFuIGFjY291bnQgd2FzIHVwZ3JhZGVkLhhJc3N1ZWQEARhhbW91bnQYAShUOjpCYWxhbmNlAA8ELQFUb3RhbCBpc3N1YW5jZSB3YXMgaW5jcmVhc2VkIGJ5IGBhbW91bnRgLCBjcmVhdGluZyBhIGNyZWRpdCB0byBiZSBiYWxhbmNlZC4kUmVzY2luZGVkBAEYYW1vdW50GAEoVDo6QmFsYW5jZQAQBCUBVG90YWwgaXNzdWFuY2Ugd2FzIGRlY3JlYXNlZCBieSBgYW1vdW50YCwgY3JlYXRpbmcgYSBkZWJ0IHRvIGJlIGJhbGFuY2VkLhhMb2NrZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlABEEYFNvbWUgYmFsYW5jZSB3YXMgbG9ja2VkLiBVbmxvY2tlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UAEgRoU29tZSBiYWxhbmNlIHdhcyB1bmxvY2tlZC4YRnJvemVuCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQATBGBTb21lIGJhbGFuY2Ugd2FzIGZyb3plbi4YVGhhd2VkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAUBGBTb21lIGJhbGFuY2Ugd2FzIHRoYXdlZC5MVG90YWxJc3N1YW5jZUZvcmNlZAgBDG9sZBgBKFQ6OkJhbGFuY2UAAQxuZXcYAShUOjpCYWxhbmNlABUErFRoZSBgVG90YWxJc3N1YW5jZWAgd2FzIGZvcmNlZnVsbHkgY2hhbmdlZC4oVW5leHBlY3RlZAQApAE4VW5leHBlY3RlZEtpbmQAFgSwQW4gdW5leHBlY3RlZC9kZWZlbnNpdmUgZXZlbnQgd2FzIHRyaWdnZXJlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSgFDRmcmFtZV9zdXBwb3J0GHRyYWl0cxh0b2tlbnMQbWlzYzRCYWxhbmNlU3RhdHVzAAEIEEZyZWUAAAAgUmVzZXJ2ZWQAAQAApAw8cGFsbGV0X2JhbGFuY2VzGHBhbGxldDhVbmV4cGVjdGVkS2luZAABCDhCYWxhbmNlVXBkYXRlZAAAAFRGYWlsZWRUb011dGF0ZUFjY291bnQAAQAAqAxocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnQYcGFsbGV0FEV2ZW50BARUAAEESFRyYW5zYWN0aW9uRmVlUGFpZAwBDHdobwABMFQ6OkFjY291bnRJZAABKGFjdHVhbF9mZWUYATBCYWxhbmNlT2Y8VD4AAQx0aXAYATBCYWxhbmNlT2Y8VD4AAAhZAUEgdHJhbnNhY3Rpb24gZmVlIGBhY3R1YWxfZmVlYCwgb2Ygd2hpY2ggYHRpcGAgd2FzIGFkZGVkIHRvIHRoZSBtaW5pbXVtIGluY2x1c2lvbiBmZWUsXGhhcyBiZWVuIHBhaWQgYnkgYHdob2AuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0rBA4cGFsbGV0X3N0YWtpbmcYcGFsbGV0GHBhbGxldBRFdmVudAQEVAABTBxFcmFQYWlkDAEkZXJhX2luZGV4EAEgRXJhSW5kZXgAAUB2YWxpZGF0b3JfcGF5b3V0GAEwQmFsYW5jZU9mPFQ+AAEkcmVtYWluZGVyGAEwQmFsYW5jZU9mPFQ+AAAIVQFUaGUgZXJhIHBheW91dCBoYXMgYmVlbiBzZXQ7IHRoZSBmaXJzdCBiYWxhbmNlIGlzIHRoZSB2YWxpZGF0b3ItcGF5b3V0OyB0aGUgc2Vjb25kIGlzwHRoZSByZW1haW5kZXIgZnJvbSB0aGUgbWF4aW11bSBhbW91bnQgb2YgcmV3YXJkLiBSZXdhcmRlZAwBFHN0YXNoAAEwVDo6QWNjb3VudElkAAEQZGVzdLABfFJld2FyZERlc3RpbmF0aW9uPFQ6OkFjY291bnRJZD4AARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAQQNAVRoZSBub21pbmF0b3IgaGFzIGJlZW4gcmV3YXJkZWQgYnkgdGhpcyBhbW91bnQgdG8gdGhpcyBkZXN0aW5hdGlvbi4cU2xhc2hlZAgBGHN0YWtlcgABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgACBB0BQSBzdGFrZXIgKHZhbGlkYXRvciBvciBub21pbmF0b3IpIGhhcyBiZWVuIHNsYXNoZWQgYnkgdGhlIGdpdmVuIGFtb3VudC40U2xhc2hSZXBvcnRlZAwBJHZhbGlkYXRvcgABMFQ6OkFjY291bnRJZAABIGZyYWN0aW9utAEcUGVyYmlsbAABJHNsYXNoX2VyYRABIEVyYUluZGV4AAMIWQFBIHNsYXNoIGZvciB0aGUgZ2l2ZW4gdmFsaWRhdG9yLCBmb3IgdGhlIGdpdmVuIHBlcmNlbnRhZ2Ugb2YgdGhlaXIgc3Rha2UsIGF0IHRoZSBnaXZlblRlcmEgYXMgYmVlbiByZXBvcnRlZC5oT2xkU2xhc2hpbmdSZXBvcnREaXNjYXJkZWQEATRzZXNzaW9uX2luZGV4EAEwU2Vzc2lvbkluZGV4AAQIGQFBbiBvbGQgc2xhc2hpbmcgcmVwb3J0IGZyb20gYSBwcmlvciBlcmEgd2FzIGRpc2NhcmRlZCBiZWNhdXNlIGl0IGNvdWxkRG5vdCBiZSBwcm9jZXNzZWQuOFN0YWtlcnNFbGVjdGVkAAUEhEEgbmV3IHNldCBvZiBzdGFrZXJzIHdhcyBlbGVjdGVkLhhCb25kZWQIARRzdGFzaAABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgAGENBBbiBhY2NvdW50IGhhcyBib25kZWQgdGhpcyBhbW91bnQuIFxbc3Rhc2gsIGFtb3VudFxdAE0BTk9URTogVGhpcyBldmVudCBpcyBvbmx5IGVtaXR0ZWQgd2hlbiBmdW5kcyBhcmUgYm9uZGVkIHZpYSBhIGRpc3BhdGNoYWJsZS4gTm90YWJseSwhAWl0IHdpbGwgbm90IGJlIGVtaXR0ZWQgZm9yIHN0YWtpbmcgcmV3YXJkcyB3aGVuIHRoZXkgYXJlIGFkZGVkIHRvIHN0YWtlLiBVbmJvbmRlZAgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAcEkEFuIGFjY291bnQgaGFzIHVuYm9uZGVkIHRoaXMgYW1vdW50LiRXaXRoZHJhd24IARRzdGFzaAABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgAICFkBQW4gYWNjb3VudCBoYXMgY2FsbGVkIGB3aXRoZHJhd191bmJvbmRlZGAgYW5kIHJlbW92ZWQgdW5ib25kaW5nIGNodW5rcyB3b3J0aCBgQmFsYW5jZWBkZnJvbSB0aGUgdW5sb2NraW5nIHF1ZXVlLhhLaWNrZWQIASRub21pbmF0b3IAATBUOjpBY2NvdW50SWQAARRzdGFzaAABMFQ6OkFjY291bnRJZAAJBLRBIG5vbWluYXRvciBoYXMgYmVlbiBraWNrZWQgZnJvbSBhIHZhbGlkYXRvci5UU3Rha2luZ0VsZWN0aW9uRmFpbGVkAAoErFRoZSBlbGVjdGlvbiBmYWlsZWQuIE5vIG5ldyBlcmEgaXMgcGxhbm5lZC4cQ2hpbGxlZAQBFHN0YXNoAAEwVDo6QWNjb3VudElkAAsEIQFBbiBhY2NvdW50IGhhcyBzdG9wcGVkIHBhcnRpY2lwYXRpbmcgYXMgZWl0aGVyIGEgdmFsaWRhdG9yIG9yIG5vbWluYXRvci40UGF5b3V0U3RhcnRlZBABJGVyYV9pbmRleBABIEVyYUluZGV4AAE8dmFsaWRhdG9yX3N0YXNoAAEwVDo6QWNjb3VudElkAAEQcGFnZRABEFBhZ2UAARBuZXh0uAEwT3B0aW9uPFBhZ2U+AAwEWQFBIFBhZ2Ugb2Ygc3Rha2VycyByZXdhcmRzIGFyZSBnZXR0aW5nIHBhaWQuIGBuZXh0YCBpcyBgTm9uZWAgaWYgYWxsIHBhZ2VzIGFyZSBjbGFpbWVkLkRWYWxpZGF0b3JQcmVmc1NldAgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAEUcHJlZnO8AThWYWxpZGF0b3JQcmVmcwANBJhBIHZhbGlkYXRvciBoYXMgc2V0IHRoZWlyIHByZWZlcmVuY2VzLmhTbmFwc2hvdFZvdGVyc1NpemVFeGNlZWRlZAQBEHNpemUQAQx1MzIADgRoVm90ZXJzIHNpemUgbGltaXQgcmVhY2hlZC5sU25hcHNob3RUYXJnZXRzU2l6ZUV4Y2VlZGVkBAEQc2l6ZRABDHUzMgAPBGxUYXJnZXRzIHNpemUgbGltaXQgcmVhY2hlZC4gRm9yY2VFcmEEARBtb2RlxAEcRm9yY2luZwAQBHRBIG5ldyBmb3JjZSBlcmEgbW9kZSB3YXMgc2V0LmRDb250cm9sbGVyQmF0Y2hEZXByZWNhdGVkBAEgZmFpbHVyZXMQAQx1MzIAEQSkUmVwb3J0IG9mIGEgY29udHJvbGxlciBiYXRjaCBkZXByZWNhdGlvbi5AQ3VycmVuY3lNaWdyYXRlZAgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAE4Zm9yY2Vfd2l0aGRyYXcYATBCYWxhbmNlT2Y8VD4AEghVAVN0YWtpbmcgYmFsYW5jZSBtaWdyYXRlZCBmcm9tIGxvY2tzIHRvIGhvbGRzLCB3aXRoIGFueSBiYWxhbmNlIHRoYXQgY291bGQgbm90IGJlIGhlbGRMaXMgZm9yY2Ugd2l0aGRyYXduLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldLAIOHBhbGxldF9zdGFraW5nRFJld2FyZERlc3RpbmF0aW9uBCRBY2NvdW50SWQBAAEUGFN0YWtlZAAAABRTdGFzaAABAChDb250cm9sbGVyAAIAHEFjY291bnQEAAABJEFjY291bnRJZAADABBOb25lAAQAALQMNHNwX2FyaXRobWV0aWMocGVyX3RoaW5ncxxQZXJiaWxsAAAEABABDHUzMgAAuAQYT3B0aW9uBARUARABCBBOb25lAAAAEFNvbWUEABAAAAEAALwIOHBhbGxldF9zdGFraW5nOFZhbGlkYXRvclByZWZzAAAIAShjb21taXNzaW9uwAEcUGVyYmlsbAABHGJsb2NrZWQgARBib29sAADAAAAGtADECDhwYWxsZXRfc3Rha2luZxxGb3JjaW5nAAEQKE5vdEZvcmNpbmcAAAAgRm9yY2VOZXcAAQAkRm9yY2VOb25lAAIALEZvcmNlQWx3YXlzAAMAAMgMPHBhbGxldF9vZmZlbmNlcxhwYWxsZXQURXZlbnQAAQQcT2ZmZW5jZQgBEGtpbmTMARBLaW5kAAEgdGltZXNsb3Q4AThPcGFxdWVUaW1lU2xvdAAADFEBVGhlcmUgaXMgYW4gb2ZmZW5jZSByZXBvcnRlZCBvZiB0aGUgZ2l2ZW4gYGtpbmRgIGhhcHBlbmVkIGF0IHRoZSBgc2Vzc2lvbl9pbmRleGAgYW5kNQEoa2luZC1zcGVjaWZpYykgdGltZSBzbG90LiBUaGlzIGV2ZW50IGlzIG5vdCBkZXBvc2l0ZWQgZm9yIGR1cGxpY2F0ZSBzbGFzaGVzLkxcW2tpbmQsIHRpbWVzbG90XF0uBDBFdmVudHMgdHlwZS7MAAADEAAAAAgA0BA4cGFsbGV0X3Nlc3Npb24oaGlzdG9yaWNhbBhwYWxsZXQURXZlbnQEBFQAAQgoUm9vdFN0b3JlZAQBFGluZGV4EAEwU2Vzc2lvbkluZGV4AAAEBQFUaGUgbWVya2xlIHJvb3Qgb2YgdGhlIHZhbGlkYXRvcnMgb2YgdGhlIHNhaWQgc2Vzc2lvbiB3ZXJlIHN0b3JlZCxSb290c1BydW5lZAQBFHVwX3RvEAEwU2Vzc2lvbkluZGV4AAEE4FRoZSBtZXJrbGUgcm9vdHMgb2YgdXAgdG8gdGhpcyBzZXNzaW9uIGluZGV4IHdlcmUgcHJ1bmVkBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV01Aw4cGFsbGV0X3Nlc3Npb24YcGFsbGV0FEV2ZW50BARUAAEQKE5ld1Nlc3Npb24EATRzZXNzaW9uX2luZGV4EAEwU2Vzc2lvbkluZGV4AAAIOQFOZXcgc2Vzc2lvbiBoYXMgaGFwcGVuZWQuIE5vdGUgdGhhdCB0aGUgYXJndW1lbnQgaXMgdGhlIHNlc3Npb24gaW5kZXgsIG5vdCB0aGWcYmxvY2sgbnVtYmVyIGFzIHRoZSB0eXBlIG1pZ2h0IHN1Z2dlc3QuJE5ld1F1ZXVlZAABCEkBVGhlIGBOZXdTZXNzaW9uYCBldmVudCBpbiB0aGUgY3VycmVudCBibG9jayBhbHNvIGltcGxpZXMgYSBuZXcgdmFsaWRhdG9yIHNldCB0byBiZRxxdWV1ZWQuRFZhbGlkYXRvckRpc2FibGVkBAEkdmFsaWRhdG9yAAE4VDo6VmFsaWRhdG9ySWQAAgRwVmFsaWRhdG9yIGhhcyBiZWVuIGRpc2FibGVkLkhWYWxpZGF0b3JSZWVuYWJsZWQEASR2YWxpZGF0b3IAAThUOjpWYWxpZGF0b3JJZAADBHhWYWxpZGF0b3IgaGFzIGJlZW4gcmUtZW5hYmxlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTYDDhwYWxsZXRfZ3JhbmRwYRhwYWxsZXQURXZlbnQAAQw4TmV3QXV0aG9yaXRpZXMEATRhdXRob3JpdHlfc2V03AE0QXV0aG9yaXR5TGlzdAAABIxOZXcgYXV0aG9yaXR5IHNldCBoYXMgYmVlbiBhcHBsaWVkLhhQYXVzZWQAAQSYQ3VycmVudCBhdXRob3JpdHkgc2V0IGhhcyBiZWVuIHBhdXNlZC4cUmVzdW1lZAACBJxDdXJyZW50IGF1dGhvcml0eSBzZXQgaGFzIGJlZW4gcmVzdW1lZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTcAAAC4ADgAAAECOQwAOQMUHNwX2NvbnNlbnN1c19ncmFuZHBhDGFwcBhQdWJsaWMAAAQABAE8ZWQyNTUxOTo6UHVibGljAADoDDxwYWxsZXRfdHJlYXN1cnkYcGFsbGV0FEV2ZW50CARUAARJAAEwIFNwZW5kaW5nBAFAYnVkZ2V0X3JlbWFpbmluZxgBPEJhbGFuY2VPZjxULCBJPgAABORXZSBoYXZlIGVuZGVkIGEgc3BlbmQgcGVyaW9kIGFuZCB3aWxsIG5vdyBhbGxvY2F0ZSBmdW5kcy4cQXdhcmRlZAwBOHByb3Bvc2FsX2luZGV4EAE0UHJvcG9zYWxJbmRleAABFGF3YXJkGAE8QmFsYW5jZU9mPFQsIEk+AAEcYWNjb3VudAABMFQ6OkFjY291bnRJZAABBHxTb21lIGZ1bmRzIGhhdmUgYmVlbiBhbGxvY2F0ZWQuFEJ1cm50BAEsYnVybnRfZnVuZHMYATxCYWxhbmNlT2Y8VCwgST4AAgSIU29tZSBvZiBvdXIgZnVuZHMgaGF2ZSBiZWVuIGJ1cm50LiBSb2xsb3ZlcgQBQHJvbGxvdmVyX2JhbGFuY2UYATxCYWxhbmNlT2Y8VCwgST4AAwQtAVNwZW5kaW5nIGhhcyBmaW5pc2hlZDsgdGhpcyBpcyB0aGUgYW1vdW50IHRoYXQgcm9sbHMgb3ZlciB1bnRpbCBuZXh0IHNwZW5kLhxEZXBvc2l0BAEUdmFsdWUYATxCYWxhbmNlT2Y8VCwgST4ABAR8U29tZSBmdW5kcyBoYXZlIGJlZW4gZGVwb3NpdGVkLjRTcGVuZEFwcHJvdmVkDAE4cHJvcG9zYWxfaW5kZXgQATRQcm9wb3NhbEluZGV4AAEYYW1vdW50GAE8QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnkAATBUOjpBY2NvdW50SWQABQScQSBuZXcgc3BlbmQgcHJvcG9zYWwgaGFzIGJlZW4gYXBwcm92ZWQuPFVwZGF0ZWRJbmFjdGl2ZQgBLHJlYWN0aXZhdGVkGAE8QmFsYW5jZU9mPFQsIEk+AAEsZGVhY3RpdmF0ZWQYATxCYWxhbmNlT2Y8VCwgST4ABgTMVGhlIGluYWN0aXZlIGZ1bmRzIG9mIHRoZSBwYWxsZXQgaGF2ZSBiZWVuIHVwZGF0ZWQuSEFzc2V0U3BlbmRBcHByb3ZlZBgBFGluZGV4EAEoU3BlbmRJbmRleAABKGFzc2V0X2tpbmTsATBUOjpBc3NldEtpbmQAARhhbW91bnQYAVBBc3NldEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5jQEBOFQ6OkJlbmVmaWNpYXJ5AAEodmFsaWRfZnJvbRABUEJsb2NrTnVtYmVyRm9yPFQsIEk+AAEkZXhwaXJlX2F0EAFQQmxvY2tOdW1iZXJGb3I8VCwgST4ABwS0QSBuZXcgYXNzZXQgc3BlbmQgcHJvcG9zYWwgaGFzIGJlZW4gYXBwcm92ZWQuQEFzc2V0U3BlbmRWb2lkZWQEARRpbmRleBABKFNwZW5kSW5kZXgACAR0QW4gYXBwcm92ZWQgc3BlbmQgd2FzIHZvaWRlZC4QUGFpZAgBFGluZGV4EAEoU3BlbmRJbmRleAABKHBheW1lbnRfaWQwAWQ8VDo6UGF5bWFzdGVyIGFzIFBheT46OklkAAkETEEgcGF5bWVudCBoYXBwZW5lZC40UGF5bWVudEZhaWxlZAgBFGluZGV4EAEoU3BlbmRJbmRleAABKHBheW1lbnRfaWQwAWQ8VDo6UGF5bWFzdGVyIGFzIFBheT46OklkAAoEkEEgcGF5bWVudCBmYWlsZWQgYW5kIGNhbiBiZSByZXRyaWVkLjhTcGVuZFByb2Nlc3NlZAQBFGluZGV4EAEoU3BlbmRJbmRleAALCE0BQSBzcGVuZCB3YXMgcHJvY2Vzc2VkIGFuZCByZW1vdmVkIGZyb20gdGhlIHN0b3JhZ2UuIEl0IG1pZ2h0IGhhdmUgYmVlbiBzdWNjZXNzZnVsbHlwcGFpZCBvciBpdCBtYXkgaGF2ZSBleHBpcmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldOwMXHBvbGthZG90X3J1bnRpbWVfY29tbW9uFGltcGxzXFZlcnNpb25lZExvY2F0YWJsZUFzc2V0AAEMCFYzCAEgbG9jYXRpb27wAUR4Y206OnYzOjpMb2NhdGlvbgABIGFzc2V0X2lkGQEBQHhjbTo6djM6OkFzc2V0SWQAAwAIVjQIASBsb2NhdGlvbh0BAUR4Y206OnY0OjpMb2NhdGlvbgABIGFzc2V0X2lkUQEBQHhjbTo6djQ6OkFzc2V0SWQABAAIVjUIASBsb2NhdGlvblUBAUR4Y206OnY1OjpMb2NhdGlvbgABIGFzc2V0X2lkiQEBQHhjbTo6djU6OkFzc2V0SWQABQAA8BAsc3RhZ2luZ194Y20IdjM0bXVsdGlsb2NhdGlvbjRNdWx0aUxvY2F0aW9uAAAIARxwYXJlbnRzCAEIdTgAASBpbnRlcmlvcvQBJEp1bmN0aW9ucwAA9BAMeGNtCHYzJGp1bmN0aW9ucyRKdW5jdGlvbnMAASQQSGVyZQAAAAhYMQQA+AEgSnVuY3Rpb24AAQAIWDIIAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgACAAhYMwwA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgADAAhYNBAA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24ABAAIWDUUAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAFAAhYNhgA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAGAAhYNxwA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24ABwAIWDggAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAA+AEgSnVuY3Rpb24AAPgBIEp1bmN0aW9uAAD4ASBKdW5jdGlvbgAIAAD4EAx4Y20IdjMganVuY3Rpb24gSnVuY3Rpb24AASgkUGFyYWNoYWluBAD8AQx1MzIAAAAsQWNjb3VudElkMzIIARxuZXR3b3JrAQEBRE9wdGlvbjxOZXR3b3JrSWQ+AAEIaWQEASBbdTg7IDMyXQABADhBY2NvdW50SW5kZXg2NAgBHG5ldHdvcmsBAQFET3B0aW9uPE5ldHdvcmtJZD4AARRpbmRleCwBDHU2NAACADBBY2NvdW50S2V5MjAIARxuZXR3b3JrAQEBRE9wdGlvbjxOZXR3b3JrSWQ+AAEMa2V5CQEBIFt1ODsgMjBdAAMAOFBhbGxldEluc3RhbmNlBAAIAQh1OAAEADBHZW5lcmFsSW5kZXgEAA0BARB1MTI4AAUAKEdlbmVyYWxLZXkIARhsZW5ndGgIAQh1OAABEGRhdGEEASBbdTg7IDMyXQAGACRPbmx5Q2hpbGQABwAkUGx1cmFsaXR5CAEIaWQRAQEYQm9keUlkAAEQcGFydBUBASBCb2R5UGFydAAIADxHbG9iYWxDb25zZW5zdXMEAAUBASROZXR3b3JrSWQACQAA/AAABhAAAQEEGE9wdGlvbgQEVAEFAQEIEE5vbmUAAAAQU29tZQQABQEAAAEAAAUBEAx4Y20IdjMganVuY3Rpb24kTmV0d29ya0lkAAEsJEJ5R2VuZXNpcwQABAEgW3U4OyAzMl0AAAAYQnlGb3JrCAEwYmxvY2tfbnVtYmVyMAEMdTY0AAEoYmxvY2tfaGFzaAQBIFt1ODsgMzJdAAEAIFBvbGthZG90AAIAGEt1c2FtYQADABxXZXN0ZW5kAAQAGFJvY29jbwAFABhXb2NvY28ABgAgRXRoZXJldW0EASBjaGFpbl9pZCwBDHU2NAAHACxCaXRjb2luQ29yZQAIACxCaXRjb2luQ2FzaAAJAEBQb2xrYWRvdEJ1bGxldGluAAoAAAkBAAADFAAAAAgADQEAAAYYABEBEAx4Y20IdjMganVuY3Rpb24YQm9keUlkAAEoEFVuaXQAAAAcTW9uaWtlcgQASAEcW3U4OyA0XQABABRJbmRleAQA/AEMdTMyAAIAJEV4ZWN1dGl2ZQADACRUZWNobmljYWwABAAsTGVnaXNsYXRpdmUABQAgSnVkaWNpYWwABgAcRGVmZW5zZQAHADhBZG1pbmlzdHJhdGlvbgAIACBUcmVhc3VyeQAJAAAVARAMeGNtCHYzIGp1bmN0aW9uIEJvZHlQYXJ0AAEUFFZvaWNlAAAAHE1lbWJlcnMEARRjb3VudPwBDHUzMgABACBGcmFjdGlvbggBDG5vbfwBDHUzMgABFGRlbm9t/AEMdTMyAAIAREF0TGVhc3RQcm9wb3J0aW9uCAEMbm9t/AEMdTMyAAEUZGVub238AQx1MzIAAwBITW9yZVRoYW5Qcm9wb3J0aW9uCAEMbm9t/AEMdTMyAAEUZGVub238AQx1MzIABAAAGQEQDHhjbQh2MyhtdWx0aWFzc2V0HEFzc2V0SWQAAQggQ29uY3JldGUEAPABNE11bHRpTG9jYXRpb24AAAAgQWJzdHJhY3QEAAQBIFt1ODsgMzJdAAEAAB0BECxzdGFnaW5nX3hjbQh2NCBsb2NhdGlvbiBMb2NhdGlvbgAACAEccGFyZW50cwgBCHU4AAEgaW50ZXJpb3IhAQEkSnVuY3Rpb25zAAAhARAsc3RhZ2luZ194Y20IdjQkanVuY3Rpb25zJEp1bmN0aW9ucwABJBBIZXJlAAAACFgxBAAlAQFIQXJjPFtKdW5jdGlvbjsgMV0+AAEACFgyBAA1AQFIQXJjPFtKdW5jdGlvbjsgMl0+AAIACFgzBAA5AQFIQXJjPFtKdW5jdGlvbjsgM10+AAMACFg0BAA9AQFIQXJjPFtKdW5jdGlvbjsgNF0+AAQACFg1BABBAQFIQXJjPFtKdW5jdGlvbjsgNV0+AAUACFg2BABFAQFIQXJjPFtKdW5jdGlvbjsgNl0+AAYACFg3BABJAQFIQXJjPFtKdW5jdGlvbjsgN10+AAcACFg4BABNAQFIQXJjPFtKdW5jdGlvbjsgOF0+AAgAACUBAAADAQAAACkBACkBECxzdGFnaW5nX3hjbQh2NCBqdW5jdGlvbiBKdW5jdGlvbgABKCRQYXJhY2hhaW4EAPwBDHUzMgAAACxBY2NvdW50SWQzMggBHG5ldHdvcmstAQFET3B0aW9uPE5ldHdvcmtJZD4AAQhpZAQBIFt1ODsgMzJdAAEAOEFjY291bnRJbmRleDY0CAEcbmV0d29yay0BAURPcHRpb248TmV0d29ya0lkPgABFGluZGV4LAEMdTY0AAIAMEFjY291bnRLZXkyMAgBHG5ldHdvcmstAQFET3B0aW9uPE5ldHdvcmtJZD4AAQxrZXkJAQEgW3U4OyAyMF0AAwA4UGFsbGV0SW5zdGFuY2UEAAgBCHU4AAQAMEdlbmVyYWxJbmRleAQADQEBEHUxMjgABQAoR2VuZXJhbEtleQgBGGxlbmd0aAgBCHU4AAEQZGF0YQQBIFt1ODsgMzJdAAYAJE9ubHlDaGlsZAAHACRQbHVyYWxpdHkIAQhpZBEBARhCb2R5SWQAARBwYXJ0FQEBIEJvZHlQYXJ0AAgAPEdsb2JhbENvbnNlbnN1cwQAMQEBJE5ldHdvcmtJZAAJAAAtAQQYT3B0aW9uBARUATEBAQgQTm9uZQAAABBTb21lBAAxAQAAAQAAMQEQLHN0YWdpbmdfeGNtCHY0IGp1bmN0aW9uJE5ldHdvcmtJZAABLCRCeUdlbmVzaXMEAAQBIFt1ODsgMzJdAAAAGEJ5Rm9yawgBMGJsb2NrX251bWJlcjABDHU2NAABKGJsb2NrX2hhc2gEASBbdTg7IDMyXQABACBQb2xrYWRvdAACABhLdXNhbWEAAwAcV2VzdGVuZAAEABhSb2NvY28ABQAYV29jb2NvAAYAIEV0aGVyZXVtBAEgY2hhaW5faWQsAQx1NjQABwAsQml0Y29pbkNvcmUACAAsQml0Y29pbkNhc2gACQBAUG9sa2Fkb3RCdWxsZXRpbgAKAAA1AQAAAwIAAAApAQA5AQAAAwMAAAApAQA9AQAAAwQAAAApAQBBAQAAAwUAAAApAQBFAQAAAwYAAAApAQBJAQAAAwcAAAApAQBNAQAAAwgAAAApAQBRARAsc3RhZ2luZ194Y20IdjQUYXNzZXQcQXNzZXRJZAAABAAdAQEgTG9jYXRpb24AAFUBECxzdGFnaW5nX3hjbQh2NSBsb2NhdGlvbiBMb2NhdGlvbgAACAEccGFyZW50cwgBCHU4AAEgaW50ZXJpb3JZAQEkSnVuY3Rpb25zAABZARAsc3RhZ2luZ194Y20IdjUkanVuY3Rpb25zJEp1bmN0aW9ucwABJBBIZXJlAAAACFgxBABdAQFIQXJjPFtKdW5jdGlvbjsgMV0+AAEACFgyBABtAQFIQXJjPFtKdW5jdGlvbjsgMl0+AAIACFgzBABxAQFIQXJjPFtKdW5jdGlvbjsgM10+AAMACFg0BAB1AQFIQXJjPFtKdW5jdGlvbjsgNF0+AAQACFg1BAB5AQFIQXJjPFtKdW5jdGlvbjsgNV0+AAUACFg2BAB9AQFIQXJjPFtKdW5jdGlvbjsgNl0+AAYACFg3BACBAQFIQXJjPFtKdW5jdGlvbjsgN10+AAcACFg4BACFAQFIQXJjPFtKdW5jdGlvbjsgOF0+AAgAAF0BAAADAQAAAGEBAGEBECxzdGFnaW5nX3hjbQh2NSBqdW5jdGlvbiBKdW5jdGlvbgABKCRQYXJhY2hhaW4EAPwBDHUzMgAAACxBY2NvdW50SWQzMggBHG5ldHdvcmtlAQFET3B0aW9uPE5ldHdvcmtJZD4AAQhpZAQBIFt1ODsgMzJdAAEAOEFjY291bnRJbmRleDY0CAEcbmV0d29ya2UBAURPcHRpb248TmV0d29ya0lkPgABFGluZGV4LAEMdTY0AAIAMEFjY291bnRLZXkyMAgBHG5ldHdvcmtlAQFET3B0aW9uPE5ldHdvcmtJZD4AAQxrZXkJAQEgW3U4OyAyMF0AAwA4UGFsbGV0SW5zdGFuY2UEAAgBCHU4AAQAMEdlbmVyYWxJbmRleAQADQEBEHUxMjgABQAoR2VuZXJhbEtleQgBGGxlbmd0aAgBCHU4AAEQZGF0YQQBIFt1ODsgMzJdAAYAJE9ubHlDaGlsZAAHACRQbHVyYWxpdHkIAQhpZBEBARhCb2R5SWQAARBwYXJ0FQEBIEJvZHlQYXJ0AAgAPEdsb2JhbENvbnNlbnN1cwQAaQEBJE5ldHdvcmtJZAAJAABlAQQYT3B0aW9uBARUAWkBAQgQTm9uZQAAABBTb21lBABpAQAAAQAAaQEQLHN0YWdpbmdfeGNtCHY1IGp1bmN0aW9uJE5ldHdvcmtJZAABICRCeUdlbmVzaXMEAAQBIFt1ODsgMzJdAAAAGEJ5Rm9yawgBMGJsb2NrX251bWJlcjABDHU2NAABKGJsb2NrX2hhc2gEASBbdTg7IDMyXQABACBQb2xrYWRvdAACABhLdXNhbWEAAwAgRXRoZXJldW0EASBjaGFpbl9pZCwBDHU2NAAHACxCaXRjb2luQ29yZQAIACxCaXRjb2luQ2FzaAAJAEBQb2xrYWRvdEJ1bGxldGluAAoAAG0BAAADAgAAAGEBAHEBAAADAwAAAGEBAHUBAAADBAAAAGEBAHkBAAADBQAAAGEBAH0BAAADBgAAAGEBAIEBAAADBwAAAGEBAIUBAAADCAAAAGEBAIkBECxzdGFnaW5nX3hjbQh2NRRhc3NldBxBc3NldElkAAAEAFUBASBMb2NhdGlvbgAAjQEIDHhjbURWZXJzaW9uZWRMb2NhdGlvbgABDAhWMwQA8AFEdjM6Ok11bHRpTG9jYXRpb24AAwAIVjQEAB0BATB2NDo6TG9jYXRpb24ABAAIVjUEAFUBATB2NTo6TG9jYXRpb24ABQAAkQEMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxhwYWxsZXQURXZlbnQIBFQABEkAARQkRGVsZWdhdGVkCAAAATBUOjpBY2NvdW50SWQAAAABMFQ6OkFjY291bnRJZAAABB0BQW4gYWNjb3VudCBoYXMgZGVsZWdhdGVkIHRoZWlyIHZvdGUgdG8gYW5vdGhlciBhY2NvdW50LiBcW3dobywgdGFyZ2V0XF0sVW5kZWxlZ2F0ZWQEAAABMFQ6OkFjY291bnRJZAABBPRBbiBcW2FjY291bnRcXSBoYXMgY2FuY2VsbGVkIGEgcHJldmlvdXMgZGVsZWdhdGlvbiBvcGVyYXRpb24uFFZvdGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEQdm90ZZUBAXBBY2NvdW50Vm90ZTxCYWxhbmNlT2Y8VCwgST4+AAIEUEFuIGFjY291bnQgaGFzIHZvdGVkLFZvdGVSZW1vdmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEQdm90ZZUBAXBBY2NvdW50Vm90ZTxCYWxhbmNlT2Y8VCwgST4+AAMEXEEgdm90ZSBoYXMgYmVlbiByZW1vdmVkMFZvdGVVbmxvY2tlZAgBDHdobwABMFQ6OkFjY291bnRJZAABFGNsYXNznQEBNENsYXNzT2Y8VCwgST4ABARFAVRoZSBsb2NrdXAgcGVyaW9kIG9mIGEgY29udmljdGlvbiB2b3RlIGV4cGlyZWQsIGFuZCB0aGUgZnVuZHMgaGF2ZSBiZWVuIHVubG9ja2VkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldJUBDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcQdm90ZSxBY2NvdW50Vm90ZQQcQmFsYW5jZQEYAQwgU3RhbmRhcmQIARB2b3RlmQEBEFZvdGUAARxiYWxhbmNlGAEcQmFsYW5jZQAAABRTcGxpdAgBDGF5ZRgBHEJhbGFuY2UAAQxuYXkYARxCYWxhbmNlAAEAMFNwbGl0QWJzdGFpbgwBDGF5ZRgBHEJhbGFuY2UAAQxuYXkYARxCYWxhbmNlAAEcYWJzdGFpbhgBHEJhbGFuY2UAAgAAmQEMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxB2b3RlEFZvdGUAAAQACAAAAJ0BAAAFBAChAQxAcGFsbGV0X3JlZmVyZW5kYRhwYWxsZXQURXZlbnQIBFQABEkAAUAkU3VibWl0dGVkDAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdHJhY2udAQE8VHJhY2tJZE9mPFQsIEk+BCUBVGhlIHRyYWNrIChhbmQgYnkgZXh0ZW5zaW9uIHByb3Bvc2FsIGRpc3BhdGNoIG9yaWdpbikgb2YgdGhpcyByZWZlcmVuZHVtLgEgcHJvcG9zYWylAQFMQm91bmRlZENhbGxPZjxULCBJPgSAVGhlIHByb3Bvc2FsIGZvciB0aGUgcmVmZXJlbmR1bS4ABIBBIHJlZmVyZW5kdW0gaGFzIGJlZW4gc3VibWl0dGVkLlREZWNpc2lvbkRlcG9zaXRQbGFjZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgEElFRoZSBkZWNpc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHBsYWNlZC5cRGVjaXNpb25EZXBvc2l0UmVmdW5kZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgIEnFRoZSBkZWNpc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHJlZnVuZGVkLjhEZXBvc2l0U2xhc2hlZAgBDHdobwABMFQ6OkFjY291bnRJZASMVGhlIGFjY291bnQgd2hvIHBsYWNlZCB0aGUgZGVwb3NpdC4BGGFtb3VudBgBPEJhbGFuY2VPZjxULCBJPgSEVGhlIGFtb3VudCBwbGFjZWQgYnkgdGhlIGFjY291bnQuAwRsQSBkZXBvc2l0IGhhcyBiZWVuIHNsYXNoZWQuPERlY2lzaW9uU3RhcnRlZBABFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRyYWNrnQEBPFRyYWNrSWRPZjxULCBJPgQlAVRoZSB0cmFjayAoYW5kIGJ5IGV4dGVuc2lvbiBwcm9wb3NhbCBkaXNwYXRjaCBvcmlnaW4pIG9mIHRoaXMgcmVmZXJlbmR1bS4BIHByb3Bvc2FspQEBTEJvdW5kZWRDYWxsT2Y8VCwgST4EgFRoZSBwcm9wb3NhbCBmb3IgdGhlIHJlZmVyZW5kdW0uARR0YWxseQkIASBUOjpUYWxseQS4VGhlIGN1cnJlbnQgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgQEvEEgcmVmZXJlbmR1bSBoYXMgbW92ZWQgaW50byB0aGUgZGVjaWRpbmcgcGhhc2UuOENvbmZpcm1TdGFydGVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgUAOENvbmZpcm1BYm9ydGVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgYAJENvbmZpcm1lZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5CQgBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgcEIQFBIHJlZmVyZW5kdW0gaGFzIGVuZGVkIGl0cyBjb25maXJtYXRpb24gcGhhc2UgYW5kIGlzIHJlYWR5IGZvciBhcHByb3ZhbC4gQXBwcm92ZWQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uCAQNAUEgcmVmZXJlbmR1bSBoYXMgYmVlbiBhcHByb3ZlZCBhbmQgaXRzIHByb3Bvc2FsIGhhcyBiZWVuIHNjaGVkdWxlZC4gUmVqZWN0ZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0YWxseQkIASBUOjpUYWxseQSwVGhlIGZpbmFsIHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4JBKxBIHByb3Bvc2FsIGhhcyBiZWVuIHJlamVjdGVkIGJ5IHJlZmVyZW5kdW0uIFRpbWVkT3V0CAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdGFsbHkJCAEgVDo6VGFsbHkEsFRoZSBmaW5hbCB0YWxseSBvZiB2b3RlcyBpbiB0aGlzIHJlZmVyZW5kdW0uCgTYQSByZWZlcmVuZHVtIGhhcyBiZWVuIHRpbWVkIG91dCB3aXRob3V0IGJlaW5nIGRlY2lkZWQuJENhbmNlbGxlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5CQgBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgsEgEEgcmVmZXJlbmR1bSBoYXMgYmVlbiBjYW5jZWxsZWQuGEtpbGxlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5CQgBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgwEdEEgcmVmZXJlbmR1bSBoYXMgYmVlbiBraWxsZWQuZFN1Ym1pc3Npb25EZXBvc2l0UmVmdW5kZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50Lg0EpFRoZSBzdWJtaXNzaW9uIGRlcG9zaXQgaGFzIGJlZW4gcmVmdW5kZWQuLE1ldGFkYXRhU2V0CAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEQaGFzaDQBHFQ6Okhhc2gEOFByZWltYWdlIGhhc2guDgScTWV0YWRhdGEgZm9yIGEgcmVmZXJlbmR1bSBoYXMgYmVlbiBzZXQuPE1ldGFkYXRhQ2xlYXJlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BEGhhc2g0ARxUOjpIYXNoBDhQcmVpbWFnZSBoYXNoLg8ErE1ldGFkYXRhIGZvciBhIHJlZmVyZW5kdW0gaGFzIGJlZW4gY2xlYXJlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSlARA0ZnJhbWVfc3VwcG9ydBh0cmFpdHMkcHJlaW1hZ2VzHEJvdW5kZWQIBFQBqQEESAEBCAEMGExlZ2FjeQQBEGhhc2g0ASRIOjpPdXRwdXQAAAAYSW5saW5lBAAFCAE0Qm91bmRlZElubGluZQABABhMb29rdXAIARBoYXNoNAEkSDo6T3V0cHV0AAEMbGVuEAEMdTMyAAIAAKkBCDRwYXNlb19ydW50aW1lLFJ1bnRpbWVDYWxsAAHEGFN5c3RlbQQArQEBrQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U3lzdGVtLCBSdW50aW1lPgAAACRTY2hlZHVsZXIEAL0BAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFNjaGVkdWxlciwgUnVudGltZT4AAQAgUHJlaW1hZ2UEAMUBAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFByZWltYWdlLCBSdW50aW1lPgAKABBCYWJlBADNAQGlAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxCYWJlLCBSdW50aW1lPgACACRUaW1lc3RhbXAEAPEBAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFRpbWVzdGFtcCwgUnVudGltZT4AAwAcSW5kaWNlcwQA9QEBsQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8SW5kaWNlcywgUnVudGltZT4ABAAgQmFsYW5jZXMEAAECAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEJhbGFuY2VzLCBSdW50aW1lPgAFABxTdGFraW5nBAANAgGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTdGFraW5nLCBSdW50aW1lPgAHABxTZXNzaW9uBABJAgGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTZXNzaW9uLCBSdW50aW1lPgAJABxHcmFuZHBhBABlAgGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxHcmFuZHBhLCBSdW50aW1lPgALACBUcmVhc3VyeQQAkQIBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8VHJlYXN1cnksIFJ1bnRpbWU+ABMAQENvbnZpY3Rpb25Wb3RpbmcEAJUCAdUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPENvbnZpY3Rpb25Wb3RpbmcsIFJ1bnRpbWU+ABQAJFJlZmVyZW5kYQQAoQIBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UmVmZXJlbmRhLCBSdW50aW1lPgAVACRXaGl0ZWxpc3QEAMUCAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFdoaXRlbGlzdCwgUnVudGltZT4AFwAYQ2xhaW1zBADJAgGtAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxDbGFpbXMsIFJ1bnRpbWU+ABgAHFZlc3RpbmcEAOkCAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFZlc3RpbmcsIFJ1bnRpbWU+ABkAHFV0aWxpdHkEAPECAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFV0aWxpdHksIFJ1bnRpbWU+ABoAFFByb3h5BAD5AgGpAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxQcm94eSwgUnVudGltZT4AHQAgTXVsdGlzaWcEAAUDAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE11bHRpc2lnLCBSdW50aW1lPgAeACBCb3VudGllcwQAEQMBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Qm91bnRpZXMsIFJ1bnRpbWU+ACIANENoaWxkQm91bnRpZXMEABUDAckBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPENoaWxkQm91bnRpZXMsIFJ1bnRpbWU+ACYAaEVsZWN0aW9uUHJvdmlkZXJNdWx0aVBoYXNlBAAZAwH9AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxFbGVjdGlvblByb3ZpZGVyTXVsdGlQaGFzZSwgUnVudGltZT4AJAAkVm90ZXJMaXN0BAANBAG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxWb3Rlckxpc3QsIFJ1bnRpbWU+ACUAPE5vbWluYXRpb25Qb29scwQAEQQB0QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Tm9taW5hdGlvblBvb2xzLCBSdW50aW1lPgAnACxGYXN0VW5zdGFrZQQARQQBwQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8RmFzdFVuc3Rha2UsIFJ1bnRpbWU+ACgAPFN0YWtpbmdBaENsaWVudAQASQQB0QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U3Rha2luZ0FoQ2xpZW50LCBSdW50aW1lPgAqADRDb25maWd1cmF0aW9uBABVBAHJAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxDb25maWd1cmF0aW9uLCBSdW50aW1lPgAzACxQYXJhc1NoYXJlZAQAeQQBwQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXNTaGFyZWQsIFJ1bnRpbWU+ADQANFBhcmFJbmNsdXNpb24EAH0EAckBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFBhcmFJbmNsdXNpb24sIFJ1bnRpbWU+ADUAMFBhcmFJbmhlcmVudAQAgQQBxQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYUluaGVyZW50LCBSdW50aW1lPgA2ABRQYXJhcwQADQUBqQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXMsIFJ1bnRpbWU+ADgALEluaXRpYWxpemVyBAAVBQHBAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxJbml0aWFsaXplciwgUnVudGltZT4AOQAQSHJtcAQAGQUBpQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8SHJtcCwgUnVudGltZT4APAA0UGFyYXNEaXNwdXRlcwQAIQUByQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXNEaXNwdXRlcywgUnVudGltZT4APgA0UGFyYXNTbGFzaGluZwQAJQUByQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXNTbGFzaGluZywgUnVudGltZT4APwAgT25EZW1hbmQEADUFAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE9uRGVtYW5kLCBSdW50aW1lPgBAACRSZWdpc3RyYXIEADkFAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFJlZ2lzdHJhciwgUnVudGltZT4ARgAUU2xvdHMEAD0FAakBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFNsb3RzLCBSdW50aW1lPgBHACBBdWN0aW9ucwQAQQUBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QXVjdGlvbnMsIFJ1bnRpbWU+AEgAJENyb3dkbG9hbgQASQUBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Q3Jvd2Rsb2FuLCBSdW50aW1lPgBJACBDb3JldGltZQQAXQUBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Q29yZXRpbWUsIFJ1bnRpbWU+AEoASFN0YXRlVHJpZU1pZ3JhdGlvbgQAcQUB3QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U3RhdGVUcmllTWlncmF0aW9uLCBSdW50aW1lPgBiACRYY21QYWxsZXQEAIkFAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFhjbVBhbGxldCwgUnVudGltZT4AYwAwTWVzc2FnZVF1ZXVlBAD5BgHFAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxNZXNzYWdlUXVldWUsIFJ1bnRpbWU+AGQAJEFzc2V0UmF0ZQQABQcBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QXNzZXRSYXRlLCBSdW50aW1lPgBlABRCZWVmeQQADQcBqQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QmVlZnksIFJ1bnRpbWU+AMgAPFBhcmFTdWRvV3JhcHBlcgQARQcB0QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYVN1ZG9XcmFwcGVyLCBSdW50aW1lPgD5ABBTdWRvBABNBwGlAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTdWRvLCBSdW50aW1lPgD7AChSY01pZ3JhdG9yBABRBwG9AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxSY01pZ3JhdG9yLCBSdW50aW1lPgD/AACtAQwwZnJhbWVfc3lzdGVtGHBhbGxldBBDYWxsBARUAAEsGHJlbWFyawQBGHJlbWFyazgBHFZlYzx1OD4AAAxoTWFrZSBzb21lIG9uLWNoYWluIHJlbWFyay4AiENhbiBiZSBleGVjdXRlZCBieSBldmVyeSBgb3JpZ2luYC44c2V0X2hlYXBfcGFnZXMEARRwYWdlczABDHU2NAABBPhTZXQgdGhlIG51bWJlciBvZiBwYWdlcyBpbiB0aGUgV2ViQXNzZW1ibHkgZW52aXJvbm1lbnQncyBoZWFwLiBzZXRfY29kZQQBEGNvZGU4ARxWZWM8dTg+AAIEZFNldCB0aGUgbmV3IHJ1bnRpbWUgY29kZS5cc2V0X2NvZGVfd2l0aG91dF9jaGVja3MEARBjb2RlOAEcVmVjPHU4PgADEBkBU2V0IHRoZSBuZXcgcnVudGltZSBjb2RlIHdpdGhvdXQgZG9pbmcgYW55IGNoZWNrcyBvZiB0aGUgZ2l2ZW4gYGNvZGVgLgBRAU5vdGUgdGhhdCBydW50aW1lIHVwZ3JhZGVzIHdpbGwgbm90IHJ1biBpZiB0aGlzIGlzIGNhbGxlZCB3aXRoIGEgbm90LWluY3JlYXNpbmcgc3BlYyB2ZXJzaW9uISxzZXRfc3RvcmFnZQQBFGl0ZW1zsQEBNFZlYzxLZXlWYWx1ZT4ABARoU2V0IHNvbWUgaXRlbXMgb2Ygc3RvcmFnZS4wa2lsbF9zdG9yYWdlBAEQa2V5c7kBASBWZWM8S2V5PgAFBHRLaWxsIHNvbWUgaXRlbXMgZnJvbSBzdG9yYWdlLixraWxsX3ByZWZpeAgBGHByZWZpeDgBDEtleQABHHN1YmtleXMQAQx1MzIABhARAUtpbGwgYWxsIHN0b3JhZ2UgaXRlbXMgd2l0aCBhIGtleSB0aGF0IHN0YXJ0cyB3aXRoIHRoZSBnaXZlbiBwcmVmaXguADkBKipOT1RFOioqIFdlIHJlbHkgb24gdGhlIFJvb3Qgb3JpZ2luIHRvIHByb3ZpZGUgdXMgdGhlIG51bWJlciBvZiBzdWJrZXlzIHVuZGVyPQF0aGUgcHJlZml4IHdlIGFyZSByZW1vdmluZyB0byBhY2N1cmF0ZWx5IGNhbGN1bGF0ZSB0aGUgd2VpZ2h0IG9mIHRoaXMgZnVuY3Rpb24uRHJlbWFya193aXRoX2V2ZW50BAEYcmVtYXJrOAEcVmVjPHU4PgAHBKRNYWtlIHNvbWUgb24tY2hhaW4gcmVtYXJrIGFuZCBlbWl0IGV2ZW50LkRhdXRob3JpemVfdXBncmFkZQQBJGNvZGVfaGFzaDQBHFQ6Okhhc2gACRBhAUF1dGhvcml6ZSBhbiB1cGdyYWRlIHRvIGEgZ2l2ZW4gYGNvZGVfaGFzaGAgZm9yIHRoZSBydW50aW1lLiBUaGUgcnVudGltZSBjYW4gYmUgc3VwcGxpZWQYbGF0ZXIuAHxUaGlzIGNhbGwgcmVxdWlyZXMgUm9vdCBvcmlnaW4ugGF1dGhvcml6ZV91cGdyYWRlX3dpdGhvdXRfY2hlY2tzBAEkY29kZV9oYXNoNAEcVDo6SGFzaAAKIGEBQXV0aG9yaXplIGFuIHVwZ3JhZGUgdG8gYSBnaXZlbiBgY29kZV9oYXNoYCBmb3IgdGhlIHJ1bnRpbWUuIFRoZSBydW50aW1lIGNhbiBiZSBzdXBwbGllZBhsYXRlci4AXQFXQVJOSU5HOiBUaGlzIGF1dGhvcml6ZXMgYW4gdXBncmFkZSB0aGF0IHdpbGwgdGFrZSBwbGFjZSB3aXRob3V0IGFueSBzYWZldHkgY2hlY2tzLCBmb3JZAWV4YW1wbGUgdGhhdCB0aGUgc3BlYyBuYW1lIHJlbWFpbnMgdGhlIHNhbWUgYW5kIHRoYXQgdGhlIHZlcnNpb24gbnVtYmVyIGluY3JlYXNlcy4gTm908HJlY29tbWVuZGVkIGZvciBub3JtYWwgdXNlLiBVc2UgYGF1dGhvcml6ZV91cGdyYWRlYCBpbnN0ZWFkLgB8VGhpcyBjYWxsIHJlcXVpcmVzIFJvb3Qgb3JpZ2luLmBhcHBseV9hdXRob3JpemVkX3VwZ3JhZGUEARBjb2RlOAEcVmVjPHU4PgALJFUBUHJvdmlkZSB0aGUgcHJlaW1hZ2UgKHJ1bnRpbWUgYmluYXJ5KSBgY29kZWAgZm9yIGFuIHVwZ3JhZGUgdGhhdCBoYXMgYmVlbiBhdXRob3JpemVkLgBJAUlmIHRoZSBhdXRob3JpemF0aW9uIHJlcXVpcmVkIGEgdmVyc2lvbiBjaGVjaywgdGhpcyBjYWxsIHdpbGwgZW5zdXJlIHRoZSBzcGVjIG5hbWXocmVtYWlucyB1bmNoYW5nZWQgYW5kIHRoYXQgdGhlIHNwZWMgdmVyc2lvbiBoYXMgaW5jcmVhc2VkLgBZAURlcGVuZGluZyBvbiB0aGUgcnVudGltZSdzIGBPblNldENvZGVgIGNvbmZpZ3VyYXRpb24sIHRoaXMgZnVuY3Rpb24gbWF5IGRpcmVjdGx5IGFwcGx5EQF0aGUgbmV3IGBjb2RlYCBpbiB0aGUgc2FtZSBibG9jayBvciBhdHRlbXB0IHRvIHNjaGVkdWxlIHRoZSB1cGdyYWRlLgBgQWxsIG9yaWdpbnMgYXJlIGFsbG93ZWQuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLrEBAAACtQEAtQEAAAQIODgAuQEAAAI4AL0BDEBwYWxsZXRfc2NoZWR1bGVyGHBhbGxldBBDYWxsBARUAAEoIHNjaGVkdWxlEAEQd2hlbhABREJsb2NrTnVtYmVyRm9yPFQ+AAE4bWF5YmVfcGVyaW9kaWPBAQGsT3B0aW9uPHNjaGVkdWxlOjpQZXJpb2Q8QmxvY2tOdW1iZXJGb3I8VD4+PgABIHByaW9yaXR5CAFIc2NoZWR1bGU6OlByaW9yaXR5AAEQY2FsbKkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAAEcEFub255bW91c2x5IHNjaGVkdWxlIGEgdGFzay4YY2FuY2VsCAEQd2hlbhABREJsb2NrTnVtYmVyRm9yPFQ+AAEUaW5kZXgQAQx1MzIAAQSUQ2FuY2VsIGFuIGFub255bW91c2x5IHNjaGVkdWxlZCB0YXNrLjhzY2hlZHVsZV9uYW1lZBQBCGlkBAEgVGFza05hbWUAARB3aGVuEAFEQmxvY2tOdW1iZXJGb3I8VD4AAThtYXliZV9wZXJpb2RpY8EBAaxPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlckZvcjxUPj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAgRYU2NoZWR1bGUgYSBuYW1lZCB0YXNrLjBjYW5jZWxfbmFtZWQEAQhpZAQBIFRhc2tOYW1lAAMEeENhbmNlbCBhIG5hbWVkIHNjaGVkdWxlZCB0YXNrLjhzY2hlZHVsZV9hZnRlchABFGFmdGVyEAFEQmxvY2tOdW1iZXJGb3I8VD4AAThtYXliZV9wZXJpb2RpY8EBAaxPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlckZvcjxUPj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ABASoQW5vbnltb3VzbHkgc2NoZWR1bGUgYSB0YXNrIGFmdGVyIGEgZGVsYXkuUHNjaGVkdWxlX25hbWVkX2FmdGVyFAEIaWQEASBUYXNrTmFtZQABFGFmdGVyEAFEQmxvY2tOdW1iZXJGb3I8VD4AAThtYXliZV9wZXJpb2RpY8EBAaxPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlckZvcjxUPj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ABQSQU2NoZWR1bGUgYSBuYW1lZCB0YXNrIGFmdGVyIGEgZGVsYXkuJHNldF9yZXRyeQwBEHRhc2uEAXhUYXNrQWRkcmVzczxCbG9ja051bWJlckZvcjxUPj4AARxyZXRyaWVzCAEIdTgAARhwZXJpb2QQAURCbG9ja051bWJlckZvcjxUPgAGMFkBU2V0IGEgcmV0cnkgY29uZmlndXJhdGlvbiBmb3IgYSB0YXNrIHNvIHRoYXQsIGluIGNhc2UgaXRzIHNjaGVkdWxlZCBydW4gZmFpbHMsIGl0IHdpbGxVAWJlIHJldHJpZWQgYWZ0ZXIgYHBlcmlvZGAgYmxvY2tzLCBmb3IgYSB0b3RhbCBhbW91bnQgb2YgYHJldHJpZXNgIHJldHJpZXMgb3IgdW50aWwgaXQkc3VjY2VlZHMuAFUBVGFza3Mgd2hpY2ggbmVlZCB0byBiZSBzY2hlZHVsZWQgZm9yIGEgcmV0cnkgYXJlIHN0aWxsIHN1YmplY3QgdG8gd2VpZ2h0IG1ldGVyaW5nIGFuZFEBYWdlbmRhIHNwYWNlLCBzYW1lIGFzIGEgcmVndWxhciB0YXNrLiBJZiBhIHBlcmlvZGljIHRhc2sgZmFpbHMsIGl0IHdpbGwgYmUgc2NoZWR1bGVkkG5vcm1hbGx5IHdoaWxlIHRoZSB0YXNrIGlzIHJldHJ5aW5nLgBRAVRhc2tzIHNjaGVkdWxlZCBhcyBhIHJlc3VsdCBvZiBhIHJldHJ5IGZvciBhIHBlcmlvZGljIHRhc2sgYXJlIHVubmFtZWQsIG5vbi1wZXJpb2RpYz0BY2xvbmVzIG9mIHRoZSBvcmlnaW5hbCB0YXNrLiBUaGVpciByZXRyeSBjb25maWd1cmF0aW9uIHdpbGwgYmUgZGVyaXZlZCBmcm9tIHRoZU0Bb3JpZ2luYWwgdGFzaydzIGNvbmZpZ3VyYXRpb24sIGJ1dCB3aWxsIGhhdmUgYSBsb3dlciB2YWx1ZSBmb3IgYHJlbWFpbmluZ2AgdGhhbiB0aGVkb3JpZ2luYWwgYHRvdGFsX3JldHJpZXNgLjxzZXRfcmV0cnlfbmFtZWQMAQhpZAQBIFRhc2tOYW1lAAEccmV0cmllcwgBCHU4AAEYcGVyaW9kEAFEQmxvY2tOdW1iZXJGb3I8VD4ABzBdAVNldCBhIHJldHJ5IGNvbmZpZ3VyYXRpb24gZm9yIGEgbmFtZWQgdGFzayBzbyB0aGF0LCBpbiBjYXNlIGl0cyBzY2hlZHVsZWQgcnVuIGZhaWxzLCBpdF0Bd2lsbCBiZSByZXRyaWVkIGFmdGVyIGBwZXJpb2RgIGJsb2NrcywgZm9yIGEgdG90YWwgYW1vdW50IG9mIGByZXRyaWVzYCByZXRyaWVzIG9yIHVudGlsMGl0IHN1Y2NlZWRzLgBVAVRhc2tzIHdoaWNoIG5lZWQgdG8gYmUgc2NoZWR1bGVkIGZvciBhIHJldHJ5IGFyZSBzdGlsbCBzdWJqZWN0IHRvIHdlaWdodCBtZXRlcmluZyBhbmRRAWFnZW5kYSBzcGFjZSwgc2FtZSBhcyBhIHJlZ3VsYXIgdGFzay4gSWYgYSBwZXJpb2RpYyB0YXNrIGZhaWxzLCBpdCB3aWxsIGJlIHNjaGVkdWxlZJBub3JtYWxseSB3aGlsZSB0aGUgdGFzayBpcyByZXRyeWluZy4AUQFUYXNrcyBzY2hlZHVsZWQgYXMgYSByZXN1bHQgb2YgYSByZXRyeSBmb3IgYSBwZXJpb2RpYyB0YXNrIGFyZSB1bm5hbWVkLCBub24tcGVyaW9kaWM9AWNsb25lcyBvZiB0aGUgb3JpZ2luYWwgdGFzay4gVGhlaXIgcmV0cnkgY29uZmlndXJhdGlvbiB3aWxsIGJlIGRlcml2ZWQgZnJvbSB0aGVNAW9yaWdpbmFsIHRhc2sncyBjb25maWd1cmF0aW9uLCBidXQgd2lsbCBoYXZlIGEgbG93ZXIgdmFsdWUgZm9yIGByZW1haW5pbmdgIHRoYW4gdGhlZG9yaWdpbmFsIGB0b3RhbF9yZXRyaWVzYC4wY2FuY2VsX3JldHJ5BAEQdGFza4QBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgAIBKhSZW1vdmVzIHRoZSByZXRyeSBjb25maWd1cmF0aW9uIG9mIGEgdGFzay5IY2FuY2VsX3JldHJ5X25hbWVkBAEIaWQEASBUYXNrTmFtZQAJBLxDYW5jZWwgdGhlIHJldHJ5IGNvbmZpZ3VyYXRpb24gb2YgYSBuYW1lZCB0YXNrLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7BAQQYT3B0aW9uBARUAYQBCBBOb25lAAAAEFNvbWUEAIQAAAEAAMUBDDxwYWxsZXRfcHJlaW1hZ2UYcGFsbGV0EENhbGwEBFQAARQ0bm90ZV9wcmVpbWFnZQQBFGJ5dGVzOAEcVmVjPHU4PgAAEHRSZWdpc3RlciBhIHByZWltYWdlIG9uLWNoYWluLgBVAUlmIHRoZSBwcmVpbWFnZSB3YXMgcHJldmlvdXNseSByZXF1ZXN0ZWQsIG5vIGZlZXMgb3IgZGVwb3NpdHMgYXJlIHRha2VuIGZvciBwcm92aWRpbmdVAXRoZSBwcmVpbWFnZS4gT3RoZXJ3aXNlLCBhIGRlcG9zaXQgaXMgdGFrZW4gcHJvcG9ydGlvbmFsIHRvIHRoZSBzaXplIG9mIHRoZSBwcmVpbWFnZS48dW5ub3RlX3ByZWltYWdlBAEQaGFzaDQBHFQ6Okhhc2gAARjcQ2xlYXIgYW4gdW5yZXF1ZXN0ZWQgcHJlaW1hZ2UgZnJvbSB0aGUgcnVudGltZSBzdG9yYWdlLgD8SWYgYGxlbmAgaXMgcHJvdmlkZWQsIHRoZW4gaXQgd2lsbCBiZSBhIG11Y2ggY2hlYXBlciBvcGVyYXRpb24uAAEBLSBgaGFzaGA6IFRoZSBoYXNoIG9mIHRoZSBwcmVpbWFnZSB0byBiZSByZW1vdmVkIGZyb20gdGhlIHN0b3JlLrgtIGBsZW5gOiBUaGUgbGVuZ3RoIG9mIHRoZSBwcmVpbWFnZSBvZiBgaGFzaGAuQHJlcXVlc3RfcHJlaW1hZ2UEARBoYXNoNAEcVDo6SGFzaAACEEEBUmVxdWVzdCBhIHByZWltYWdlIGJlIHVwbG9hZGVkIHRvIHRoZSBjaGFpbiB3aXRob3V0IHBheWluZyBhbnkgZmVlcyBvciBkZXBvc2l0cy4AVQFJZiB0aGUgcHJlaW1hZ2UgcmVxdWVzdHMgaGFzIGFscmVhZHkgYmVlbiBwcm92aWRlZCBvbi1jaGFpbiwgd2UgdW5yZXNlcnZlIGFueSBkZXBvc2l0OQFhIHVzZXIgbWF5IGhhdmUgcGFpZCwgYW5kIHRha2UgdGhlIGNvbnRyb2wgb2YgdGhlIHByZWltYWdlIG91dCBvZiB0aGVpciBoYW5kcy5IdW5yZXF1ZXN0X3ByZWltYWdlBAEQaGFzaDQBHFQ6Okhhc2gAAwy8Q2xlYXIgYSBwcmV2aW91c2x5IG1hZGUgcmVxdWVzdCBmb3IgYSBwcmVpbWFnZS4ALQFOT1RFOiBUSElTIE1VU1QgTk9UIEJFIENBTExFRCBPTiBgaGFzaGAgTU9SRSBUSU1FUyBUSEFOIGByZXF1ZXN0X3ByZWltYWdlYC44ZW5zdXJlX3VwZGF0ZWQEARhoYXNoZXPJAQEwVmVjPFQ6Okhhc2g+AAQMvEVuc3VyZSB0aGF0IHRoZSBidWxrIG9mIHByZS1pbWFnZXMgaXMgdXBncmFkZWQuAD0BVGhlIGNhbGxlciBwYXlzIG5vIGZlZSBpZiBhdCBsZWFzdCA5MCUgb2YgcHJlLWltYWdlcyB3ZXJlIHN1Y2Nlc3NmdWxseSB1cGRhdGVkLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7JAQAAAjQAzQEMLHBhbGxldF9iYWJlGHBhbGxldBBDYWxsBARUAAEMTHJlcG9ydF9lcXVpdm9jYXRpb24IAUhlcXVpdm9jYXRpb25fcHJvb2bRAQGQQm94PEVxdWl2b2NhdGlvblByb29mPEhlYWRlckZvcjxUPj4+AAE8a2V5X293bmVyX3Byb29m4QEBQFQ6OktleU93bmVyUHJvb2YAABAJAVJlcG9ydCBhdXRob3JpdHkgZXF1aXZvY2F0aW9uL21pc2JlaGF2aW9yLiBUaGlzIG1ldGhvZCB3aWxsIHZlcmlmeQUBdGhlIGVxdWl2b2NhdGlvbiBwcm9vZiBhbmQgdmFsaWRhdGUgdGhlIGdpdmVuIGtleSBvd25lcnNoaXAgcHJvb2YNAWFnYWluc3QgdGhlIGV4dHJhY3RlZCBvZmZlbmRlci4gSWYgYm90aCBhcmUgdmFsaWQsIHRoZSBvZmZlbmNlIHdpbGwwYmUgcmVwb3J0ZWQucHJlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWQIAUhlcXVpdm9jYXRpb25fcHJvb2bRAQGQQm94PEVxdWl2b2NhdGlvblByb29mPEhlYWRlckZvcjxUPj4+AAE8a2V5X293bmVyX3Byb29m4QEBQFQ6OktleU93bmVyUHJvb2YAASAJAVJlcG9ydCBhdXRob3JpdHkgZXF1aXZvY2F0aW9uL21pc2JlaGF2aW9yLiBUaGlzIG1ldGhvZCB3aWxsIHZlcmlmeQUBdGhlIGVxdWl2b2NhdGlvbiBwcm9vZiBhbmQgdmFsaWRhdGUgdGhlIGdpdmVuIGtleSBvd25lcnNoaXAgcHJvb2YNAWFnYWluc3QgdGhlIGV4dHJhY3RlZCBvZmZlbmRlci4gSWYgYm90aCBhcmUgdmFsaWQsIHRoZSBvZmZlbmNlIHdpbGwwYmUgcmVwb3J0ZWQuDQFUaGlzIGV4dHJpbnNpYyBtdXN0IGJlIGNhbGxlZCB1bnNpZ25lZCBhbmQgaXQgaXMgZXhwZWN0ZWQgdGhhdCBvbmx5FQFibG9jayBhdXRob3JzIHdpbGwgY2FsbCBpdCAodmFsaWRhdGVkIGluIGBWYWxpZGF0ZVVuc2lnbmVkYCksIGFzIHN1Y2gVAWlmIHRoZSBibG9jayBhdXRob3IgaXMgZGVmaW5lZCBpdCB3aWxsIGJlIGRlZmluZWQgYXMgdGhlIGVxdWl2b2NhdGlvbiRyZXBvcnRlci5IcGxhbl9jb25maWdfY2hhbmdlBAEYY29uZmln5QEBUE5leHRDb25maWdEZXNjcmlwdG9yAAIQXQFQbGFuIGFuIGVwb2NoIGNvbmZpZyBjaGFuZ2UuIFRoZSBlcG9jaCBjb25maWcgY2hhbmdlIGlzIHJlY29yZGVkIGFuZCB3aWxsIGJlIGVuYWN0ZWQgb25RAXRoZSBuZXh0IGNhbGwgdG8gYGVuYWN0X2Vwb2NoX2NoYW5nZWAuIFRoZSBjb25maWcgd2lsbCBiZSBhY3RpdmF0ZWQgb25lIGVwb2NoIGFmdGVyLlkBTXVsdGlwbGUgY2FsbHMgdG8gdGhpcyBtZXRob2Qgd2lsbCByZXBsYWNlIGFueSBleGlzdGluZyBwbGFubmVkIGNvbmZpZyBjaGFuZ2UgdGhhdCBoYWRUbm90IGJlZW4gZW5hY3RlZCB5ZXQuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLtEBCEhzcF9jb25zZW5zdXNfc2xvdHNERXF1aXZvY2F0aW9uUHJvb2YIGEhlYWRlcgHVAQhJZAHZAQAQASBvZmZlbmRlctkBAQhJZAABEHNsb3TdAQEQU2xvdAABMGZpcnN0X2hlYWRlctUBARhIZWFkZXIAATRzZWNvbmRfaGVhZGVy1QEBGEhlYWRlcgAA1QEQKHNwX3J1bnRpbWUcZ2VuZXJpYxhoZWFkZXIYSGVhZGVyCBhOdW1iZXIBEBBIYXNoAAAUASxwYXJlbnRfaGFzaDQBMEhhc2g6Ok91dHB1dAABGG51bWJlcvwBGE51bWJlcgABKHN0YXRlX3Jvb3Q0ATBIYXNoOjpPdXRwdXQAATxleHRyaW5zaWNzX3Jvb3Q0ATBIYXNoOjpPdXRwdXQAARhkaWdlc3Q8ARhEaWdlc3QAANkBDERzcF9jb25zZW5zdXNfYmFiZQxhcHAYUHVibGljAAAEAAQBPHNyMjU1MTk6OlB1YmxpYwAA3QEISHNwX2NvbnNlbnN1c19zbG90cxBTbG90AAAEADABDHU2NAAA4QEIKHNwX3Nlc3Npb248TWVtYmVyc2hpcFByb29mAAAMARxzZXNzaW9uEAEwU2Vzc2lvbkluZGV4AAEodHJpZV9ub2Rlc7kBATBWZWM8VmVjPHU4Pj4AATx2YWxpZGF0b3JfY291bnQQAThWYWxpZGF0b3JDb3VudAAA5QEMRHNwX2NvbnNlbnN1c19iYWJlHGRpZ2VzdHNQTmV4dENvbmZpZ0Rlc2NyaXB0b3IAAQQIVjEIAQRj6QEBKCh1NjQsIHU2NCkAATRhbGxvd2VkX3Nsb3Rz7QEBMEFsbG93ZWRTbG90cwABAADpAQAABAgwMADtAQhEc3BfY29uc2Vuc3VzX2JhYmUwQWxsb3dlZFNsb3RzAAEMMFByaW1hcnlTbG90cwAAAHRQcmltYXJ5QW5kU2Vjb25kYXJ5UGxhaW5TbG90cwABAGxQcmltYXJ5QW5kU2Vjb25kYXJ5VlJGU2xvdHMAAgAA8QEMQHBhbGxldF90aW1lc3RhbXAYcGFsbGV0EENhbGwEBFQAAQQMc2V0BAEMbm93LAEkVDo6TW9tZW50AABMVFNldCB0aGUgY3VycmVudCB0aW1lLgBVAVRoaXMgY2FsbCBzaG91bGQgYmUgaW52b2tlZCBleGFjdGx5IG9uY2UgcGVyIGJsb2NrLiBJdCB3aWxsIHBhbmljIGF0IHRoZSBmaW5hbGl6YXRpb27UcGhhc2UsIGlmIHRoaXMgY2FsbCBoYXNuJ3QgYmVlbiBpbnZva2VkIGJ5IHRoYXQgdGltZS4AQQFUaGUgdGltZXN0YW1wIHNob3VsZCBiZSBncmVhdGVyIHRoYW4gdGhlIHByZXZpb3VzIG9uZSBieSB0aGUgYW1vdW50IHNwZWNpZmllZCBieWhbYENvbmZpZzo6TWluaW11bVBlcmlvZGBdLgDEVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX05vbmVfLgBRAVRoaXMgZGlzcGF0Y2ggY2xhc3MgaXMgX01hbmRhdG9yeV8gdG8gZW5zdXJlIGl0IGdldHMgZXhlY3V0ZWQgaW4gdGhlIGJsb2NrLiBCZSBhd2FyZVEBdGhhdCBjaGFuZ2luZyB0aGUgY29tcGxleGl0eSBvZiB0aGlzIGNhbGwgY291bGQgcmVzdWx0IGV4aGF1c3RpbmcgdGhlIHJlc291cmNlcyBpbiBhhGJsb2NrIHRvIGV4ZWN1dGUgYW55IG90aGVyIGNhbGxzLgA0IyMgQ29tcGxleGl0eTEBLSBgTygxKWAgKE5vdGUgdGhhdCBpbXBsZW1lbnRhdGlvbnMgb2YgYE9uVGltZXN0YW1wU2V0YCBtdXN0IGFsc28gYmUgYE8oMSlgKVUBLSAxIHN0b3JhZ2UgcmVhZCBhbmQgMSBzdG9yYWdlIG11dGF0aW9uIChjb2RlYyBgTygxKWAgYmVjYXVzZSBvZiBgRGlkVXBkYXRlOjp0YWtlYCBpbkAgIGBvbl9maW5hbGl6ZWAp1C0gMSBldmVudCBoYW5kbGVyIGBvbl90aW1lc3RhbXBfc2V0YC4gTXVzdCBiZSBgTygxKWAuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLvUBDDhwYWxsZXRfaW5kaWNlcxhwYWxsZXQQQ2FsbAQEVAABGBRjbGFpbQQBFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAAwmEFzc2lnbiBhbiBwcmV2aW91c2x5IHVuYXNzaWduZWQgaW5kZXguANxQYXltZW50OiBgRGVwb3NpdGAgaXMgcmVzZXJ2ZWQgZnJvbSB0aGUgc2VuZGVyIGFjY291bnQuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4A8C0gYGluZGV4YDogdGhlIGluZGV4IHRvIGJlIGNsYWltZWQuIFRoaXMgbXVzdCBub3QgYmUgaW4gdXNlLgCQRW1pdHMgYEluZGV4QXNzaWduZWRgIGlmIHN1Y2Nlc3NmdWwuADQjIyBDb21wbGV4aXR5JC0gYE8oMSlgLiB0cmFuc2ZlcggBDG5ld/kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAEwXQFBc3NpZ24gYW4gaW5kZXggYWxyZWFkeSBvd25lZCBieSB0aGUgc2VuZGVyIHRvIGFub3RoZXIgYWNjb3VudC4gVGhlIGJhbGFuY2UgcmVzZXJ2YXRpb264aXMgZWZmZWN0aXZlbHkgdHJhbnNmZXJyZWQgdG8gdGhlIG5ldyBhY2NvdW50LgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uACUBLSBgaW5kZXhgOiB0aGUgaW5kZXggdG8gYmUgcmUtYXNzaWduZWQuIFRoaXMgbXVzdCBiZSBvd25lZCBieSB0aGUgc2VuZGVyLl0BLSBgbmV3YDogdGhlIG5ldyBvd25lciBvZiB0aGUgaW5kZXguIFRoaXMgZnVuY3Rpb24gaXMgYSBuby1vcCBpZiBpdCBpcyBlcXVhbCB0byBzZW5kZXIuAJBFbWl0cyBgSW5kZXhBc3NpZ25lZGAgaWYgc3VjY2Vzc2Z1bC4ANCMjIENvbXBsZXhpdHkkLSBgTygxKWAuEGZyZWUEARRpbmRleBABPFQ6OkFjY291bnRJbmRleAACMJRGcmVlIHVwIGFuIGluZGV4IG93bmVkIGJ5IHRoZSBzZW5kZXIuAF0BUGF5bWVudDogQW55IHByZXZpb3VzIGRlcG9zaXQgcGxhY2VkIGZvciB0aGUgaW5kZXggaXMgdW5yZXNlcnZlZCBpbiB0aGUgc2VuZGVyIGFjY291bnQuAFUBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIHRoZSBzZW5kZXIgbXVzdCBvd24gdGhlIGluZGV4LgANAS0gYGluZGV4YDogdGhlIGluZGV4IHRvIGJlIGZyZWVkLiBUaGlzIG11c3QgYmUgb3duZWQgYnkgdGhlIHNlbmRlci4AhEVtaXRzIGBJbmRleEZyZWVkYCBpZiBzdWNjZXNzZnVsLgA0IyMgQ29tcGxleGl0eSQtIGBPKDEpYC44Zm9yY2VfdHJhbnNmZXIMAQxuZXf5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARRpbmRleBABPFQ6OkFjY291bnRJbmRleAABGGZyZWV6ZSABEGJvb2wAAzRVAUZvcmNlIGFuIGluZGV4IHRvIGFuIGFjY291bnQuIFRoaXMgZG9lc24ndCByZXF1aXJlIGEgZGVwb3NpdC4gSWYgdGhlIGluZGV4IGlzIGFscmVhZHnoaGVsZCwgdGhlbiBhbnkgZGVwb3NpdCBpcyByZWltYnVyc2VkIHRvIGl0cyBjdXJyZW50IG93bmVyLgDEVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1Jvb3RfLgCkLSBgaW5kZXhgOiB0aGUgaW5kZXggdG8gYmUgKHJlLSlhc3NpZ25lZC5dAS0gYG5ld2A6IHRoZSBuZXcgb3duZXIgb2YgdGhlIGluZGV4LiBUaGlzIGZ1bmN0aW9uIGlzIGEgbm8tb3AgaWYgaXQgaXMgZXF1YWwgdG8gc2VuZGVyLkEBLSBgZnJlZXplYDogaWYgc2V0IHRvIGB0cnVlYCwgd2lsbCBmcmVlemUgdGhlIGluZGV4IHNvIGl0IGNhbm5vdCBiZSB0cmFuc2ZlcnJlZC4AkEVtaXRzIGBJbmRleEFzc2lnbmVkYCBpZiBzdWNjZXNzZnVsLgA0IyMgQ29tcGxleGl0eSQtIGBPKDEpYC4YZnJlZXplBAEUaW5kZXgQATxUOjpBY2NvdW50SW5kZXgABDBBAUZyZWV6ZSBhbiBpbmRleCBzbyBpdCB3aWxsIGFsd2F5cyBwb2ludCB0byB0aGUgc2VuZGVyIGFjY291bnQuIFRoaXMgY29uc3VtZXMgdGhlIGRlcG9zaXQuAFkBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIHRoZSBzaWduaW5nIGFjY291bnQgbXVzdCBoYXZlIGFsbm9uLWZyb3plbiBhY2NvdW50IGBpbmRleGAuAKwtIGBpbmRleGA6IHRoZSBpbmRleCB0byBiZSBmcm96ZW4gaW4gcGxhY2UuAIhFbWl0cyBgSW5kZXhGcm96ZW5gIGlmIHN1Y2Nlc3NmdWwuADQjIyBDb21wbGV4aXR5JC0gYE8oMSlgLjBwb2tlX2RlcG9zaXQEARRpbmRleBABPFQ6OkFjY291bnRJbmRleAAFKJxQb2tlIHRoZSBkZXBvc2l0IHJlc2VydmVkIGZvciBhbiBpbmRleC4AWQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBhbmQgdGhlIHNpZ25pbmcgYWNjb3VudCBtdXN0IGhhdmUgYWxub24tZnJvemVuIGFjY291bnQgYGluZGV4YC4AWQFUaGUgdHJhbnNhY3Rpb24gZmVlcyBpcyB3YWl2ZWQgaWYgdGhlIGRlcG9zaXQgaXMgY2hhbmdlZCBhZnRlciBwb2tpbmcvcmVjb25zaWRlcmF0aW9uLgD8LSBgaW5kZXhgOiB0aGUgaW5kZXggd2hvc2UgZGVwb3NpdCBpcyB0byBiZSBwb2tlZC9yZWNvbnNpZGVyZWQuAIxFbWl0cyBgRGVwb3NpdFBva2VkYCBpZiBzdWNjZXNzZnVsLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy75AQwoc3BfcnVudGltZTBtdWx0aWFkZHJlc3MwTXVsdGlBZGRyZXNzCCRBY2NvdW50SWQBADBBY2NvdW50SW5kZXgBkAEUCElkBAAAASRBY2NvdW50SWQAAAAUSW5kZXgEAP0BATBBY2NvdW50SW5kZXgAAQAMUmF3BAA4ARxWZWM8dTg+AAIAJEFkZHJlc3MzMgQABAEgW3U4OyAzMl0AAwAkQWRkcmVzczIwBAAJAQEgW3U4OyAyMF0ABAAA/QEAAAaQAAECDDxwYWxsZXRfYmFsYW5jZXMYcGFsbGV0EENhbGwIBFQABEkAASRQdHJhbnNmZXJfYWxsb3dfZGVhdGgIARBkZXN0+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEUdmFsdWUNAQEoVDo6QmFsYW5jZQAAHNRUcmFuc2ZlciBzb21lIGxpcXVpZCBmcmVlIGJhbGFuY2UgdG8gYW5vdGhlciBhY2NvdW50LgA1AWB0cmFuc2Zlcl9hbGxvd19kZWF0aGAgd2lsbCBzZXQgdGhlIGBGcmVlQmFsYW5jZWAgb2YgdGhlIHNlbmRlciBhbmQgcmVjZWl2ZXIuEQFJZiB0aGUgc2VuZGVyJ3MgYWNjb3VudCBpcyBiZWxvdyB0aGUgZXhpc3RlbnRpYWwgZGVwb3NpdCBhcyBhIHJlc3VsdLBvZiB0aGUgdHJhbnNmZXIsIHRoZSBhY2NvdW50IHdpbGwgYmUgcmVhcGVkLgAVAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIGBTaWduZWRgIGJ5IHRoZSB0cmFuc2FjdG9yLjhmb3JjZV90cmFuc2ZlcgwBGHNvdXJjZfkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABEGRlc3T5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARR2YWx1ZQ0BAShUOjpCYWxhbmNlAAIIYQFFeGFjdGx5IGFzIGB0cmFuc2Zlcl9hbGxvd19kZWF0aGAsIGV4Y2VwdCB0aGUgb3JpZ2luIG11c3QgYmUgcm9vdCBhbmQgdGhlIHNvdXJjZSBhY2NvdW50RG1heSBiZSBzcGVjaWZpZWQuTHRyYW5zZmVyX2tlZXBfYWxpdmUIARBkZXN0+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEUdmFsdWUNAQEoVDo6QmFsYW5jZQADGFkBU2FtZSBhcyB0aGUgW2B0cmFuc2Zlcl9hbGxvd19kZWF0aGBdIGNhbGwsIGJ1dCB3aXRoIGEgY2hlY2sgdGhhdCB0aGUgdHJhbnNmZXIgd2lsbCBub3Rga2lsbCB0aGUgb3JpZ2luIGFjY291bnQuAOg5OSUgb2YgdGhlIHRpbWUgeW91IHdhbnQgW2B0cmFuc2Zlcl9hbGxvd19kZWF0aGBdIGluc3RlYWQuAPBbYHRyYW5zZmVyX2FsbG93X2RlYXRoYF06IHN0cnVjdC5QYWxsZXQuaHRtbCNtZXRob2QudHJhbnNmZXIwdHJhbnNmZXJfYWxsCAEQZGVzdPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKGtlZXBfYWxpdmUgARBib29sAAQ8BQFUcmFuc2ZlciB0aGUgZW50aXJlIHRyYW5zZmVyYWJsZSBiYWxhbmNlIGZyb20gdGhlIGNhbGxlciBhY2NvdW50LgBZAU5PVEU6IFRoaXMgZnVuY3Rpb24gb25seSBhdHRlbXB0cyB0byB0cmFuc2ZlciBfdHJhbnNmZXJhYmxlXyBiYWxhbmNlcy4gVGhpcyBtZWFucyB0aGF0YQFhbnkgbG9ja2VkLCByZXNlcnZlZCwgb3IgZXhpc3RlbnRpYWwgZGVwb3NpdHMgKHdoZW4gYGtlZXBfYWxpdmVgIGlzIGB0cnVlYCksIHdpbGwgbm90IGJlXQF0cmFuc2ZlcnJlZCBieSB0aGlzIGZ1bmN0aW9uLiBUbyBlbnN1cmUgdGhhdCB0aGlzIGZ1bmN0aW9uIHJlc3VsdHMgaW4gYSBraWxsZWQgYWNjb3VudCxFAXlvdSBtaWdodCBuZWVkIHRvIHByZXBhcmUgdGhlIGFjY291bnQgYnkgcmVtb3ZpbmcgYW55IHJlZmVyZW5jZSBjb3VudGVycywgc3RvcmFnZUBkZXBvc2l0cywgZXRjLi4uAMBUaGUgZGlzcGF0Y2ggb3JpZ2luIG9mIHRoaXMgY2FsbCBtdXN0IGJlIFNpZ25lZC4AoC0gYGRlc3RgOiBUaGUgcmVjaXBpZW50IG9mIHRoZSB0cmFuc2Zlci5ZAS0gYGtlZXBfYWxpdmVgOiBBIGJvb2xlYW4gdG8gZGV0ZXJtaW5lIGlmIHRoZSBgdHJhbnNmZXJfYWxsYCBvcGVyYXRpb24gc2hvdWxkIHNlbmQgYWxsTQEgIG9mIHRoZSBmdW5kcyB0aGUgYWNjb3VudCBoYXMsIGNhdXNpbmcgdGhlIHNlbmRlciBhY2NvdW50IHRvIGJlIGtpbGxlZCAoZmFsc2UpLCBvclkBICB0cmFuc2ZlciBldmVyeXRoaW5nIGV4Y2VwdCBhdCBsZWFzdCB0aGUgZXhpc3RlbnRpYWwgZGVwb3NpdCwgd2hpY2ggd2lsbCBndWFyYW50ZWUgdG+cICBrZWVwIHRoZSBzZW5kZXIgYWNjb3VudCBhbGl2ZSAodHJ1ZSkuPGZvcmNlX3VucmVzZXJ2ZQgBDHdob/kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABGGFtb3VudBgBKFQ6OkJhbGFuY2UABQywVW5yZXNlcnZlIHNvbWUgYmFsYW5jZSBmcm9tIGEgdXNlciBieSBmb3JjZS4AbENhbiBvbmx5IGJlIGNhbGxlZCBieSBST09ULkB1cGdyYWRlX2FjY291bnRzBAEMd2hvBQIBRFZlYzxUOjpBY2NvdW50SWQ+AAYgcFVwZ3JhZGUgYSBzcGVjaWZpZWQgYWNjb3VudC4AdC0gYG9yaWdpbmA6IE11c3QgYmUgYFNpZ25lZGAukC0gYHdob2A6IFRoZSBhY2NvdW50IHRvIGJlIHVwZ3JhZGVkLgBVAVRoaXMgd2lsbCB3YWl2ZSB0aGUgdHJhbnNhY3Rpb24gZmVlIGlmIGF0IGxlYXN0IGFsbCBidXQgMTAlIG9mIHRoZSBhY2NvdW50cyBuZWVkZWQgdG9BAWJlIHVwZ3JhZGVkLiAoV2UgbGV0IHNvbWUgbm90IGhhdmUgdG8gYmUgdXBncmFkZWQganVzdCBpbiBvcmRlciB0byBhbGxvdyBmb3IgdGhlWHBvc3NpYmlsaXR5IG9mIGNodXJuKS5EZm9yY2Vfc2V0X2JhbGFuY2UIAQx3aG/5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASBuZXdfZnJlZQ0BAShUOjpCYWxhbmNlAAgMrFNldCB0aGUgcmVndWxhciBiYWxhbmNlIG9mIGEgZ2l2ZW4gYWNjb3VudC4AsFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBpcyBgcm9vdGAubGZvcmNlX2FkanVzdF90b3RhbF9pc3N1YW5jZQgBJGRpcmVjdGlvbgkCAUxBZGp1c3RtZW50RGlyZWN0aW9uAAEUZGVsdGENAQEoVDo6QmFsYW5jZQAJFLhBZGp1c3QgdGhlIHRvdGFsIGlzc3VhbmNlIGluIGEgc2F0dXJhdGluZyB3YXkuAPxDYW4gb25seSBiZSBjYWxsZWQgYnkgcm9vdCBhbmQgYWx3YXlzIG5lZWRzIGEgcG9zaXRpdmUgYGRlbHRhYC4AJCMgRXhhbXBsZRBidXJuCAEUdmFsdWUNAQEoVDo6QmFsYW5jZQABKGtlZXBfYWxpdmUgARBib29sAAoc/EJ1cm4gdGhlIHNwZWNpZmllZCBsaXF1aWQgZnJlZSBiYWxhbmNlIGZyb20gdGhlIG9yaWdpbiBhY2NvdW50LgAlAUlmIHRoZSBvcmlnaW4ncyBhY2NvdW50IGVuZHMgdXAgYmVsb3cgdGhlIGV4aXN0ZW50aWFsIGRlcG9zaXQgYXMgYSByZXN1bHQJAW9mIHRoZSBidXJuIGFuZCBga2VlcF9hbGl2ZWAgaXMgZmFsc2UsIHRoZSBhY2NvdW50IHdpbGwgYmUgcmVhcGVkLgBRAVVubGlrZSBzZW5kaW5nIGZ1bmRzIHRvIGEgX2J1cm5fIGFkZHJlc3MsIHdoaWNoIG1lcmVseSBtYWtlcyB0aGUgZnVuZHMgaW5hY2Nlc3NpYmxlLCEBdGhpcyBgYnVybmAgb3BlcmF0aW9uIHdpbGwgcmVkdWNlIHRvdGFsIGlzc3VhbmNlIGJ5IHRoZSBhbW91bnQgX2J1cm5lZF8uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLgUCAAACAAAJAgw8cGFsbGV0X2JhbGFuY2VzFHR5cGVzTEFkanVzdG1lbnREaXJlY3Rpb24AAQggSW5jcmVhc2UAAAAgRGVjcmVhc2UAAQAADQIQOHBhbGxldF9zdGFraW5nGHBhbGxldBhwYWxsZXQQQ2FsbAQEVAABgBBib25kCAEUdmFsdWUNAQEwQmFsYW5jZU9mPFQ+AAEUcGF5ZWWwAXxSZXdhcmREZXN0aW5hdGlvbjxUOjpBY2NvdW50SWQ+AABAYQFUYWtlIHRoZSBvcmlnaW4gYWNjb3VudCBhcyBhIHN0YXNoIGFuZCBsb2NrIHVwIGB2YWx1ZWAgb2YgaXRzIGJhbGFuY2UuIGBjb250cm9sbGVyYCB3aWxsgGJlIHRoZSBhY2NvdW50IHRoYXQgY29udHJvbHMgaXQuAC0BYHZhbHVlYCBtdXN0IGJlIG1vcmUgdGhhbiB0aGUgYG1pbmltdW1fYmFsYW5jZWAgc3BlY2lmaWVkIGJ5IGBUOjpDdXJyZW5jeWAuACEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIHN0YXNoIGFjY291bnQuADxFbWl0cyBgQm9uZGVkYC40IyMgQ29tcGxleGl0edAtIEluZGVwZW5kZW50IG9mIHRoZSBhcmd1bWVudHMuIE1vZGVyYXRlIGNvbXBsZXhpdHkuHC0gTygxKS5kLSBUaHJlZSBleHRyYSBEQiBlbnRyaWVzLgBNAU5PVEU6IFR3byBvZiB0aGUgc3RvcmFnZSB3cml0ZXMgKGBTZWxmOjpib25kZWRgLCBgU2VsZjo6cGF5ZWVgKSBhcmUgX25ldmVyXyBjbGVhbmVkWQF1bmxlc3MgdGhlIGBvcmlnaW5gIGZhbGxzIGJlbG93IF9leGlzdGVudGlhbCBkZXBvc2l0XyAob3IgZXF1YWwgdG8gMCkgYW5kIGdldHMgcmVtb3ZlZCBhcyBkdXN0Lihib25kX2V4dHJhBAE4bWF4X2FkZGl0aW9uYWwNAQEwQmFsYW5jZU9mPFQ+AAE4YQFBZGQgc29tZSBleHRyYSBhbW91bnQgdGhhdCBoYXZlIGFwcGVhcmVkIGluIHRoZSBzdGFzaCBgZnJlZV9iYWxhbmNlYCBpbnRvIHRoZSBiYWxhbmNlIHVwMGZvciBzdGFraW5nLgBRAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGJ5IHRoZSBzdGFzaCwgbm90IHRoZSBjb250cm9sbGVyLgBNAVVzZSB0aGlzIGlmIHRoZXJlIGFyZSBhZGRpdGlvbmFsIGZ1bmRzIGluIHlvdXIgc3Rhc2ggYWNjb3VudCB0aGF0IHlvdSB3aXNoIHRvIGJvbmQuVQFVbmxpa2UgW2Bib25kYF0oU2VsZjo6Ym9uZCkgb3IgW2B1bmJvbmRgXShTZWxmOjp1bmJvbmQpIHRoaXMgZnVuY3Rpb24gZG9lcyBub3QgaW1wb3NlvGFueSBsaW1pdGF0aW9uIG9uIHRoZSBhbW91bnQgdGhhdCBjYW4gYmUgYWRkZWQuADxFbWl0cyBgQm9uZGVkYC4ANCMjIENvbXBsZXhpdHnkLSBJbmRlcGVuZGVudCBvZiB0aGUgYXJndW1lbnRzLiBJbnNpZ25pZmljYW50IGNvbXBsZXhpdHkuHC0gTygxKS4YdW5ib25kBAEUdmFsdWUNAQEwQmFsYW5jZU9mPFQ+AAJUUQFTY2hlZHVsZSBhIHBvcnRpb24gb2YgdGhlIHN0YXNoIHRvIGJlIHVubG9ja2VkIHJlYWR5IGZvciB0cmFuc2ZlciBvdXQgYWZ0ZXIgdGhlIGJvbmT8cGVyaW9kIGVuZHMuIElmIHRoaXMgbGVhdmVzIGFuIGFtb3VudCBhY3RpdmVseSBib25kZWQgbGVzcyB0aGFuIQFbYGFzc2V0OjpleGlzdGVudGlhbF9kZXBvc2l0YF0sIHRoZW4gaXQgaXMgaW5jcmVhc2VkIHRvIHRoZSBmdWxsIGFtb3VudC4APQFUaGUgc3Rhc2ggbWF5IGJlIGNoaWxsZWQgaWYgdGhlIGxlZGdlciB0b3RhbCBhbW91bnQgZmFsbHMgdG8gMCBhZnRlciB1bmJvbmRpbmcuAFEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIGNvbnRyb2xsZXIsIG5vdCB0aGUgc3Rhc2guAEUBT25jZSB0aGUgdW5sb2NrIHBlcmlvZCBpcyBkb25lLCB5b3UgY2FuIGNhbGwgYHdpdGhkcmF3X3VuYm9uZGVkYCB0byBhY3R1YWxseSBtb3ZlvHRoZSBmdW5kcyBvdXQgb2YgbWFuYWdlbWVudCByZWFkeSBmb3IgdHJhbnNmZXIuADEBTm8gbW9yZSB0aGFuIGEgbGltaXRlZCBudW1iZXIgb2YgdW5sb2NraW5nIGNodW5rcyAoc2VlIGBNYXhVbmxvY2tpbmdDaHVua3NgKUEBY2FuIGNvLWV4aXN0cyBhdCB0aGUgc2FtZSB0aW1lLiBJZiB0aGVyZSBhcmUgbm8gdW5sb2NraW5nIGNodW5rcyBzbG90cyBhdmFpbGFibGVFAVtgQ2FsbDo6d2l0aGRyYXdfdW5ib25kZWRgXSBpcyBjYWxsZWQgdG8gcmVtb3ZlIHNvbWUgb2YgdGhlIGNodW5rcyAoaWYgcG9zc2libGUpLgA5AUlmIGEgdXNlciBlbmNvdW50ZXJzIHRoZSBgSW5zdWZmaWNpZW50Qm9uZGAgZXJyb3Igd2hlbiBjYWxsaW5nIHRoaXMgZXh0cmluc2ljLBkBdGhleSBzaG91bGQgY2FsbCBgY2hpbGxgIGZpcnN0IGluIG9yZGVyIHRvIGZyZWUgdXAgdGhlaXIgYm9uZGVkIGZ1bmRzLgBERW1pdHMgYFVuYm9uZGVkYC4AlFNlZSBhbHNvIFtgQ2FsbDo6d2l0aGRyYXdfdW5ib25kZWRgXS5Ed2l0aGRyYXdfdW5ib25kZWQEAUhudW1fc2xhc2hpbmdfc3BhbnMQAQx1MzIAA1wpAVJlbW92ZSBhbnkgdW5sb2NrZWQgY2h1bmtzIGZyb20gdGhlIGB1bmxvY2tpbmdgIHF1ZXVlIGZyb20gb3VyIG1hbmFnZW1lbnQuAFUBVGhpcyBlc3NlbnRpYWxseSBmcmVlcyB1cCB0aGF0IGJhbGFuY2UgdG8gYmUgdXNlZCBieSB0aGUgc3Rhc2ggYWNjb3VudCB0byBkbyB3aGF0ZXZlciRpdCB3YW50cy4AFQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBieSB0aGUgY29udHJvbGxlci4ASEVtaXRzIGBXaXRoZHJhd25gLgBoU2VlIGFsc28gW2BDYWxsOjp1bmJvbmRgXS4ANCMjIFBhcmFtZXRlcnMAUQEtIGBudW1fc2xhc2hpbmdfc3BhbnNgIGluZGljYXRlcyB0aGUgbnVtYmVyIG9mIG1ldGFkYXRhIHNsYXNoaW5nIHNwYW5zIHRvIGNsZWFyIHdoZW5VAXRoaXMgY2FsbCByZXN1bHRzIGluIGEgY29tcGxldGUgcmVtb3ZhbCBvZiBhbGwgdGhlIGRhdGEgcmVsYXRlZCB0byB0aGUgc3Rhc2ggYWNjb3VudC49AUluIHRoaXMgY2FzZSwgdGhlIGBudW1fc2xhc2hpbmdfc3BhbnNgIG11c3QgYmUgbGFyZ2VyIG9yIGVxdWFsIHRvIHRoZSBudW1iZXIgb2ZdAXNsYXNoaW5nIHNwYW5zIGFzc29jaWF0ZWQgd2l0aCB0aGUgc3Rhc2ggYWNjb3VudCBpbiB0aGUgW2BTbGFzaGluZ1NwYW5zYF0gc3RvcmFnZSB0eXBlLCUBb3RoZXJ3aXNlIHRoZSBjYWxsIHdpbGwgZmFpbC4gVGhlIGNhbGwgd2VpZ2h0IGlzIGRpcmVjdGx5IHByb3BvcnRpb25hbCB0b1RgbnVtX3NsYXNoaW5nX3NwYW5zYC4ANCMjIENvbXBsZXhpdHnYTyhTKSB3aGVyZSBTIGlzIHRoZSBudW1iZXIgb2Ygc2xhc2hpbmcgc3BhbnMgdG8gcmVtb3ZlCQFOT1RFOiBXZWlnaHQgYW5ub3RhdGlvbiBpcyB0aGUga2lsbCBzY2VuYXJpbywgd2UgcmVmdW5kIG90aGVyd2lzZS4gdmFsaWRhdGUEARRwcmVmc7wBOFZhbGlkYXRvclByZWZzAAQU5ERlY2xhcmUgdGhlIGRlc2lyZSB0byB2YWxpZGF0ZSBmb3IgdGhlIG9yaWdpbiBjb250cm9sbGVyLgDYRWZmZWN0cyB3aWxsIGJlIGZlbHQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBlcmEuAFEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIGNvbnRyb2xsZXIsIG5vdCB0aGUgc3Rhc2guIG5vbWluYXRlBAEcdGFyZ2V0cxECAWRWZWM8QWNjb3VudElkTG9va3VwT2Y8VD4+AAUoDQFEZWNsYXJlIHRoZSBkZXNpcmUgdG8gbm9taW5hdGUgYHRhcmdldHNgIGZvciB0aGUgb3JpZ2luIGNvbnRyb2xsZXIuANhFZmZlY3RzIHdpbGwgYmUgZmVsdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBuZXh0IGVyYS4AUQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBieSB0aGUgY29udHJvbGxlciwgbm90IHRoZSBzdGFzaC4ANCMjIENvbXBsZXhpdHktAS0gVGhlIHRyYW5zYWN0aW9uJ3MgY29tcGxleGl0eSBpcyBwcm9wb3J0aW9uYWwgdG8gdGhlIHNpemUgb2YgYHRhcmdldHNgIChOKQUBd2hpY2ggaXMgY2FwcGVkIGF0IENvbXBhY3RBc3NpZ25tZW50czo6TElNSVQgKFQ6Ok1heE5vbWluYXRpb25zKS7ULSBCb3RoIHRoZSByZWFkcyBhbmQgd3JpdGVzIGZvbGxvdyBhIHNpbWlsYXIgcGF0dGVybi4UY2hpbGwABijERGVjbGFyZSBubyBkZXNpcmUgdG8gZWl0aGVyIHZhbGlkYXRlIG9yIG5vbWluYXRlLgDYRWZmZWN0cyB3aWxsIGJlIGZlbHQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBlcmEuAFEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIGNvbnRyb2xsZXIsIG5vdCB0aGUgc3Rhc2guADQjIyBDb21wbGV4aXR55C0gSW5kZXBlbmRlbnQgb2YgdGhlIGFyZ3VtZW50cy4gSW5zaWduaWZpY2FudCBjb21wbGV4aXR5LlAtIENvbnRhaW5zIG9uZSByZWFkLsQtIFdyaXRlcyBhcmUgbGltaXRlZCB0byB0aGUgYG9yaWdpbmAgYWNjb3VudCBrZXkuJHNldF9wYXllZQQBFHBheWVlsAF8UmV3YXJkRGVzdGluYXRpb248VDo6QWNjb3VudElkPgAHMLQoUmUtKXNldCB0aGUgcGF5bWVudCB0YXJnZXQgZm9yIGEgY29udHJvbGxlci4AUQFFZmZlY3RzIHdpbGwgYmUgZmVsdCBpbnN0YW50bHkgKGFzIHNvb24gYXMgdGhpcyBmdW5jdGlvbiBpcyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5KS4AUQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBieSB0aGUgY29udHJvbGxlciwgbm90IHRoZSBzdGFzaC4ANCMjIENvbXBsZXhpdHkYLSBPKDEp5C0gSW5kZXBlbmRlbnQgb2YgdGhlIGFyZ3VtZW50cy4gSW5zaWduaWZpY2FudCBjb21wbGV4aXR5LpQtIENvbnRhaW5zIGEgbGltaXRlZCBudW1iZXIgb2YgcmVhZHMuxC0gV3JpdGVzIGFyZSBsaW1pdGVkIHRvIHRoZSBgb3JpZ2luYCBhY2NvdW50IGtleS4kLS0tLS0tLS0tOHNldF9jb250cm9sbGVyAAg4RQEoUmUtKXNldHMgdGhlIGNvbnRyb2xsZXIgb2YgYSBzdGFzaCB0byB0aGUgc3Rhc2ggaXRzZWxmLiBUaGlzIGZ1bmN0aW9uIHByZXZpb3VzbHlNAWFjY2VwdGVkIGEgYGNvbnRyb2xsZXJgIGFyZ3VtZW50IHRvIHNldCB0aGUgY29udHJvbGxlciB0byBhbiBhY2NvdW50IG90aGVyIHRoYW4gdGhlWQFzdGFzaCBpdHNlbGYuIFRoaXMgZnVuY3Rpb25hbGl0eSBoYXMgbm93IGJlZW4gcmVtb3ZlZCwgbm93IG9ubHkgc2V0dGluZyB0aGUgY29udHJvbGxlcox0byB0aGUgc3Rhc2gsIGlmIGl0IGlzIG5vdCBhbHJlYWR5LgBRAUVmZmVjdHMgd2lsbCBiZSBmZWx0IGluc3RhbnRseSAoYXMgc29vbiBhcyB0aGlzIGZ1bmN0aW9uIGlzIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkpLgBRAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGJ5IHRoZSBzdGFzaCwgbm90IHRoZSBjb250cm9sbGVyLgA0IyMgQ29tcGxleGl0eRBPKDEp5C0gSW5kZXBlbmRlbnQgb2YgdGhlIGFyZ3VtZW50cy4gSW5zaWduaWZpY2FudCBjb21wbGV4aXR5LpQtIENvbnRhaW5zIGEgbGltaXRlZCBudW1iZXIgb2YgcmVhZHMuxC0gV3JpdGVzIGFyZSBsaW1pdGVkIHRvIHRoZSBgb3JpZ2luYCBhY2NvdW50IGtleS5Mc2V0X3ZhbGlkYXRvcl9jb3VudAQBDG5ld/wBDHUzMgAJGJBTZXRzIHRoZSBpZGVhbCBudW1iZXIgb2YgdmFsaWRhdG9ycy4AhFRoZSBkaXNwYXRjaCBvcmlnaW4gbXVzdCBiZSBSb290LgA0IyMgQ29tcGxleGl0eRBPKDEpYGluY3JlYXNlX3ZhbGlkYXRvcl9jb3VudAQBKGFkZGl0aW9uYWz8AQx1MzIAChzoSW5jcmVtZW50cyB0aGUgaWRlYWwgbnVtYmVyIG9mIHZhbGlkYXRvcnMgdXAgdG8gbWF4aW11bSBvZoxgRWxlY3Rpb25Qcm92aWRlckJhc2U6Ok1heFdpbm5lcnNgLgCEVGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIFJvb3QuADQjIyBDb21wbGV4aXR5mFNhbWUgYXMgW2BTZWxmOjpzZXRfdmFsaWRhdG9yX2NvdW50YF0uVHNjYWxlX3ZhbGlkYXRvcl9jb3VudAQBGGZhY3RvchUCARxQZXJjZW50AAscEQFTY2FsZSB1cCB0aGUgaWRlYWwgbnVtYmVyIG9mIHZhbGlkYXRvcnMgYnkgYSBmYWN0b3IgdXAgdG8gbWF4aW11bSBvZoxgRWxlY3Rpb25Qcm92aWRlckJhc2U6Ok1heFdpbm5lcnNgLgCEVGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIFJvb3QuADQjIyBDb21wbGV4aXR5mFNhbWUgYXMgW2BTZWxmOjpzZXRfdmFsaWRhdG9yX2NvdW50YF0uNGZvcmNlX25vX2VyYXMADDSsRm9yY2UgdGhlcmUgdG8gYmUgbm8gbmV3IGVyYXMgaW5kZWZpbml0ZWx5LgCEVGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIFJvb3QuACQjIFdhcm5pbmcAGQFUaGUgZWxlY3Rpb24gcHJvY2VzcyBzdGFydHMgbXVsdGlwbGUgYmxvY2tzIGJlZm9yZSB0aGUgZW5kIG9mIHRoZSBlcmEuOQFUaHVzIHRoZSBlbGVjdGlvbiBwcm9jZXNzIG1heSBiZSBvbmdvaW5nIHdoZW4gdGhpcyBpcyBjYWxsZWQuIEluIHRoaXMgY2FzZSB0aGXcZWxlY3Rpb24gd2lsbCBjb250aW51ZSB1bnRpbCB0aGUgbmV4dCBlcmEgaXMgdHJpZ2dlcmVkLgA0IyMgQ29tcGxleGl0eTwtIE5vIGFyZ3VtZW50cy44LSBXZWlnaHQ6IE8oMSk0Zm9yY2VfbmV3X2VyYQANOEkBRm9yY2UgdGhlcmUgdG8gYmUgYSBuZXcgZXJhIGF0IHRoZSBlbmQgb2YgdGhlIG5leHQgc2Vzc2lvbi4gQWZ0ZXIgdGhpcywgaXQgd2lsbCBiZZxyZXNldCB0byBub3JtYWwgKG5vbi1mb3JjZWQpIGJlaGF2aW91ci4AhFRoZSBkaXNwYXRjaCBvcmlnaW4gbXVzdCBiZSBSb290LgAkIyBXYXJuaW5nABkBVGhlIGVsZWN0aW9uIHByb2Nlc3Mgc3RhcnRzIG11bHRpcGxlIGJsb2NrcyBiZWZvcmUgdGhlIGVuZCBvZiB0aGUgZXJhLkkBSWYgdGhpcyBpcyBjYWxsZWQganVzdCBiZWZvcmUgYSBuZXcgZXJhIGlzIHRyaWdnZXJlZCwgdGhlIGVsZWN0aW9uIHByb2Nlc3MgbWF5IG5vdIxoYXZlIGVub3VnaCBibG9ja3MgdG8gZ2V0IGEgcmVzdWx0LgA0IyMgQ29tcGxleGl0eTwtIE5vIGFyZ3VtZW50cy44LSBXZWlnaHQ6IE8oMSlEc2V0X2ludnVsbmVyYWJsZXMEATRpbnZ1bG5lcmFibGVzBQIBRFZlYzxUOjpBY2NvdW50SWQ+AA4MyFNldCB0aGUgdmFsaWRhdG9ycyB3aG8gY2Fubm90IGJlIHNsYXNoZWQgKGlmIGFueSkuAIRUaGUgZGlzcGF0Y2ggb3JpZ2luIG11c3QgYmUgUm9vdC40Zm9yY2VfdW5zdGFrZQgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAFIbnVtX3NsYXNoaW5nX3NwYW5zEAEMdTMyAA8gCQFGb3JjZSBhIGN1cnJlbnQgc3Rha2VyIHRvIGJlY29tZSBjb21wbGV0ZWx5IHVuc3Rha2VkLCBpbW1lZGlhdGVseS4AhFRoZSBkaXNwYXRjaCBvcmlnaW4gbXVzdCBiZSBSb290LgA0IyMgUGFyYW1ldGVycwBFAS0gYG51bV9zbGFzaGluZ19zcGFuc2A6IFJlZmVyIHRvIGNvbW1lbnRzIG9uIFtgQ2FsbDo6d2l0aGRyYXdfdW5ib25kZWRgXSBmb3IgbW9yZSBkZXRhaWxzLlBmb3JjZV9uZXdfZXJhX2Fsd2F5cwAQJAEBRm9yY2UgdGhlcmUgdG8gYmUgYSBuZXcgZXJhIGF0IHRoZSBlbmQgb2Ygc2Vzc2lvbnMgaW5kZWZpbml0ZWx5LgCEVGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIFJvb3QuACQjIFdhcm5pbmcAGQFUaGUgZWxlY3Rpb24gcHJvY2VzcyBzdGFydHMgbXVsdGlwbGUgYmxvY2tzIGJlZm9yZSB0aGUgZW5kIG9mIHRoZSBlcmEuSQFJZiB0aGlzIGlzIGNhbGxlZCBqdXN0IGJlZm9yZSBhIG5ldyBlcmEgaXMgdHJpZ2dlcmVkLCB0aGUgZWxlY3Rpb24gcHJvY2VzcyBtYXkgbm90jGhhdmUgZW5vdWdoIGJsb2NrcyB0byBnZXQgYSByZXN1bHQuVGNhbmNlbF9kZWZlcnJlZF9zbGFzaAgBDGVyYRABIEVyYUluZGV4AAE0c2xhc2hfaW5kaWNlcxkCASBWZWM8dTMyPgARGJRDYW5jZWwgZW5hY3RtZW50IG9mIGEgZGVmZXJyZWQgc2xhc2guAJhDYW4gYmUgY2FsbGVkIGJ5IHRoZSBgVDo6QWRtaW5PcmlnaW5gLgABAVBhcmFtZXRlcnM6IGVyYSBhbmQgaW5kaWNlcyBvZiB0aGUgc2xhc2hlcyBmb3IgdGhhdCBlcmEgdG8ga2lsbC7kVGhleSAqKm11c3QqKiBiZSBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyLCAqYW5kKiB1bmlxdWUuOHBheW91dF9zdGFrZXJzCAE8dmFsaWRhdG9yX3N0YXNoAAEwVDo6QWNjb3VudElkAAEMZXJhEAEgRXJhSW5kZXgAEjQZAVBheSBvdXQgbmV4dCBwYWdlIG9mIHRoZSBzdGFrZXJzIGJlaGluZCBhIHZhbGlkYXRvciBmb3IgdGhlIGdpdmVuIGVyYS4A6C0gYHZhbGlkYXRvcl9zdGFzaGAgaXMgdGhlIHN0YXNoIGFjY291bnQgb2YgdGhlIHZhbGlkYXRvci4xAS0gYGVyYWAgbWF5IGJlIGFueSBlcmEgYmV0d2VlbiBgW2N1cnJlbnRfZXJhIC0gaGlzdG9yeV9kZXB0aDsgY3VycmVudF9lcmFdYC4AVQFUaGUgb3JpZ2luIG9mIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLiBBbnkgYWNjb3VudCBjYW4gY2FsbCB0aGlzIGZ1bmN0aW9uLCBldmVuIGlmdGl0IGlzIG5vdCBvbmUgb2YgdGhlIHN0YWtlcnMuAEkBVGhlIHJld2FyZCBwYXlvdXQgY291bGQgYmUgcGFnZWQgaW4gY2FzZSB0aGVyZSBhcmUgdG9vIG1hbnkgbm9taW5hdG9ycyBiYWNraW5nIHRoZV0BYHZhbGlkYXRvcl9zdGFzaGAuIFRoaXMgY2FsbCB3aWxsIHBheW91dCB1bnBhaWQgcGFnZXMgaW4gYW4gYXNjZW5kaW5nIG9yZGVyLiBUbyBjbGFpbSBhtHNwZWNpZmljIHBhZ2UsIHVzZSBgcGF5b3V0X3N0YWtlcnNfYnlfcGFnZWAuYADwSWYgYWxsIHBhZ2VzIGFyZSBjbGFpbWVkLCBpdCByZXR1cm5zIGFuIGVycm9yIGBJbnZhbGlkUGFnZWAuGHJlYm9uZAQBFHZhbHVlDQEBMEJhbGFuY2VPZjxUPgATHNxSZWJvbmQgYSBwb3J0aW9uIG9mIHRoZSBzdGFzaCBzY2hlZHVsZWQgdG8gYmUgdW5sb2NrZWQuANRUaGUgZGlzcGF0Y2ggb3JpZ2luIG11c3QgYmUgc2lnbmVkIGJ5IHRoZSBjb250cm9sbGVyLgA0IyMgQ29tcGxleGl0edAtIFRpbWUgY29tcGxleGl0eTogTyhMKSwgd2hlcmUgTCBpcyB1bmxvY2tpbmcgY2h1bmtziC0gQm91bmRlZCBieSBgTWF4VW5sb2NraW5nQ2h1bmtzYC4ocmVhcF9zdGFzaAgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAFIbnVtX3NsYXNoaW5nX3NwYW5zEAEMdTMyABRIXQFSZW1vdmUgYWxsIGRhdGEgc3RydWN0dXJlcyBjb25jZXJuaW5nIGEgc3Rha2VyL3N0YXNoIG9uY2UgaXQgaXMgYXQgYSBzdGF0ZSB3aGVyZSBpdCBjYW4FAWJlIGNvbnNpZGVyZWQgYGR1c3RgIGluIHRoZSBzdGFraW5nIHN5c3RlbS4gVGhlIHJlcXVpcmVtZW50cyBhcmU6AAUBMS4gdGhlIGB0b3RhbF9iYWxhbmNlYCBvZiB0aGUgc3Rhc2ggaXMgYmVsb3cgZXhpc3RlbnRpYWwgZGVwb3NpdC4RATIuIG9yLCB0aGUgYGxlZGdlci50b3RhbGAgb2YgdGhlIHN0YXNoIGlzIGJlbG93IGV4aXN0ZW50aWFsIGRlcG9zaXQuYQEzLiBvciwgZXhpc3RlbnRpYWwgZGVwb3NpdCBpcyB6ZXJvIGFuZCBlaXRoZXIgYHRvdGFsX2JhbGFuY2VgIG9yIGBsZWRnZXIudG90YWxgIGlzIHplcm8uAFUBVGhlIGZvcm1lciBjYW4gaGFwcGVuIGluIGNhc2VzIGxpa2UgYSBzbGFzaDsgdGhlIGxhdHRlciB3aGVuIGEgZnVsbHkgdW5ib25kZWQgYWNjb3VudAkBaXMgc3RpbGwgcmVjZWl2aW5nIHN0YWtpbmcgcmV3YXJkcyBpbiBgUmV3YXJkRGVzdGluYXRpb246OlN0YWtlZGAuADEBSXQgY2FuIGJlIGNhbGxlZCBieSBhbnlvbmUsIGFzIGxvbmcgYXMgYHN0YXNoYCBtZWV0cyB0aGUgYWJvdmUgcmVxdWlyZW1lbnRzLgDcUmVmdW5kcyB0aGUgdHJhbnNhY3Rpb24gZmVlcyB1cG9uIHN1Y2Nlc3NmdWwgZXhlY3V0aW9uLgA0IyMgUGFyYW1ldGVycwBFAS0gYG51bV9zbGFzaGluZ19zcGFuc2A6IFJlZmVyIHRvIGNvbW1lbnRzIG9uIFtgQ2FsbDo6d2l0aGRyYXdfdW5ib25kZWRgXSBmb3IgbW9yZSBkZXRhaWxzLhBraWNrBAEMd2hvEQIBZFZlYzxBY2NvdW50SWRMb29rdXBPZjxUPj4AFSzgUmVtb3ZlIHRoZSBnaXZlbiBub21pbmF0aW9ucyBmcm9tIHRoZSBjYWxsaW5nIHZhbGlkYXRvci4A2EVmZmVjdHMgd2lsbCBiZSBmZWx0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5leHQgZXJhLgBRAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGJ5IHRoZSBjb250cm9sbGVyLCBub3QgdGhlIHN0YXNoLgBNAS0gYHdob2A6IEEgbGlzdCBvZiBub21pbmF0b3Igc3Rhc2ggYWNjb3VudHMgd2hvIGFyZSBub21pbmF0aW5nIHRoaXMgdmFsaWRhdG9yIHdoaWNowCAgc2hvdWxkIG5vIGxvbmdlciBiZSBub21pbmF0aW5nIHRoaXMgdmFsaWRhdG9yLgBVAU5vdGU6IE1ha2luZyB0aGlzIGNhbGwgb25seSBtYWtlcyBzZW5zZSBpZiB5b3UgZmlyc3Qgc2V0IHRoZSB2YWxpZGF0b3IgcHJlZmVyZW5jZXMgdG94YmxvY2sgYW55IGZ1cnRoZXIgbm9taW5hdGlvbnMuTHNldF9zdGFraW5nX2NvbmZpZ3McAUhtaW5fbm9taW5hdG9yX2JvbmQdAgFYQ29uZmlnT3A8QmFsYW5jZU9mPFQ+PgABSG1pbl92YWxpZGF0b3JfYm9uZB0CAVhDb25maWdPcDxCYWxhbmNlT2Y8VD4+AAFMbWF4X25vbWluYXRvcl9jb3VudCECATRDb25maWdPcDx1MzI+AAFMbWF4X3ZhbGlkYXRvcl9jb3VudCECATRDb25maWdPcDx1MzI+AAE8Y2hpbGxfdGhyZXNob2xkJQIBRENvbmZpZ09wPFBlcmNlbnQ+AAE4bWluX2NvbW1pc3Npb24pAgFEQ29uZmlnT3A8UGVyYmlsbD4AAUhtYXhfc3Rha2VkX3Jld2FyZHMlAgFEQ29uZmlnT3A8UGVyY2VudD4AFkSsVXBkYXRlIHRoZSB2YXJpb3VzIHN0YWtpbmcgY29uZmlndXJhdGlvbnMgLgAlASogYG1pbl9ub21pbmF0b3JfYm9uZGA6IFRoZSBtaW5pbXVtIGFjdGl2ZSBib25kIG5lZWRlZCB0byBiZSBhIG5vbWluYXRvci4lASogYG1pbl92YWxpZGF0b3JfYm9uZGA6IFRoZSBtaW5pbXVtIGFjdGl2ZSBib25kIG5lZWRlZCB0byBiZSBhIHZhbGlkYXRvci5VASogYG1heF9ub21pbmF0b3JfY291bnRgOiBUaGUgbWF4IG51bWJlciBvZiB1c2VycyB3aG8gY2FuIGJlIGEgbm9taW5hdG9yIGF0IG9uY2UuIFdoZW6YICBzZXQgdG8gYE5vbmVgLCBubyBsaW1pdCBpcyBlbmZvcmNlZC5VASogYG1heF92YWxpZGF0b3JfY291bnRgOiBUaGUgbWF4IG51bWJlciBvZiB1c2VycyB3aG8gY2FuIGJlIGEgdmFsaWRhdG9yIGF0IG9uY2UuIFdoZW6YICBzZXQgdG8gYE5vbmVgLCBubyBsaW1pdCBpcyBlbmZvcmNlZC5ZASogYGNoaWxsX3RocmVzaG9sZGA6IFRoZSByYXRpbyBvZiBgbWF4X25vbWluYXRvcl9jb3VudGAgb3IgYG1heF92YWxpZGF0b3JfY291bnRgIHdoaWNoGQEgIHNob3VsZCBiZSBmaWxsZWQgaW4gb3JkZXIgZm9yIHRoZSBgY2hpbGxfb3RoZXJgIHRyYW5zYWN0aW9uIHRvIHdvcmsuYQEqIGBtaW5fY29tbWlzc2lvbmA6IFRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21taXNzaW9uIHRoYXQgZWFjaCB2YWxpZGF0b3JzIG11c3QgbWFpbnRhaW4uVQEgIFRoaXMgaXMgY2hlY2tlZCBvbmx5IHVwb24gY2FsbGluZyBgdmFsaWRhdGVgLiBFeGlzdGluZyB2YWxpZGF0b3JzIGFyZSBub3QgYWZmZWN0ZWQuAMRSdW50aW1lT3JpZ2luIG11c3QgYmUgUm9vdCB0byBjYWxsIHRoaXMgZnVuY3Rpb24uADUBTk9URTogRXhpc3Rpbmcgbm9taW5hdG9ycyBhbmQgdmFsaWRhdG9ycyB3aWxsIG5vdCBiZSBhZmZlY3RlZCBieSB0aGlzIHVwZGF0ZS4RAXRvIGtpY2sgcGVvcGxlIHVuZGVyIHRoZSBuZXcgbGltaXRzLCBgY2hpbGxfb3RoZXJgIHNob3VsZCBiZSBjYWxsZWQuLGNoaWxsX290aGVyBAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAF2hBAURlY2xhcmUgYSBgY29udHJvbGxlcmAgdG8gc3RvcCBwYXJ0aWNpcGF0aW5nIGFzIGVpdGhlciBhIHZhbGlkYXRvciBvciBub21pbmF0b3IuANhFZmZlY3RzIHdpbGwgYmUgZmVsdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBuZXh0IGVyYS4AQQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXywgYnV0IGNhbiBiZSBjYWxsZWQgYnkgYW55b25lLgBZAUlmIHRoZSBjYWxsZXIgaXMgdGhlIHNhbWUgYXMgdGhlIGNvbnRyb2xsZXIgYmVpbmcgdGFyZ2V0ZWQsIHRoZW4gbm8gZnVydGhlciBjaGVja3MgYXJl2GVuZm9yY2VkLCBhbmQgdGhpcyBmdW5jdGlvbiBiZWhhdmVzIGp1c3QgbGlrZSBgY2hpbGxgLgBdAUlmIHRoZSBjYWxsZXIgaXMgZGlmZmVyZW50IHRoYW4gdGhlIGNvbnRyb2xsZXIgYmVpbmcgdGFyZ2V0ZWQsIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczBtdXN0IGJlIG1ldDoAHQEqIGBjb250cm9sbGVyYCBtdXN0IGJlbG9uZyB0byBhIG5vbWluYXRvciB3aG8gaGFzIGJlY29tZSBub24tZGVjb2RhYmxlLAAMT3I6AD0BKiBBIGBDaGlsbFRocmVzaG9sZGAgbXVzdCBiZSBzZXQgYW5kIGNoZWNrZWQgd2hpY2ggZGVmaW5lcyBob3cgY2xvc2UgdG8gdGhlIG1heFUBICBub21pbmF0b3JzIG9yIHZhbGlkYXRvcnMgd2UgbXVzdCByZWFjaCBiZWZvcmUgdXNlcnMgY2FuIHN0YXJ0IGNoaWxsaW5nIG9uZS1hbm90aGVyLlkBKiBBIGBNYXhOb21pbmF0b3JDb3VudGAgYW5kIGBNYXhWYWxpZGF0b3JDb3VudGAgbXVzdCBiZSBzZXQgd2hpY2ggaXMgdXNlZCB0byBkZXRlcm1pbmWQICBob3cgY2xvc2Ugd2UgYXJlIHRvIHRoZSB0aHJlc2hvbGQuXQEqIEEgYE1pbk5vbWluYXRvckJvbmRgIGFuZCBgTWluVmFsaWRhdG9yQm9uZGAgbXVzdCBiZSBzZXQgYW5kIGNoZWNrZWQsIHdoaWNoIGRldGVybWluZXNRASAgaWYgdGhpcyBpcyBhIHBlcnNvbiB0aGF0IHNob3VsZCBiZSBjaGlsbGVkIGJlY2F1c2UgdGhleSBoYXZlIG5vdCBtZXQgdGhlIHRocmVzaG9sZEAgIGJvbmQgcmVxdWlyZWQuAFUBVGhpcyBjYW4gYmUgaGVscGZ1bCBpZiBib25kIHJlcXVpcmVtZW50cyBhcmUgdXBkYXRlZCwgYW5kIHdlIG5lZWQgdG8gcmVtb3ZlIG9sZCB1c2Vyc5h3aG8gZG8gbm90IHNhdGlzZnkgdGhlc2UgcmVxdWlyZW1lbnRzLmhmb3JjZV9hcHBseV9taW5fY29tbWlzc2lvbgQBPHZhbGlkYXRvcl9zdGFzaAABMFQ6OkFjY291bnRJZAAYDEUBRm9yY2UgYSB2YWxpZGF0b3IgdG8gaGF2ZSBhdCBsZWFzdCB0aGUgbWluaW11bSBjb21taXNzaW9uLiBUaGlzIHdpbGwgbm90IGFmZmVjdCBhYQF2YWxpZGF0b3Igd2hvIGFscmVhZHkgaGFzIGEgY29tbWlzc2lvbiBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG1pbmltdW0uIEFueSBhY2NvdW50OGNhbiBjYWxsIHRoaXMuSHNldF9taW5fY29tbWlzc2lvbgQBDG5ld7QBHFBlcmJpbGwAGRAlAVNldHMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbW1pc3Npb24gdGhhdCBlYWNoIHZhbGlkYXRvcnMgbXVzdCBtYWludGFpbi4AWQFUaGlzIGNhbGwgaGFzIGxvd2VyIHByaXZpbGVnZSByZXF1aXJlbWVudHMgdGhhbiBgc2V0X3N0YWtpbmdfY29uZmlnYCBhbmQgY2FuIGJlIGNhbGxlZMxieSB0aGUgYFQ6OkFkbWluT3JpZ2luYC4gUm9vdCBjYW4gYWx3YXlzIGNhbGwgdGhpcy5YcGF5b3V0X3N0YWtlcnNfYnlfcGFnZQwBPHZhbGlkYXRvcl9zdGFzaAABMFQ6OkFjY291bnRJZAABDGVyYRABIEVyYUluZGV4AAEQcGFnZRABEFBhZ2UAGkQxAVBheSBvdXQgYSBwYWdlIG9mIHRoZSBzdGFrZXJzIGJlaGluZCBhIHZhbGlkYXRvciBmb3IgdGhlIGdpdmVuIGVyYSBhbmQgcGFnZS4A6C0gYHZhbGlkYXRvcl9zdGFzaGAgaXMgdGhlIHN0YXNoIGFjY291bnQgb2YgdGhlIHZhbGlkYXRvci4xAS0gYGVyYWAgbWF5IGJlIGFueSBlcmEgYmV0d2VlbiBgW2N1cnJlbnRfZXJhIC0gaGlzdG9yeV9kZXB0aDsgY3VycmVudF9lcmFdYC4xAS0gYHBhZ2VgIGlzIHRoZSBwYWdlIGluZGV4IG9mIG5vbWluYXRvcnMgdG8gcGF5IG91dCB3aXRoIHZhbHVlIGJldHdlZW4gMCBhbmSwICBgbnVtX25vbWluYXRvcnMgLyBUOjpNYXhFeHBvc3VyZVBhZ2VTaXplYC4AVQFUaGUgb3JpZ2luIG9mIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLiBBbnkgYWNjb3VudCBjYW4gY2FsbCB0aGlzIGZ1bmN0aW9uLCBldmVuIGlmdGl0IGlzIG5vdCBvbmUgb2YgdGhlIHN0YWtlcnMuAD0BSWYgYSB2YWxpZGF0b3IgaGFzIG1vcmUgdGhhbiBbYENvbmZpZzo6TWF4RXhwb3N1cmVQYWdlU2l6ZWBdIG5vbWluYXRvcnMgYmFja2luZykBdGhlbSwgdGhlbiB0aGUgbGlzdCBvZiBub21pbmF0b3JzIGlzIHBhZ2VkLCB3aXRoIGVhY2ggcGFnZSBiZWluZyBjYXBwZWQgYXRVAVtgQ29uZmlnOjpNYXhFeHBvc3VyZVBhZ2VTaXplYC5dIElmIGEgdmFsaWRhdG9yIGhhcyBtb3JlIHRoYW4gb25lIHBhZ2Ugb2Ygbm9taW5hdG9ycyxJAXRoZSBjYWxsIG5lZWRzIHRvIGJlIG1hZGUgZm9yIGVhY2ggcGFnZSBzZXBhcmF0ZWx5IGluIG9yZGVyIGZvciBhbGwgdGhlIG5vbWluYXRvcnNVAWJhY2tpbmcgYSB2YWxpZGF0b3IgdG8gcmVjZWl2ZSB0aGUgcmV3YXJkLiBUaGUgbm9taW5hdG9ycyBhcmUgbm90IHNvcnRlZCBhY3Jvc3MgcGFnZXNhAWFuZCBzbyBpdCBzaG91bGQgbm90IGJlIGFzc3VtZWQgdGhlIGhpZ2hlc3Qgc3Rha2VyIHdvdWxkIGJlIG9uIHRoZSB0b3Btb3N0IHBhZ2UgYW5kIHZpY2VJAXZlcnNhLiBJZiByZXdhcmRzIGFyZSBub3QgY2xhaW1lZCBpbiBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcywgdGhleSBhcmUgbG9zdC4wdXBkYXRlX3BheWVlBAEoY29udHJvbGxlcgABMFQ6OkFjY291bnRJZAAbGOBNaWdyYXRlcyBhbiBhY2NvdW50J3MgYFJld2FyZERlc3RpbmF0aW9uOjpDb250cm9sbGVyYCB0b6RgUmV3YXJkRGVzdGluYXRpb246OkFjY291bnQoY29udHJvbGxlcilgLgBRAUVmZmVjdHMgd2lsbCBiZSBmZWx0IGluc3RhbnRseSAoYXMgc29vbiBhcyB0aGlzIGZ1bmN0aW9uIGlzIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkpLgAxAVRoaXMgd2lsbCB3YWl2ZSB0aGUgdHJhbnNhY3Rpb24gZmVlIGlmIHRoZSBgcGF5ZWVgIGlzIHN1Y2Nlc3NmdWxseSBtaWdyYXRlZC5oZGVwcmVjYXRlX2NvbnRyb2xsZXJfYmF0Y2gEASxjb250cm9sbGVycy0CAfRCb3VuZGVkVmVjPFQ6OkFjY291bnRJZCwgVDo6TWF4Q29udHJvbGxlcnNJbkRlcHJlY2F0aW9uQmF0Y2g+ABwcXQFVcGRhdGVzIGEgYmF0Y2ggb2YgY29udHJvbGxlciBhY2NvdW50cyB0byB0aGVpciBjb3JyZXNwb25kaW5nIHN0YXNoIGFjY291bnQgaWYgdGhleSBhcmVhAW5vdCB0aGUgc2FtZS4gSWdub3JlcyBhbnkgY29udHJvbGxlciBhY2NvdW50cyB0aGF0IGRvIG5vdCBleGlzdCwgYW5kIGRvZXMgbm90IG9wZXJhdGUgaWa4dGhlIHN0YXNoIGFuZCBjb250cm9sbGVyIGFyZSBhbHJlYWR5IHRoZSBzYW1lLgBRAUVmZmVjdHMgd2lsbCBiZSBmZWx0IGluc3RhbnRseSAoYXMgc29vbiBhcyB0aGlzIGZ1bmN0aW9uIGlzIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkpLgC0VGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIGBUOjpBZG1pbk9yaWdpbmAuOHJlc3RvcmVfbGVkZ2VyEAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAAUBtYXliZV9jb250cm9sbGVyMQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEsbWF5YmVfdG90YWw1AgFQT3B0aW9uPEJhbGFuY2VPZjxUPj4AATxtYXliZV91bmxvY2tpbmc5AgEVAU9wdGlvbjxCb3VuZGVkVmVjPFVubG9ja0NodW5rPEJhbGFuY2VPZjxUPj4sIFQ6OgpNYXhVbmxvY2tpbmdDaHVua3M+PgAdLAUBUmVzdG9yZXMgdGhlIHN0YXRlIG9mIGEgbGVkZ2VyIHdoaWNoIGlzIGluIGFuIGluY29uc2lzdGVudCBzdGF0ZS4A3FRoZSByZXF1aXJlbWVudHMgdG8gcmVzdG9yZSBhIGxlZGdlciBhcmUgdGhlIGZvbGxvd2luZzpkKiBUaGUgc3Rhc2ggaXMgYm9uZGVkOyBvcg0BKiBUaGUgc3Rhc2ggaXMgbm90IGJvbmRlZCBidXQgaXQgaGFzIGEgc3Rha2luZyBsb2NrIGxlZnQgYmVoaW5kOyBvciUBKiBJZiB0aGUgc3Rhc2ggaGFzIGFuIGFzc29jaWF0ZWQgbGVkZ2VyIGFuZCBpdHMgc3RhdGUgaXMgaW5jb25zaXN0ZW50OyBvch0BKiBJZiB0aGUgbGVkZ2VyIGlzIG5vdCBjb3JydXB0ZWQgKmJ1dCogaXRzIHN0YWtpbmcgbG9jayBpcyBvdXQgb2Ygc3luYy4AYQFUaGUgYG1heWJlXypgIGlucHV0IHBhcmFtZXRlcnMgd2lsbCBvdmVyd3JpdGUgdGhlIGNvcnJlc3BvbmRpbmcgZGF0YSBhbmQgbWV0YWRhdGEgb2YgdGhlWQFsZWRnZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBzdGFzaC4gSWYgdGhlIGlucHV0IHBhcmFtZXRlcnMgYXJlIG5vdCBzZXQsIHRoZSBsZWRnZXIgd2lsbJBiZSByZXNldCB2YWx1ZXMgZnJvbSBvbi1jaGFpbiBzdGF0ZS5AbWlncmF0ZV9jdXJyZW5jeQQBFHN0YXNoAAEwVDo6QWNjb3VudElkAB4cvFJlbW92ZXMgdGhlIGxlZ2FjeSBTdGFraW5nIGxvY2tzIGlmIHRoZXkgZXhpc3QuAFEBVGhpcyByZW1vdmVzIHRoZSBsZWdhY3kgbG9jayBvbiB0aGUgc3Rha2Ugd2l0aCBbYENvbmZpZzo6T2xkQ3VycmVuY3lgXSBhbmQgY3JlYXRlcyBhVQFob2xkIG9uIGl0IGlmIG5lZWRlZC4gSWYgYWxsIHN0YWtlIGNhbm5vdCBiZSBoZWxkLCB0aGUgYmVzdCBlZmZvcnQgaXMgbWFkZSB0byBob2xkIGFzKQFtdWNoIGFzIHBvc3NpYmxlLiBUaGUgcmVtYWluaW5nIHN0YWtlIGlzIGZvcmNlZCB3aXRoZHJhd24gZnJvbSB0aGUgbGVkZ2VyLgDEVGhlIGZlZSBpcyB3YWl2ZWQgaWYgdGhlIG1pZ3JhdGlvbiBpcyBzdWNjZXNzZnVsLjBtYW51YWxfc2xhc2gMATx2YWxpZGF0b3Jfc3Rhc2gAATBUOjpBY2NvdW50SWQAAQxlcmEQASBFcmFJbmRleAABOHNsYXNoX2ZyYWN0aW9utAEcUGVyYmlsbAAhVBkBVGhpcyBmdW5jdGlvbiBhbGxvd3MgZ292ZXJuYW5jZSB0byBtYW51YWxseSBzbGFzaCBhIHZhbGlkYXRvciBhbmQgaXMgYVwqKmZhbGxiYWNrIG1lY2hhbmlzbSoqLgC0VGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIGBUOjpBZG1pbk9yaWdpbmAuADQjIyBQYXJhbWV0ZXJzCQEtIGB2YWxpZGF0b3Jfc3Rhc2hgIC0gVGhlIHN0YXNoIGFjY291bnQgb2YgdGhlIHZhbGlkYXRvciB0byBzbGFzaC78LSBgZXJhYCAtIFRoZSBlcmEgaW4gd2hpY2ggdGhlIHZhbGlkYXRvciB3YXMgaW4gdGhlIGFjdGl2ZSBzZXQuSQEtIGBzbGFzaF9mcmFjdGlvbmAgLSBUaGUgcGVyY2VudGFnZSBvZiB0aGUgc3Rha2UgdG8gc2xhc2gsIGV4cHJlc3NlZCBhcyBhIFBlcmJpbGwuACwjIyBCZWhhdmlvcgA9AVRoZSBzbGFzaCB3aWxsIGJlIGFwcGxpZWQgdXNpbmcgdGhlIHN0YW5kYXJkIHNsYXNoaW5nIG1lY2hhbmljcywgcmVzcGVjdGluZyB0aGWAY29uZmlndXJlZCBgU2xhc2hEZWZlckR1cmF0aW9uYC4ALFRoaXMgbWVhbnM6UQEtIElmIHRoZSB2YWxpZGF0b3Igd2FzIGFscmVhZHkgc2xhc2hlZCBieSBhIGhpZ2hlciBwZXJjZW50YWdlIGZvciB0aGUgc2FtZSBlcmEsIHRoaXOcICBzbGFzaCB3aWxsIGhhdmUgbm8gYWRkaXRpb25hbCBlZmZlY3QuUQEtIElmIHRoZSB2YWxpZGF0b3Igd2FzIHByZXZpb3VzbHkgc2xhc2hlZCBieSBhIGxvd2VyIHBlcmNlbnRhZ2UsIG9ubHkgdGhlIGRpZmZlcmVuY2VIICB3aWxsIGJlIGFwcGxpZWQuPQEtIFRoZSBzbGFzaCB3aWxsIGJlIGRlZmVycmVkIGJ5IGBTbGFzaERlZmVyRHVyYXRpb25gIGVyYXMgYmVmb3JlIGJlaW5nIGVuYWN0ZWQuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLhECAAAC+QEAFQIMNHNwX2FyaXRobWV0aWMocGVyX3RoaW5ncxxQZXJjZW50AAAEAAgBCHU4AAAZAgAAAhAAHQIQOHBhbGxldF9zdGFraW5nGHBhbGxldBhwYWxsZXQgQ29uZmlnT3AEBFQBGAEMEE5vb3AAAAAMU2V0BAAYAQRUAAEAGFJlbW92ZQACAAAhAhA4cGFsbGV0X3N0YWtpbmcYcGFsbGV0GHBhbGxldCBDb25maWdPcAQEVAEQAQwQTm9vcAAAAAxTZXQEABABBFQAAQAYUmVtb3ZlAAIAACUCEDhwYWxsZXRfc3Rha2luZxhwYWxsZXQYcGFsbGV0IENvbmZpZ09wBARUARUCAQwQTm9vcAAAAAxTZXQEABUCAQRUAAEAGFJlbW92ZQACAAApAhA4cGFsbGV0X3N0YWtpbmcYcGFsbGV0GHBhbGxldCBDb25maWdPcAQEVAG0AQwQTm9vcAAAAAxTZXQEALQBBFQAAQAYUmVtb3ZlAAIAAC0CDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBAARTAAAEAAUCARhWZWM8VD4AADECBBhPcHRpb24EBFQBAAEIEE5vbmUAAAAQU29tZQQAAAAAAQAANQIEGE9wdGlvbgQEVAEYAQgQTm9uZQAAABBTb21lBAAYAAABAAA5AgQYT3B0aW9uBARUAT0CAQgQTm9uZQAAABBTb21lBAA9AgAAAQAAPQIMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAFBAgRTAAAEAEUCARhWZWM8VD4AAEECCDhwYWxsZXRfc3Rha2luZyxVbmxvY2tDaHVuawQcQmFsYW5jZQEYAAgBFHZhbHVlDQEBHEJhbGFuY2UAAQxlcmH8ASBFcmFJbmRleAAARQIAAAJBAgBJAgw4cGFsbGV0X3Nlc3Npb24YcGFsbGV0EENhbGwEBFQAAQggc2V0X2tleXMIARBrZXlzTQIBHFQ6OktleXMAARRwcm9vZjgBHFZlYzx1OD4AACTkU2V0cyB0aGUgc2Vzc2lvbiBrZXkocykgb2YgdGhlIGZ1bmN0aW9uIGNhbGxlciB0byBga2V5c2AuHQFBbGxvd3MgYW4gYWNjb3VudCB0byBzZXQgaXRzIHNlc3Npb24ga2V5IHByaW9yIHRvIGJlY29taW5nIGEgdmFsaWRhdG9yLsBUaGlzIGRvZXNuJ3QgdGFrZSBlZmZlY3QgdW50aWwgdGhlIG5leHQgc2Vzc2lvbi4A0FRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBmdW5jdGlvbiBtdXN0IGJlIHNpZ25lZC4ANCMjIENvbXBsZXhpdHlZAS0gYE8oMSlgLiBBY3R1YWwgY29zdCBkZXBlbmRzIG9uIHRoZSBudW1iZXIgb2YgbGVuZ3RoIG9mIGBUOjpLZXlzOjprZXlfaWRzKClgIHdoaWNoIGlzICAgZml4ZWQuKHB1cmdlX2tleXMAATDIUmVtb3ZlcyBhbnkgc2Vzc2lvbiBrZXkocykgb2YgdGhlIGZ1bmN0aW9uIGNhbGxlci4AwFRoaXMgZG9lc24ndCB0YWtlIGVmZmVjdCB1bnRpbCB0aGUgbmV4dCBzZXNzaW9uLgBVAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBmdW5jdGlvbiBtdXN0IGJlIFNpZ25lZCBhbmQgdGhlIGFjY291bnQgbXVzdCBiZSBlaXRoZXIgYmVdAWNvbnZlcnRpYmxlIHRvIGEgdmFsaWRhdG9yIElEIHVzaW5nIHRoZSBjaGFpbidzIHR5cGljYWwgYWRkcmVzc2luZyBzeXN0ZW0gKHRoaXMgdXN1YWxseVEBbWVhbnMgYmVpbmcgYSBjb250cm9sbGVyIGFjY291bnQpIG9yIGRpcmVjdGx5IGNvbnZlcnRpYmxlIGludG8gYSB2YWxpZGF0b3IgSUQgKHdoaWNolHVzdWFsbHkgbWVhbnMgYmVpbmcgYSBzdGFzaCBhY2NvdW50KS4ANCMjIENvbXBsZXhpdHk9AS0gYE8oMSlgIGluIG51bWJlciBvZiBrZXkgdHlwZXMuIEFjdHVhbCBjb3N0IGRlcGVuZHMgb24gdGhlIG51bWJlciBvZiBsZW5ndGggb2aYICBgVDo6S2V5czo6a2V5X2lkcygpYCB3aGljaCBpcyBmaXhlZC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuTQIINHBhc2VvX3J1bnRpbWUsU2Vzc2lvbktleXMAABgBHGdyYW5kcGHkAdA8R3JhbmRwYSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAEQYmFiZdkBAcQ8QmFiZSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAE4cGFyYV92YWxpZGF0b3JRAgHgPEluaXRpYWxpemVyIGFzICRjcmF0ZTo6Qm91bmRUb1J1bnRpbWVBcHBQdWJsaWM+OjpQdWJsaWMAATxwYXJhX2Fzc2lnbm1lbnRVAgHwPFBhcmFTZXNzaW9uSW5mbyBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAFMYXV0aG9yaXR5X2Rpc2NvdmVyeVkCAfw8QXV0aG9yaXR5RGlzY292ZXJ5IGFzICRjcmF0ZTo6Qm91bmRUb1J1bnRpbWVBcHBQdWJsaWM+OjpQdWJsaWMAARRiZWVmeV0CAcg8QmVlZnkgYXMgJGNyYXRlOjpCb3VuZFRvUnVudGltZUFwcFB1YmxpYz46OlB1YmxpYwAAUQIQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjg0dmFsaWRhdG9yX2FwcBhQdWJsaWMAAAQABAE8c3IyNTUxOTo6UHVibGljAABVAhBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODhhc3NpZ25tZW50X2FwcBhQdWJsaWMAAAQABAE8c3IyNTUxOTo6UHVibGljAABZAgxYc3BfYXV0aG9yaXR5X2Rpc2NvdmVyeQxhcHAYUHVibGljAAAEAAQBPHNyMjU1MTk6OlB1YmxpYwAAXQIMSHNwX2NvbnNlbnN1c19iZWVmeTBlY2RzYV9jcnlwdG8YUHVibGljAAAEAGECATRlY2RzYTo6UHVibGljAABhAgAAAyEAAAAIAGUCDDhwYWxsZXRfZ3JhbmRwYRhwYWxsZXQQQ2FsbAQEVAABDExyZXBvcnRfZXF1aXZvY2F0aW9uCAFIZXF1aXZvY2F0aW9uX3Byb29maQIByEJveDxFcXVpdm9jYXRpb25Qcm9vZjxUOjpIYXNoLCBCbG9ja051bWJlckZvcjxUPj4+AAE8a2V5X293bmVyX3Byb29m4QEBQFQ6OktleU93bmVyUHJvb2YAABAJAVJlcG9ydCB2b3RlciBlcXVpdm9jYXRpb24vbWlzYmVoYXZpb3IuIFRoaXMgbWV0aG9kIHdpbGwgdmVyaWZ5IHRoZfRlcXVpdm9jYXRpb24gcHJvb2YgYW5kIHZhbGlkYXRlIHRoZSBnaXZlbiBrZXkgb3duZXJzaGlwIHByb29m+GFnYWluc3QgdGhlIGV4dHJhY3RlZCBvZmZlbmRlci4gSWYgYm90aCBhcmUgdmFsaWQsIHRoZSBvZmZlbmNlRHdpbGwgYmUgcmVwb3J0ZWQucHJlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWQIAUhlcXVpdm9jYXRpb25fcHJvb2ZpAgHIQm94PEVxdWl2b2NhdGlvblByb29mPFQ6Okhhc2gsIEJsb2NrTnVtYmVyRm9yPFQ+Pj4AATxrZXlfb3duZXJfcHJvb2bhAQFAVDo6S2V5T3duZXJQcm9vZgABJAkBUmVwb3J0IHZvdGVyIGVxdWl2b2NhdGlvbi9taXNiZWhhdmlvci4gVGhpcyBtZXRob2Qgd2lsbCB2ZXJpZnkgdGhl9GVxdWl2b2NhdGlvbiBwcm9vZiBhbmQgdmFsaWRhdGUgdGhlIGdpdmVuIGtleSBvd25lcnNoaXAgcHJvb2b4YWdhaW5zdCB0aGUgZXh0cmFjdGVkIG9mZmVuZGVyLiBJZiBib3RoIGFyZSB2YWxpZCwgdGhlIG9mZmVuY2VEd2lsbCBiZSByZXBvcnRlZC4ADQFUaGlzIGV4dHJpbnNpYyBtdXN0IGJlIGNhbGxlZCB1bnNpZ25lZCBhbmQgaXQgaXMgZXhwZWN0ZWQgdGhhdCBvbmx5FQFibG9jayBhdXRob3JzIHdpbGwgY2FsbCBpdCAodmFsaWRhdGVkIGluIGBWYWxpZGF0ZVVuc2lnbmVkYCksIGFzIHN1Y2gVAWlmIHRoZSBibG9jayBhdXRob3IgaXMgZGVmaW5lZCBpdCB3aWxsIGJlIGRlZmluZWQgYXMgdGhlIGVxdWl2b2NhdGlvbiRyZXBvcnRlci4wbm90ZV9zdGFsbGVkCAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgABbGJlc3RfZmluYWxpemVkX2Jsb2NrX251bWJlchABREJsb2NrTnVtYmVyRm9yPFQ+AAIwPQFOb3RlIHRoYXQgdGhlIGN1cnJlbnQgYXV0aG9yaXR5IHNldCBvZiB0aGUgR1JBTkRQQSBmaW5hbGl0eSBnYWRnZXQgaGFzIHN0YWxsZWQuAGEBVGhpcyB3aWxsIHRyaWdnZXIgYSBmb3JjZWQgYXV0aG9yaXR5IHNldCBjaGFuZ2UgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBzZXNzaW9uLCB0b2EBYmUgZW5hY3RlZCBgZGVsYXlgIGJsb2NrcyBhZnRlciB0aGF0LiBUaGUgYGRlbGF5YCBzaG91bGQgYmUgaGlnaCBlbm91Z2ggdG8gc2FmZWx5IGFzc3VtZUkBdGhhdCB0aGUgYmxvY2sgc2lnbmFsbGluZyB0aGUgZm9yY2VkIGNoYW5nZSB3aWxsIG5vdCBiZSByZS1vcmdlZCBlLmcuIDEwMDAgYmxvY2tzLl0BVGhlIGJsb2NrIHByb2R1Y3Rpb24gcmF0ZSAod2hpY2ggbWF5IGJlIHNsb3dlZCBkb3duIGJlY2F1c2Ugb2YgZmluYWxpdHkgbGFnZ2luZykgc2hvdWxkUQFiZSB0YWtlbiBpbnRvIGFjY291bnQgd2hlbiBjaG9vc2luZyB0aGUgYGRlbGF5YC4gVGhlIEdSQU5EUEEgdm90ZXJzIGJhc2VkIG9uIHRoZSBuZXdVAWF1dGhvcml0eSB3aWxsIHN0YXJ0IHZvdGluZyBvbiB0b3Agb2YgYGJlc3RfZmluYWxpemVkX2Jsb2NrX251bWJlcmAgZm9yIG5ldyBmaW5hbGl6ZWRNAWJsb2Nrcy4gYGJlc3RfZmluYWxpemVkX2Jsb2NrX251bWJlcmAgc2hvdWxkIGJlIHRoZSBoaWdoZXN0IG9mIHRoZSBsYXRlc3QgZmluYWxpemVkxGJsb2NrIG9mIGFsbCB2YWxpZGF0b3JzIG9mIHRoZSBuZXcgYXV0aG9yaXR5IHNldC4AWE9ubHkgY2FsbGFibGUgYnkgcm9vdC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuaQIIUHNwX2NvbnNlbnN1c19ncmFuZHBhREVxdWl2b2NhdGlvblByb29mCARIATQETgEQAAgBGHNldF9pZDABFFNldElkAAEwZXF1aXZvY2F0aW9ubQIBSEVxdWl2b2NhdGlvbjxILCBOPgAAbQIIUHNwX2NvbnNlbnN1c19ncmFuZHBhMEVxdWl2b2NhdGlvbggESAE0BE4BEAEIHFByZXZvdGUEAHECAYkBZmluYWxpdHlfZ3JhbmRwYTo6RXF1aXZvY2F0aW9uPEF1dGhvcml0eUlkLCBmaW5hbGl0eV9ncmFuZHBhOjpQcmV2b3RlPApILCBOPiwgQXV0aG9yaXR5U2lnbmF0dXJlLD4AAAAkUHJlY29tbWl0BACFAgGRAWZpbmFsaXR5X2dyYW5kcGE6OkVxdWl2b2NhdGlvbjxBdXRob3JpdHlJZCwgZmluYWxpdHlfZ3JhbmRwYTo6UHJlY29tbWl0CjxILCBOPiwgQXV0aG9yaXR5U2lnbmF0dXJlLD4AAQAAcQIIQGZpbmFsaXR5X2dyYW5kcGEwRXF1aXZvY2F0aW9uDAhJZAHkBFYBdQIEUwF5AgAQATByb3VuZF9udW1iZXIwAQx1NjQAASBpZGVudGl0eeQBCElkAAEUZmlyc3SBAgEYKFYsIFMpAAEYc2Vjb25kgQIBGChWLCBTKQAAdQIIQGZpbmFsaXR5X2dyYW5kcGEcUHJldm90ZQgESAE0BE4BEAAIASx0YXJnZXRfaGFzaDQBBEgAATR0YXJnZXRfbnVtYmVyEAEETgAAeQIMUHNwX2NvbnNlbnN1c19ncmFuZHBhDGFwcCRTaWduYXR1cmUAAAQAfQIBSGVkMjU1MTk6OlNpZ25hdHVyZQAAfQIAAANAAAAACACBAgAABAh1AnkCAIUCCEBmaW5hbGl0eV9ncmFuZHBhMEVxdWl2b2NhdGlvbgwISWQB5ARWAYkCBFMBeQIAEAEwcm91bmRfbnVtYmVyMAEMdTY0AAEgaWRlbnRpdHnkAQhJZAABFGZpcnN0jQIBGChWLCBTKQABGHNlY29uZI0CARgoViwgUykAAIkCCEBmaW5hbGl0eV9ncmFuZHBhJFByZWNvbW1pdAgESAE0BE4BEAAIASx0YXJnZXRfaGFzaDQBBEgAATR0YXJnZXRfbnVtYmVyEAEETgAAjQIAAAQIiQJ5AgCRAgw8cGFsbGV0X3RyZWFzdXJ5GHBhbGxldBBDYWxsCARUAARJAAEYLHNwZW5kX2xvY2FsCAEYYW1vdW50DQEBPEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AANEuFByb3Bvc2UgYW5kIGFwcHJvdmUgYSBzcGVuZCBvZiB0cmVhc3VyeSBmdW5kcy4ASCMjIERpc3BhdGNoIE9yaWdpbgBFAU11c3QgYmUgW2BDb25maWc6OlNwZW5kT3JpZ2luYF0gd2l0aCB0aGUgYFN1Y2Nlc3NgIHZhbHVlIGJlaW5nIGF0IGxlYXN0IGBhbW91bnRgLgAsIyMjIERldGFpbHNFAU5PVEU6IEZvciByZWNvcmQta2VlcGluZyBwdXJwb3NlcywgdGhlIHByb3Bvc2VyIGlzIGRlZW1lZCB0byBiZSBlcXVpdmFsZW50IHRvIHRoZTBiZW5lZmljaWFyeS4AOCMjIyBQYXJhbWV0ZXJzQQEtIGBhbW91bnRgOiBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkIGZyb20gdGhlIHRyZWFzdXJ5IHRvIHRoZSBgYmVuZWZpY2lhcnlgLugtIGBiZW5lZmljaWFyeWA6IFRoZSBkZXN0aW5hdGlvbiBhY2NvdW50IGZvciB0aGUgdHJhbnNmZXIuACQjIyBFdmVudHMAtEVtaXRzIFtgRXZlbnQ6OlNwZW5kQXBwcm92ZWRgXSBpZiBzdWNjZXNzZnVsLjxyZW1vdmVfYXBwcm92YWwEASxwcm9wb3NhbF9pZPwBNFByb3Bvc2FsSW5kZXgABFQtAUZvcmNlIGEgcHJldmlvdXNseSBhcHByb3ZlZCBwcm9wb3NhbCB0byBiZSByZW1vdmVkIGZyb20gdGhlIGFwcHJvdmFsIHF1ZXVlLgBIIyMgRGlzcGF0Y2ggT3JpZ2luAIRNdXN0IGJlIFtgQ29uZmlnOjpSZWplY3RPcmlnaW5gXS4AKCMjIERldGFpbHMAwFRoZSBvcmlnaW5hbCBkZXBvc2l0IHdpbGwgbm8gbG9uZ2VyIGJlIHJldHVybmVkLgA4IyMjIFBhcmFtZXRlcnOgLSBgcHJvcG9zYWxfaWRgOiBUaGUgaW5kZXggb2YgYSBwcm9wb3NhbAA4IyMjIENvbXBsZXhpdHmsLSBPKEEpIHdoZXJlIGBBYCBpcyB0aGUgbnVtYmVyIG9mIGFwcHJvdmFscwAoIyMjIEVycm9yc0UBLSBbYEVycm9yOjpQcm9wb3NhbE5vdEFwcHJvdmVkYF06IFRoZSBgcHJvcG9zYWxfaWRgIHN1cHBsaWVkIHdhcyBub3QgZm91bmQgaW4gdGhlUQEgIGFwcHJvdmFsIHF1ZXVlLCBpLmUuLCB0aGUgcHJvcG9zYWwgaGFzIG5vdCBiZWVuIGFwcHJvdmVkLiBUaGlzIGNvdWxkIGFsc28gbWVhbiB0aGVZASAgcHJvcG9zYWwgZG9lcyBub3QgZXhpc3QgYWx0b2dldGhlciwgdGh1cyB0aGVyZSBpcyBubyB3YXkgaXQgd291bGQgaGF2ZSBiZWVuIGFwcHJvdmVkVCAgaW4gdGhlIGZpcnN0IHBsYWNlLhRzcGVuZBABKGFzc2V0X2tpbmTsAURCb3g8VDo6QXNzZXRLaW5kPgABGGFtb3VudA0BAVBBc3NldEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5jQEBeEJveDxCZW5lZmljaWFyeUxvb2t1cE9mPFQsIEk+PgABKHZhbGlkX2Zyb224AXBPcHRpb248QmxvY2tOdW1iZXJGb3I8VCwgST4+AAVouFByb3Bvc2UgYW5kIGFwcHJvdmUgYSBzcGVuZCBvZiB0cmVhc3VyeSBmdW5kcy4ASCMjIERpc3BhdGNoIE9yaWdpbgAdAU11c3QgYmUgW2BDb25maWc6OlNwZW5kT3JpZ2luYF0gd2l0aCB0aGUgYFN1Y2Nlc3NgIHZhbHVlIGJlaW5nIGF0IGxlYXN0VQFgYW1vdW50YCBvZiBgYXNzZXRfa2luZGAgaW4gdGhlIG5hdGl2ZSBhc3NldC4gVGhlIGFtb3VudCBvZiBgYXNzZXRfa2luZGAgaXMgY29udmVydGVk1GZvciBhc3NlcnRpb24gdXNpbmcgdGhlIFtgQ29uZmlnOjpCYWxhbmNlQ29udmVydGVyYF0uACgjIyBEZXRhaWxzAEkBQ3JlYXRlIGFuIGFwcHJvdmVkIHNwZW5kIGZvciB0cmFuc2ZlcnJpbmcgYSBzcGVjaWZpYyBgYW1vdW50YCBvZiBgYXNzZXRfa2luZGAgdG8gYWEBZGVzaWduYXRlZCBiZW5lZmljaWFyeS4gVGhlIHNwZW5kIG11c3QgYmUgY2xhaW1lZCB1c2luZyB0aGUgYHBheW91dGAgZGlzcGF0Y2hhYmxlIHdpdGhpbnR0aGUgW2BDb25maWc6OlBheW91dFBlcmlvZGBdLgA4IyMjIFBhcmFtZXRlcnMVAS0gYGFzc2V0X2tpbmRgOiBBbiBpbmRpY2F0b3Igb2YgdGhlIHNwZWNpZmljIGFzc2V0IGNsYXNzIHRvIGJlIHNwZW50LkEBLSBgYW1vdW50YDogVGhlIGFtb3VudCB0byBiZSB0cmFuc2ZlcnJlZCBmcm9tIHRoZSB0cmVhc3VyeSB0byB0aGUgYGJlbmVmaWNpYXJ5YC64LSBgYmVuZWZpY2lhcnlgOiBUaGUgYmVuZWZpY2lhcnkgb2YgdGhlIHNwZW5kLlUBLSBgdmFsaWRfZnJvbWA6IFRoZSBibG9jayBudW1iZXIgZnJvbSB3aGljaCB0aGUgc3BlbmQgY2FuIGJlIGNsYWltZWQuIEl0IGNhbiByZWZlciB0bxkBICB0aGUgcGFzdCBpZiB0aGUgcmVzdWx0aW5nIHNwZW5kIGhhcyBub3QgeWV0IGV4cGlyZWQgYWNjb3JkaW5nIHRvIHRoZUUBICBbYENvbmZpZzo6UGF5b3V0UGVyaW9kYF0uIElmIGBOb25lYCwgdGhlIHNwZW5kIGNhbiBiZSBjbGFpbWVkIGltbWVkaWF0ZWx5IGFmdGVyLCAgYXBwcm92YWwuACQjIyBFdmVudHMAyEVtaXRzIFtgRXZlbnQ6OkFzc2V0U3BlbmRBcHByb3ZlZGBdIGlmIHN1Y2Nlc3NmdWwuGHBheW91dAQBFGluZGV4EAEoU3BlbmRJbmRleAAGTDhDbGFpbSBhIHNwZW5kLgBIIyMgRGlzcGF0Y2ggT3JpZ2luADhNdXN0IGJlIHNpZ25lZAAoIyMgRGV0YWlscwBVAVNwZW5kcyBtdXN0IGJlIGNsYWltZWQgd2l0aGluIHNvbWUgdGVtcG9yYWwgYm91bmRzLiBBIHNwZW5kIG1heSBiZSBjbGFpbWVkIHdpdGhpbiBvbmXUW2BDb25maWc6OlBheW91dFBlcmlvZGBdIGZyb20gdGhlIGB2YWxpZF9mcm9tYCBibG9jay5VAUluIGNhc2Ugb2YgYSBwYXlvdXQgZmFpbHVyZSwgdGhlIHNwZW5kIHN0YXR1cyBtdXN0IGJlIHVwZGF0ZWQgd2l0aCB0aGUgYGNoZWNrX3N0YXR1c2DcZGlzcGF0Y2hhYmxlIGJlZm9yZSByZXRyeWluZyB3aXRoIHRoZSBjdXJyZW50IGZ1bmN0aW9uLgA4IyMjIFBhcmFtZXRlcnNsLSBgaW5kZXhgOiBUaGUgc3BlbmQgaW5kZXguACQjIyBFdmVudHMAkEVtaXRzIFtgRXZlbnQ6OlBhaWRgXSBpZiBzdWNjZXNzZnVsLjBjaGVja19zdGF0dXMEARRpbmRleBABKFNwZW5kSW5kZXgAB0wpAUNoZWNrIHRoZSBzdGF0dXMgb2YgdGhlIHNwZW5kIGFuZCByZW1vdmUgaXQgZnJvbSB0aGUgc3RvcmFnZSBpZiBwcm9jZXNzZWQuAEgjIyBEaXNwYXRjaCBPcmlnaW4APE11c3QgYmUgc2lnbmVkLgAoIyMgRGV0YWlscwABAVRoZSBzdGF0dXMgY2hlY2sgaXMgYSBwcmVyZXF1aXNpdGUgZm9yIHJldHJ5aW5nIGEgZmFpbGVkIHBheW91dC5JAUlmIGEgc3BlbmQgaGFzIGVpdGhlciBzdWNjZWVkZWQgb3IgZXhwaXJlZCwgaXQgaXMgcmVtb3ZlZCBmcm9tIHRoZSBzdG9yYWdlIGJ5IHRoaXPsZnVuY3Rpb24uIEluIHN1Y2ggaW5zdGFuY2VzLCB0cmFuc2FjdGlvbiBmZWVzIGFyZSByZWZ1bmRlZC4AOCMjIyBQYXJhbWV0ZXJzbC0gYGluZGV4YDogVGhlIHNwZW5kIGluZGV4LgAkIyMgRXZlbnRzAPhFbWl0cyBbYEV2ZW50OjpQYXltZW50RmFpbGVkYF0gaWYgdGhlIHNwZW5kIHBheW91dCBoYXMgZmFpbGVkLgEBRW1pdHMgW2BFdmVudDo6U3BlbmRQcm9jZXNzZWRgXSBpZiB0aGUgc3BlbmQgcGF5b3V0IGhhcyBzdWNjZWVkLih2b2lkX3NwZW5kBAEUaW5kZXgQAShTcGVuZEluZGV4AAhAfFZvaWQgcHJldmlvdXNseSBhcHByb3ZlZCBzcGVuZC4ASCMjIERpc3BhdGNoIE9yaWdpbgCETXVzdCBiZSBbYENvbmZpZzo6UmVqZWN0T3JpZ2luYF0uACgjIyBEZXRhaWxzAB0BQSBzcGVuZCB2b2lkIGlzIG9ubHkgcG9zc2libGUgaWYgdGhlIHBheW91dCBoYXMgbm90IGJlZW4gYXR0ZW1wdGVkIHlldC4AOCMjIyBQYXJhbWV0ZXJzbC0gYGluZGV4YDogVGhlIHNwZW5kIGluZGV4LgAkIyMgRXZlbnRzAMBFbWl0cyBbYEV2ZW50OjpBc3NldFNwZW5kVm9pZGVkYF0gaWYgc3VjY2Vzc2Z1bC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMulQIMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxhwYWxsZXQQQ2FsbAgEVAAESQABGBB2b3RlCAEocG9sbF9pbmRlePwBRFBvbGxJbmRleE9mPFQsIEk+AAEQdm90ZZUBAXBBY2NvdW50Vm90ZTxCYWxhbmNlT2Y8VCwgST4+AAAkGQFWb3RlIGluIGEgcG9sbC4gSWYgYHZvdGUuaXNfYXllKClgLCB0aGUgdm90ZSBpcyB0byBlbmFjdCB0aGUgcHJvcG9zYWw7uG90aGVyd2lzZSBpdCBpcyBhIHZvdGUgdG8ga2VlcCB0aGUgc3RhdHVzIHF1by4AyFRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uAMgtIGBwb2xsX2luZGV4YDogVGhlIGluZGV4IG9mIHRoZSBwb2xsIHRvIHZvdGUgZm9yLoQtIGB2b3RlYDogVGhlIHZvdGUgY29uZmlndXJhdGlvbi4AFQFXZWlnaHQ6IGBPKFIpYCB3aGVyZSBSIGlzIHRoZSBudW1iZXIgb2YgcG9sbHMgdGhlIHZvdGVyIGhhcyB2b3RlZCBvbi4gZGVsZWdhdGUQARRjbGFzc50BATRDbGFzc09mPFQsIEk+AAEIdG/5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AAShjb252aWN0aW9umQIBKENvbnZpY3Rpb24AARxiYWxhbmNlGAE8QmFsYW5jZU9mPFQsIEk+AAFcTQFEZWxlZ2F0ZSB0aGUgdm90aW5nIHBvd2VyICh3aXRoIHNvbWUgZ2l2ZW4gY29udmljdGlvbikgb2YgdGhlIHNlbmRpbmcgYWNjb3VudCBmb3IgYWhwYXJ0aWN1bGFyIGNsYXNzIG9mIHBvbGxzLgBVAVRoZSBiYWxhbmNlIGRlbGVnYXRlZCBpcyBsb2NrZWQgZm9yIGFzIGxvbmcgYXMgaXQncyBkZWxlZ2F0ZWQsIGFuZCB0aGVyZWFmdGVyIGZvciB0aGXIdGltZSBhcHByb3ByaWF0ZSBmb3IgdGhlIGNvbnZpY3Rpb24ncyBsb2NrIHBlcmlvZC4AXQFUaGUgZGlzcGF0Y2ggb3JpZ2luIG9mIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLCBhbmQgdGhlIHNpZ25pbmcgYWNjb3VudCBtdXN0IGVpdGhlcjp0ICAtIGJlIGRlbGVnYXRpbmcgYWxyZWFkeTsgb3JFASAgLSBoYXZlIG5vIHZvdGluZyBhY3Rpdml0eSAoaWYgdGhlcmUgaXMsIHRoZW4gaXQgd2lsbCBuZWVkIHRvIGJlIHJlbW92ZWQgdGhyb3VnaEwgICAgYHJlbW92ZV92b3RlYCkuAEUBLSBgdG9gOiBUaGUgYWNjb3VudCB3aG9zZSB2b3RpbmcgdGhlIGB0YXJnZXRgIGFjY291bnQncyB2b3RpbmcgcG93ZXIgd2lsbCBmb2xsb3cuXQEtIGBjbGFzc2A6IFRoZSBjbGFzcyBvZiBwb2xscyB0byBkZWxlZ2F0ZS4gVG8gZGVsZWdhdGUgbXVsdGlwbGUgY2xhc3NlcywgbXVsdGlwbGUgY2FsbHOAICB0byB0aGlzIGZ1bmN0aW9uIGFyZSByZXF1aXJlZC5VAS0gYGNvbnZpY3Rpb25gOiBUaGUgY29udmljdGlvbiB0aGF0IHdpbGwgYmUgYXR0YWNoZWQgdG8gdGhlIGRlbGVnYXRlZCB2b3Rlcy4gV2hlbiB0aGVBASAgYWNjb3VudCBpcyB1bmRlbGVnYXRlZCwgdGhlIGZ1bmRzIHdpbGwgYmUgbG9ja2VkIGZvciB0aGUgY29ycmVzcG9uZGluZyBwZXJpb2QuYQEtIGBiYWxhbmNlYDogVGhlIGFtb3VudCBvZiB0aGUgYWNjb3VudCdzIGJhbGFuY2UgdG8gYmUgdXNlZCBpbiBkZWxlZ2F0aW5nLiBUaGlzIG11c3Qgbm90tCAgYmUgbW9yZSB0aGFuIHRoZSBhY2NvdW50J3MgY3VycmVudCBiYWxhbmNlLgBIRW1pdHMgYERlbGVnYXRlZGAuACUBV2VpZ2h0OiBgTyhSKWAgd2hlcmUgUiBpcyB0aGUgbnVtYmVyIG9mIHBvbGxzIHRoZSB2b3RlciBkZWxlZ2F0aW5nIHRvIGhhc00BICB2b3RlZCBvbi4gV2VpZ2h0IGlzIGluaXRpYWxseSBjaGFyZ2VkIGFzIGlmIG1heGltdW0gdm90ZXMsIGJ1dCBpcyByZWZ1bmRlZCBsYXRlci4odW5kZWxlZ2F0ZQQBFGNsYXNznQEBNENsYXNzT2Y8VCwgST4AAjhNAVVuZGVsZWdhdGUgdGhlIHZvdGluZyBwb3dlciBvZiB0aGUgc2VuZGluZyBhY2NvdW50IGZvciBhIHBhcnRpY3VsYXIgY2xhc3Mgb2YgcG9sbHMuAF0BVG9rZW5zIG1heSBiZSB1bmxvY2tlZCBmb2xsb3dpbmcgb25jZSBhbiBhbW91bnQgb2YgdGltZSBjb25zaXN0ZW50IHdpdGggdGhlIGxvY2sgcGVyaW9kCQFvZiB0aGUgY29udmljdGlvbiB3aXRoIHdoaWNoIHRoZSBkZWxlZ2F0aW9uIHdhcyBpc3N1ZWQgaGFzIHBhc3NlZC4ARQFUaGUgZGlzcGF0Y2ggb3JpZ2luIG9mIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCB0aGUgc2lnbmluZyBhY2NvdW50IG11c3QgYmVUY3VycmVudGx5IGRlbGVnYXRpbmcuAPAtIGBjbGFzc2A6IFRoZSBjbGFzcyBvZiBwb2xscyB0byByZW1vdmUgdGhlIGRlbGVnYXRpb24gZnJvbS4AUEVtaXRzIGBVbmRlbGVnYXRlZGAuACUBV2VpZ2h0OiBgTyhSKWAgd2hlcmUgUiBpcyB0aGUgbnVtYmVyIG9mIHBvbGxzIHRoZSB2b3RlciBkZWxlZ2F0aW5nIHRvIGhhc00BICB2b3RlZCBvbi4gV2VpZ2h0IGlzIGluaXRpYWxseSBjaGFyZ2VkIGFzIGlmIG1heGltdW0gdm90ZXMsIGJ1dCBpcyByZWZ1bmRlZCBsYXRlci4YdW5sb2NrCAEUY2xhc3OdAQE0Q2xhc3NPZjxULCBJPgABGHRhcmdldPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgADJF0BUmVtb3ZlIHRoZSBsb2NrIGNhdXNlZCBieSBwcmlvciB2b3RpbmcvZGVsZWdhdGluZyB3aGljaCBoYXMgZXhwaXJlZCB3aXRoaW4gYSBwYXJ0aWN1bGFyGGNsYXNzLgDIVGhlIGRpc3BhdGNoIG9yaWdpbiBvZiB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AoC0gYGNsYXNzYDogVGhlIGNsYXNzIG9mIHBvbGxzIHRvIHVubG9jay64LSBgdGFyZ2V0YDogVGhlIGFjY291bnQgdG8gcmVtb3ZlIHRoZSBsb2NrIG9uLgC8V2VpZ2h0OiBgTyhSKWAgd2l0aCBSIG51bWJlciBvZiB2b3RlIG9mIHRhcmdldC4scmVtb3ZlX3ZvdGUIARRjbGFzc50CAVRPcHRpb248Q2xhc3NPZjxULCBJPj4AARRpbmRleBABRFBvbGxJbmRleE9mPFQsIEk+AAR0ZFJlbW92ZSBhIHZvdGUgZm9yIGEgcG9sbC4ADElmOnAtIHRoZSBwb2xsIHdhcyBjYW5jZWxsZWQsIG9yZC0gdGhlIHBvbGwgaXMgb25nb2luZywgb3J4LSB0aGUgcG9sbCBoYXMgZW5kZWQgc3VjaCB0aGF0/CAgLSB0aGUgdm90ZSBvZiB0aGUgYWNjb3VudCB3YXMgaW4gb3Bwb3NpdGlvbiB0byB0aGUgcmVzdWx0OyBvctQgIC0gdGhlcmUgd2FzIG5vIGNvbnZpY3Rpb24gdG8gdGhlIGFjY291bnQncyB2b3RlOyBvcoQgIC0gdGhlIGFjY291bnQgbWFkZSBhIHNwbGl0IHZvdGVdAS4uLnRoZW4gdGhlIHZvdGUgaXMgcmVtb3ZlZCBjbGVhbmx5IGFuZCBhIGZvbGxvd2luZyBjYWxsIHRvIGB1bmxvY2tgIG1heSByZXN1bHQgaW4gbW9yZVhmdW5kcyBiZWluZyBhdmFpbGFibGUuAJBJZiwgaG93ZXZlciwgdGhlIHBvbGwgaGFzIGVuZGVkIGFuZDrsLSBpdCBmaW5pc2hlZCBjb3JyZXNwb25kaW5nIHRvIHRoZSB2b3RlIG9mIHRoZSBhY2NvdW50LCBhbmTcLSB0aGUgYWNjb3VudCBtYWRlIGEgc3RhbmRhcmQgdm90ZSB3aXRoIGNvbnZpY3Rpb24sIGFuZLwtIHRoZSBsb2NrIHBlcmlvZCBvZiB0aGUgY29udmljdGlvbiBpcyBub3Qgb3ZlclkBLi4udGhlbiB0aGUgbG9jayB3aWxsIGJlIGFnZ3JlZ2F0ZWQgaW50byB0aGUgb3ZlcmFsbCBhY2NvdW50J3MgbG9jaywgd2hpY2ggbWF5IGludm9sdmVZASpvdmVybG9ja2luZyogKHdoZXJlIHRoZSB0d28gbG9ja3MgYXJlIGNvbWJpbmVkIGludG8gYSBzaW5nbGUgbG9jayB0aGF0IGlzIHRoZSBtYXhpbXVt5G9mIGJvdGggdGhlIGFtb3VudCBsb2NrZWQgYW5kIHRoZSB0aW1lIGlzIGl0IGxvY2tlZCBmb3IpLgBJAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8sIGFuZCB0aGUgc2lnbmVyIG11c3QgaGF2ZSBhIHZvdGVwcmVnaXN0ZXJlZCBmb3IgcG9sbCBgaW5kZXhgLgDcLSBgaW5kZXhgOiBUaGUgaW5kZXggb2YgcG9sbCBvZiB0aGUgdm90ZSB0byBiZSByZW1vdmVkLlUBLSBgY2xhc3NgOiBPcHRpb25hbCBwYXJhbWV0ZXIsIGlmIGdpdmVuIGl0IGluZGljYXRlcyB0aGUgY2xhc3Mgb2YgdGhlIHBvbGwuIEZvciBwb2xsc/AgIHdoaWNoIGhhdmUgZmluaXNoZWQgb3IgYXJlIGNhbmNlbGxlZCwgdGhpcyBtdXN0IGJlIGBTb21lYC4ARQFXZWlnaHQ6IGBPKFIgKyBsb2cgUilgIHdoZXJlIFIgaXMgdGhlIG51bWJlciBvZiBwb2xscyB0aGF0IGB0YXJnZXRgIGhhcyB2b3RlZCBvbi7YICBXZWlnaHQgaXMgY2FsY3VsYXRlZCBmb3IgdGhlIG1heGltdW0gbnVtYmVyIG9mIHZvdGUuRHJlbW92ZV9vdGhlcl92b3RlDAEYdGFyZ2V0+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEUY2xhc3OdAQE0Q2xhc3NPZjxULCBJPgABFGluZGV4EAFEUG9sbEluZGV4T2Y8VCwgST4ABUBkUmVtb3ZlIGEgdm90ZSBmb3IgYSBwb2xsLgBNAUlmIHRoZSBgdGFyZ2V0YCBpcyBlcXVhbCB0byB0aGUgc2lnbmVyLCB0aGVuIHRoaXMgZnVuY3Rpb24gaXMgZXhhY3RseSBlcXVpdmFsZW50IHRvLQFgcmVtb3ZlX3ZvdGVgLiBJZiBub3QgZXF1YWwgdG8gdGhlIHNpZ25lciwgdGhlbiB0aGUgdm90ZSBtdXN0IGhhdmUgZXhwaXJlZCwlAWVpdGhlciBiZWNhdXNlIHRoZSBwb2xsIHdhcyBjYW5jZWxsZWQsIGJlY2F1c2UgdGhlIHZvdGVyIGxvc3QgdGhlIHBvbGwgb3KYYmVjYXVzZSB0aGUgY29udmljdGlvbiBwZXJpb2QgaXMgb3Zlci4AyFRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uAGEBLSBgdGFyZ2V0YDogVGhlIGFjY291bnQgb2YgdGhlIHZvdGUgdG8gYmUgcmVtb3ZlZDsgdGhpcyBhY2NvdW50IG11c3QgaGF2ZSB2b3RlZCBmb3IgcG9sbCggIGBpbmRleGAu3C0gYGluZGV4YDogVGhlIGluZGV4IG9mIHBvbGwgb2YgdGhlIHZvdGUgdG8gYmUgcmVtb3ZlZC6ELSBgY2xhc3NgOiBUaGUgY2xhc3Mgb2YgdGhlIHBvbGwuAEUBV2VpZ2h0OiBgTyhSICsgbG9nIFIpYCB3aGVyZSBSIGlzIHRoZSBudW1iZXIgb2YgcG9sbHMgdGhhdCBgdGFyZ2V0YCBoYXMgdm90ZWQgb24u2CAgV2VpZ2h0IGlzIGNhbGN1bGF0ZWQgZm9yIHRoZSBtYXhpbXVtIG51bWJlciBvZiB2b3RlLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6ZAgxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nKGNvbnZpY3Rpb24oQ29udmljdGlvbgABHBBOb25lAAAAIExvY2tlZDF4AAEAIExvY2tlZDJ4AAIAIExvY2tlZDN4AAMAIExvY2tlZDR4AAQAIExvY2tlZDV4AAUAIExvY2tlZDZ4AAYAAJ0CBBhPcHRpb24EBFQBnQEBCBBOb25lAAAAEFNvbWUEAJ0BAAABAAChAgxAcGFsbGV0X3JlZmVyZW5kYRhwYWxsZXQQQ2FsbAgEVAAESQABJBhzdWJtaXQMATxwcm9wb3NhbF9vcmlnaW6lAgFcQm94PFBhbGxldHNPcmlnaW5PZjxUPj4AASBwcm9wb3NhbKUBAUxCb3VuZGVkQ2FsbE9mPFQsIEk+AAFAZW5hY3RtZW50X21vbWVudL0CAYhEaXNwYXRjaFRpbWU8QmxvY2tOdW1iZXJGb3I8VCwgST4+AAAksFByb3Bvc2UgYSByZWZlcmVuZHVtIG9uIGEgcHJpdmlsZWdlZCBhY3Rpb24uAFkBLSBgb3JpZ2luYDogbXVzdCBiZSBgU3VibWl0T3JpZ2luYCBhbmQgdGhlIGFjY291bnQgbXVzdCBoYXZlIGBTdWJtaXNzaW9uRGVwb3NpdGAgZnVuZHMwICBhdmFpbGFibGUuLQEtIGBwcm9wb3NhbF9vcmlnaW5gOiBUaGUgb3JpZ2luIGZyb20gd2hpY2ggdGhlIHByb3Bvc2FsIHNob3VsZCBiZSBleGVjdXRlZC5sLSBgcHJvcG9zYWxgOiBUaGUgcHJvcG9zYWwuFQEtIGBlbmFjdG1lbnRfbW9tZW50YDogVGhlIG1vbWVudCB0aGF0IHRoZSBwcm9wb3NhbCBzaG91bGQgYmUgZW5hY3RlZC4ASEVtaXRzIGBTdWJtaXR0ZWRgLlhwbGFjZV9kZWNpc2lvbl9kZXBvc2l0BAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgAASCsUG9zdCB0aGUgRGVjaXNpb24gRGVwb3NpdCBmb3IgYSByZWZlcmVuZHVtLgA5AS0gYG9yaWdpbmA6IG11c3QgYmUgYFNpZ25lZGAgYW5kIHRoZSBhY2NvdW50IG11c3QgaGF2ZSBmdW5kcyBhdmFpbGFibGUgZm9yIHRoZaAgIHJlZmVyZW5kdW0ncyB0cmFjaydzIERlY2lzaW9uIERlcG9zaXQuUQEtIGBpbmRleGA6IFRoZSBpbmRleCBvZiB0aGUgc3VibWl0dGVkIHJlZmVyZW5kdW0gd2hvc2UgRGVjaXNpb24gRGVwb3NpdCBpcyB5ZXQgdG8gYmUkICBwb3N0ZWQuAHhFbWl0cyBgRGVjaXNpb25EZXBvc2l0UGxhY2VkYC5ccmVmdW5kX2RlY2lzaW9uX2RlcG9zaXQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAACHCkBUmVmdW5kIHRoZSBEZWNpc2lvbiBEZXBvc2l0IGZvciBhIGNsb3NlZCByZWZlcmVuZHVtIGJhY2sgdG8gdGhlIGRlcG9zaXRvci4AnC0gYG9yaWdpbmA6IG11c3QgYmUgYFNpZ25lZGAgb3IgYFJvb3RgLk0BLSBgaW5kZXhgOiBUaGUgaW5kZXggb2YgYSBjbG9zZWQgcmVmZXJlbmR1bSB3aG9zZSBEZWNpc2lvbiBEZXBvc2l0IGhhcyBub3QgeWV0IGJlZW4sICByZWZ1bmRlZC4AgEVtaXRzIGBEZWNpc2lvbkRlcG9zaXRSZWZ1bmRlZGAuGGNhbmNlbAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAMYdENhbmNlbCBhbiBvbmdvaW5nIHJlZmVyZW5kdW0uAJwtIGBvcmlnaW5gOiBtdXN0IGJlIHRoZSBgQ2FuY2VsT3JpZ2luYC7cLSBgaW5kZXhgOiBUaGUgaW5kZXggb2YgdGhlIHJlZmVyZW5kdW0gdG8gYmUgY2FuY2VsbGVkLgBIRW1pdHMgYENhbmNlbGxlZGAuEGtpbGwEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAAEGNBDYW5jZWwgYW4gb25nb2luZyByZWZlcmVuZHVtIGFuZCBzbGFzaCB0aGUgZGVwb3NpdHMuAJQtIGBvcmlnaW5gOiBtdXN0IGJlIHRoZSBgS2lsbE9yaWdpbmAu3C0gYGluZGV4YDogVGhlIGluZGV4IG9mIHRoZSByZWZlcmVuZHVtIHRvIGJlIGNhbmNlbGxlZC4AkEVtaXRzIGBLaWxsZWRgIGFuZCBgRGVwb3NpdFNsYXNoZWRgLkBudWRnZV9yZWZlcmVuZHVtBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgABRAdAUFkdmFuY2UgYSByZWZlcmVuZHVtIG9udG8gaXRzIG5leHQgbG9naWNhbCBzdGF0ZS4gT25seSB1c2VkIGludGVybmFsbHkuAGwtIGBvcmlnaW5gOiBtdXN0IGJlIGBSb290YC6kLSBgaW5kZXhgOiB0aGUgcmVmZXJlbmR1bSB0byBiZSBhZHZhbmNlZC5Ib25lX2Zld2VyX2RlY2lkaW5nBAEUdHJhY2udAQE8VHJhY2tJZE9mPFQsIEk+AAYkCQFBZHZhbmNlIGEgdHJhY2sgb250byBpdHMgbmV4dCBsb2dpY2FsIHN0YXRlLiBPbmx5IHVzZWQgaW50ZXJuYWxseS4AbC0gYG9yaWdpbmA6IG11c3QgYmUgYFJvb3RgLpAtIGB0cmFja2A6IHRoZSB0cmFjayB0byBiZSBhZHZhbmNlZC4AUQFBY3Rpb24gaXRlbSBmb3Igd2hlbiB0aGVyZSBpcyBub3cgb25lIGZld2VyIHJlZmVyZW5kdW0gaW4gdGhlIGRlY2lkaW5nIHBoYXNlIGFuZCB0aGUVAWBEZWNpZGluZ0NvdW50YCBpcyBub3QgeWV0IHVwZGF0ZWQuIFRoaXMgbWVhbnMgdGhhdCB3ZSBzaG91bGQgZWl0aGVyOiUBLSBiZWdpbiBkZWNpZGluZyBhbm90aGVyIHJlZmVyZW5kdW0gKGFuZCBsZWF2ZSBgRGVjaWRpbmdDb3VudGAgYWxvbmUpOyBvcnAtIGRlY3JlbWVudCBgRGVjaWRpbmdDb3VudGAuZHJlZnVuZF9zdWJtaXNzaW9uX2RlcG9zaXQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAAHHDEBUmVmdW5kIHRoZSBTdWJtaXNzaW9uIERlcG9zaXQgZm9yIGEgY2xvc2VkIHJlZmVyZW5kdW0gYmFjayB0byB0aGUgZGVwb3NpdG9yLgCcLSBgb3JpZ2luYDogbXVzdCBiZSBgU2lnbmVkYCBvciBgUm9vdGAuVQEtIGBpbmRleGA6IFRoZSBpbmRleCBvZiBhIGNsb3NlZCByZWZlcmVuZHVtIHdob3NlIFN1Ym1pc3Npb24gRGVwb3NpdCBoYXMgbm90IHlldCBiZWVuLCAgcmVmdW5kZWQuAIhFbWl0cyBgU3VibWlzc2lvbkRlcG9zaXRSZWZ1bmRlZGAuMHNldF9tZXRhZGF0YQgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAEobWF5YmVfaGFzaMECATxPcHRpb248VDo6SGFzaD4ACByYU2V0IG9yIGNsZWFyIG1ldGFkYXRhIG9mIGEgcmVmZXJlbmR1bS4ALFBhcmFtZXRlcnM6RQEtIGBvcmlnaW5gOiBNdXN0IGJlIGBTaWduZWRgIGJ5IGEgY3JlYXRvciBvZiBhIHJlZmVyZW5kdW0gb3IgYnkgYW55b25lIHRvIGNsZWFyIGGQICBtZXRhZGF0YSBvZiBhIGZpbmlzaGVkIHJlZmVyZW5kdW0uDQEtIGBpbmRleGA6ICBUaGUgaW5kZXggb2YgYSByZWZlcmVuZHVtIHRvIHNldCBvciBjbGVhciBtZXRhZGF0YSBmb3IuUQEtIGBtYXliZV9oYXNoYDogVGhlIGhhc2ggb2YgYW4gb24tY2hhaW4gc3RvcmVkIHByZWltYWdlLiBgTm9uZWAgdG8gY2xlYXIgYSBtZXRhZGF0YS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMupQIINHBhc2VvX3J1bnRpbWUwT3JpZ2luQ2FsbGVyAAEQGHN5c3RlbQQAqQIBdGZyYW1lX3N5c3RlbTo6T3JpZ2luPFJ1bnRpbWU+AAAAHE9yaWdpbnMEAK0CAXRwYWxsZXRfY3VzdG9tX29yaWdpbnM6Ok9yaWdpbgAWAEBQYXJhY2hhaW5zT3JpZ2luBACxAgFkcGFyYWNoYWluc19vcmlnaW46Ok9yaWdpbgAyACRYY21QYWxsZXQEALkCAUhwYWxsZXRfeGNtOjpPcmlnaW4AYwAAqQIMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2gkUmF3T3JpZ2luBCRBY2NvdW50SWQBAAEQEFJvb3QAAAAYU2lnbmVkBAAAASRBY2NvdW50SWQAAQAQTm9uZQACAChBdXRob3JpemVkAAMAAK0CFDRwYXNlb19ydW50aW1lKGdvdmVybmFuY2Ucb3JpZ2luc1RwYWxsZXRfY3VzdG9tX29yaWdpbnMYT3JpZ2luAAE4MFN0YWtpbmdBZG1pbgAAACRUcmVhc3VyZXIAAQAwR2VuZXJhbEFkbWluAAIAMEF1Y3Rpb25BZG1pbgADAChMZWFzZUFkbWluAAQATFJlZmVyZW5kdW1DYW5jZWxsZXIABQBAUmVmZXJlbmR1bUtpbGxlcgAGACxTbWFsbFRpcHBlcgAHACRCaWdUaXBwZXIACAAwU21hbGxTcGVuZGVyAAkANE1lZGl1bVNwZW5kZXIACgAoQmlnU3BlbmRlcgALAERXaGl0ZWxpc3RlZENhbGxlcgAMADRXaXNoRm9yQ2hhbmdlAA0AALECEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMYb3JpZ2luGHBhbGxldBhPcmlnaW4AAQQkUGFyYWNoYWluBAC1AgEYUGFyYUlkAAAAALUCDHRwb2xrYWRvdF9wYXJhY2hhaW5fcHJpbWl0aXZlcyhwcmltaXRpdmVzCElkAAAEABABDHUzMgAAuQIMKHBhbGxldF94Y20YcGFsbGV0GE9yaWdpbgABCAxYY20EAFUBASBMb2NhdGlvbgAAACBSZXNwb25zZQQAVQEBIExvY2F0aW9uAAEAAL0CEDRmcmFtZV9zdXBwb3J0GHRyYWl0cyBzY2hlZHVsZTBEaXNwYXRjaFRpbWUELEJsb2NrTnVtYmVyARABCAhBdAQAEAEsQmxvY2tOdW1iZXIAAAAUQWZ0ZXIEABABLEJsb2NrTnVtYmVyAAEAAMECBBhPcHRpb24EBFQBNAEIEE5vbmUAAAAQU29tZQQANAAAAQAAxQIMQHBhbGxldF93aGl0ZWxpc3QYcGFsbGV0EENhbGwEBFQAARA4d2hpdGVsaXN0X2NhbGwEASRjYWxsX2hhc2g0ARxUOjpIYXNoAAAAXHJlbW92ZV93aGl0ZWxpc3RlZF9jYWxsBAEkY2FsbF9oYXNoNAEcVDo6SGFzaAABAGRkaXNwYXRjaF93aGl0ZWxpc3RlZF9jYWxsDAEkY2FsbF9oYXNoNAEcVDo6SGFzaAABQGNhbGxfZW5jb2RlZF9sZW4QAQx1MzIAAUxjYWxsX3dlaWdodF93aXRuZXNzKAEYV2VpZ2h0AAIAnGRpc3BhdGNoX3doaXRlbGlzdGVkX2NhbGxfd2l0aF9wcmVpbWFnZQQBEGNhbGypAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgADAAQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7JAhBccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zGHBhbGxldBBDYWxsBARUAAEUFGNsYWltCAEQZGVzdAABMFQ6OkFjY291bnRJZAABSGV0aGVyZXVtX3NpZ25hdHVyZc0CAThFY2RzYVNpZ25hdHVyZQAAYIhNYWtlIGEgY2xhaW0gdG8gY29sbGVjdCB5b3VyIERPVHMuAMRUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfTm9uZV8uAFBVbnNpZ25lZCBWYWxpZGF0aW9uOgUBQSBjYWxsIHRvIGNsYWltIGlzIGRlZW1lZCB2YWxpZCBpZiB0aGUgc2lnbmF0dXJlIHByb3ZpZGVkIG1hdGNoZXN8dGhlIGV4cGVjdGVkIHNpZ25lZCBtZXNzYWdlIG9mOgBoPiBFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTqUPiAoY29uZmlndXJlZCBwcmVmaXggc3RyaW5nKShhZGRyZXNzKQCkYW5kIGBhZGRyZXNzYCBtYXRjaGVzIHRoZSBgZGVzdGAgYWNjb3VudC4ALFBhcmFtZXRlcnM62C0gYGRlc3RgOiBUaGUgZGVzdGluYXRpb24gYWNjb3VudCB0byBwYXlvdXQgdGhlIGNsYWltLl0BLSBgZXRoZXJldW1fc2lnbmF0dXJlYDogVGhlIHNpZ25hdHVyZSBvZiBhbiBldGhlcmV1bSBzaWduZWQgbWVzc2FnZSBtYXRjaGluZyB0aGUgZm9ybWF0SCAgZGVzY3JpYmVkIGFib3ZlLgAgPHdlaWdodD78VGhlIHdlaWdodCBvZiB0aGlzIGNhbGwgaXMgaW52YXJpYW50IG92ZXIgdGhlIGlucHV0IHBhcmFtZXRlcnMu4FdlaWdodCBpbmNsdWRlcyBsb2dpYyB0byB2YWxpZGF0ZSB1bnNpZ25lZCBgY2xhaW1gIGNhbGwuAFhUb3RhbCBDb21wbGV4aXR5OiBPKDEpJDwvd2VpZ2h0PihtaW50X2NsYWltEAEMd2hv1QIBPEV0aGVyZXVtQWRkcmVzcwABFHZhbHVlGAEwQmFsYW5jZU9mPFQ+AAFAdmVzdGluZ19zY2hlZHVsZdkCAdxPcHRpb248KEJhbGFuY2VPZjxUPiwgQmFsYW5jZU9mPFQ+LCBCbG9ja051bWJlckZvcjxUPik+AAEkc3RhdGVtZW504QIBVE9wdGlvbjxTdGF0ZW1lbnRLaW5kPgABPIRNaW50IGEgbmV3IGNsYWltIHRvIGNvbGxlY3QgRE9Ucy4AxFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9Sb290Xy4ALFBhcmFtZXRlcnM68C0gYHdob2A6IFRoZSBFdGhlcmV1bSBhZGRyZXNzIGFsbG93ZWQgdG8gY29sbGVjdCB0aGlzIGNsYWltLswtIGB2YWx1ZWA6IFRoZSBudW1iZXIgb2YgRE9UcyB0aGF0IHdpbGwgYmUgY2xhaW1lZC4JAS0gYHZlc3Rpbmdfc2NoZWR1bGVgOiBBbiBvcHRpb25hbCB2ZXN0aW5nIHNjaGVkdWxlIGZvciB0aGVzZSBET1RzLgAgPHdlaWdodD78VGhlIHdlaWdodCBvZiB0aGlzIGNhbGwgaXMgaW52YXJpYW50IG92ZXIgdGhlIGlucHV0IHBhcmFtZXRlcnMuHQFXZSBhc3N1bWUgd29yc3QgY2FzZSB0aGF0IGJvdGggdmVzdGluZyBhbmQgc3RhdGVtZW50IGlzIGJlaW5nIGluc2VydGVkLgBYVG90YWwgQ29tcGxleGl0eTogTygxKSQ8L3dlaWdodD4wY2xhaW1fYXR0ZXN0DAEQZGVzdAABMFQ6OkFjY291bnRJZAABSGV0aGVyZXVtX3NpZ25hdHVyZc0CAThFY2RzYVNpZ25hdHVyZQABJHN0YXRlbWVudDgBHFZlYzx1OD4AAmzkTWFrZSBhIGNsYWltIHRvIGNvbGxlY3QgeW91ciBET1RzIGJ5IHNpZ25pbmcgYSBzdGF0ZW1lbnQuAMRUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfTm9uZV8uAFBVbnNpZ25lZCBWYWxpZGF0aW9uOikBQSBjYWxsIHRvIGBjbGFpbV9hdHRlc3RgIGlzIGRlZW1lZCB2YWxpZCBpZiB0aGUgc2lnbmF0dXJlIHByb3ZpZGVkIG1hdGNoZXN8dGhlIGV4cGVjdGVkIHNpZ25lZCBtZXNzYWdlIG9mOgBoPiBFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTrAPiAoY29uZmlndXJlZCBwcmVmaXggc3RyaW5nKShhZGRyZXNzKShzdGF0ZW1lbnQpAEkBYW5kIGBhZGRyZXNzYCBtYXRjaGVzIHRoZSBgZGVzdGAgYWNjb3VudDsgdGhlIGBzdGF0ZW1lbnRgIG11c3QgbWF0Y2ggdGhhdCB3aGljaCBpc8BleHBlY3RlZCBhY2NvcmRpbmcgdG8geW91ciBwdXJjaGFzZSBhcnJhbmdlbWVudC4ALFBhcmFtZXRlcnM62C0gYGRlc3RgOiBUaGUgZGVzdGluYXRpb24gYWNjb3VudCB0byBwYXlvdXQgdGhlIGNsYWltLl0BLSBgZXRoZXJldW1fc2lnbmF0dXJlYDogVGhlIHNpZ25hdHVyZSBvZiBhbiBldGhlcmV1bSBzaWduZWQgbWVzc2FnZSBtYXRjaGluZyB0aGUgZm9ybWF0SCAgZGVzY3JpYmVkIGFib3ZlLjkBLSBgc3RhdGVtZW50YDogVGhlIGlkZW50aXR5IG9mIHRoZSBzdGF0ZW1lbnQgd2hpY2ggaXMgYmVpbmcgYXR0ZXN0ZWQgdG8gaW4gdGhlMCAgc2lnbmF0dXJlLgAgPHdlaWdodD78VGhlIHdlaWdodCBvZiB0aGlzIGNhbGwgaXMgaW52YXJpYW50IG92ZXIgdGhlIGlucHV0IHBhcmFtZXRlcnMu/FdlaWdodCBpbmNsdWRlcyBsb2dpYyB0byB2YWxpZGF0ZSB1bnNpZ25lZCBgY2xhaW1fYXR0ZXN0YCBjYWxsLgBYVG90YWwgQ29tcGxleGl0eTogTygxKSQ8L3dlaWdodD4YYXR0ZXN0BAEkc3RhdGVtZW50OAEcVmVjPHU4PgADTPRBdHRlc3QgdG8gYSBzdGF0ZW1lbnQsIG5lZWRlZCB0byBmaW5hbGl6ZSB0aGUgY2xhaW1zIHByb2Nlc3MuABkBV0FSTklORzogSW5zZWN1cmUgdW5sZXNzIHlvdXIgY2hhaW4gaW5jbHVkZXMgYFByZXZhbGlkYXRlQXR0ZXN0c2AgYXMgYVxgVHJhbnNhY3Rpb25FeHRlbnNpb25gLgBQVW5zaWduZWQgVmFsaWRhdGlvbjopAUEgY2FsbCB0byBhdHRlc3QgaXMgZGVlbWVkIHZhbGlkIGlmIHRoZSBzZW5kZXIgaGFzIGEgYFByZWNsYWltYCByZWdpc3RlcmVk9GFuZCBwcm92aWRlcyBhIGBzdGF0ZW1lbnRgIHdoaWNoIGlzIGV4cGVjdGVkIGZvciB0aGUgYWNjb3VudC4ALFBhcmFtZXRlcnM6OQEtIGBzdGF0ZW1lbnRgOiBUaGUgaWRlbnRpdHkgb2YgdGhlIHN0YXRlbWVudCB3aGljaCBpcyBiZWluZyBhdHRlc3RlZCB0byBpbiB0aGUwICBzaWduYXR1cmUuACA8d2VpZ2h0PvxUaGUgd2VpZ2h0IG9mIHRoaXMgY2FsbCBpcyBpbnZhcmlhbnQgb3ZlciB0aGUgaW5wdXQgcGFyYW1ldGVycy7wV2VpZ2h0IGluY2x1ZGVzIGxvZ2ljIHRvIGRvIHByZS12YWxpZGF0aW9uIG9uIGBhdHRlc3RgIGNhbGwuAFhUb3RhbCBDb21wbGV4aXR5OiBPKDEpJDwvd2VpZ2h0Pihtb3ZlX2NsYWltDAEMb2xk1QIBPEV0aGVyZXVtQWRkcmVzcwABDG5ld9UCATxFdGhlcmV1bUFkZHJlc3MAAThtYXliZV9wcmVjbGFpbTECAVBPcHRpb248VDo6QWNjb3VudElkPgAEAAQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7NAgxccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zOEVjZHNhU2lnbmF0dXJlAAAEANECASBbdTg7IDY1XQAA0QIAAANBAAAACADVAgxccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zPEV0aGVyZXVtQWRkcmVzcwAABAAJAQEgW3U4OyAyMF0AANkCBBhPcHRpb24EBFQB3QIBCBBOb25lAAAAEFNvbWUEAN0CAAABAADdAgAABAwYGBAA4QIEGE9wdGlvbgQEVAHlAgEIEE5vbmUAAAAQU29tZQQA5QIAAAEAAOUCDFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhhjbGFpbXM0U3RhdGVtZW50S2luZAABCBxSZWd1bGFyAAAAEFNhZnQAAQAA6QIMOHBhbGxldF92ZXN0aW5nGHBhbGxldBBDYWxsBARUAAEYEHZlc3QAACS4VW5sb2NrIGFueSB2ZXN0ZWQgZnVuZHMgb2YgdGhlIHNlbmRlciBhY2NvdW50LgBdAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCB0aGUgc2VuZGVyIG11c3QgaGF2ZSBmdW5kcyBzdGlsbGRsb2NrZWQgdW5kZXIgdGhpcyBwYWxsZXQuANBFbWl0cyBlaXRoZXIgYFZlc3RpbmdDb21wbGV0ZWRgIG9yIGBWZXN0aW5nVXBkYXRlZGAuADQjIyBDb21wbGV4aXR5JC0gYE8oMSlgLih2ZXN0X290aGVyBAEYdGFyZ2V0+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEsuFVubG9jayBhbnkgdmVzdGVkIGZ1bmRzIG9mIGEgYHRhcmdldGAgYWNjb3VudC4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgBRAS0gYHRhcmdldGA6IFRoZSBhY2NvdW50IHdob3NlIHZlc3RlZCBmdW5kcyBzaG91bGQgYmUgdW5sb2NrZWQuIE11c3QgaGF2ZSBmdW5kcyBzdGlsbGRsb2NrZWQgdW5kZXIgdGhpcyBwYWxsZXQuANBFbWl0cyBlaXRoZXIgYFZlc3RpbmdDb21wbGV0ZWRgIG9yIGBWZXN0aW5nVXBkYXRlZGAuADQjIyBDb21wbGV4aXR5JC0gYE8oMSlgLjx2ZXN0ZWRfdHJhbnNmZXIIARh0YXJnZXT5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASBzY2hlZHVsZe0CAbBWZXN0aW5nSW5mbzxCYWxhbmNlT2Y8VD4sIEJsb2NrTnVtYmVyRm9yPFQ+PgACNGRDcmVhdGUgYSB2ZXN0ZWQgdHJhbnNmZXIuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AzC0gYHRhcmdldGA6IFRoZSBhY2NvdW50IHJlY2VpdmluZyB0aGUgdmVzdGVkIGZ1bmRzLvAtIGBzY2hlZHVsZWA6IFRoZSB2ZXN0aW5nIHNjaGVkdWxlIGF0dGFjaGVkIHRvIHRoZSB0cmFuc2Zlci4AXEVtaXRzIGBWZXN0aW5nQ3JlYXRlZGAuAPxOT1RFOiBUaGlzIHdpbGwgdW5sb2NrIGFsbCBzY2hlZHVsZXMgdGhyb3VnaCB0aGUgY3VycmVudCBibG9jay4ANCMjIENvbXBsZXhpdHkkLSBgTygxKWAuVGZvcmNlX3Zlc3RlZF90cmFuc2ZlcgwBGHNvdXJjZfkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABGHRhcmdldPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABIHNjaGVkdWxl7QIBsFZlc3RpbmdJbmZvPEJhbGFuY2VPZjxUPiwgQmxvY2tOdW1iZXJGb3I8VD4+AAM4YEZvcmNlIGEgdmVzdGVkIHRyYW5zZmVyLgDEVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1Jvb3RfLgDoLSBgc291cmNlYDogVGhlIGFjY291bnQgd2hvc2UgZnVuZHMgc2hvdWxkIGJlIHRyYW5zZmVycmVkLhEBLSBgdGFyZ2V0YDogVGhlIGFjY291bnQgdGhhdCBzaG91bGQgYmUgdHJhbnNmZXJyZWQgdGhlIHZlc3RlZCBmdW5kcy7wLSBgc2NoZWR1bGVgOiBUaGUgdmVzdGluZyBzY2hlZHVsZSBhdHRhY2hlZCB0byB0aGUgdHJhbnNmZXIuAFxFbWl0cyBgVmVzdGluZ0NyZWF0ZWRgLgD8Tk9URTogVGhpcyB3aWxsIHVubG9jayBhbGwgc2NoZWR1bGVzIHRocm91Z2ggdGhlIGN1cnJlbnQgYmxvY2suADQjIyBDb21wbGV4aXR5JC0gYE8oMSlgLjxtZXJnZV9zY2hlZHVsZXMIATxzY2hlZHVsZTFfaW5kZXgQAQx1MzIAATxzY2hlZHVsZTJfaW5kZXgQAQx1MzIABFRdAU1lcmdlIHR3byB2ZXN0aW5nIHNjaGVkdWxlcyB0b2dldGhlciwgY3JlYXRpbmcgYSBuZXcgdmVzdGluZyBzY2hlZHVsZSB0aGF0IHVubG9ja3Mgb3ZlclUBdGhlIGhpZ2hlc3QgcG9zc2libGUgc3RhcnQgYW5kIGVuZCBibG9ja3MuIElmIGJvdGggc2NoZWR1bGVzIGhhdmUgYWxyZWFkeSBzdGFydGVkIHRoZVkBY3VycmVudCBibG9jayB3aWxsIGJlIHVzZWQgYXMgdGhlIHNjaGVkdWxlIHN0YXJ0OyB3aXRoIHRoZSBjYXZlYXQgdGhhdCBpZiBvbmUgc2NoZWR1bGVdAWlzIGZpbmlzaGVkIGJ5IHRoZSBjdXJyZW50IGJsb2NrLCB0aGUgb3RoZXIgd2lsbCBiZSB0cmVhdGVkIGFzIHRoZSBuZXcgbWVyZ2VkIHNjaGVkdWxlLCx1bm1vZGlmaWVkLgD4Tk9URTogSWYgYHNjaGVkdWxlMV9pbmRleCA9PSBzY2hlZHVsZTJfaW5kZXhgIHRoaXMgaXMgYSBuby1vcC5BAU5PVEU6IFRoaXMgd2lsbCB1bmxvY2sgYWxsIHNjaGVkdWxlcyB0aHJvdWdoIHRoZSBjdXJyZW50IGJsb2NrIHByaW9yIHRvIG1lcmdpbmcuYQFOT1RFOiBJZiBib3RoIHNjaGVkdWxlcyBoYXZlIGVuZGVkIGJ5IHRoZSBjdXJyZW50IGJsb2NrLCBubyBuZXcgc2NoZWR1bGUgd2lsbCBiZSBjcmVhdGVkZGFuZCBib3RoIHdpbGwgYmUgcmVtb3ZlZC4AbE1lcmdlZCBzY2hlZHVsZSBhdHRyaWJ1dGVzOjUBLSBgc3RhcnRpbmdfYmxvY2tgOiBgTUFYKHNjaGVkdWxlMS5zdGFydGluZ19ibG9jaywgc2NoZWR1bGVkMi5zdGFydGluZ19ibG9jayxIICBjdXJyZW50X2Jsb2NrKWAuIQEtIGBlbmRpbmdfYmxvY2tgOiBgTUFYKHNjaGVkdWxlMS5lbmRpbmdfYmxvY2ssIHNjaGVkdWxlMi5lbmRpbmdfYmxvY2spYC5ZAS0gYGxvY2tlZGA6IGBzY2hlZHVsZTEubG9ja2VkX2F0KGN1cnJlbnRfYmxvY2spICsgc2NoZWR1bGUyLmxvY2tlZF9hdChjdXJyZW50X2Jsb2NrKWAuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4A6C0gYHNjaGVkdWxlMV9pbmRleGA6IGluZGV4IG9mIHRoZSBmaXJzdCBzY2hlZHVsZSB0byBtZXJnZS7sLSBgc2NoZWR1bGUyX2luZGV4YDogaW5kZXggb2YgdGhlIHNlY29uZCBzY2hlZHVsZSB0byBtZXJnZS50Zm9yY2VfcmVtb3ZlX3Zlc3Rpbmdfc2NoZWR1bGUIARh0YXJnZXT5AQGMPFQ6Okxvb2t1cCBhcyBTdGF0aWNMb29rdXA+OjpTb3VyY2UAAThzY2hlZHVsZV9pbmRleBABDHUzMgAFGHxGb3JjZSByZW1vdmUgYSB2ZXN0aW5nIHNjaGVkdWxlAMRUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfUm9vdF8uAMgtIGB0YXJnZXRgOiBBbiBhY2NvdW50IHRoYXQgaGFzIGEgdmVzdGluZyBzY2hlZHVsZRUBLSBgc2NoZWR1bGVfaW5kZXhgOiBUaGUgdmVzdGluZyBzY2hlZHVsZSBpbmRleCB0aGF0IHNob3VsZCBiZSByZW1vdmVkBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLu0CDDhwYWxsZXRfdmVzdGluZzB2ZXN0aW5nX2luZm8sVmVzdGluZ0luZm8IHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQAAwBGGxvY2tlZBgBHEJhbGFuY2UAASRwZXJfYmxvY2sYARxCYWxhbmNlAAE4c3RhcnRpbmdfYmxvY2sQASxCbG9ja051bWJlcgAA8QIMOHBhbGxldF91dGlsaXR5GHBhbGxldBBDYWxsBARUAAEgFGJhdGNoBAEUY2FsbHP1AgF8VmVjPDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgAASHxTZW5kIGEgYmF0Y2ggb2YgZGlzcGF0Y2ggY2FsbHMuALBNYXkgYmUgY2FsbGVkIGZyb20gYW55IG9yaWdpbiBleGNlcHQgYE5vbmVgLgBdAS0gYGNhbGxzYDogVGhlIGNhbGxzIHRvIGJlIGRpc3BhdGNoZWQgZnJvbSB0aGUgc2FtZSBvcmlnaW4uIFRoZSBudW1iZXIgb2YgY2FsbCBtdXN0IG5vdDkBICBleGNlZWQgdGhlIGNvbnN0YW50OiBgYmF0Y2hlZF9jYWxsc19saW1pdGAgKGF2YWlsYWJsZSBpbiBjb25zdGFudCBtZXRhZGF0YSkuAFUBSWYgb3JpZ2luIGlzIHJvb3QgdGhlbiB0aGUgY2FsbHMgYXJlIGRpc3BhdGNoZWQgd2l0aG91dCBjaGVja2luZyBvcmlnaW4gZmlsdGVyLiAoVGhpc+xpbmNsdWRlcyBieXBhc3NpbmcgYGZyYW1lX3N5c3RlbTo6Q29uZmlnOjpCYXNlQ2FsbEZpbHRlcmApLgA0IyMgQ29tcGxleGl0edAtIE8oQykgd2hlcmUgQyBpcyB0aGUgbnVtYmVyIG9mIGNhbGxzIHRvIGJlIGJhdGNoZWQuAFUBVGhpcyB3aWxsIHJldHVybiBgT2tgIGluIGFsbCBjaXJjdW1zdGFuY2VzLiBUbyBkZXRlcm1pbmUgdGhlIHN1Y2Nlc3Mgb2YgdGhlIGJhdGNoLCBhbjEBZXZlbnQgaXMgZGVwb3NpdGVkLiBJZiBhIGNhbGwgZmFpbGVkIGFuZCB0aGUgYmF0Y2ggd2FzIGludGVycnVwdGVkLCB0aGVuIHRoZVUBYEJhdGNoSW50ZXJydXB0ZWRgIGV2ZW50IGlzIGRlcG9zaXRlZCwgYWxvbmcgd2l0aCB0aGUgbnVtYmVyIG9mIHN1Y2Nlc3NmdWwgY2FsbHMgbWFkZU0BYW5kIHRoZSBlcnJvciBvZiB0aGUgZmFpbGVkIGNhbGwuIElmIGFsbCB3ZXJlIHN1Y2Nlc3NmdWwsIHRoZW4gdGhlIGBCYXRjaENvbXBsZXRlZGBMZXZlbnQgaXMgZGVwb3NpdGVkLjRhc19kZXJpdmF0aXZlCAEUaW5kZXidAQEMdTE2AAEQY2FsbKkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAE03FNlbmQgYSBjYWxsIHRocm91Z2ggYW4gaW5kZXhlZCBwc2V1ZG9ueW0gb2YgdGhlIHNlbmRlci4AVQFGaWx0ZXIgZnJvbSBvcmlnaW4gYXJlIHBhc3NlZCBhbG9uZy4gVGhlIGNhbGwgd2lsbCBiZSBkaXNwYXRjaGVkIHdpdGggYW4gb3JpZ2luIHdoaWNovHVzZSB0aGUgc2FtZSBmaWx0ZXIgYXMgdGhlIG9yaWdpbiBvZiB0aGlzIGNhbGwuAEUBTk9URTogSWYgeW91IG5lZWQgdG8gZW5zdXJlIHRoYXQgYW55IGFjY291bnQtYmFzZWQgZmlsdGVyaW5nIGlzIG5vdCBob25vcmVkIChpLmUuYQFiZWNhdXNlIHlvdSBleHBlY3QgYHByb3h5YCB0byBoYXZlIGJlZW4gdXNlZCBwcmlvciBpbiB0aGUgY2FsbCBzdGFjayBhbmQgeW91IGRvIG5vdCB3YW50UQF0aGUgY2FsbCByZXN0cmljdGlvbnMgdG8gYXBwbHkgdG8gYW55IHN1Yi1hY2NvdW50cyksIHRoZW4gdXNlIGBhc19tdWx0aV90aHJlc2hvbGRfMWB8aW4gdGhlIE11bHRpc2lnIHBhbGxldCBpbnN0ZWFkLgD0Tk9URTogUHJpb3IgdG8gdmVyc2lvbiAqMTIsIHRoaXMgd2FzIGNhbGxlZCBgYXNfbGltaXRlZF9zdWJgLgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uJGJhdGNoX2FsbAQBFGNhbGxz9QIBfFZlYzw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAjTsU2VuZCBhIGJhdGNoIG9mIGRpc3BhdGNoIGNhbGxzIGFuZCBhdG9taWNhbGx5IGV4ZWN1dGUgdGhlbS4hAVRoZSB3aG9sZSB0cmFuc2FjdGlvbiB3aWxsIHJvbGxiYWNrIGFuZCBmYWlsIGlmIGFueSBvZiB0aGUgY2FsbHMgZmFpbGVkLgCwTWF5IGJlIGNhbGxlZCBmcm9tIGFueSBvcmlnaW4gZXhjZXB0IGBOb25lYC4AXQEtIGBjYWxsc2A6IFRoZSBjYWxscyB0byBiZSBkaXNwYXRjaGVkIGZyb20gdGhlIHNhbWUgb3JpZ2luLiBUaGUgbnVtYmVyIG9mIGNhbGwgbXVzdCBub3Q5ASAgZXhjZWVkIHRoZSBjb25zdGFudDogYGJhdGNoZWRfY2FsbHNfbGltaXRgIChhdmFpbGFibGUgaW4gY29uc3RhbnQgbWV0YWRhdGEpLgBVAUlmIG9yaWdpbiBpcyByb290IHRoZW4gdGhlIGNhbGxzIGFyZSBkaXNwYXRjaGVkIHdpdGhvdXQgY2hlY2tpbmcgb3JpZ2luIGZpbHRlci4gKFRoaXPsaW5jbHVkZXMgYnlwYXNzaW5nIGBmcmFtZV9zeXN0ZW06OkNvbmZpZzo6QmFzZUNhbGxGaWx0ZXJgKS4ANCMjIENvbXBsZXhpdHnQLSBPKEMpIHdoZXJlIEMgaXMgdGhlIG51bWJlciBvZiBjYWxscyB0byBiZSBiYXRjaGVkLixkaXNwYXRjaF9hcwgBJGFzX29yaWdpbqUCAVRCb3g8VDo6UGFsbGV0c09yaWdpbj4AARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAxjIRGlzcGF0Y2hlcyBhIGZ1bmN0aW9uIGNhbGwgd2l0aCBhIHByb3ZpZGVkIG9yaWdpbi4AxFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9Sb290Xy4ANCMjIENvbXBsZXhpdHkcLSBPKDEpLixmb3JjZV9iYXRjaAQBFGNhbGxz9QIBfFZlYzw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ABDR8U2VuZCBhIGJhdGNoIG9mIGRpc3BhdGNoIGNhbGxzLtRVbmxpa2UgYGJhdGNoYCwgaXQgYWxsb3dzIGVycm9ycyBhbmQgd29uJ3QgaW50ZXJydXB0LgCwTWF5IGJlIGNhbGxlZCBmcm9tIGFueSBvcmlnaW4gZXhjZXB0IGBOb25lYC4AXQEtIGBjYWxsc2A6IFRoZSBjYWxscyB0byBiZSBkaXNwYXRjaGVkIGZyb20gdGhlIHNhbWUgb3JpZ2luLiBUaGUgbnVtYmVyIG9mIGNhbGwgbXVzdCBub3Q5ASAgZXhjZWVkIHRoZSBjb25zdGFudDogYGJhdGNoZWRfY2FsbHNfbGltaXRgIChhdmFpbGFibGUgaW4gY29uc3RhbnQgbWV0YWRhdGEpLgBNAUlmIG9yaWdpbiBpcyByb290IHRoZW4gdGhlIGNhbGxzIGFyZSBkaXNwYXRjaCB3aXRob3V0IGNoZWNraW5nIG9yaWdpbiBmaWx0ZXIuIChUaGlz7GluY2x1ZGVzIGJ5cGFzc2luZyBgZnJhbWVfc3lzdGVtOjpDb25maWc6OkJhc2VDYWxsRmlsdGVyYCkuADQjIyBDb21wbGV4aXR50C0gTyhDKSB3aGVyZSBDIGlzIHRoZSBudW1iZXIgb2YgY2FsbHMgdG8gYmUgYmF0Y2hlZC4sd2l0aF93ZWlnaHQIARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AARh3ZWlnaHQoARhXZWlnaHQABRjERGlzcGF0Y2ggYSBmdW5jdGlvbiBjYWxsIHdpdGggYSBzcGVjaWZpZWQgd2VpZ2h0LgAtAVRoaXMgZnVuY3Rpb24gZG9lcyBub3QgY2hlY2sgdGhlIHdlaWdodCBvZiB0aGUgY2FsbCwgYW5kIGluc3RlYWQgYWxsb3dzIHRoZbhSb290IG9yaWdpbiB0byBzcGVjaWZ5IHRoZSB3ZWlnaHQgb2YgdGhlIGNhbGwuAMRUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfUm9vdF8uHGlmX2Vsc2UIARBtYWluqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AASBmYWxsYmFja6kBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAZcFQFEaXNwYXRjaCBhIGZhbGxiYWNrIGNhbGwgaW4gdGhlIGV2ZW50IHRoZSBtYWluIGNhbGwgZmFpbHMgdG8gZXhlY3V0ZS6wTWF5IGJlIGNhbGxlZCBmcm9tIGFueSBvcmlnaW4gZXhjZXB0IGBOb25lYC4A5FRoaXMgZnVuY3Rpb24gZmlyc3QgYXR0ZW1wdHMgdG8gZGlzcGF0Y2ggdGhlIGBtYWluYCBjYWxsLtRJZiB0aGUgYG1haW5gIGNhbGwgZmFpbHMsIHRoZSBgZmFsbGJhY2tgIGlzIGF0dGVtdGVkLhUBaWYgdGhlIGZhbGxiYWNrIGlzIHN1Y2Nlc3NmdWxseSBkaXNwYXRjaGVkLCB0aGUgd2VpZ2h0cyBvZiBib3RoIGNhbGxzJQFhcmUgYWNjdW11bGF0ZWQgYW5kIGFuIGV2ZW50IGNvbnRhaW5pbmcgdGhlIG1haW4gY2FsbCBlcnJvciBpcyBkZXBvc2l0ZWQuANxJbiB0aGUgZXZlbnQgb2YgYSBmYWxsYmFjayBmYWlsdXJlIHRoZSB3aG9sZSBjYWxsIGZhaWxzaHdpdGggdGhlIHdlaWdodHMgcmV0dXJuZWQuAEEBLSBgbWFpbmA6IFRoZSBtYWluIGNhbGwgdG8gYmUgZGlzcGF0Y2hlZC4gVGhpcyBpcyB0aGUgcHJpbWFyeSBhY3Rpb24gdG8gZXhlY3V0ZS49AS0gYGZhbGxiYWNrYDogVGhlIGZhbGxiYWNrIGNhbGwgdG8gYmUgZGlzcGF0Y2hlZCBpbiBjYXNlIHRoZSBgbWFpbmAgY2FsbCBmYWlscy4ARCMjIERpc3BhdGNoIExvZ2ljQQEtIElmIHRoZSBvcmlnaW4gaXMgYHJvb3RgLCBib3RoIHRoZSBtYWluIGFuZCBmYWxsYmFjayBjYWxscyBhcmUgZXhlY3V0ZWQgd2l0aG91dHggIGFwcGx5aW5nIGFueSBvcmlnaW4gZmlsdGVycy5JAS0gSWYgdGhlIG9yaWdpbiBpcyBub3QgYHJvb3RgLCB0aGUgb3JpZ2luIGZpbHRlciBpcyBhcHBsaWVkIHRvIGJvdGggdGhlIGBtYWluYCBhbmRMICBgZmFsbGJhY2tgIGNhbGxzLgAsIyMgVXNlIENhc2VZAS0gU29tZSB1c2UgY2FzZXMgbWlnaHQgaW52b2x2ZSBzdWJtaXR0aW5nIGEgYGJhdGNoYCB0eXBlIGNhbGwgaW4gZWl0aGVyIG1haW4sIGZhbGxiYWNrKCAgb3IgYm90aC5QZGlzcGF0Y2hfYXNfZmFsbGlibGUIASRhc19vcmlnaW6lAgFUQm94PFQ6OlBhbGxldHNPcmlnaW4+AAEQY2FsbKkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAcUyERpc3BhdGNoZXMgYSBmdW5jdGlvbiBjYWxsIHdpdGggYSBwcm92aWRlZCBvcmlnaW4uAFEBQWxtb3N0IHRoZSBzYW1lIGFzIFtgUGFsbGV0OjpkaXNwYXRjaF9hc2BdIGJ1dCBmb3J3YXJkcyBhbnkgZXJyb3Igb2YgdGhlIGlubmVyIGNhbGwuAMRUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfUm9vdF8uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLvUCAAACqQEA+QIMMHBhbGxldF9wcm94eRhwYWxsZXQQQ2FsbAQEVAABLBRwcm94eQwBEHJlYWz5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AAUBmb3JjZV9wcm94eV90eXBl/QIBUE9wdGlvbjxUOjpQcm94eVR5cGU+AAEQY2FsbKkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAAkTQFEaXNwYXRjaCB0aGUgZ2l2ZW4gYGNhbGxgIGZyb20gYW4gYWNjb3VudCB0aGF0IHRoZSBzZW5kZXIgaXMgYXV0aG9yaXNlZCBmb3IgdGhyb3VnaDBgYWRkX3Byb3h5YC4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgAsUGFyYW1ldGVyczoNAS0gYHJlYWxgOiBUaGUgYWNjb3VudCB0aGF0IHRoZSBwcm94eSB3aWxsIG1ha2UgYSBjYWxsIG9uIGJlaGFsZiBvZi5hAS0gYGZvcmNlX3Byb3h5X3R5cGVgOiBTcGVjaWZ5IHRoZSBleGFjdCBwcm94eSB0eXBlIHRvIGJlIHVzZWQgYW5kIGNoZWNrZWQgZm9yIHRoaXMgY2FsbC7QLSBgY2FsbGA6IFRoZSBjYWxsIHRvIGJlIG1hZGUgYnkgdGhlIGByZWFsYCBhY2NvdW50LiRhZGRfcHJveHkMASBkZWxlZ2F0ZfkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGUBAwEwVDo6UHJveHlUeXBlAAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgABJEUBUmVnaXN0ZXIgYSBwcm94eSBhY2NvdW50IGZvciB0aGUgc2VuZGVyIHRoYXQgaXMgYWJsZSB0byBtYWtlIGNhbGxzIG9uIGl0cyBiZWhhbGYuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4ALFBhcmFtZXRlcnM6EQEtIGBwcm94eWA6IFRoZSBhY2NvdW50IHRoYXQgdGhlIGBjYWxsZXJgIHdvdWxkIGxpa2UgdG8gbWFrZSBhIHByb3h5LvwtIGBwcm94eV90eXBlYDogVGhlIHBlcm1pc3Npb25zIGFsbG93ZWQgZm9yIHRoaXMgcHJveHkgYWNjb3VudC5NAS0gYGRlbGF5YDogVGhlIGFubm91bmNlbWVudCBwZXJpb2QgcmVxdWlyZWQgb2YgdGhlIGluaXRpYWwgcHJveHkuIFdpbGwgZ2VuZXJhbGx5IGJlFHplcm8uMHJlbW92ZV9wcm94eQwBIGRlbGVnYXRl+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEocHJveHlfdHlwZQEDATBUOjpQcm94eVR5cGUAARRkZWxheRABREJsb2NrTnVtYmVyRm9yPFQ+AAIcqFVucmVnaXN0ZXIgYSBwcm94eSBhY2NvdW50IGZvciB0aGUgc2VuZGVyLgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uACxQYXJhbWV0ZXJzOiUBLSBgcHJveHlgOiBUaGUgYWNjb3VudCB0aGF0IHRoZSBgY2FsbGVyYCB3b3VsZCBsaWtlIHRvIHJlbW92ZSBhcyBhIHByb3h5LkEBLSBgcHJveHlfdHlwZWA6IFRoZSBwZXJtaXNzaW9ucyBjdXJyZW50bHkgZW5hYmxlZCBmb3IgdGhlIHJlbW92ZWQgcHJveHkgYWNjb3VudC44cmVtb3ZlX3Byb3hpZXMAAxi0VW5yZWdpc3RlciBhbGwgcHJveHkgYWNjb3VudHMgZm9yIHRoZSBzZW5kZXIuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AXQFXQVJOSU5HOiBUaGlzIG1heSBiZSBjYWxsZWQgb24gYWNjb3VudHMgY3JlYXRlZCBieSBgY3JlYXRlX3B1cmVgLCBob3dldmVyIGlmIGRvbmUsIHRoZW5ZAXRoZSB1bnJlc2VydmVkIGZlZXMgd2lsbCBiZSBpbmFjY2Vzc2libGUuICoqQWxsIGFjY2VzcyB0byB0aGlzIGFjY291bnQgd2lsbCBiZSBsb3N0LioqLGNyZWF0ZV9wdXJlDAEocHJveHlfdHlwZQEDATBUOjpQcm94eVR5cGUAARRkZWxheRABREJsb2NrTnVtYmVyRm9yPFQ+AAEUaW5kZXidAQEMdTE2AARIOQFTcGF3biBhIGZyZXNoIG5ldyBhY2NvdW50IHRoYXQgaXMgZ3VhcmFudGVlZCB0byBiZSBvdGhlcndpc2UgaW5hY2Nlc3NpYmxlLCBhbmT8aW5pdGlhbGl6ZSBpdCB3aXRoIGEgcHJveHkgb2YgYHByb3h5X3R5cGVgIGZvciBgb3JpZ2luYCBzZW5kZXIuAGxSZXF1aXJlcyBhIGBTaWduZWRgIG9yaWdpbi4AUQEtIGBwcm94eV90eXBlYDogVGhlIHR5cGUgb2YgdGhlIHByb3h5IHRoYXQgdGhlIHNlbmRlciB3aWxsIGJlIHJlZ2lzdGVyZWQgYXMgb3ZlciB0aGVNAW5ldyBhY2NvdW50LiBUaGlzIHdpbGwgYWxtb3N0IGFsd2F5cyBiZSB0aGUgbW9zdCBwZXJtaXNzaXZlIGBQcm94eVR5cGVgIHBvc3NpYmxlIHRveGFsbG93IGZvciBtYXhpbXVtIGZsZXhpYmlsaXR5LlEBLSBgaW5kZXhgOiBBIGRpc2FtYmlndWF0aW9uIGluZGV4LCBpbiBjYXNlIHRoaXMgaXMgY2FsbGVkIG11bHRpcGxlIHRpbWVzIGluIHRoZSBzYW1lXQF0cmFuc2FjdGlvbiAoZS5nLiB3aXRoIGB1dGlsaXR5OjpiYXRjaGApLiBVbmxlc3MgeW91J3JlIHVzaW5nIGBiYXRjaGAgeW91IHByb2JhYmx5IGp1c3RAd2FudCB0byB1c2UgYDBgLk0BLSBgZGVsYXlgOiBUaGUgYW5ub3VuY2VtZW50IHBlcmlvZCByZXF1aXJlZCBvZiB0aGUgaW5pdGlhbCBwcm94eS4gV2lsbCBnZW5lcmFsbHkgYmUUemVyby4AUQFGYWlscyB3aXRoIGBEdXBsaWNhdGVgIGlmIHRoaXMgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQgaW4gdGhpcyB0cmFuc2FjdGlvbiwgZnJvbSB0aGWYc2FtZSBzZW5kZXIsIHdpdGggdGhlIHNhbWUgcGFyYW1ldGVycy4A5EZhaWxzIGlmIHRoZXJlIGFyZSBpbnN1ZmZpY2llbnQgZnVuZHMgdG8gcGF5IGZvciBkZXBvc2l0LiRraWxsX3B1cmUUARxzcGF3bmVy+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEocHJveHlfdHlwZQEDATBUOjpQcm94eVR5cGUAARRpbmRleJ0BAQx1MTYAARhoZWlnaHT8AURCbG9ja051bWJlckZvcjxUPgABJGV4dF9pbmRlePwBDHUzMgAFQKBSZW1vdmVzIGEgcHJldmlvdXNseSBzcGF3bmVkIHB1cmUgcHJveHkuAEkBV0FSTklORzogKipBbGwgYWNjZXNzIHRvIHRoaXMgYWNjb3VudCB3aWxsIGJlIGxvc3QuKiogQW55IGZ1bmRzIGhlbGQgaW4gaXQgd2lsbCBiZTRpbmFjY2Vzc2libGUuAFkBUmVxdWlyZXMgYSBgU2lnbmVkYCBvcmlnaW4sIGFuZCB0aGUgc2VuZGVyIGFjY291bnQgbXVzdCBoYXZlIGJlZW4gY3JlYXRlZCBieSBhIGNhbGwgdG+wYGNyZWF0ZV9wdXJlYCB3aXRoIGNvcnJlc3BvbmRpbmcgcGFyYW1ldGVycy4AVQEtIGBzcGF3bmVyYDogVGhlIGFjY291bnQgdGhhdCBvcmlnaW5hbGx5IGNhbGxlZCBgY3JlYXRlX3B1cmVgIHRvIGNyZWF0ZSB0aGlzIGFjY291bnQuVQEtIGBpbmRleGA6IFRoZSBkaXNhbWJpZ3VhdGlvbiBpbmRleCBvcmlnaW5hbGx5IHBhc3NlZCB0byBgY3JlYXRlX3B1cmVgLiBQcm9iYWJseSBgMGAuCQEtIGBwcm94eV90eXBlYDogVGhlIHByb3h5IHR5cGUgb3JpZ2luYWxseSBwYXNzZWQgdG8gYGNyZWF0ZV9wdXJlYC5FAS0gYGhlaWdodGA6IFRoZSBoZWlnaHQgb2YgdGhlIGNoYWluIHdoZW4gdGhlIGNhbGwgdG8gYGNyZWF0ZV9wdXJlYCB3YXMgcHJvY2Vzc2VkLlEBLSBgZXh0X2luZGV4YDogVGhlIGV4dHJpbnNpYyBpbmRleCBpbiB3aGljaCB0aGUgY2FsbCB0byBgY3JlYXRlX3B1cmVgIHdhcyBwcm9jZXNzZWQuADUBRmFpbHMgd2l0aCBgTm9QZXJtaXNzaW9uYCBpbiBjYXNlIHRoZSBjYWxsZXIgaXMgbm90IGEgcHJldmlvdXNseSBjcmVhdGVkIHB1cmX4YWNjb3VudCB3aG9zZSBgY3JlYXRlX3B1cmVgIGNhbGwgaGFzIGNvcnJlc3BvbmRpbmcgcGFyYW1ldGVycy4gYW5ub3VuY2UIARByZWFs+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkY2FsbF9oYXNoNAE0Q2FsbEhhc2hPZjxUPgAGPAUBUHVibGlzaCB0aGUgaGFzaCBvZiBhIHByb3h5LWNhbGwgdGhhdCB3aWxsIGJlIG1hZGUgaW4gdGhlIGZ1dHVyZS4AXQFUaGlzIG11c3QgYmUgY2FsbGVkIHNvbWUgbnVtYmVyIG9mIGJsb2NrcyBiZWZvcmUgdGhlIGNvcnJlc3BvbmRpbmcgYHByb3h5YCBpcyBhdHRlbXB0ZWQlAWlmIHRoZSBkZWxheSBhc3NvY2lhdGVkIHdpdGggdGhlIHByb3h5IHJlbGF0aW9uc2hpcCBpcyBncmVhdGVyIHRoYW4gemVyby4AEQFObyBtb3JlIHRoYW4gYE1heFBlbmRpbmdgIGFubm91bmNlbWVudHMgbWF5IGJlIG1hZGUgYXQgYW55IG9uZSB0aW1lLgAJAVRoaXMgd2lsbCB0YWtlIGEgZGVwb3NpdCBvZiBgQW5ub3VuY2VtZW50RGVwb3NpdEZhY3RvcmAgYXMgd2VsbCBhcxkBYEFubm91bmNlbWVudERlcG9zaXRCYXNlYCBpZiB0aGVyZSBhcmUgbm8gb3RoZXIgcGVuZGluZyBhbm5vdW5jZW1lbnRzLgAlAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCBhIHByb3h5IG9mIGByZWFsYC4ALFBhcmFtZXRlcnM6DQEtIGByZWFsYDogVGhlIGFjY291bnQgdGhhdCB0aGUgcHJveHkgd2lsbCBtYWtlIGEgY2FsbCBvbiBiZWhhbGYgb2YuFQEtIGBjYWxsX2hhc2hgOiBUaGUgaGFzaCBvZiB0aGUgY2FsbCB0byBiZSBtYWRlIGJ5IHRoZSBgcmVhbGAgYWNjb3VudC5McmVtb3ZlX2Fubm91bmNlbWVudAgBEHJlYWz5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASRjYWxsX2hhc2g0ATRDYWxsSGFzaE9mPFQ+AAcocFJlbW92ZSBhIGdpdmVuIGFubm91bmNlbWVudC4AWQFNYXkgYmUgY2FsbGVkIGJ5IGEgcHJveHkgYWNjb3VudCB0byByZW1vdmUgYSBjYWxsIHRoZXkgcHJldmlvdXNseSBhbm5vdW5jZWQgYW5kIHJldHVybjB0aGUgZGVwb3NpdC4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgAsUGFyYW1ldGVyczoNAS0gYHJlYWxgOiBUaGUgYWNjb3VudCB0aGF0IHRoZSBwcm94eSB3aWxsIG1ha2UgYSBjYWxsIG9uIGJlaGFsZiBvZi4VAS0gYGNhbGxfaGFzaGA6IFRoZSBoYXNoIG9mIHRoZSBjYWxsIHRvIGJlIG1hZGUgYnkgdGhlIGByZWFsYCBhY2NvdW50LkxyZWplY3RfYW5ub3VuY2VtZW50CAEgZGVsZWdhdGX5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASRjYWxsX2hhc2g0ATRDYWxsSGFzaE9mPFQ+AAgosFJlbW92ZSB0aGUgZ2l2ZW4gYW5ub3VuY2VtZW50IG9mIGEgZGVsZWdhdGUuAGEBTWF5IGJlIGNhbGxlZCBieSBhIHRhcmdldCAocHJveGllZCkgYWNjb3VudCB0byByZW1vdmUgYSBjYWxsIHRoYXQgb25lIG9mIHRoZWlyIGRlbGVnYXRlcyUBKGBkZWxlZ2F0ZWApIGhhcyBhbm5vdW5jZWQgdGhleSB3YW50IHRvIGV4ZWN1dGUuIFRoZSBkZXBvc2l0IGlzIHJldHVybmVkLgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uACxQYXJhbWV0ZXJzOvQtIGBkZWxlZ2F0ZWA6IFRoZSBhY2NvdW50IHRoYXQgcHJldmlvdXNseSBhbm5vdW5jZWQgdGhlIGNhbGwuvC0gYGNhbGxfaGFzaGA6IFRoZSBoYXNoIG9mIHRoZSBjYWxsIHRvIGJlIG1hZGUuPHByb3h5X2Fubm91bmNlZBABIGRlbGVnYXRl+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEQcmVhbPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABQGZvcmNlX3Byb3h5X3R5cGX9AgFQT3B0aW9uPFQ6OlByb3h5VHlwZT4AARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ACSxNAURpc3BhdGNoIHRoZSBnaXZlbiBgY2FsbGAgZnJvbSBhbiBhY2NvdW50IHRoYXQgdGhlIHNlbmRlciBpcyBhdXRob3JpemVkIGZvciB0aHJvdWdoMGBhZGRfcHJveHlgLgCoUmVtb3ZlcyBhbnkgY29ycmVzcG9uZGluZyBhbm5vdW5jZW1lbnQocykuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4ALFBhcmFtZXRlcnM6DQEtIGByZWFsYDogVGhlIGFjY291bnQgdGhhdCB0aGUgcHJveHkgd2lsbCBtYWtlIGEgY2FsbCBvbiBiZWhhbGYgb2YuYQEtIGBmb3JjZV9wcm94eV90eXBlYDogU3BlY2lmeSB0aGUgZXhhY3QgcHJveHkgdHlwZSB0byBiZSB1c2VkIGFuZCBjaGVja2VkIGZvciB0aGlzIGNhbGwu0C0gYGNhbGxgOiBUaGUgY2FsbCB0byBiZSBtYWRlIGJ5IHRoZSBgcmVhbGAgYWNjb3VudC4wcG9rZV9kZXBvc2l0AAogSQFQb2tlIC8gQWRqdXN0IGRlcG9zaXRzIG1hZGUgZm9yIHByb3hpZXMgYW5kIGFubm91bmNlbWVudHMgYmFzZWQgb24gY3VycmVudCB2YWx1ZXMuDQFUaGlzIGNhbiBiZSB1c2VkIGJ5IGFjY291bnRzIHRvIHBvc3NpYmx5IGxvd2VyIHRoZWlyIGxvY2tlZCBhbW91bnQuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AAQFUaGUgdHJhbnNhY3Rpb24gZmVlIGlzIHdhaXZlZCBpZiB0aGUgZGVwb3NpdCBhbW91bnQgaGFzIGNoYW5nZWQuAIxFbWl0cyBgRGVwb3NpdFBva2VkYCBpZiBzdWNjZXNzZnVsLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy79AgQYT3B0aW9uBARUAQEDAQgQTm9uZQAAABBTb21lBAABAwAAAQAAAQMMXHBhc2VvX3J1bnRpbWVfY29uc3RhbnRzFHByb3h5JFByb3h5VHlwZQABIAxBbnkAAAAsTm9uVHJhbnNmZXIAAQAoR292ZXJuYW5jZQACABxTdGFraW5nAAMALENhbmNlbFByb3h5AAYAHEF1Y3Rpb24ABwA8Tm9taW5hdGlvblBvb2xzAAgAQFBhcmFSZWdpc3RyYXRpb24ACQAABQMMPHBhbGxldF9tdWx0aXNpZxhwYWxsZXQQQ2FsbAQEVAABFFBhc19tdWx0aV90aHJlc2hvbGRfMQgBRG90aGVyX3NpZ25hdG9yaWVzBQIBRFZlYzxUOjpBY2NvdW50SWQ+AAEQY2FsbKkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAAwUQFJbW1lZGlhdGVseSBkaXNwYXRjaCBhIG11bHRpLXNpZ25hdHVyZSBjYWxsIHVzaW5nIGEgc2luZ2xlIGFwcHJvdmFsIGZyb20gdGhlIGNhbGxlci4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgA9AS0gYG90aGVyX3NpZ25hdG9yaWVzYDogVGhlIGFjY291bnRzIChvdGhlciB0aGFuIHRoZSBzZW5kZXIpIHdobyBhcmUgcGFydCBvZiB0aGUBAW11bHRpLXNpZ25hdHVyZSwgYnV0IGRvIG5vdCBwYXJ0aWNpcGF0ZSBpbiB0aGUgYXBwcm92YWwgcHJvY2Vzcy6ILSBgY2FsbGA6IFRoZSBjYWxsIHRvIGJlIGV4ZWN1dGVkLgC4UmVzdWx0IGlzIGVxdWl2YWxlbnQgdG8gdGhlIGRpc3BhdGNoZWQgcmVzdWx0LgA0IyMgQ29tcGxleGl0eRkBTyhaICsgQykgd2hlcmUgWiBpcyB0aGUgbGVuZ3RoIG9mIHRoZSBjYWxsIGFuZCBDIGl0cyBleGVjdXRpb24gd2VpZ2h0LiBhc19tdWx0aRQBJHRocmVzaG9sZJ0BAQx1MTYAAURvdGhlcl9zaWduYXRvcmllcwUCAURWZWM8VDo6QWNjb3VudElkPgABPG1heWJlX3RpbWVwb2ludAkDAZBPcHRpb248VGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+Pj4AARBjYWxsqQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAGcVQFSZWdpc3RlciBhcHByb3ZhbCBmb3IgYSBkaXNwYXRjaCB0byBiZSBtYWRlIGZyb20gYSBkZXRlcm1pbmlzdGljIGNvbXBvc2l0ZSBhY2NvdW50IGlm+GFwcHJvdmVkIGJ5IGEgdG90YWwgb2YgYHRocmVzaG9sZCAtIDFgIG9mIGBvdGhlcl9zaWduYXRvcmllc2AuALBJZiB0aGVyZSBhcmUgZW5vdWdoLCB0aGVuIGRpc3BhdGNoIHRoZSBjYWxsLgAtAVBheW1lbnQ6IGBEZXBvc2l0QmFzZWAgd2lsbCBiZSByZXNlcnZlZCBpZiB0aGlzIGlzIHRoZSBmaXJzdCBhcHByb3ZhbCwgcGx1cz0BYHRocmVzaG9sZGAgdGltZXMgYERlcG9zaXRGYWN0b3JgLiBJdCBpcyByZXR1cm5lZCBvbmNlIHRoaXMgZGlzcGF0Y2ggaGFwcGVucyBvcjRpcyBjYW5jZWxsZWQuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AVQEtIGB0aHJlc2hvbGRgOiBUaGUgdG90YWwgbnVtYmVyIG9mIGFwcHJvdmFscyBmb3IgdGhpcyBkaXNwYXRjaCBiZWZvcmUgaXQgaXMgZXhlY3V0ZWQuQQEtIGBvdGhlcl9zaWduYXRvcmllc2A6IFRoZSBhY2NvdW50cyAob3RoZXIgdGhhbiB0aGUgc2VuZGVyKSB3aG8gY2FuIGFwcHJvdmUgdGhpc2xkaXNwYXRjaC4gTWF5IG5vdCBiZSBlbXB0eS5ZAS0gYG1heWJlX3RpbWVwb2ludGA6IElmIHRoaXMgaXMgdGhlIGZpcnN0IGFwcHJvdmFsLCB0aGVuIHRoaXMgbXVzdCBiZSBgTm9uZWAuIElmIGl0IGlzUQFub3QgdGhlIGZpcnN0IGFwcHJvdmFsLCB0aGVuIGl0IG11c3QgYmUgYFNvbWVgLCB3aXRoIHRoZSB0aW1lcG9pbnQgKGJsb2NrIG51bWJlciBhbmTUdHJhbnNhY3Rpb24gaW5kZXgpIG9mIHRoZSBmaXJzdCBhcHByb3ZhbCB0cmFuc2FjdGlvbi6ILSBgY2FsbGA6IFRoZSBjYWxsIHRvIGJlIGV4ZWN1dGVkLgAdAU5PVEU6IFVubGVzcyB0aGlzIGlzIHRoZSBmaW5hbCBhcHByb3ZhbCwgeW91IHdpbGwgZ2VuZXJhbGx5IHdhbnQgdG8gdXNlGQFgYXBwcm92ZV9hc19tdWx0aWAgaW5zdGVhZCwgc2luY2UgaXQgb25seSByZXF1aXJlcyBhIGhhc2ggb2YgdGhlIGNhbGwuAFkBUmVzdWx0IGlzIGVxdWl2YWxlbnQgdG8gdGhlIGRpc3BhdGNoZWQgcmVzdWx0IGlmIGB0aHJlc2hvbGRgIGlzIGV4YWN0bHkgYDFgLiBPdGhlcndpc2VVAW9uIHN1Y2Nlc3MsIHJlc3VsdCBpcyBgT2tgIGFuZCB0aGUgcmVzdWx0IGZyb20gdGhlIGludGVyaW9yIGNhbGwsIGlmIGl0IHdhcyBleGVjdXRlZCzcbWF5IGJlIGZvdW5kIGluIHRoZSBkZXBvc2l0ZWQgYE11bHRpc2lnRXhlY3V0ZWRgIGV2ZW50LgA0IyMgQ29tcGxleGl0eVAtIGBPKFMgKyBaICsgQ2FsbClgLswtIFVwIHRvIG9uZSBiYWxhbmNlLXJlc2VydmUgb3IgdW5yZXNlcnZlIG9wZXJhdGlvbi49AS0gT25lIHBhc3N0aHJvdWdoIG9wZXJhdGlvbiwgb25lIGluc2VydCwgYm90aCBgTyhTKWAgd2hlcmUgYFNgIGlzIHRoZSBudW1iZXIgb2ZFASAgc2lnbmF0b3JpZXMuIGBTYCBpcyBjYXBwZWQgYnkgYE1heFNpZ25hdG9yaWVzYCwgd2l0aCB3ZWlnaHQgYmVpbmcgcHJvcG9ydGlvbmFsLiEBLSBPbmUgY2FsbCBlbmNvZGUgJiBoYXNoLCBib3RoIG9mIGNvbXBsZXhpdHkgYE8oWilgIHdoZXJlIGBaYCBpcyB0eC1sZW4uvC0gT25lIGVuY29kZSAmIGhhc2gsIGJvdGggb2YgY29tcGxleGl0eSBgTyhTKWAu1C0gVXAgdG8gb25lIGJpbmFyeSBzZWFyY2ggYW5kIGluc2VydCAoYE8obG9nUyArIFMpYCku+C0gSS9POiAxIHJlYWQgYE8oUylgLCB1cCB0byAxIG11dGF0ZSBgTyhTKWAuIFVwIHRvIG9uZSByZW1vdmUuMC0gT25lIGV2ZW50LmwtIFRoZSB3ZWlnaHQgb2YgdGhlIGBjYWxsYC5NAS0gU3RvcmFnZTogaW5zZXJ0cyBvbmUgaXRlbSwgdmFsdWUgc2l6ZSBib3VuZGVkIGJ5IGBNYXhTaWduYXRvcmllc2AsIHdpdGggYSBkZXBvc2l0GQEgIHRha2VuIGZvciBpdHMgbGlmZXRpbWUgb2YgYERlcG9zaXRCYXNlICsgdGhyZXNob2xkICogRGVwb3NpdEZhY3RvcmAuQGFwcHJvdmVfYXNfbXVsdGkUASR0aHJlc2hvbGSdAQEMdTE2AAFEb3RoZXJfc2lnbmF0b3JpZXMFAgFEVmVjPFQ6OkFjY291bnRJZD4AATxtYXliZV90aW1lcG9pbnQJAwGQT3B0aW9uPFRpbWVwb2ludDxCbG9ja051bWJlckZvcjxUPj4+AAEkY2FsbF9oYXNoBAEgW3U4OyAzMl0AAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAJ4VQFSZWdpc3RlciBhcHByb3ZhbCBmb3IgYSBkaXNwYXRjaCB0byBiZSBtYWRlIGZyb20gYSBkZXRlcm1pbmlzdGljIGNvbXBvc2l0ZSBhY2NvdW50IGlm+GFwcHJvdmVkIGJ5IGEgdG90YWwgb2YgYHRocmVzaG9sZCAtIDFgIG9mIGBvdGhlcl9zaWduYXRvcmllc2AuAC0BUGF5bWVudDogYERlcG9zaXRCYXNlYCB3aWxsIGJlIHJlc2VydmVkIGlmIHRoaXMgaXMgdGhlIGZpcnN0IGFwcHJvdmFsLCBwbHVzPQFgdGhyZXNob2xkYCB0aW1lcyBgRGVwb3NpdEZhY3RvcmAuIEl0IGlzIHJldHVybmVkIG9uY2UgdGhpcyBkaXNwYXRjaCBoYXBwZW5zIG9yNGlzIGNhbmNlbGxlZC4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgBVAS0gYHRocmVzaG9sZGA6IFRoZSB0b3RhbCBudW1iZXIgb2YgYXBwcm92YWxzIGZvciB0aGlzIGRpc3BhdGNoIGJlZm9yZSBpdCBpcyBleGVjdXRlZC5BAS0gYG90aGVyX3NpZ25hdG9yaWVzYDogVGhlIGFjY291bnRzIChvdGhlciB0aGFuIHRoZSBzZW5kZXIpIHdobyBjYW4gYXBwcm92ZSB0aGlzbGRpc3BhdGNoLiBNYXkgbm90IGJlIGVtcHR5LlkBLSBgbWF5YmVfdGltZXBvaW50YDogSWYgdGhpcyBpcyB0aGUgZmlyc3QgYXBwcm92YWwsIHRoZW4gdGhpcyBtdXN0IGJlIGBOb25lYC4gSWYgaXQgaXNRAW5vdCB0aGUgZmlyc3QgYXBwcm92YWwsIHRoZW4gaXQgbXVzdCBiZSBgU29tZWAsIHdpdGggdGhlIHRpbWVwb2ludCAoYmxvY2sgbnVtYmVyIGFuZNR0cmFuc2FjdGlvbiBpbmRleCkgb2YgdGhlIGZpcnN0IGFwcHJvdmFsIHRyYW5zYWN0aW9uLswtIGBjYWxsX2hhc2hgOiBUaGUgaGFzaCBvZiB0aGUgY2FsbCB0byBiZSBleGVjdXRlZC4ANQFOT1RFOiBJZiB0aGlzIGlzIHRoZSBmaW5hbCBhcHByb3ZhbCwgeW91IHdpbGwgd2FudCB0byB1c2UgYGFzX211bHRpYCBpbnN0ZWFkLgA0IyMgQ29tcGxleGl0eSQtIGBPKFMpYC7MLSBVcCB0byBvbmUgYmFsYW5jZS1yZXNlcnZlIG9yIHVucmVzZXJ2ZSBvcGVyYXRpb24uPQEtIE9uZSBwYXNzdGhyb3VnaCBvcGVyYXRpb24sIG9uZSBpbnNlcnQsIGJvdGggYE8oUylgIHdoZXJlIGBTYCBpcyB0aGUgbnVtYmVyIG9mRQEgIHNpZ25hdG9yaWVzLiBgU2AgaXMgY2FwcGVkIGJ5IGBNYXhTaWduYXRvcmllc2AsIHdpdGggd2VpZ2h0IGJlaW5nIHByb3BvcnRpb25hbC68LSBPbmUgZW5jb2RlICYgaGFzaCwgYm90aCBvZiBjb21wbGV4aXR5IGBPKFMpYC7ULSBVcCB0byBvbmUgYmluYXJ5IHNlYXJjaCBhbmQgaW5zZXJ0IChgTyhsb2dTICsgUylgKS74LSBJL086IDEgcmVhZCBgTyhTKWAsIHVwIHRvIDEgbXV0YXRlIGBPKFMpYC4gVXAgdG8gb25lIHJlbW92ZS4wLSBPbmUgZXZlbnQuTQEtIFN0b3JhZ2U6IGluc2VydHMgb25lIGl0ZW0sIHZhbHVlIHNpemUgYm91bmRlZCBieSBgTWF4U2lnbmF0b3JpZXNgLCB3aXRoIGEgZGVwb3NpdBkBICB0YWtlbiBmb3IgaXRzIGxpZmV0aW1lIG9mIGBEZXBvc2l0QmFzZSArIHRocmVzaG9sZCAqIERlcG9zaXRGYWN0b3JgLjxjYW5jZWxfYXNfbXVsdGkQASR0aHJlc2hvbGSdAQEMdTE2AAFEb3RoZXJfc2lnbmF0b3JpZXMFAgFEVmVjPFQ6OkFjY291bnRJZD4AASR0aW1lcG9pbnQNAwFwVGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+PgABJGNhbGxfaGFzaAQBIFt1ODsgMzJdAANUVQFDYW5jZWwgYSBwcmUtZXhpc3RpbmcsIG9uLWdvaW5nIG11bHRpc2lnIHRyYW5zYWN0aW9uLiBBbnkgZGVwb3NpdCByZXNlcnZlZCBwcmV2aW91c2x5xGZvciB0aGlzIG9wZXJhdGlvbiB3aWxsIGJlIHVucmVzZXJ2ZWQgb24gc3VjY2Vzcy4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgBVAS0gYHRocmVzaG9sZGA6IFRoZSB0b3RhbCBudW1iZXIgb2YgYXBwcm92YWxzIGZvciB0aGlzIGRpc3BhdGNoIGJlZm9yZSBpdCBpcyBleGVjdXRlZC5BAS0gYG90aGVyX3NpZ25hdG9yaWVzYDogVGhlIGFjY291bnRzIChvdGhlciB0aGFuIHRoZSBzZW5kZXIpIHdobyBjYW4gYXBwcm92ZSB0aGlzbGRpc3BhdGNoLiBNYXkgbm90IGJlIGVtcHR5Ll0BLSBgdGltZXBvaW50YDogVGhlIHRpbWVwb2ludCAoYmxvY2sgbnVtYmVyIGFuZCB0cmFuc2FjdGlvbiBpbmRleCkgb2YgdGhlIGZpcnN0IGFwcHJvdmFseHRyYW5zYWN0aW9uIGZvciB0aGlzIGRpc3BhdGNoLswtIGBjYWxsX2hhc2hgOiBUaGUgaGFzaCBvZiB0aGUgY2FsbCB0byBiZSBleGVjdXRlZC4ANCMjIENvbXBsZXhpdHkkLSBgTyhTKWAuzC0gVXAgdG8gb25lIGJhbGFuY2UtcmVzZXJ2ZSBvciB1bnJlc2VydmUgb3BlcmF0aW9uLj0BLSBPbmUgcGFzc3Rocm91Z2ggb3BlcmF0aW9uLCBvbmUgaW5zZXJ0LCBib3RoIGBPKFMpYCB3aGVyZSBgU2AgaXMgdGhlIG51bWJlciBvZkUBICBzaWduYXRvcmllcy4gYFNgIGlzIGNhcHBlZCBieSBgTWF4U2lnbmF0b3JpZXNgLCB3aXRoIHdlaWdodCBiZWluZyBwcm9wb3J0aW9uYWwuvC0gT25lIGVuY29kZSAmIGhhc2gsIGJvdGggb2YgY29tcGxleGl0eSBgTyhTKWAuMC0gT25lIGV2ZW50LoQtIEkvTzogMSByZWFkIGBPKFMpYCwgb25lIHJlbW92ZS5wLSBTdG9yYWdlOiByZW1vdmVzIG9uZSBpdGVtLjBwb2tlX2RlcG9zaXQMASR0aHJlc2hvbGSdAQEMdTE2AAFEb3RoZXJfc2lnbmF0b3JpZXMFAgFEVmVjPFQ6OkFjY291bnRJZD4AASRjYWxsX2hhc2gEASBbdTg7IDMyXQAENPRQb2tlIHRoZSBkZXBvc2l0IHJlc2VydmVkIGZvciBhbiBleGlzdGluZyBtdWx0aXNpZyBvcGVyYXRpb24uAGEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIG11c3QgYmUgdGhlIG9yaWdpbmFsIGRlcG9zaXRvciBvZlx0aGUgbXVsdGlzaWcgb3BlcmF0aW9uLgABAVRoZSB0cmFuc2FjdGlvbiBmZWUgaXMgd2FpdmVkIGlmIHRoZSBkZXBvc2l0IGFtb3VudCBoYXMgY2hhbmdlZC4AGQEtIGB0aHJlc2hvbGRgOiBUaGUgdG90YWwgbnVtYmVyIG9mIGFwcHJvdmFscyBuZWVkZWQgZm9yIHRoaXMgbXVsdGlzaWcuPQEtIGBvdGhlcl9zaWduYXRvcmllc2A6IFRoZSBhY2NvdW50cyAob3RoZXIgdGhhbiB0aGUgc2VuZGVyKSB3aG8gYXJlIHBhcnQgb2YgdGhlLCAgbXVsdGlzaWcuBQEtIGBjYWxsX2hhc2hgOiBUaGUgaGFzaCBvZiB0aGUgY2FsbCB0aGlzIGRlcG9zaXQgaXMgcmVzZXJ2ZWQgZm9yLgCMRW1pdHMgYERlcG9zaXRQb2tlZGAgaWYgc3VjY2Vzc2Z1bC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuCQMEGE9wdGlvbgQEVAENAwEIEE5vbmUAAAAQU29tZQQADQMAAAEAAA0DCDxwYWxsZXRfbXVsdGlzaWckVGltZXBvaW50BCxCbG9ja051bWJlcgEQAAgBGGhlaWdodBABLEJsb2NrTnVtYmVyAAEUaW5kZXgQAQx1MzIAABEDDDxwYWxsZXRfYm91bnRpZXMYcGFsbGV0EENhbGwIBFQABEkAASw4cHJvcG9zZV9ib3VudHkIARR2YWx1ZQ0BATxCYWxhbmNlT2Y8VCwgST4AASxkZXNjcmlwdGlvbjgBHFZlYzx1OD4AADBUUHJvcG9zZSBhIG5ldyBib3VudHkuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AUQFQYXltZW50OiBgVGlwUmVwb3J0RGVwb3NpdEJhc2VgIHdpbGwgYmUgcmVzZXJ2ZWQgZnJvbSB0aGUgb3JpZ2luIGFjY291bnQsIGFzIHdlbGwgYXNRAWBEYXRhRGVwb3NpdFBlckJ5dGVgIGZvciBlYWNoIGJ5dGUgaW4gYHJlYXNvbmAuIEl0IHdpbGwgYmUgdW5yZXNlcnZlZCB1cG9uIGFwcHJvdmFsLGRvciBzbGFzaGVkIHdoZW4gcmVqZWN0ZWQuAPgtIGBjdXJhdG9yYDogVGhlIGN1cmF0b3IgYWNjb3VudCB3aG9tIHdpbGwgbWFuYWdlIHRoaXMgYm91bnR5LmQtIGBmZWVgOiBUaGUgY3VyYXRvciBmZWUuJQEtIGB2YWx1ZWA6IFRoZSB0b3RhbCBwYXltZW50IGFtb3VudCBvZiB0aGlzIGJvdW50eSwgY3VyYXRvciBmZWUgaW5jbHVkZWQuwC0gYGRlc2NyaXB0aW9uYDogVGhlIGRlc2NyaXB0aW9uIG9mIHRoaXMgYm91bnR5LjhhcHByb3ZlX2JvdW50eQQBJGJvdW50eV9pZPwBLEJvdW50eUluZGV4AAEcXQFBcHByb3ZlIGEgYm91bnR5IHByb3Bvc2FsLiBBdCBhIGxhdGVyIHRpbWUsIHRoZSBib3VudHkgd2lsbCBiZSBmdW5kZWQgYW5kIGJlY29tZSBhY3RpdmWoYW5kIHRoZSBvcmlnaW5hbCBkZXBvc2l0IHdpbGwgYmUgcmV0dXJuZWQuAKRNYXkgb25seSBiZSBjYWxsZWQgZnJvbSBgVDo6U3BlbmRPcmlnaW5gLgA0IyMgQ29tcGxleGl0eRwtIE8oMSkuPHByb3Bvc2VfY3VyYXRvcgwBJGJvdW50eV9pZPwBLEJvdW50eUluZGV4AAEcY3VyYXRvcvkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABDGZlZQ0BATxCYWxhbmNlT2Y8VCwgST4AAhiUUHJvcG9zZSBhIGN1cmF0b3IgdG8gYSBmdW5kZWQgYm91bnR5LgCkTWF5IG9ubHkgYmUgY2FsbGVkIGZyb20gYFQ6OlNwZW5kT3JpZ2luYC4ANCMjIENvbXBsZXhpdHkcLSBPKDEpLkB1bmFzc2lnbl9jdXJhdG9yBAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAA0R8VW5hc3NpZ24gY3VyYXRvciBmcm9tIGEgYm91bnR5LgAdAVRoaXMgZnVuY3Rpb24gY2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBgUmVqZWN0T3JpZ2luYCBhIHNpZ25lZCBvcmlnaW4uAD0BSWYgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYnkgdGhlIGBSZWplY3RPcmlnaW5gLCB3ZSBhc3N1bWUgdGhhdCB0aGUgY3VyYXRvciBpczEBbWFsaWNpb3VzIG9yIGluYWN0aXZlLiBBcyBhIHJlc3VsdCwgd2Ugd2lsbCBzbGFzaCB0aGUgY3VyYXRvciB3aGVuIHBvc3NpYmxlLgBhAUlmIHRoZSBvcmlnaW4gaXMgdGhlIGN1cmF0b3IsIHdlIHRha2UgdGhpcyBhcyBhIHNpZ24gdGhleSBhcmUgdW5hYmxlIHRvIGRvIHRoZWlyIGpvYiBhbmRdAXRoZXkgd2lsbGluZ2x5IGdpdmUgdXAuIFdlIGNvdWxkIHNsYXNoIHRoZW0sIGJ1dCBmb3Igbm93IHdlIGFsbG93IHRoZW0gdG8gcmVjb3ZlciB0aGVpcjUBZGVwb3NpdCBhbmQgZXhpdCB3aXRob3V0IGlzc3VlLiAoV2UgbWF5IHdhbnQgdG8gY2hhbmdlIHRoaXMgaWYgaXQgaXMgYWJ1c2VkLikAXQFGaW5hbGx5LCB0aGUgb3JpZ2luIGNhbiBiZSBhbnlvbmUgaWYgYW5kIG9ubHkgaWYgdGhlIGN1cmF0b3IgaXMgImluYWN0aXZlIi4gVGhpcyBhbGxvd3NhAWFueW9uZSBpbiB0aGUgY29tbXVuaXR5IHRvIGNhbGwgb3V0IHRoYXQgYSBjdXJhdG9yIGlzIG5vdCBkb2luZyB0aGVpciBkdWUgZGlsaWdlbmNlLCBhbmQ5AXdlIHNob3VsZCBwaWNrIGEgbmV3IGN1cmF0b3IuIEluIHRoaXMgY2FzZSB0aGUgY3VyYXRvciBzaG91bGQgYWxzbyBiZSBzbGFzaGVkLgA0IyMgQ29tcGxleGl0eRwtIE8oMSkuOGFjY2VwdF9jdXJhdG9yBAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgABByUQWNjZXB0IHRoZSBjdXJhdG9yIHJvbGUgZm9yIGEgYm91bnR5LikBQSBkZXBvc2l0IHdpbGwgYmUgcmVzZXJ2ZWQgZnJvbSBjdXJhdG9yIGFuZCByZWZ1bmQgdXBvbiBzdWNjZXNzZnVsIHBheW91dC4AkE1heSBvbmx5IGJlIGNhbGxlZCBmcm9tIHRoZSBjdXJhdG9yLgA0IyMgQ29tcGxleGl0eRwtIE8oMSkuMGF3YXJkX2JvdW50eQgBJGJvdW50eV9pZPwBLEJvdW50eUluZGV4AAEsYmVuZWZpY2lhcnn5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4ABShZAUF3YXJkIGJvdW50eSB0byBhIGJlbmVmaWNpYXJ5IGFjY291bnQuIFRoZSBiZW5lZmljaWFyeSB3aWxsIGJlIGFibGUgdG8gY2xhaW0gdGhlIGZ1bmRzOGFmdGVyIGEgZGVsYXkuABUBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgdGhlIGN1cmF0b3Igb2YgdGhpcyBib3VudHkuAIgtIGBib3VudHlfaWRgOiBCb3VudHkgSUQgdG8gYXdhcmQuGQEtIGBiZW5lZmljaWFyeWA6IFRoZSBiZW5lZmljaWFyeSBhY2NvdW50IHdob20gd2lsbCByZWNlaXZlIHRoZSBwYXlvdXQuADQjIyBDb21wbGV4aXR5HC0gTygxKS4wY2xhaW1fYm91bnR5BAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgABiDsQ2xhaW0gdGhlIHBheW91dCBmcm9tIGFuIGF3YXJkZWQgYm91bnR5IGFmdGVyIHBheW91dCBkZWxheS4AJQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSB0aGUgYmVuZWZpY2lhcnkgb2YgdGhpcyBib3VudHkuAIgtIGBib3VudHlfaWRgOiBCb3VudHkgSUQgdG8gY2xhaW0uADQjIyBDb21wbGV4aXR5HC0gTygxKS4wY2xvc2VfYm91bnR5BAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAByQ5AUNhbmNlbCBhIHByb3Bvc2VkIG9yIGFjdGl2ZSBib3VudHkuIEFsbCB0aGUgZnVuZHMgd2lsbCBiZSBzZW50IHRvIHRyZWFzdXJ5IGFuZMx0aGUgY3VyYXRvciBkZXBvc2l0IHdpbGwgYmUgdW5yZXNlcnZlZCBpZiBwb3NzaWJsZS4AyE9ubHkgYFQ6OlJlamVjdE9yaWdpbmAgaXMgYWJsZSB0byBjYW5jZWwgYSBib3VudHkuAIwtIGBib3VudHlfaWRgOiBCb3VudHkgSUQgdG8gY2FuY2VsLgA0IyMgQ29tcGxleGl0eRwtIE8oMSkuUGV4dGVuZF9ib3VudHlfZXhwaXJ5CAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAARhyZW1hcms4ARxWZWM8dTg+AAgkrEV4dGVuZCB0aGUgZXhwaXJ5IHRpbWUgb2YgYW4gYWN0aXZlIGJvdW50eS4AFQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSB0aGUgY3VyYXRvciBvZiB0aGlzIGJvdW50eS4AjC0gYGJvdW50eV9pZGA6IEJvdW50eSBJRCB0byBleHRlbmQujC0gYHJlbWFya2A6IGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uADQjIyBDb21wbGV4aXR5HC0gTygxKS5sYXBwcm92ZV9ib3VudHlfd2l0aF9jdXJhdG9yDAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAARxjdXJhdG9y+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEMZmVlDQEBPEJhbGFuY2VPZjxULCBJPgAJLNRBcHByb3ZlIGJvdW50cnkgYW5kIHByb3Bvc2UgYSBjdXJhdG9yIHNpbXVsdGFuZW91c2x5LlUBVGhpcyBjYWxsIGlzIGEgc2hvcnRjdXQgdG8gY2FsbGluZyBgYXBwcm92ZV9ib3VudHlgIGFuZCBgcHJvcG9zZV9jdXJhdG9yYCBzZXBhcmF0ZWx5LgCkTWF5IG9ubHkgYmUgY2FsbGVkIGZyb20gYFQ6OlNwZW5kT3JpZ2luYC4AkC0gYGJvdW50eV9pZGA6IEJvdW50eSBJRCB0byBhcHByb3ZlLvgtIGBjdXJhdG9yYDogVGhlIGN1cmF0b3IgYWNjb3VudCB3aG9tIHdpbGwgbWFuYWdlIHRoaXMgYm91bnR5LmQtIGBmZWVgOiBUaGUgY3VyYXRvciBmZWUuADQjIyBDb21wbGV4aXR5HC0gTygxKS4wcG9rZV9kZXBvc2l0BAEkYm91bnR5X2lk/AEsQm91bnR5SW5kZXgACjzkUG9rZSB0aGUgZGVwb3NpdCByZXNlcnZlZCBmb3IgY3JlYXRpbmcgYSBib3VudHkgcHJvcG9zYWwuAPRUaGlzIGNhbiBiZSB1c2VkIGJ5IGFjY291bnRzIHRvIHVwZGF0ZSB0aGVpciByZXNlcnZlZCBhbW91bnQuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4ALFBhcmFtZXRlcnM69C0gYGJvdW50eV9pZGA6IFRoZSBib3VudHkgaWQgZm9yIHdoaWNoIHRvIGFkanVzdCB0aGUgZGVwb3NpdC4AOQFJZiB0aGUgZGVwb3NpdCBpcyB1cGRhdGVkLCB0aGUgZGlmZmVyZW5jZSB3aWxsIGJlIHJlc2VydmVkL3VucmVzZXJ2ZWQgZnJvbSB0aGVMcHJvcG9zZXIncyBhY2NvdW50LgApAVRoZSB0cmFuc2FjdGlvbiBpcyBtYWRlIGZyZWUgaWYgdGhlIGRlcG9zaXQgaXMgdXBkYXRlZCBhbmQgcGFpZCBvdGhlcndpc2UuALxFbWl0cyBgRGVwb3NpdFBva2VkYCBpZiB0aGUgZGVwb3NpdCBpcyB1cGRhdGVkLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy4VAwxUcGFsbGV0X2NoaWxkX2JvdW50aWVzGHBhbGxldBBDYWxsBARUAAEcQGFkZF9jaGlsZF9ib3VudHkMAUBwYXJlbnRfYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAARR2YWx1ZQ0BATBCYWxhbmNlT2Y8VD4AASxkZXNjcmlwdGlvbjgBHFZlYzx1OD4AAExcQWRkIGEgbmV3IGNoaWxkLWJvdW50eS4A/FRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIHRoZSBjdXJhdG9yIG9mIHBhcmVudNxib3VudHkgYW5kIHRoZSBwYXJlbnQgYm91bnR5IG11c3QgYmUgaW4gImFjdGl2ZSIgc3RhdGUuAAUBQ2hpbGQtYm91bnR5IGdldHMgYWRkZWQgc3VjY2Vzc2Z1bGx5ICYgZnVuZCBnZXRzIHRyYW5zZmVycmVkIGZyb20JAXBhcmVudCBib3VudHkgdG8gY2hpbGQtYm91bnR5IGFjY291bnQsIGlmIHBhcmVudCBib3VudHkgaGFzIGVub3VnaGxmdW5kcywgZWxzZSB0aGUgY2FsbCBmYWlscy4ADQFVcHBlciBib3VuZCB0byBtYXhpbXVtIG51bWJlciBvZiBhY3RpdmUgIGNoaWxkIGJvdW50aWVzIHRoYXQgY2FuIGJlqGFkZGVkIGFyZSBtYW5hZ2VkIHZpYSBydW50aW1lIHRyYWl0IGNvbmZpZ5hbYENvbmZpZzo6TWF4QWN0aXZlQ2hpbGRCb3VudHlDb3VudGBdLgABAUlmIHRoZSBjYWxsIGlzIHN1Y2Nlc3MsIHRoZSBzdGF0dXMgb2YgY2hpbGQtYm91bnR5IGlzIHVwZGF0ZWQgdG8gIkFkZGVkIi4ATQEtIGBwYXJlbnRfYm91bnR5X2lkYDogSW5kZXggb2YgcGFyZW50IGJvdW50eSBmb3Igd2hpY2ggY2hpbGQtYm91bnR5IGlzIGJlaW5nIGFkZGVkLrAtIGB2YWx1ZWA6IFZhbHVlIGZvciBleGVjdXRpbmcgdGhlIHByb3Bvc2FsLtwtIGBkZXNjcmlwdGlvbmA6IFRleHQgZGVzY3JpcHRpb24gZm9yIHRoZSBjaGlsZC1ib3VudHkuPHByb3Bvc2VfY3VyYXRvchABQHBhcmVudF9ib3VudHlfaWT8ASxCb3VudHlJbmRleAABPGNoaWxkX2JvdW50eV9pZPwBLEJvdW50eUluZGV4AAEcY3VyYXRvcvkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABDGZlZQ0BATBCYWxhbmNlT2Y8VD4AATygUHJvcG9zZSBjdXJhdG9yIGZvciBmdW5kZWQgY2hpbGQtYm91bnR5LgANAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIGN1cmF0b3Igb2YgcGFyZW50IGJvdW50eS4AEQFQYXJlbnQgYm91bnR5IG11c3QgYmUgaW4gYWN0aXZlIHN0YXRlLCBmb3IgdGhpcyBjaGlsZC1ib3VudHkgY2FsbCB0bxR3b3JrLgANAUNoaWxkLWJvdW50eSBtdXN0IGJlIGluICJBZGRlZCIgc3RhdGUsIGZvciBwcm9jZXNzaW5nIHRoZSBjYWxsLiBBbmQFAXN0YXRlIG9mIGNoaWxkLWJvdW50eSBpcyBtb3ZlZCB0byAiQ3VyYXRvclByb3Bvc2VkIiBvbiBzdWNjZXNzZnVsQGNhbGwgY29tcGxldGlvbi4AtC0gYHBhcmVudF9ib3VudHlfaWRgOiBJbmRleCBvZiBwYXJlbnQgYm91bnR5LqwtIGBjaGlsZF9ib3VudHlfaWRgOiBJbmRleCBvZiBjaGlsZCBib3VudHkutC0gYGN1cmF0b3JgOiBBZGRyZXNzIG9mIGNoaWxkLWJvdW50eSBjdXJhdG9yLuwtIGBmZWVgOiBwYXltZW50IGZlZSB0byBjaGlsZC1ib3VudHkgY3VyYXRvciBmb3IgZXhlY3V0aW9uLjhhY2NlcHRfY3VyYXRvcggBQHBhcmVudF9ib3VudHlfaWT8ASxCb3VudHlJbmRleAABPGNoaWxkX2JvdW50eV9pZPwBLEJvdW50eUluZGV4AAJMtEFjY2VwdCB0aGUgY3VyYXRvciByb2xlIGZvciB0aGUgY2hpbGQtYm91bnR5LgD0VGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgdGhlIGN1cmF0b3Igb2YgdGhpczRjaGlsZC1ib3VudHkuAOxBIGRlcG9zaXQgd2lsbCBiZSByZXNlcnZlZCBmcm9tIHRoZSBjdXJhdG9yIGFuZCByZWZ1bmQgdXBvbohzdWNjZXNzZnVsIHBheW91dCBvciBjYW5jZWxsYXRpb24uAPhGZWUgZm9yIGN1cmF0b3IgaXMgZGVkdWN0ZWQgZnJvbSBjdXJhdG9yIGZlZSBvZiBwYXJlbnQgYm91bnR5LgARAVBhcmVudCBib3VudHkgbXVzdCBiZSBpbiBhY3RpdmUgc3RhdGUsIGZvciB0aGlzIGNoaWxkLWJvdW50eSBjYWxsIHRvFHdvcmsuAA0BQ2hpbGQtYm91bnR5IG11c3QgYmUgaW4gIkN1cmF0b3JQcm9wb3NlZCIgc3RhdGUsIGZvciBwcm9jZXNzaW5nIHRoZQkBY2FsbC4gQW5kIHN0YXRlIG9mIGNoaWxkLWJvdW50eSBpcyBtb3ZlZCB0byAiQWN0aXZlIiBvbiBzdWNjZXNzZnVsQGNhbGwgY29tcGxldGlvbi4AtC0gYHBhcmVudF9ib3VudHlfaWRgOiBJbmRleCBvZiBwYXJlbnQgYm91bnR5LqwtIGBjaGlsZF9ib3VudHlfaWRgOiBJbmRleCBvZiBjaGlsZCBib3VudHkuQHVuYXNzaWduX2N1cmF0b3IIAUBwYXJlbnRfYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAATxjaGlsZF9ib3VudHlfaWT8ASxCb3VudHlJbmRleAADiJRVbmFzc2lnbiBjdXJhdG9yIGZyb20gYSBjaGlsZC1ib3VudHkuAAkBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIGNhbiBiZSBlaXRoZXIgYFJlamVjdE9yaWdpbmAsIG9y3HRoZSBjdXJhdG9yIG9mIHRoZSBwYXJlbnQgYm91bnR5LCBvciBhbnkgc2lnbmVkIG9yaWdpbi4A+EZvciB0aGUgb3JpZ2luIG90aGVyIHRoYW4gVDo6UmVqZWN0T3JpZ2luIGFuZCB0aGUgY2hpbGQtYm91bnR5AQFjdXJhdG9yLCBwYXJlbnQgYm91bnR5IG11c3QgYmUgaW4gYWN0aXZlIHN0YXRlLCBmb3IgdGhpcyBjYWxsIHRvCQF3b3JrLiBXZSBhbGxvdyBjaGlsZC1ib3VudHkgY3VyYXRvciBhbmQgVDo6UmVqZWN0T3JpZ2luIHRvIGV4ZWN1dGXIdGhpcyBjYWxsIGlycmVzcGVjdGl2ZSBvZiB0aGUgcGFyZW50IGJvdW50eSBzdGF0ZS4A3ElmIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHRoZSBgUmVqZWN0T3JpZ2luYCBvciB0aGUFAXBhcmVudCBib3VudHkgY3VyYXRvciwgd2UgYXNzdW1lIHRoYXQgdGhlIGNoaWxkLWJvdW50eSBjdXJhdG9yIGlzDQFtYWxpY2lvdXMgb3IgaW5hY3RpdmUuIEFzIGEgcmVzdWx0LCBjaGlsZC1ib3VudHkgY3VyYXRvciBkZXBvc2l0IGlzIHNsYXNoZWQuAAUBSWYgdGhlIG9yaWdpbiBpcyB0aGUgY2hpbGQtYm91bnR5IGN1cmF0b3IsIHdlIHRha2UgdGhpcyBhcyBhIHNpZ24JAXRoYXQgdGhleSBhcmUgdW5hYmxlIHRvIGRvIHRoZWlyIGpvYiwgYW5kIGFyZSB3aWxsaW5nbHkgZ2l2aW5nIHVwLgkBV2UgY291bGQgc2xhc2ggdGhlIGRlcG9zaXQsIGJ1dCBmb3Igbm93IHdlIGFsbG93IHRoZW0gdG8gdW5yZXNlcnZlEQF0aGVpciBkZXBvc2l0IGFuZCBleGl0IHdpdGhvdXQgaXNzdWUuIChXZSBtYXkgd2FudCB0byBjaGFuZ2UgdGhpcyBpZjhpdCBpcyBhYnVzZWQuKQAFAUZpbmFsbHksIHRoZSBvcmlnaW4gY2FuIGJlIGFueW9uZSBpZmYgdGhlIGNoaWxkLWJvdW50eSBjdXJhdG9yIGlzCQEiaW5hY3RpdmUiLiBFeHBpcnkgdXBkYXRlIGR1ZSBvZiBwYXJlbnQgYm91bnR5IGlzIHVzZWQgdG8gZXN0aW1hdGWcaW5hY3RpdmUgc3RhdGUgb2YgY2hpbGQtYm91bnR5IGN1cmF0b3IuAA0BVGhpcyBhbGxvd3MgYW55b25lIGluIHRoZSBjb21tdW5pdHkgdG8gY2FsbCBvdXQgdGhhdCBhIGNoaWxkLWJvdW50eQkBY3VyYXRvciBpcyBub3QgZG9pbmcgdGhlaXIgZHVlIGRpbGlnZW5jZSwgYW5kIHdlIHNob3VsZCBwaWNrIGEgbmV3+G9uZS4gSW4gdGhpcyBjYXNlIHRoZSBjaGlsZC1ib3VudHkgY3VyYXRvciBkZXBvc2l0IGlzIHNsYXNoZWQuAAEBU3RhdGUgb2YgY2hpbGQtYm91bnR5IGlzIG1vdmVkIHRvIEFkZGVkIHN0YXRlIG9uIHN1Y2Nlc3NmdWwgY2FsbCxjb21wbGV0aW9uLgC0LSBgcGFyZW50X2JvdW50eV9pZGA6IEluZGV4IG9mIHBhcmVudCBib3VudHkurC0gYGNoaWxkX2JvdW50eV9pZGA6IEluZGV4IG9mIGNoaWxkIGJvdW50eS5IYXdhcmRfY2hpbGRfYm91bnR5DAFAcGFyZW50X2JvdW50eV9pZPwBLEJvdW50eUluZGV4AAE8Y2hpbGRfYm91bnR5X2lk/AEsQm91bnR5SW5kZXgAASxiZW5lZmljaWFyefkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgAERJBBd2FyZCBjaGlsZC1ib3VudHkgdG8gYSBiZW5lZmljaWFyeS4A+FRoZSBiZW5lZmljaWFyeSB3aWxsIGJlIGFibGUgdG8gY2xhaW0gdGhlIGZ1bmRzIGFmdGVyIGEgZGVsYXkuAPxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSB0aGUgcGFyZW50IGN1cmF0b3Igb3J0Y3VyYXRvciBvZiB0aGlzIGNoaWxkLWJvdW50eS4AEQFQYXJlbnQgYm91bnR5IG11c3QgYmUgaW4gYWN0aXZlIHN0YXRlLCBmb3IgdGhpcyBjaGlsZC1ib3VudHkgY2FsbCB0bxR3b3JrLgAJAUNoaWxkLWJvdW50eSBtdXN0IGJlIGluIGFjdGl2ZSBzdGF0ZSwgZm9yIHByb2Nlc3NpbmcgdGhlIGNhbGwuIEFuZBEBc3RhdGUgb2YgY2hpbGQtYm91bnR5IGlzIG1vdmVkIHRvICJQZW5kaW5nUGF5b3V0IiBvbiBzdWNjZXNzZnVsIGNhbGwsY29tcGxldGlvbi4AtC0gYHBhcmVudF9ib3VudHlfaWRgOiBJbmRleCBvZiBwYXJlbnQgYm91bnR5LqwtIGBjaGlsZF9ib3VudHlfaWRgOiBJbmRleCBvZiBjaGlsZCBib3VudHkulC0gYGJlbmVmaWNpYXJ5YDogQmVuZWZpY2lhcnkgYWNjb3VudC5IY2xhaW1fY2hpbGRfYm91bnR5CAFAcGFyZW50X2JvdW50eV9pZPwBLEJvdW50eUluZGV4AAE8Y2hpbGRfYm91bnR5X2lk/AEsQm91bnR5SW5kZXgABUAFAUNsYWltIHRoZSBwYXlvdXQgZnJvbSBhbiBhd2FyZGVkIGNoaWxkLWJvdW50eSBhZnRlciBwYXlvdXQgZGVsYXkuAOxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbWF5IGJlIGFueSBzaWduZWQgb3JpZ2luLgAFAUNhbGwgd29ya3MgaW5kZXBlbmRlbnQgb2YgcGFyZW50IGJvdW50eSBzdGF0ZSwgTm8gbmVlZCBmb3IgcGFyZW50dGJvdW50eSB0byBiZSBpbiBhY3RpdmUgc3RhdGUuABEBVGhlIEJlbmVmaWNpYXJ5IGlzIHBhaWQgb3V0IHdpdGggYWdyZWVkIGJvdW50eSB2YWx1ZS4gQ3VyYXRvciBmZWUgaXOUcGFpZCAmIGN1cmF0b3IgZGVwb3NpdCBpcyB1bnJlc2VydmVkLgAFAUNoaWxkLWJvdW50eSBtdXN0IGJlIGluICJQZW5kaW5nUGF5b3V0IiBzdGF0ZSwgZm9yIHByb2Nlc3NpbmcgdGhl/GNhbGwuIEFuZCBpbnN0YW5jZSBvZiBjaGlsZC1ib3VudHkgaXMgcmVtb3ZlZCBmcm9tIHRoZSBzdGF0ZSBvbmxzdWNjZXNzZnVsIGNhbGwgY29tcGxldGlvbi4AtC0gYHBhcmVudF9ib3VudHlfaWRgOiBJbmRleCBvZiBwYXJlbnQgYm91bnR5LqwtIGBjaGlsZF9ib3VudHlfaWRgOiBJbmRleCBvZiBjaGlsZCBib3VudHkuSGNsb3NlX2NoaWxkX2JvdW50eQgBQHBhcmVudF9ib3VudHlfaWT8ASxCb3VudHlJbmRleAABPGNoaWxkX2JvdW50eV9pZPwBLEJvdW50eUluZGV4AAZYEQFDYW5jZWwgYSBwcm9wb3NlZCBvciBhY3RpdmUgY2hpbGQtYm91bnR5LiBDaGlsZC1ib3VudHkgYWNjb3VudCBmdW5kcwkBYXJlIHRyYW5zZmVycmVkIHRvIHBhcmVudCBib3VudHkgYWNjb3VudC4gVGhlIGNoaWxkLWJvdW50eSBjdXJhdG9ymGRlcG9zaXQgbWF5IGJlIHVucmVzZXJ2ZWQgaWYgcG9zc2libGUuAAkBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgZWl0aGVyIHBhcmVudCBjdXJhdG9yIG9ySGBUOjpSZWplY3RPcmlnaW5gLgDwSWYgdGhlIHN0YXRlIG9mIGNoaWxkLWJvdW50eSBpcyBgQWN0aXZlYCwgY3VyYXRvciBkZXBvc2l0IGlzLHVucmVzZXJ2ZWQuAPRJZiB0aGUgc3RhdGUgb2YgY2hpbGQtYm91bnR5IGlzIGBQZW5kaW5nUGF5b3V0YCwgY2FsbCBmYWlscyAmeHJldHVybnMgYFBlbmRpbmdQYXlvdXRgIGVycm9yLgANAUZvciB0aGUgb3JpZ2luIG90aGVyIHRoYW4gVDo6UmVqZWN0T3JpZ2luLCBwYXJlbnQgYm91bnR5IG11c3QgYmUgaW7wYWN0aXZlIHN0YXRlLCBmb3IgdGhpcyBjaGlsZC1ib3VudHkgY2FsbCB0byB3b3JrLiBGb3Igb3JpZ2lukFQ6OlJlamVjdE9yaWdpbiBleGVjdXRpb24gaXMgZm9yY2VkLgABAUluc3RhbmNlIG9mIGNoaWxkLWJvdW50eSBpcyByZW1vdmVkIGZyb20gdGhlIHN0YXRlIG9uIHN1Y2Nlc3NmdWxAY2FsbCBjb21wbGV0aW9uLgC0LSBgcGFyZW50X2JvdW50eV9pZGA6IEluZGV4IG9mIHBhcmVudCBib3VudHkurC0gYGNoaWxkX2JvdW50eV9pZGA6IEluZGV4IG9mIGNoaWxkIGJvdW50eS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuGQMMkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZRhwYWxsZXQQQ2FsbAQEVAABFDxzdWJtaXRfdW5zaWduZWQIATByYXdfc29sdXRpb24dAwGwQm94PFJhd1NvbHV0aW9uPFNvbHV0aW9uT2Y8VDo6TWluZXJDb25maWc+Pj4AARx3aXRuZXNz8QMBWFNvbHV0aW9uT3JTbmFwc2hvdFNpemUAADikU3VibWl0IGEgc29sdXRpb24gZm9yIHRoZSB1bnNpZ25lZCBwaGFzZS4AyFRoZSBkaXNwYXRjaCBvcmlnaW4gZm8gdGhpcyBjYWxsIG11c3QgYmUgX19ub25lX18uAD0BVGhpcyBzdWJtaXNzaW9uIGlzIGNoZWNrZWQgb24gdGhlIGZseS4gTW9yZW92ZXIsIHRoaXMgdW5zaWduZWQgc29sdXRpb24gaXMgb25seVUBdmFsaWRhdGVkIHdoZW4gc3VibWl0dGVkIHRvIHRoZSBwb29sIGZyb20gdGhlICoqbG9jYWwqKiBub2RlLiBFZmZlY3RpdmVseSwgdGhpcyBtZWFuc10BdGhhdCBvbmx5IGFjdGl2ZSB2YWxpZGF0b3JzIGNhbiBzdWJtaXQgdGhpcyB0cmFuc2FjdGlvbiB3aGVuIGF1dGhvcmluZyBhIGJsb2NrIChzaW1pbGFyQHRvIGFuIGluaGVyZW50KS4AWQFUbyBwcmV2ZW50IGFueSBpbmNvcnJlY3Qgc29sdXRpb24gKGFuZCB0aHVzIHdhc3RlZCB0aW1lL3dlaWdodCksIHRoaXMgdHJhbnNhY3Rpb24gd2lsbE0BcGFuaWMgaWYgdGhlIHNvbHV0aW9uIHN1Ym1pdHRlZCBieSB0aGUgdmFsaWRhdG9yIGlzIGludmFsaWQgaW4gYW55IHdheSwgZWZmZWN0aXZlbHmccHV0dGluZyB0aGVpciBhdXRob3JpbmcgcmV3YXJkIGF0IHJpc2suAOBObyBkZXBvc2l0IG9yIHJld2FyZCBpcyBhc3NvY2lhdGVkIHdpdGggdGhpcyBzdWJtaXNzaW9uLmxzZXRfbWluaW11bV91bnRydXN0ZWRfc2NvcmUEAUBtYXliZV9uZXh0X3Njb3Jl9QMBVE9wdGlvbjxFbGVjdGlvblNjb3JlPgABFLBTZXQgYSBuZXcgdmFsdWUgZm9yIGBNaW5pbXVtVW50cnVzdGVkU2NvcmVgLgDYRGlzcGF0Y2ggb3JpZ2luIG11c3QgYmUgYWxpZ25lZCB3aXRoIGBUOjpGb3JjZU9yaWdpbmAuAPBUaGlzIGNoZWNrIGNhbiBiZSB0dXJuZWQgb2ZmIGJ5IHNldHRpbmcgdGhlIHZhbHVlIHRvIGBOb25lYC50c2V0X2VtZXJnZW5jeV9lbGVjdGlvbl9yZXN1bHQEASBzdXBwb3J0c/kDAVhTdXBwb3J0czxUOjpBY2NvdW50SWQ+AAIgWQFTZXQgYSBzb2x1dGlvbiBpbiB0aGUgcXVldWUsIHRvIGJlIGhhbmRlZCBvdXQgdG8gdGhlIGNsaWVudCBvZiB0aGlzIHBhbGxldCBpbiB0aGUgbmV4dIhjYWxsIHRvIGBFbGVjdGlvblByb3ZpZGVyOjplbGVjdGAuAEUBVGhpcyBjYW4gb25seSBiZSBzZXQgYnkgYFQ6OkZvcmNlT3JpZ2luYCwgYW5kIG9ubHkgd2hlbiB0aGUgcGhhc2UgaXMgYEVtZXJnZW5jeWAuAGEBVGhlIHNvbHV0aW9uIGlzIG5vdCBjaGVja2VkIGZvciBhbnkgZmVhc2liaWxpdHkgYW5kIGlzIGFzc3VtZWQgdG8gYmUgdHJ1c3R3b3J0aHksIGFzIGFueVEBZmVhc2liaWxpdHkgY2hlY2sgaXRzZWxmIGNhbiBpbiBwcmluY2lwbGUgY2F1c2UgdGhlIGVsZWN0aW9uIHByb2Nlc3MgdG8gZmFpbCAoZHVlIHRvaG1lbW9yeS93ZWlnaHQgY29uc3RyYWlucykuGHN1Ym1pdAQBMHJhd19zb2x1dGlvbh0DAbBCb3g8UmF3U29sdXRpb248U29sdXRpb25PZjxUOjpNaW5lckNvbmZpZz4+PgADJJxTdWJtaXQgYSBzb2x1dGlvbiBmb3IgdGhlIHNpZ25lZCBwaGFzZS4A0FRoZSBkaXNwYXRjaCBvcmlnaW4gZm8gdGhpcyBjYWxsIG11c3QgYmUgX19zaWduZWRfXy4AXQFUaGUgc29sdXRpb24gaXMgcG90ZW50aWFsbHkgcXVldWVkLCBiYXNlZCBvbiB0aGUgY2xhaW1lZCBzY29yZSBhbmQgcHJvY2Vzc2VkIGF0IHRoZSBlbmRQb2YgdGhlIHNpZ25lZCBwaGFzZS4AXQFBIGRlcG9zaXQgaXMgcmVzZXJ2ZWQgYW5kIHJlY29yZGVkIGZvciB0aGUgc29sdXRpb24uIEJhc2VkIG9uIHRoZSBvdXRjb21lLCB0aGUgc29sdXRpb24VAW1pZ2h0IGJlIHJld2FyZGVkLCBzbGFzaGVkLCBvciBnZXQgYWxsIG9yIGEgcGFydCBvZiB0aGUgZGVwb3NpdCBiYWNrLkxnb3Zlcm5hbmNlX2ZhbGxiYWNrAAQQgFRyaWdnZXIgdGhlIGdvdmVybmFuY2UgZmFsbGJhY2suAEkBVGhpcyBjYW4gb25seSBiZSBjYWxsZWQgd2hlbiBbYFBoYXNlOjpFbWVyZ2VuY3lgXSBpcyBlbmFibGVkLCBhcyBhbiBhbHRlcm5hdGl2ZSB0b8BjYWxsaW5nIFtgQ2FsbDo6c2V0X2VtZXJnZW5jeV9lbGVjdGlvbl9yZXN1bHRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuHQMIkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZSxSYXdTb2x1dGlvbgQEUwEhAwAMASBzb2x1dGlvbiEDAQRTAAEUc2NvcmXtAwE0RWxlY3Rpb25TY29yZQABFHJvdW5kEAEMdTMyAAAhAwg0cGFzZW9fcnVudGltZVROcG9zQ29tcGFjdFNvbHV0aW9uMTYAAEABGHZvdGVzMSUDAAABGHZvdGVzMjEDAAABGHZvdGVzM0UDAAABGHZvdGVzNFEDAAABGHZvdGVzNV0DAAABGHZvdGVzNmkDAAABGHZvdGVzN3UDAAABGHZvdGVzOIEDAAABGHZvdGVzOY0DAAABHHZvdGVzMTCZAwAAARx2b3RlczExpQMAAAEcdm90ZXMxMrEDAAABHHZvdGVzMTO9AwAAARx2b3RlczE0yQMAAAEcdm90ZXMxNdUDAAABHHZvdGVzMTbhAwAAACUDAAACKQMAKQMAAAQI/C0DAC0DAAAGnQEAMQMAAAI1AwA1AwAABAz8OQMtAwA5AwAABAgtAz0DAD0DAAAGQQMAQQMMNHNwX2FyaXRobWV0aWMocGVyX3RoaW5ncxhQZXJVMTYAAAQAnQEBDHUxNgAARQMAAAJJAwBJAwAABAz8TQMtAwBNAwAAAwIAAAA5AwBRAwAAAlUDAFUDAAAEDPxZAy0DAFkDAAADAwAAADkDAF0DAAACYQMAYQMAAAQM/GUDLQMAZQMAAAMEAAAAOQMAaQMAAAJtAwBtAwAABAz8cQMtAwBxAwAAAwUAAAA5AwB1AwAAAnkDAHkDAAAEDPx9Ay0DAH0DAAADBgAAADkDAIEDAAAChQMAhQMAAAQM/IkDLQMAiQMAAAMHAAAAOQMAjQMAAAKRAwCRAwAABAz8lQMtAwCVAwAAAwgAAAA5AwCZAwAAAp0DAJ0DAAAEDPyhAy0DAKEDAAADCQAAADkDAKUDAAACqQMAqQMAAAQM/K0DLQMArQMAAAMKAAAAOQMAsQMAAAK1AwC1AwAABAz8uQMtAwC5AwAAAwsAAAA5AwC9AwAAAsEDAMEDAAAEDPzFAy0DAMUDAAADDAAAADkDAMkDAAACzQMAzQMAAAQM/NEDLQMA0QMAAAMNAAAAOQMA1QMAAALZAwDZAwAABAz83QMtAwDdAwAAAw4AAAA5AwDhAwAAAuUDAOUDAAAEDPzpAy0DAOkDAAADDwAAADkDAO0DCERzcF9ucG9zX2VsZWN0aW9uczRFbGVjdGlvblNjb3JlAAAMATRtaW5pbWFsX3N0YWtlGAE8RXh0ZW5kZWRCYWxhbmNlAAEkc3VtX3N0YWtlGAE8RXh0ZW5kZWRCYWxhbmNlAAFEc3VtX3N0YWtlX3NxdWFyZWQYATxFeHRlbmRlZEJhbGFuY2UAAPEDCJBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2VYU29sdXRpb25PclNuYXBzaG90U2l6ZQAACAEYdm90ZXJz/AEMdTMyAAEcdGFyZ2V0c/wBDHUzMgAA9QMEGE9wdGlvbgQEVAHtAwEIEE5vbmUAAAAQU29tZQQA7QMAAAEAAPkDAAAC/QMA/QMAAAQIAAEEAAEECERzcF9ucG9zX2VsZWN0aW9ucxxTdXBwb3J0BCRBY2NvdW50SWQBAAAIARR0b3RhbBgBPEV4dGVuZGVkQmFsYW5jZQABGHZvdGVycwUEAYRWZWM8KEFjY291bnRJZCwgRXh0ZW5kZWRCYWxhbmNlKT4AAAUEAAACCQQACQQAAAQIABgADQQMQHBhbGxldF9iYWdzX2xpc3QYcGFsbGV0EENhbGwIBFQABEkAAQwUcmViYWcEAShkaXNsb2NhdGVk+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAAoWQFEZWNsYXJlIHRoYXQgc29tZSBgZGlzbG9jYXRlZGAgYWNjb3VudCBoYXMsIHRocm91Z2ggcmV3YXJkcyBvciBwZW5hbHRpZXMsIHN1ZmZpY2llbnRseVEBY2hhbmdlZCBpdHMgc2NvcmUgdGhhdCBpdCBzaG91bGQgcHJvcGVybHkgZmFsbCBpbnRvIGEgZGlmZmVyZW50IGJhZyB0aGFuIGl0cyBjdXJyZW50EG9uZS4AHQFBbnlvbmUgY2FuIGNhbGwgdGhpcyBmdW5jdGlvbiBhYm91dCBhbnkgcG90ZW50aWFsbHkgZGlzbG9jYXRlZCBhY2NvdW50LgBJAVdpbGwgYWx3YXlzIHVwZGF0ZSB0aGUgc3RvcmVkIHNjb3JlIG9mIGBkaXNsb2NhdGVkYCB0byB0aGUgY29ycmVjdCBzY29yZSwgYmFzZWQgb25AYFNjb3JlUHJvdmlkZXJgLgDUSWYgYGRpc2xvY2F0ZWRgIGRvZXMgbm90IGV4aXN0cywgaXQgcmV0dXJucyBhbiBlcnJvci48cHV0X2luX2Zyb250X29mBAEcbGlnaHRlcvkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKNBNb3ZlIHRoZSBjYWxsZXIncyBJZCBkaXJlY3RseSBpbiBmcm9udCBvZiBgbGlnaHRlcmAuAFkBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIGNhbiBvbmx5IGJlIGNhbGxlZCBieSB0aGUgSWQgb2Y1AXRoZSBhY2NvdW50IGdvaW5nIGluIGZyb250IG9mIGBsaWdodGVyYC4gRmVlIGlzIHBheWVkIGJ5IHRoZSBvcmlnaW4gdW5kZXIgYWxsOGNpcmN1bXN0YW5jZXMuADhPbmx5IHdvcmtzIGlmOgCULSBib3RoIG5vZGVzIGFyZSB3aXRoaW4gdGhlIHNhbWUgYmFnLNAtIGFuZCBgb3JpZ2luYCBoYXMgYSBncmVhdGVyIGBTY29yZWAgdGhhbiBgbGlnaHRlcmAuVHB1dF9pbl9mcm9udF9vZl9vdGhlcggBHGhlYXZpZXL5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARxsaWdodGVy+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAIMEQFTYW1lIGFzIFtgUGFsbGV0OjpwdXRfaW5fZnJvbnRfb2ZgXSwgYnV0IGl0IGNhbiBiZSBjYWxsZWQgYnkgYW55b25lLgDIRmVlIGlzIHBhaWQgYnkgdGhlIG9yaWdpbiB1bmRlciBhbGwgY2lyY3Vtc3RhbmNlcy4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuEQQMXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzGHBhbGxldBBDYWxsBARUAAFoEGpvaW4IARhhbW91bnQNAQEwQmFsYW5jZU9mPFQ+AAEccG9vbF9pZBABGFBvb2xJZAAAQEUBU3Rha2UgZnVuZHMgd2l0aCBhIHBvb2wuIFRoZSBhbW91bnQgdG8gYm9uZCBpcyBkZWxlZ2F0ZWQgKG9yIHRyYW5zZmVycmVkIGJhc2VkIG9uTQFbYGFkYXB0ZXI6OlN0YWtlU3RyYXRlZ3lUeXBlYF0pIGZyb20gdGhlIG1lbWJlciB0byB0aGUgcG9vbCBhY2NvdW50IGFuZCBpbW1lZGlhdGVseWhpbmNyZWFzZXMgdGhlIHBvb2wncyBib25kLgApAVRoZSBtZXRob2Qgb2YgdHJhbnNmZXJyaW5nIHRoZSBhbW91bnQgdG8gdGhlIHBvb2wgYWNjb3VudCBpcyBkZXRlcm1pbmVkIGJ5AQFbYGFkYXB0ZXI6OlN0YWtlU3RyYXRlZ3lUeXBlYF0uIElmIHRoZSBwb29sIGlzIGNvbmZpZ3VyZWQgdG8gdXNlMQFbYGFkYXB0ZXI6OlN0YWtlU3RyYXRlZ3lUeXBlOjpEZWxlZ2F0ZWBdLCB0aGUgZnVuZHMgcmVtYWluIGluIHRoZSBhY2NvdW50IG9mMQF0aGUgYG9yaWdpbmAsIHdoaWxlIHRoZSBwb29sIGdhaW5zIHRoZSByaWdodCB0byB1c2UgdGhlc2UgZnVuZHMgZm9yIHN0YWtpbmcuABgjIE5vdGUAzCogQW4gYWNjb3VudCBjYW4gb25seSBiZSBhIG1lbWJlciBvZiBhIHNpbmdsZSBwb29sLtgqIEFuIGFjY291bnQgY2Fubm90IGpvaW4gdGhlIHNhbWUgcG9vbCBtdWx0aXBsZSB0aW1lcy5BASogVGhpcyBjYWxsIHdpbGwgKm5vdCogZHVzdCB0aGUgbWVtYmVyIGFjY291bnQsIHNvIHRoZSBtZW1iZXIgbXVzdCBoYXZlIGF0IGxlYXN0yCAgYGV4aXN0ZW50aWFsIGRlcG9zaXQgKyBhbW91bnRgIGluIHRoZWlyIGFjY291bnQu0CogT25seSBhIHBvb2wgd2l0aCBbYFBvb2xTdGF0ZTo6T3BlbmBdIGNhbiBiZSBqb2luZWQoYm9uZF9leHRyYQQBFGV4dHJhFQQBXEJvbmRFeHRyYTxCYWxhbmNlT2Y8VD4+AAEcRQFCb25kIGBleHRyYWAgbW9yZSBmdW5kcyBmcm9tIGBvcmlnaW5gIGludG8gdGhlIHBvb2wgdG8gd2hpY2ggdGhleSBhbHJlYWR5IGJlbG9uZy4ASQFBZGRpdGlvbmFsIGZ1bmRzIGNhbiBjb21lIGZyb20gZWl0aGVyIHRoZSBmcmVlIGJhbGFuY2Ugb2YgdGhlIGFjY291bnQsIG9mIGZyb20gdGhlnGFjY3VtdWxhdGVkIHJld2FyZHMsIHNlZSBbYEJvbmRFeHRyYWBdLgA9AUJvbmRpbmcgZXh0cmEgZnVuZHMgaW1wbGllcyBhbiBhdXRvbWF0aWMgcGF5b3V0IG9mIGFsbCBwZW5kaW5nIHJld2FyZHMgYXMgd2VsbC4JAVNlZSBgYm9uZF9leHRyYV9vdGhlcmAgdG8gYm9uZCBwZW5kaW5nIHJld2FyZHMgb2YgYG90aGVyYCBtZW1iZXJzLjBjbGFpbV9wYXlvdXQAAiBVAUEgYm9uZGVkIG1lbWJlciBjYW4gdXNlIHRoaXMgdG8gY2xhaW0gdGhlaXIgcGF5b3V0IGJhc2VkIG9uIHRoZSByZXdhcmRzIHRoYXQgdGhlIHBvb2xhAWhhcyBhY2N1bXVsYXRlZCBzaW5jZSB0aGVpciBsYXN0IGNsYWltZWQgcGF5b3V0IChPUiBzaW5jZSBqb2luaW5nIGlmIHRoaXMgaXMgdGhlaXIgZmlyc3Q9AXRpbWUgY2xhaW1pbmcgcmV3YXJkcykuIFRoZSBwYXlvdXQgd2lsbCBiZSB0cmFuc2ZlcnJlZCB0byB0aGUgbWVtYmVyJ3MgYWNjb3VudC4ASQFUaGUgbWVtYmVyIHdpbGwgZWFybiByZXdhcmRzIHBybyByYXRhIGJhc2VkIG9uIHRoZSBtZW1iZXJzIHN0YWtlIHZzIHRoZSBzdW0gb2YgdGhl0G1lbWJlcnMgaW4gdGhlIHBvb2xzIHN0YWtlLiBSZXdhcmRzIGRvIG5vdCAiZXhwaXJlIi4AQQFTZWUgYGNsYWltX3BheW91dF9vdGhlcmAgdG8gY2xhaW0gcmV3YXJkcyBvbiBiZWhhbGYgb2Ygc29tZSBgb3RoZXJgIHBvb2wgbWVtYmVyLhh1bmJvbmQIAThtZW1iZXJfYWNjb3VudPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABQHVuYm9uZGluZ19wb2ludHMNAQEwQmFsYW5jZU9mPFQ+AAN8RQFVbmJvbmQgdXAgdG8gYHVuYm9uZGluZ19wb2ludHNgIG9mIHRoZSBgbWVtYmVyX2FjY291bnRgJ3MgZnVuZHMgZnJvbSB0aGUgcG9vbC4gSXRFAWltcGxpY2l0bHkgY29sbGVjdHMgdGhlIHJld2FyZHMgb25lIGxhc3QgdGltZSwgc2luY2Ugbm90IGRvaW5nIHNvIHdvdWxkIG1lYW4gc29tZWxyZXdhcmRzIHdvdWxkIGJlIGZvcmZlaXRlZC4ATQFVbmRlciBjZXJ0YWluIGNvbmRpdGlvbnMsIHRoaXMgY2FsbCBjYW4gYmUgZGlzcGF0Y2hlZCBwZXJtaXNzaW9ubGVzc2x5IChpLmUuIGJ5IGFueSRhY2NvdW50KS4ArCMgQ29uZGl0aW9ucyBmb3IgYSBwZXJtaXNzaW9ubGVzcyBkaXNwYXRjaC4AXQEqIFRoZSBwb29sIGlzIGJsb2NrZWQgYW5kIHRoZSBjYWxsZXIgaXMgZWl0aGVyIHRoZSByb290IG9yIGJvdW5jZXIuIFRoaXMgaXMgcmVmZXJlZWQgdG8wICBhcyBhIGtpY2su9CogVGhlIHBvb2wgaXMgZGVzdHJveWluZyBhbmQgdGhlIG1lbWJlciBpcyBub3QgdGhlIGRlcG9zaXRvci5VASogVGhlIHBvb2wgaXMgZGVzdHJveWluZywgdGhlIG1lbWJlciBpcyB0aGUgZGVwb3NpdG9yIGFuZCBubyBvdGhlciBtZW1iZXJzIGFyZSBpbiB0aGUcICBwb29sLgARASMjIENvbmRpdGlvbnMgZm9yIHBlcm1pc3Npb25lZCBkaXNwYXRjaCAoaS5lLiB0aGUgY2FsbGVyIGlzIGFsc28gdGhlSGBtZW1iZXJfYWNjb3VudGApOgCIKiBUaGUgY2FsbGVyIGlzIG5vdCB0aGUgZGVwb3NpdG9yLlUBKiBUaGUgY2FsbGVyIGlzIHRoZSBkZXBvc2l0b3IsIHRoZSBwb29sIGlzIGRlc3Ryb3lpbmcgYW5kIG5vIG90aGVyIG1lbWJlcnMgYXJlIGluIHRoZRwgIHBvb2wuABgjIE5vdGUAHQFJZiB0aGVyZSBhcmUgdG9vIG1hbnkgdW5sb2NraW5nIGNodW5rcyB0byB1bmJvbmQgd2l0aCB0aGUgcG9vbCBhY2NvdW50LFEBW2BDYWxsOjpwb29sX3dpdGhkcmF3X3VuYm9uZGVkYF0gY2FuIGJlIGNhbGxlZCB0byB0cnkgYW5kIG1pbmltaXplIHVubG9ja2luZyBjaHVua3MuWQFUaGUgW2BTdGFraW5nSW50ZXJmYWNlOjp1bmJvbmRgXSB3aWxsIGltcGxpY2l0bHkgY2FsbCBbYENhbGw6OnBvb2xfd2l0aGRyYXdfdW5ib25kZWRgXVUBdG8gdHJ5IHRvIGZyZWUgY2h1bmtzIGlmIG5lY2Vzc2FyeSAoaWUuIGlmIHVuYm91bmQgd2FzIGNhbGxlZCBhbmQgbm8gdW5sb2NraW5nIGNodW5rc2EBYXJlIGF2YWlsYWJsZSkuIEhvd2V2ZXIsIGl0IG1heSBub3QgYmUgcG9zc2libGUgdG8gcmVsZWFzZSB0aGUgY3VycmVudCB1bmxvY2tpbmcgY2h1bmtzLF0BaW4gd2hpY2ggY2FzZSwgdGhlIHJlc3VsdCBvZiB0aGlzIGNhbGwgd2lsbCBsaWtlbHkgYmUgdGhlIGBOb01vcmVDaHVua3NgIGVycm9yIGZyb20gdGhlPHN0YWtpbmcgc3lzdGVtLlhwb29sX3dpdGhkcmF3X3VuYm9uZGVkCAEccG9vbF9pZBABGFBvb2xJZAABSG51bV9zbGFzaGluZ19zcGFucxABDHUzMgAEGFUBQ2FsbCBgd2l0aGRyYXdfdW5ib25kZWRgIGZvciB0aGUgcG9vbHMgYWNjb3VudC4gVGhpcyBjYWxsIGNhbiBiZSBtYWRlIGJ5IGFueSBhY2NvdW50LgBBAVRoaXMgaXMgdXNlZnVsIGlmIHRoZXJlIGFyZSB0b28gbWFueSB1bmxvY2tpbmcgY2h1bmtzIHRvIGNhbGwgYHVuYm9uZGAsIGFuZCBzb21lYQFjYW4gYmUgY2xlYXJlZCBieSB3aXRoZHJhd2luZy4gSW4gdGhlIGNhc2UgdGhlcmUgYXJlIHRvbyBtYW55IHVubG9ja2luZyBjaHVua3MsIHRoZSB1c2VyUQF3b3VsZCBwcm9iYWJseSBzZWUgYW4gZXJyb3IgbGlrZSBgTm9Nb3JlQ2h1bmtzYCBlbWl0dGVkIGZyb20gdGhlIHN0YWtpbmcgc3lzdGVtIHdoZW5cdGhleSBhdHRlbXB0IHRvIHVuYm9uZC5Ed2l0aGRyYXdfdW5ib25kZWQIAThtZW1iZXJfYWNjb3VudPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABSG51bV9zbGFzaGluZ19zcGFucxABDHUzMgAFWFUBV2l0aGRyYXcgdW5ib25kZWQgZnVuZHMgZnJvbSBgbWVtYmVyX2FjY291bnRgLiBJZiBubyBib25kZWQgZnVuZHMgY2FuIGJlIHVuYm9uZGVkLCBhbkhlcnJvciBpcyByZXR1cm5lZC4ATQFVbmRlciBjZXJ0YWluIGNvbmRpdGlvbnMsIHRoaXMgY2FsbCBjYW4gYmUgZGlzcGF0Y2hlZCBwZXJtaXNzaW9ubGVzc2x5IChpLmUuIGJ5IGFueSRhY2NvdW50KS4AqCMgQ29uZGl0aW9ucyBmb3IgYSBwZXJtaXNzaW9ubGVzcyBkaXNwYXRjaAAJASogVGhlIHBvb2wgaXMgaW4gZGVzdHJveSBtb2RlIGFuZCB0aGUgdGFyZ2V0IGlzIG5vdCB0aGUgZGVwb3NpdG9yLjEBKiBUaGUgdGFyZ2V0IGlzIHRoZSBkZXBvc2l0b3IgYW5kIHRoZXkgYXJlIHRoZSBvbmx5IG1lbWJlciBpbiB0aGUgc3ViIHBvb2xzLg0BKiBUaGUgcG9vbCBpcyBibG9ja2VkIGFuZCB0aGUgY2FsbGVyIGlzIGVpdGhlciB0aGUgcm9vdCBvciBib3VuY2VyLgCYIyBDb25kaXRpb25zIGZvciBwZXJtaXNzaW9uZWQgZGlzcGF0Y2gA6CogVGhlIGNhbGxlciBpcyB0aGUgdGFyZ2V0IGFuZCB0aGV5IGFyZSBub3QgdGhlIGRlcG9zaXRvci4AGCMgTm90ZQD0LSBJZiB0aGUgdGFyZ2V0IGlzIHRoZSBkZXBvc2l0b3IsIHRoZSBwb29sIHdpbGwgYmUgZGVzdHJveWVkLmEBLSBJZiB0aGUgcG9vbCBoYXMgYW55IHBlbmRpbmcgc2xhc2gsIHdlIGFsc28gdHJ5IHRvIHNsYXNoIHRoZSBtZW1iZXIgYmVmb3JlIGxldHRpbmcgdGhlbV0Bd2l0aGRyYXcuIFRoaXMgY2FsY3VsYXRpb24gYWRkcyBzb21lIHdlaWdodCBvdmVyaGVhZCBhbmQgaXMgb25seSBkZWZlbnNpdmUuIEluIHJlYWxpdHksVQFwb29sIHNsYXNoZXMgbXVzdCBoYXZlIGJlZW4gYWxyZWFkeSBhcHBsaWVkIHZpYSBwZXJtaXNzaW9ubGVzcyBbYENhbGw6OmFwcGx5X3NsYXNoYF0uGGNyZWF0ZRABGGFtb3VudA0BATBCYWxhbmNlT2Y8VD4AARByb290+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkbm9taW5hdG9y+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEcYm91bmNlcvkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgAGRHRDcmVhdGUgYSBuZXcgZGVsZWdhdGlvbiBwb29sLgAsIyBBcmd1bWVudHMAVQEqIGBhbW91bnRgIC0gVGhlIGFtb3VudCBvZiBmdW5kcyB0byBkZWxlZ2F0ZSB0byB0aGUgcG9vbC4gVGhpcyBhbHNvIGFjdHMgb2YgYSBzb3J0IG9mTQEgIGRlcG9zaXQgc2luY2UgdGhlIHBvb2xzIGNyZWF0b3IgY2Fubm90IGZ1bGx5IHVuYm9uZCBmdW5kcyB1bnRpbCB0aGUgcG9vbCBpcyBiZWluZzAgIGRlc3Ryb3llZC5RASogYGluZGV4YCAtIEEgZGlzYW1iaWd1YXRpb24gaW5kZXggZm9yIGNyZWF0aW5nIHRoZSBhY2NvdW50LiBMaWtlbHkgb25seSB1c2VmdWwgd2hlbsAgIGNyZWF0aW5nIG11bHRpcGxlIHBvb2xzIGluIHRoZSBzYW1lIGV4dHJpbnNpYy7UKiBgcm9vdGAgLSBUaGUgYWNjb3VudCB0byBzZXQgYXMgW2BQb29sUm9sZXM6OnJvb3RgXS4NASogYG5vbWluYXRvcmAgLSBUaGUgYWNjb3VudCB0byBzZXQgYXMgdGhlIFtgUG9vbFJvbGVzOjpub21pbmF0b3JgXS78KiBgYm91bmNlcmAgLSBUaGUgYWNjb3VudCB0byBzZXQgYXMgdGhlIFtgUG9vbFJvbGVzOjpib3VuY2VyYF0uABgjIE5vdGUAYQFJbiBhZGRpdGlvbiB0byBgYW1vdW50YCwgdGhlIGNhbGxlciB3aWxsIHRyYW5zZmVyIHRoZSBleGlzdGVudGlhbCBkZXBvc2l0OyBzbyB0aGUgY2FsbGVyDQFuZWVkcyBhdCBoYXZlIGF0IGxlYXN0IGBhbW91bnQgKyBleGlzdGVudGlhbF9kZXBvc2l0YCB0cmFuc2ZlcmFibGUuTGNyZWF0ZV93aXRoX3Bvb2xfaWQUARhhbW91bnQNAQEwQmFsYW5jZU9mPFQ+AAEQcm9vdPkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABJG5vbWluYXRvcvkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABHGJvdW5jZXL5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARxwb29sX2lkEAEYUG9vbElkAAcY7ENyZWF0ZSBhIG5ldyBkZWxlZ2F0aW9uIHBvb2wgd2l0aCBhIHByZXZpb3VzbHkgdXNlZCBwb29sIGlkACwjIEFyZ3VtZW50cwCYc2FtZSBhcyBgY3JlYXRlYCB3aXRoIHRoZSBpbmNsdXNpb24gb2Z4KiBgcG9vbF9pZGAgLSBgQSB2YWxpZCBQb29sSWQuIG5vbWluYXRlCAEccG9vbF9pZBABGFBvb2xJZAABKHZhbGlkYXRvcnMFAgFEVmVjPFQ6OkFjY291bnRJZD4ACDB8Tm9taW5hdGUgb24gYmVoYWxmIG9mIHRoZSBwb29sLgBFAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgc2lnbmVkIGJ5IHRoZSBwb29sIG5vbWluYXRvciBvciB0aGUgcG9vbChyb290IHJvbGUuAEUBVGhpcyBkaXJlY3RseSBmb3J3YXJkcyB0aGUgY2FsbCB0byBhbiBpbXBsZW1lbnRhdGlvbiBvZiBgU3Rha2luZ0ludGVyZmFjZWAgKGUuZy4sRQFgcGFsbGV0LXN0YWtpbmdgKSB0aHJvdWdoIFtgQ29uZmlnOjpTdGFrZUFkYXB0ZXJgXSwgb24gYmVoYWxmIG9mIHRoZSBib25kZWQgcG9vbC4AGCMgTm90ZQBZAUluIGFkZGl0aW9uIHRvIGEgYHJvb3RgIG9yIGBub21pbmF0b3JgIHJvbGUgb2YgYG9yaWdpbmAsIHRoZSBwb29sJ3MgZGVwb3NpdG9yIG5lZWRzIHRvDQFoYXZlIGF0IGxlYXN0IGBkZXBvc2l0b3JfbWluX2JvbmRgIGluIHRoZSBwb29sIHRvIHN0YXJ0IG5vbWluYXRpbmcuJHNldF9zdGF0ZQgBHHBvb2xfaWQQARhQb29sSWQAARRzdGF0ZRkEASRQb29sU3RhdGUACSh0U2V0IGEgbmV3IHN0YXRlIGZvciB0aGUgcG9vbC4AVQFJZiBhIHBvb2wgaXMgYWxyZWFkeSBpbiB0aGUgYERlc3Ryb3lpbmdgIHN0YXRlLCB0aGVuIHVuZGVyIG5vIGNvbmRpdGlvbiBjYW4gaXRzIHN0YXRlNGNoYW5nZSBhZ2Fpbi4AwFRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgZWl0aGVyOgDcMS4gc2lnbmVkIGJ5IHRoZSBib3VuY2VyLCBvciB0aGUgcm9vdCByb2xlIG9mIHRoZSBwb29sLF0BMi4gaWYgdGhlIHBvb2wgY29uZGl0aW9ucyB0byBiZSBvcGVuIGFyZSBOT1QgbWV0IChhcyBkZXNjcmliZWQgYnkgYG9rX3RvX2JlX29wZW5gKSwgYW5kOQEgICB0aGVuIHRoZSBzdGF0ZSBvZiB0aGUgcG9vbCBjYW4gYmUgcGVybWlzc2lvbmxlc3NseSBjaGFuZ2VkIHRvIGBEZXN0cm95aW5nYC4wc2V0X21ldGFkYXRhCAEccG9vbF9pZBABGFBvb2xJZAABIG1ldGFkYXRhOAEcVmVjPHU4PgAKEIBTZXQgYSBuZXcgbWV0YWRhdGEgZm9yIHRoZSBwb29sLgBdAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgc2lnbmVkIGJ5IHRoZSBib3VuY2VyLCBvciB0aGUgcm9vdCByb2xlIG9mIHRoZRRwb29sLixzZXRfY29uZmlncxgBNG1pbl9qb2luX2JvbmQdBAFYQ29uZmlnT3A8QmFsYW5jZU9mPFQ+PgABPG1pbl9jcmVhdGVfYm9uZB0EAVhDb25maWdPcDxCYWxhbmNlT2Y8VD4+AAEkbWF4X3Bvb2xzIQQBNENvbmZpZ09wPHUzMj4AASxtYXhfbWVtYmVycyEEATRDb25maWdPcDx1MzI+AAFQbWF4X21lbWJlcnNfcGVyX3Bvb2whBAE0Q29uZmlnT3A8dTMyPgABVGdsb2JhbF9tYXhfY29tbWlzc2lvbiUEAURDb25maWdPcDxQZXJiaWxsPgALLEEBVXBkYXRlIGNvbmZpZ3VyYXRpb25zIGZvciB0aGUgbm9taW5hdGlvbiBwb29scy4gVGhlIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmVgW2BDb25maWc6OkFkbWluT3JpZ2luYF0uACwjIEFyZ3VtZW50cwCgKiBgbWluX2pvaW5fYm9uZGAgLSBTZXQgW2BNaW5Kb2luQm9uZGBdLrAqIGBtaW5fY3JlYXRlX2JvbmRgIC0gU2V0IFtgTWluQ3JlYXRlQm9uZGBdLoQqIGBtYXhfcG9vbHNgIC0gU2V0IFtgTWF4UG9vbHNgXS6kKiBgbWF4X21lbWJlcnNgIC0gU2V0IFtgTWF4UG9vbE1lbWJlcnNgXS7kKiBgbWF4X21lbWJlcnNfcGVyX3Bvb2xgIC0gU2V0IFtgTWF4UG9vbE1lbWJlcnNQZXJQb29sYF0u4CogYGdsb2JhbF9tYXhfY29tbWlzc2lvbmAgLSBTZXQgW2BHbG9iYWxNYXhDb21taXNzaW9uYF0uMHVwZGF0ZV9yb2xlcxABHHBvb2xfaWQQARhQb29sSWQAASBuZXdfcm9vdCkEAVhDb25maWdPcDxUOjpBY2NvdW50SWQ+AAE0bmV3X25vbWluYXRvcikEAVhDb25maWdPcDxUOjpBY2NvdW50SWQ+AAEsbmV3X2JvdW5jZXIpBAFYQ29uZmlnT3A8VDo6QWNjb3VudElkPgAMHHRVcGRhdGUgdGhlIHJvbGVzIG9mIHRoZSBwb29sLgA9AVRoZSByb290IGlzIHRoZSBvbmx5IGVudGl0eSB0aGF0IGNhbiBjaGFuZ2UgYW55IG9mIHRoZSByb2xlcywgaW5jbHVkaW5nIGl0c2VsZiy4ZXhjbHVkaW5nIHRoZSBkZXBvc2l0b3IsIHdobyBjYW4gbmV2ZXIgY2hhbmdlLgBRAUl0IGVtaXRzIGFuIGV2ZW50LCBub3RpZnlpbmcgVUlzIG9mIHRoZSByb2xlIGNoYW5nZS4gVGhpcyBldmVudCBpcyBxdWl0ZSByZWxldmFudCB0bx0BbW9zdCBwb29sIG1lbWJlcnMgYW5kIHRoZXkgc2hvdWxkIGJlIGluZm9ybWVkIG9mIGNoYW5nZXMgdG8gcG9vbCByb2xlcy4UY2hpbGwEARxwb29sX2lkEAEYUG9vbElkAA1EcENoaWxsIG9uIGJlaGFsZiBvZiB0aGUgcG9vbC4AQQFUaGUgZGlzcGF0Y2ggb3JpZ2luIG9mIHRoaXMgY2FsbCBjYW4gYmUgc2lnbmVkIGJ5IHRoZSBwb29sIG5vbWluYXRvciBvciB0aGUgcG9vbKByb290IHJvbGUsIHNhbWUgYXMgW2BQYWxsZXQ6Om5vbWluYXRlYF0uAEUBVGhpcyBkaXJlY3RseSBmb3J3YXJkcyB0aGUgY2FsbCB0byBhbiBpbXBsZW1lbnRhdGlvbiBvZiBgU3Rha2luZ0ludGVyZmFjZWAgKGUuZy4sRQFgcGFsbGV0LXN0YWtpbmdgKSB0aHJvdWdoIFtgQ29uZmlnOjpTdGFrZUFkYXB0ZXJgXSwgb24gYmVoYWxmIG9mIHRoZSBib25kZWQgcG9vbC4ATQFVbmRlciBjZXJ0YWluIGNvbmRpdGlvbnMsIHRoaXMgY2FsbCBjYW4gYmUgZGlzcGF0Y2hlZCBwZXJtaXNzaW9ubGVzc2x5IChpLmUuIGJ5IGFueSRhY2NvdW50KS4ArCMgQ29uZGl0aW9ucyBmb3IgYSBwZXJtaXNzaW9ubGVzcyBkaXNwYXRjaDpVASogV2hlbiBwb29sIGRlcG9zaXRvciBoYXMgbGVzcyB0aGFuIGBNaW5Ob21pbmF0b3JCb25kYCBzdGFrZWQsIG90aGVyd2lzZSBwb29sIG1lbWJlcnNcICBhcmUgdW5hYmxlIHRvIHVuYm9uZC4AnCMgQ29uZGl0aW9ucyBmb3IgcGVybWlzc2lvbmVkIGRpc3BhdGNoOrQqIFRoZSBjYWxsZXIgaXMgdGhlIHBvb2wncyBub21pbmF0b3Igb3Igcm9vdC5AYm9uZF9leHRyYV9vdGhlcggBGG1lbWJlcvkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFGV4dHJhFQQBXEJvbmRFeHRyYTxCYWxhbmNlT2Y8VD4+AA4kVQFgb3JpZ2luYCBib25kcyBmdW5kcyBmcm9tIGBleHRyYWAgZm9yIHNvbWUgcG9vbCBtZW1iZXIgYG1lbWJlcmAgaW50byB0aGVpciByZXNwZWN0aXZlGHBvb2xzLgBJAWBvcmlnaW5gIGNhbiBib25kIGV4dHJhIGZ1bmRzIGZyb20gZnJlZSBiYWxhbmNlIG9yIHBlbmRpbmcgcmV3YXJkcyB3aGVuIGBvcmlnaW4gPT0cb3RoZXJgLgBFAUluIHRoZSBjYXNlIG9mIGBvcmlnaW4gIT0gb3RoZXJgLCBgb3JpZ2luYCBjYW4gb25seSBib25kIGV4dHJhIHBlbmRpbmcgcmV3YXJkcyBvZhUBYG90aGVyYCBtZW1iZXJzIGFzc3VtaW5nIHNldF9jbGFpbV9wZXJtaXNzaW9uIGZvciB0aGUgZ2l2ZW4gbWVtYmVyIGlzwGBQZXJtaXNzaW9ubGVzc0NvbXBvdW5kYCBvciBgUGVybWlzc2lvbmxlc3NBbGxgLlBzZXRfY2xhaW1fcGVybWlzc2lvbgQBKHBlcm1pc3Npb24tBAE8Q2xhaW1QZXJtaXNzaW9uAA8cSQFBbGxvd3MgYSBwb29sIG1lbWJlciB0byBzZXQgYSBjbGFpbSBwZXJtaXNzaW9uIHRvIGFsbG93IG9yIGRpc2FsbG93IHBlcm1pc3Npb25sZXNzYGJvbmRpbmcgYW5kIHdpdGhkcmF3aW5nLgAsIyBBcmd1bWVudHMAeCogYG9yaWdpbmAgLSBNZW1iZXIgb2YgYSBwb29sLrgqIGBwZXJtaXNzaW9uYCAtIFRoZSBwZXJtaXNzaW9uIHRvIGJlIGFwcGxpZWQuSGNsYWltX3BheW91dF9vdGhlcgQBFG90aGVyAAEwVDo6QWNjb3VudElkABAQAQFgb3JpZ2luYCBjYW4gY2xhaW0gcGF5b3V0cyBvbiBzb21lIHBvb2wgbWVtYmVyIGBvdGhlcmAncyBiZWhhbGYuAFUBUG9vbCBtZW1iZXIgYG90aGVyYCBtdXN0IGhhdmUgYSBgUGVybWlzc2lvbmxlc3NXaXRoZHJhd2Agb3IgYFBlcm1pc3Npb25sZXNzQWxsYCBjbGFpbahwZXJtaXNzaW9uIGZvciB0aGlzIGNhbGwgdG8gYmUgc3VjY2Vzc2Z1bC44c2V0X2NvbW1pc3Npb24IARxwb29sX2lkEAEYUG9vbElkAAE4bmV3X2NvbW1pc3Npb24xBAF8T3B0aW9uPChQZXJiaWxsLCBUOjpBY2NvdW50SWQpPgARFHRTZXQgdGhlIGNvbW1pc3Npb24gb2YgYSBwb29sLlUBQm90aCBhIGNvbW1pc3Npb24gcGVyY2VudGFnZSBhbmQgYSBjb21taXNzaW9uIHBheWVlIG11c3QgYmUgcHJvdmlkZWQgaW4gdGhlIGBjdXJyZW50YF0BdHVwbGUuIFdoZXJlIGEgYGN1cnJlbnRgIG9mIGBOb25lYCBpcyBwcm92aWRlZCwgYW55IGN1cnJlbnQgY29tbWlzc2lvbiB3aWxsIGJlIHJlbW92ZWQuAE0BLSBJZiBhIGBOb25lYCBpcyBzdXBwbGllZCB0byBgbmV3X2NvbW1pc3Npb25gLCBleGlzdGluZyBjb21taXNzaW9uIHdpbGwgYmUgcmVtb3ZlZC5Ic2V0X2NvbW1pc3Npb25fbWF4CAEccG9vbF9pZBABGFBvb2xJZAABOG1heF9jb21taXNzaW9utAEcUGVyYmlsbAASFJRTZXQgdGhlIG1heGltdW0gY29tbWlzc2lvbiBvZiBhIHBvb2wuADkBLSBJbml0aWFsIG1heCBjYW4gYmUgc2V0IHRvIGFueSBgUGVyYmlsbGAsIGFuZCBvbmx5IHNtYWxsZXIgdmFsdWVzIHRoZXJlYWZ0ZXIuNQEtIEN1cnJlbnQgY29tbWlzc2lvbiB3aWxsIGJlIGxvd2VyZWQgaW4gdGhlIGV2ZW50IGl0IGlzIGhpZ2hlciB0aGFuIGEgbmV3IG1heDQgIGNvbW1pc3Npb24uaHNldF9jb21taXNzaW9uX2NoYW5nZV9yYXRlCAEccG9vbF9pZBABGFBvb2xJZAABLGNoYW5nZV9yYXRlOQQBnENvbW1pc3Npb25DaGFuZ2VSYXRlPEJsb2NrTnVtYmVyRm9yPFQ+PgATEKhTZXQgdGhlIGNvbW1pc3Npb24gY2hhbmdlIHJhdGUgZm9yIGEgcG9vbC4APQFJbml0aWFsIGNoYW5nZSByYXRlIGlzIG5vdCBib3VuZGVkLCB3aGVyZWFzIHN1YnNlcXVlbnQgdXBkYXRlcyBjYW4gb25seSBiZSBtb3JldHJlc3RyaWN0aXZlIHRoYW4gdGhlIGN1cnJlbnQuQGNsYWltX2NvbW1pc3Npb24EARxwb29sX2lkEAEYUG9vbElkABRAZENsYWltIHBlbmRpbmcgY29tbWlzc2lvbi4APQFUaGUgYHJvb3RgIHJvbGUgb2YgdGhlIHBvb2wgaXMgX2Fsd2F5c18gYWxsb3dlZCB0byBjbGFpbSB0aGUgcG9vbCdzIGNvbW1pc3Npb24uAFUBSWYgdGhlIHBvb2wgaGFzIHNldCBgQ29tbWlzc2lvbkNsYWltUGVybWlzc2lvbjo6UGVybWlzc2lvbmxlc3NgLCB0aGVuIGFueSBhY2NvdW50IGNhbth0cmlnZ2VyIHRoZSBwcm9jZXNzIG9mIGNsYWltaW5nIHRoZSBwb29sJ3MgY29tbWlzc2lvbi4AQQFJZiB0aGUgcG9vbCBoYXMgc2V0IGl0cyBgQ29tbWlzc2lvbkNsYWltUGVybWlzc2lvbmAgdG8gYEFjY291bnQoYWNjKWAsIHRoZW4gb25seSBhY2NvdW50czAqIGBhY2NgLCBhbmRkKiB0aGUgcG9vbCdzIHJvb3QgYWNjb3VudAC4bWF5IGNhbGwgdGhpcyBleHRyaW5zaWMgb24gYmVoYWxmIG9mIHRoZSBwb29sLgAtAVBlbmRpbmcgY29tbWlzc2lvbnMgYXJlIHBhaWQgb3V0IGFuZCBhZGRlZCB0byB0aGUgdG90YWwgY2xhaW1lZCBjb21taXNzaW9uLrhUaGUgdG90YWwgcGVuZGluZyBjb21taXNzaW9uIGlzIHJlc2V0IHRvIHplcm8uTGFkanVzdF9wb29sX2RlcG9zaXQEARxwb29sX2lkEAEYUG9vbElkABUc7FRvcCB1cCB0aGUgZGVmaWNpdCBvciB3aXRoZHJhdyB0aGUgZXhjZXNzIEVEIGZyb20gdGhlIHBvb2wuAFEBV2hlbiBhIHBvb2wgaXMgY3JlYXRlZCwgdGhlIHBvb2wgZGVwb3NpdG9yIHRyYW5zZmVycyBFRCB0byB0aGUgcmV3YXJkIGFjY291bnQgb2YgdGhlVQFwb29sLiBFRCBpcyBzdWJqZWN0IHRvIGNoYW5nZSBhbmQgb3ZlciB0aW1lLCB0aGUgZGVwb3NpdCBpbiB0aGUgcmV3YXJkIGFjY291bnQgbWF5IGJlUQFpbnN1ZmZpY2llbnQgdG8gY292ZXIgdGhlIEVEIGRlZmljaXQgb2YgdGhlIHBvb2wgb3IgdmljZS12ZXJzYSB3aGVyZSB0aGVyZSBpcyBleGNlc3MxAWRlcG9zaXQgdG8gdGhlIHBvb2wuIFRoaXMgY2FsbCBhbGxvd3MgYW55b25lIHRvIGFkanVzdCB0aGUgRUQgZGVwb3NpdCBvZiB0aGX0cG9vbCBieSBlaXRoZXIgdG9wcGluZyB1cCB0aGUgZGVmaWNpdCBvciBjbGFpbWluZyB0aGUgZXhjZXNzLnxzZXRfY29tbWlzc2lvbl9jbGFpbV9wZXJtaXNzaW9uCAEccG9vbF9pZBABGFBvb2xJZAABKHBlcm1pc3Npb249BAG8T3B0aW9uPENvbW1pc3Npb25DbGFpbVBlcm1pc3Npb248VDo6QWNjb3VudElkPj4AFhDMU2V0IG9yIHJlbW92ZSBhIHBvb2wncyBjb21taXNzaW9uIGNsYWltIHBlcm1pc3Npb24uAGEBRGV0ZXJtaW5lcyB3aG8gY2FuIGNsYWltIHRoZSBwb29sJ3MgcGVuZGluZyBjb21taXNzaW9uLiBPbmx5IHRoZSBgUm9vdGAgcm9sZSBvZiB0aGUgcG9vbMhpcyBhYmxlIHRvIGNvbmZpZ3VyZSBjb21taXNzaW9uIGNsYWltIHBlcm1pc3Npb25zLixhcHBseV9zbGFzaAQBOG1lbWJlcl9hY2NvdW50+QEBUEFjY291bnRJZExvb2t1cE9mPFQ+ABckiEFwcGx5IGEgcGVuZGluZyBzbGFzaCBvbiBhIG1lbWJlci4AJQFGYWlscyB1bmxlc3MgW2BjcmF0ZTo6cGFsbGV0OjpDb25maWc6OlN0YWtlQWRhcHRlcmBdIGlzIG9mIHN0cmF0ZWd5IHR5cGU6pFtgYWRhcHRlcjo6U3Rha2VTdHJhdGVneVR5cGU6OkRlbGVnYXRlYF0uAF0BVGhlIHBlbmRpbmcgc2xhc2ggYW1vdW50IG9mIHRoZSBtZW1iZXIgbXVzdCBiZSBlcXVhbCBvciBtb3JlIHRoYW4gYEV4aXN0ZW50aWFsRGVwb3NpdGAuUQFUaGlzIGNhbGwgY2FuIGJlIGRpc3BhdGNoZWQgcGVybWlzc2lvbmxlc3NseSAoaS5lLiBieSBhbnkgYWNjb3VudCkuIElmIHRoZSBleGVjdXRpb25JAWlzIHN1Y2Nlc3NmdWwsIGZlZSBpcyByZWZ1bmRlZCBhbmQgY2FsbGVyIG1heSBiZSByZXdhcmRlZCB3aXRoIGEgcGFydCBvZiB0aGUgc2xhc2gNAWJhc2VkIG9uIHRoZSBbYGNyYXRlOjpwYWxsZXQ6OkNvbmZpZzo6U3Rha2VBZGFwdGVyYF0gY29uZmlndXJhdGlvbi5IbWlncmF0ZV9kZWxlZ2F0aW9uBAE4bWVtYmVyX2FjY291bnT5AQFQQWNjb3VudElkTG9va3VwT2Y8VD4AGCQdAU1pZ3JhdGVzIGRlbGVnYXRlZCBmdW5kcyBmcm9tIHRoZSBwb29sIGFjY291bnQgdG8gdGhlIGBtZW1iZXJfYWNjb3VudGAuACUBRmFpbHMgdW5sZXNzIFtgY3JhdGU6OnBhbGxldDo6Q29uZmlnOjpTdGFrZUFkYXB0ZXJgXSBpcyBvZiBzdHJhdGVneSB0eXBlOqRbYGFkYXB0ZXI6OlN0YWtlU3RyYXRlZ3lUeXBlOjpEZWxlZ2F0ZWBdLgApAVRoaXMgaXMgYSBwZXJtaXNzaW9uLWxlc3MgY2FsbCBhbmQgcmVmdW5kcyBhbnkgZmVlIGlmIGNsYWltIGlzIHN1Y2Nlc3NmdWwuAF0BSWYgdGhlIHBvb2wgaGFzIG1pZ3JhdGVkIHRvIGRlbGVnYXRpb24gYmFzZWQgc3Rha2luZywgdGhlIHN0YWtlZCB0b2tlbnMgb2YgcG9vbCBtZW1iZXJzKQFjYW4gYmUgbW92ZWQgYW5kIGhlbGQgaW4gdGhlaXIgb3duIGFjY291bnQuIFNlZSBbYGFkYXB0ZXI6OkRlbGVnYXRlU3Rha2VgXXhtaWdyYXRlX3Bvb2xfdG9fZGVsZWdhdGVfc3Rha2UEARxwb29sX2lkEAEYUG9vbElkABkk9E1pZ3JhdGUgcG9vbCBmcm9tIFtgYWRhcHRlcjo6U3Rha2VTdHJhdGVneVR5cGU6OlRyYW5zZmVyYF0gdG+kW2BhZGFwdGVyOjpTdGFrZVN0cmF0ZWd5VHlwZTo6RGVsZWdhdGVgXS4AJQFGYWlscyB1bmxlc3MgW2BjcmF0ZTo6cGFsbGV0OjpDb25maWc6OlN0YWtlQWRhcHRlcmBdIGlzIG9mIHN0cmF0ZWd5IHR5cGU6pFtgYWRhcHRlcjo6U3Rha2VTdHJhdGVneVR5cGU6OkRlbGVnYXRlYF0uAEEBVGhpcyBjYWxsIGNhbiBiZSBkaXNwYXRjaGVkIHBlcm1pc3Npb25sZXNzbHksIGFuZCByZWZ1bmRzIGFueSBmZWUgaWYgc3VjY2Vzc2Z1bC4ASQFJZiB0aGUgcG9vbCBoYXMgYWxyZWFkeSBtaWdyYXRlZCB0byBkZWxlZ2F0aW9uIGJhc2VkIHN0YWtpbmcsIHRoaXMgY2FsbCB3aWxsIGZhaWwuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLhUECFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyRCb25kRXh0cmEEHEJhbGFuY2UBGAEILEZyZWVCYWxhbmNlBAAYARxCYWxhbmNlAAAAHFJld2FyZHMAAQAAGQQIXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzJFBvb2xTdGF0ZQABDBBPcGVuAAAAHEJsb2NrZWQAAQAoRGVzdHJveWluZwACAAAdBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBGAEMEE5vb3AAAAAMU2V0BAAYAQRUAAEAGFJlbW92ZQACAAAhBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBEAEMEE5vb3AAAAAMU2V0BAAQAQRUAAEAGFJlbW92ZQACAAAlBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBtAEMEE5vb3AAAAAMU2V0BAC0AQRUAAEAGFJlbW92ZQACAAApBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBAAEMEE5vb3AAAAAMU2V0BAAAAQRUAAEAGFJlbW92ZQACAAAtBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHM8Q2xhaW1QZXJtaXNzaW9uAAEQMFBlcm1pc3Npb25lZAAAAFhQZXJtaXNzaW9ubGVzc0NvbXBvdW5kAAEAWFBlcm1pc3Npb25sZXNzV2l0aGRyYXcAAgBEUGVybWlzc2lvbmxlc3NBbGwAAwAAMQQEGE9wdGlvbgQEVAE1BAEIEE5vbmUAAAAQU29tZQQANQQAAAEAADUEAAAECLQAADkECFxwYWxsZXRfbm9taW5hdGlvbl9wb29sc1BDb21taXNzaW9uQ2hhbmdlUmF0ZQQsQmxvY2tOdW1iZXIBEAAIATBtYXhfaW5jcmVhc2W0ARxQZXJiaWxsAAEkbWluX2RlbGF5EAEsQmxvY2tOdW1iZXIAAD0EBBhPcHRpb24EBFQBQQQBCBBOb25lAAAAEFNvbWUEAEEEAAABAABBBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHNkQ29tbWlzc2lvbkNsYWltUGVybWlzc2lvbgQkQWNjb3VudElkAQABCDhQZXJtaXNzaW9ubGVzcwAAABxBY2NvdW50BAAAASRBY2NvdW50SWQAAQAARQQMTHBhbGxldF9mYXN0X3Vuc3Rha2UYcGFsbGV0EENhbGwEBFQAAQxUcmVnaXN0ZXJfZmFzdF91bnN0YWtlAABoiFJlZ2lzdGVyIG9uZXNlbGYgZm9yIGZhc3QtdW5zdGFrZS4ASCMjIERpc3BhdGNoIE9yaWdpbgBFAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgKnNpZ25lZCogYnkgd2hvZXZlciBpcyBwZXJtaXR0ZWQgdG8gY2FsbPB1bmJvbmQgZnVuZHMgYnkgdGhlIHN0YWtpbmcgc3lzdGVtLiBTZWUgW2BDb25maWc6OlN0YWtpbmdgXS4AKCMjIERldGFpbHMAOQFUaGUgc3Rhc2ggYXNzb2NpYXRlZCB3aXRoIHRoZSBvcmlnaW4gbXVzdCBoYXZlIG5vIG9uZ29pbmcgdW5sb2NraW5nIGNodW5rcy4gSWZdAXN1Y2Nlc3NmdWwsIHRoaXMgd2lsbCBmdWxseSB1bmJvbmQgYW5kIGNoaWxsIHRoZSBzdGFzaC4gVGhlbiwgaXQgd2lsbCBlbnF1ZXVlIHRoZSBzdGFzaIB0byBiZSBjaGVja2VkIGluIGZ1cnRoZXIgYmxvY2tzLgBRAUlmIGJ5IHRoZSB0aW1lIHRoaXMgaXMgY2FsbGVkLCB0aGUgc3Rhc2ggaXMgYWN0dWFsbHkgZWxpZ2libGUgZm9yIGZhc3QtdW5zdGFrZSwgdGhlbkUBdGhleSBhcmUgZ3VhcmFudGVlZCB0byByZW1haW4gZWxpZ2libGUsIGJlY2F1c2UgdGhlIGNhbGwgd2lsbCBjaGlsbCB0aGVtIGFzIHdlbGwuAD0BSWYgdGhlIGNoZWNrIHdvcmtzLCB0aGUgZW50aXJlIHN0YWtpbmcgZGF0YSBpcyByZW1vdmVkLCBpLmUuIHRoZSBzdGFzaCBpcyBmdWxseSR1bnN0YWtlZC4AXQFJZiB0aGUgY2hlY2sgZmFpbHMsIHRoZSBzdGFzaCByZW1haW5zIGNoaWxsZWQgYW5kIHdhaXRpbmcgZm9yIGJlaW5nIHVuYm9uZGVkIGFzIGluIHdpdGhhAXRoZSBub3JtYWwgc3Rha2luZyBzeXN0ZW0sIGJ1dCB0aGV5IGxvc2UgcGFydCBvZiB0aGVpciB1bmJvbmRpbmcgY2h1bmtzIGR1ZSB0byBjb25zdW1pbmdYdGhlIGNoYWluJ3MgcmVzb3VyY2VzLgAkIyMgRXZlbnRzAAkBU29tZSBldmVudHMgZnJvbSB0aGUgc3Rha2luZyBhbmQgY3VycmVuY3kgc3lzdGVtIG1pZ2h0IGJlIGVtaXR0ZWQuKGRlcmVnaXN0ZXIAAUikRGVyZWdpc3RlciBvbmVzZWxmIGZyb20gdGhlIGZhc3QtdW5zdGFrZS4ASCMjIERpc3BhdGNoIE9yaWdpbgBFAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIG11c3QgYmUgKnNpZ25lZCogYnkgd2hvZXZlciBpcyBwZXJtaXR0ZWQgdG8gY2FsbPB1bmJvbmQgZnVuZHMgYnkgdGhlIHN0YWtpbmcgc3lzdGVtLiBTZWUgW2BDb25maWc6OlN0YWtpbmdgXS4AKCMjIERldGFpbHMAYQFUaGlzIGlzIHVzZWZ1bCBpZiBvbmUgaXMgcmVnaXN0ZXJlZCwgdGhleSBhcmUgc3RpbGwgd2FpdGluZywgYW5kIHRoZXkgY2hhbmdlIHRoZWlyIG1pbmQuAFkBTm90ZSB0aGF0IHRoZSBhc3NvY2lhdGVkIHN0YXNoIGlzIHN0aWxsIGZ1bGx5IHVuYm9uZGVkIGFuZCBjaGlsbGVkIGFzIGEgY29uc2VxdWVuY2Ugb2ZZAWNhbGxpbmcgW2BQYWxsZXQ6OnJlZ2lzdGVyX2Zhc3RfdW5zdGFrZWBdLiBUaGVyZWZvcmUsIHRoaXMgc2hvdWxkIHByb2JhYmx5IGJlIGZvbGxvd2VksGJ5IGEgY2FsbCB0byBgcmVib25kYCBpbiB0aGUgc3Rha2luZyBzeXN0ZW0uACQjIyBFdmVudHMACQFTb21lIGV2ZW50cyBmcm9tIHRoZSBzdGFraW5nIGFuZCBjdXJyZW5jeSBzeXN0ZW0gbWlnaHQgYmUgZW1pdHRlZC4cY29udHJvbAQBNGVyYXNfdG9fY2hlY2sQASBFcmFJbmRleAACNJRDb250cm9sIHRoZSBvcGVyYXRpb24gb2YgdGhpcyBwYWxsZXQuAEgjIyBEaXNwYXRjaCBPcmlnaW4ADQFUaGUgZGlzcGF0Y2ggb3JpZ2luIG9mIHRoaXMgY2FsbCBtdXN0IGJlIFtgQ29uZmlnOjpDb250cm9sT3JpZ2luYF0uACgjIyBEZXRhaWxzAEEBQ2FuIHNldCB0aGUgbnVtYmVyIG9mIGVyYXMgdG8gY2hlY2sgcGVyIGJsb2NrLCBhbmQgcG90ZW50aWFsbHkgb3RoZXIgYWRtaW4gd29yay4AJCMjIEV2ZW50cwCkTm8gZXZlbnRzIGFyZSBlbWl0dGVkIGZyb20gdGhpcyBkaXNwYXRjaC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuSQQMeHBhbGxldF9zdGFraW5nX2FzeW5jX2FoX2NsaWVudBhwYWxsZXQQQ2FsbAQEVAABDDR2YWxpZGF0b3Jfc2V0BAEYcmVwb3J0TQQBrHJjX2NsaWVudDo6VmFsaWRhdG9yU2V0UmVwb3J0PFQ6OkFjY291bnRJZD4AAAAgc2V0X21vZGUEARBtb2RlUQQBNE9wZXJhdGluZ01vZGUAAQQBAUFsbG93cyBnb3Zlcm5hbmNlIHRvIGZvcmNlIHNldCB0aGUgb3BlcmF0aW5nIG1vZGUgb2YgdGhlIHBhbGxldC5YZm9yY2Vfb25fbWlncmF0aW9uX2VuZAACBCUBbWFudWFsbHkgZG8gd2hhdCB0aGlzIHBhbGxldCB3YXMgbWVhbnQgdG8gZG8gYXQgdGhlIGVuZCBvZiB0aGUgbWlncmF0aW9uLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy5NBAh4cGFsbGV0X3N0YWtpbmdfYXN5bmNfcmNfY2xpZW50SFZhbGlkYXRvclNldFJlcG9ydAQkQWNjb3VudElkAQAAEAFEbmV3X3ZhbGlkYXRvcl9zZXQFAgE4VmVjPEFjY291bnRJZD4AAQhpZBABDHUzMgABLHBydW5lX3VwX3RvuAFQT3B0aW9uPFNlc3Npb25JbmRleD4AASBsZWZ0b3ZlciABEGJvb2wAAFEECHhwYWxsZXRfc3Rha2luZ19hc3luY19haF9jbGllbnQ0T3BlcmF0aW5nTW9kZQABDBxQYXNzaXZlAAAAIEJ1ZmZlcmVkAAEAGEFjdGl2ZQACAABVBBBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zNGNvbmZpZ3VyYXRpb24YcGFsbGV0EENhbGwEBFQAAbh8c2V0X3ZhbGlkYXRpb25fdXBncmFkZV9jb29sZG93bgQBDG5ldxABREJsb2NrTnVtYmVyRm9yPFQ+AAAEkFNldCB0aGUgdmFsaWRhdGlvbiB1cGdyYWRlIGNvb2xkb3duLnBzZXRfdmFsaWRhdGlvbl91cGdyYWRlX2RlbGF5BAEMbmV3EAFEQmxvY2tOdW1iZXJGb3I8VD4AAQSEU2V0IHRoZSB2YWxpZGF0aW9uIHVwZ3JhZGUgZGVsYXkuZHNldF9jb2RlX3JldGVudGlvbl9wZXJpb2QEAQxuZXcQAURCbG9ja051bWJlckZvcjxUPgACBNBTZXQgdGhlIGFjY2VwdGFuY2UgcGVyaW9kIGZvciBhbiBpbmNsdWRlZCBjYW5kaWRhdGUuRHNldF9tYXhfY29kZV9zaXplBAEMbmV3EAEMdTMyAAME3FNldCB0aGUgbWF4IHZhbGlkYXRpb24gY29kZSBzaXplIGZvciBpbmNvbWluZyB1cGdyYWRlcy5Ac2V0X21heF9wb3Zfc2l6ZQQBDG5ldxABDHUzMgAEBMRTZXQgdGhlIG1heCBQT1YgYmxvY2sgc2l6ZSBmb3IgaW5jb21pbmcgdXBncmFkZXMuWHNldF9tYXhfaGVhZF9kYXRhX3NpemUEAQxuZXcQAQx1MzIABQSUU2V0IHRoZSBtYXggaGVhZCBkYXRhIHNpemUgZm9yIHBhcmFzLkhzZXRfY29yZXRpbWVfY29yZXMEAQxuZXcQAQx1MzIABhCsU2V0IHRoZSBudW1iZXIgb2YgY29yZXRpbWUgZXhlY3V0aW9uIGNvcmVzLgBRAU5PVEU6IHRoYXQgdGhpcyBjb25maWd1cmF0aW9uIGlzIG1hbmFnZWQgYnkgdGhlIGNvcmV0aW1lIGNoYWluLiBPbmx5IG1hbnVhbGx5IGNoYW5nZbB0aGlzLCBpZiB5b3UgcmVhbGx5IGtub3cgd2hhdCB5b3UgYXJlIGRvaW5nIXBzZXRfZ3JvdXBfcm90YXRpb25fZnJlcXVlbmN5BAEMbmV3EAFEQmxvY2tOdW1iZXJGb3I8VD4ACATQU2V0IHRoZSBwYXJhY2hhaW4gdmFsaWRhdG9yLWdyb3VwIHJvdGF0aW9uIGZyZXF1ZW5jeXRzZXRfcGFyYXNfYXZhaWxhYmlsaXR5X3BlcmlvZAQBDG5ldxABREJsb2NrTnVtYmVyRm9yPFQ+AAkEmFNldCB0aGUgYXZhaWxhYmlsaXR5IHBlcmlvZCBmb3IgcGFyYXMuYHNldF9zY2hlZHVsaW5nX2xvb2thaGVhZAQBDG5ldxABDHUzMgALBDkBU2V0IHRoZSBzY2hlZHVsaW5nIGxvb2thaGVhZCwgaW4gZXhwZWN0ZWQgbnVtYmVyIG9mIGJsb2NrcyBhdCBwZWFrIHRocm91Z2hwdXQubHNldF9tYXhfdmFsaWRhdG9yc19wZXJfY29yZQQBDG5ld7gBLE9wdGlvbjx1MzI+AAwE7FNldCB0aGUgbWF4aW11bSBudW1iZXIgb2YgdmFsaWRhdG9ycyB0byBhc3NpZ24gdG8gYW55IGNvcmUuSHNldF9tYXhfdmFsaWRhdG9ycwQBDG5ld7gBLE9wdGlvbjx1MzI+AA0EDQFTZXQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHZhbGlkYXRvcnMgdG8gdXNlIGluIHBhcmFjaGFpbiBjb25zZW5zdXMuSHNldF9kaXNwdXRlX3BlcmlvZAQBDG5ldxABMFNlc3Npb25JbmRleAAOBA0BU2V0IHRoZSBkaXNwdXRlIHBlcmlvZCwgaW4gbnVtYmVyIG9mIHNlc3Npb25zIHRvIGtlZXAgZm9yIGRpc3B1dGVzLrRzZXRfZGlzcHV0ZV9wb3N0X2NvbmNsdXNpb25fYWNjZXB0YW5jZV9wZXJpb2QEAQxuZXcQAURCbG9ja051bWJlckZvcjxUPgAPBMhTZXQgdGhlIGRpc3B1dGUgcG9zdCBjb25jbHVzaW9uIGFjY2VwdGFuY2UgcGVyaW9kLkRzZXRfbm9fc2hvd19zbG90cwQBDG5ldxABDHUzMgASCPhTZXQgdGhlIG5vIHNob3cgc2xvdHMsIGluIG51bWJlciBvZiBudW1iZXIgb2YgY29uc2Vuc3VzIHNsb3RzLkxNdXN0IGJlIGF0IGxlYXN0IDEuUHNldF9uX2RlbGF5X3RyYW5jaGVzBAEMbmV3EAEMdTMyABMEnFNldCB0aGUgdG90YWwgbnVtYmVyIG9mIGRlbGF5IHRyYW5jaGVzLnhzZXRfemVyb3RoX2RlbGF5X3RyYW5jaGVfd2lkdGgEAQxuZXcQAQx1MzIAFASMU2V0IHRoZSB6ZXJvdGggZGVsYXkgdHJhbmNoZSB3aWR0aC5Qc2V0X25lZWRlZF9hcHByb3ZhbHMEAQxuZXcQAQx1MzIAFQTcU2V0IHRoZSBudW1iZXIgb2YgdmFsaWRhdG9ycyBuZWVkZWQgdG8gYXBwcm92ZSBhIGJsb2NrLnBzZXRfcmVsYXlfdnJmX21vZHVsb19zYW1wbGVzBAEMbmV3EAEMdTMyABYEWQFTZXQgdGhlIG51bWJlciBvZiBzYW1wbGVzIHRvIGRvIG9mIHRoZSBgUmVsYXlWUkZNb2R1bG9gIGFwcHJvdmFsIGFzc2lnbm1lbnQgY3JpdGVyaW9uLmhzZXRfbWF4X3Vwd2FyZF9xdWV1ZV9jb3VudAQBDG5ldxABDHUzMgAXBC0BU2V0cyB0aGUgbWF4aW11bSBpdGVtcyB0aGF0IGNhbiBwcmVzZW50IGluIGEgdXB3YXJkIGRpc3BhdGNoIHF1ZXVlIGF0IG9uY2UuZHNldF9tYXhfdXB3YXJkX3F1ZXVlX3NpemUEAQxuZXcQAQx1MzIAGAhNAVNldHMgdGhlIG1heGltdW0gdG90YWwgc2l6ZSBvZiBpdGVtcyB0aGF0IGNhbiBwcmVzZW50IGluIGEgdXB3YXJkIGRpc3BhdGNoIHF1ZXVlIGF0FG9uY2UudHNldF9tYXhfZG93bndhcmRfbWVzc2FnZV9zaXplBAEMbmV3EAEMdTMyABkEnFNldCB0aGUgY3JpdGljYWwgZG93bndhcmQgbWVzc2FnZSBzaXplLmxzZXRfbWF4X3Vwd2FyZF9tZXNzYWdlX3NpemUEAQxuZXcQAQx1MzIAGwQtAVNldHMgdGhlIG1heGltdW0gc2l6ZSBvZiBhbiB1cHdhcmQgbWVzc2FnZSB0aGF0IGNhbiBiZSBzZW50IGJ5IGEgY2FuZGlkYXRlLqBzZXRfbWF4X3Vwd2FyZF9tZXNzYWdlX251bV9wZXJfY2FuZGlkYXRlBAEMbmV3EAEMdTMyABwEBQFTZXRzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBtZXNzYWdlcyB0aGF0IGEgY2FuZGlkYXRlIGNhbiBjb250YWluLmRzZXRfaHJtcF9vcGVuX3JlcXVlc3RfdHRsBAEMbmV3EAEMdTMyAB0ENQFTZXRzIHRoZSBudW1iZXIgb2Ygc2Vzc2lvbnMgYWZ0ZXIgd2hpY2ggYW4gSFJNUCBvcGVuIGNoYW5uZWwgcmVxdWVzdCBleHBpcmVzLlxzZXRfaHJtcF9zZW5kZXJfZGVwb3NpdAQBDG5ldxgBHEJhbGFuY2UAHgRRAVNldHMgdGhlIGFtb3VudCBvZiBmdW5kcyB0aGF0IHRoZSBzZW5kZXIgc2hvdWxkIHByb3ZpZGUgZm9yIG9wZW5pbmcgYW4gSFJNUCBjaGFubmVsLmhzZXRfaHJtcF9yZWNpcGllbnRfZGVwb3NpdAQBDG5ldxgBHEJhbGFuY2UAHwhhAVNldHMgdGhlIGFtb3VudCBvZiBmdW5kcyB0aGF0IHRoZSByZWNpcGllbnQgc2hvdWxkIHByb3ZpZGUgZm9yIGFjY2VwdGluZyBvcGVuaW5nIGFuIEhSTVAgY2hhbm5lbC50c2V0X2hybXBfY2hhbm5lbF9tYXhfY2FwYWNpdHkEAQxuZXcQAQx1MzIAIAQdAVNldHMgdGhlIG1heGltdW0gbnVtYmVyIG9mIG1lc3NhZ2VzIGFsbG93ZWQgaW4gYW4gSFJNUCBjaGFubmVsIGF0IG9uY2UufHNldF9ocm1wX2NoYW5uZWxfbWF4X3RvdGFsX3NpemUEAQxuZXcQAQx1MzIAIQRRAVNldHMgdGhlIG1heGltdW0gdG90YWwgc2l6ZSBvZiBtZXNzYWdlcyBpbiBieXRlcyBhbGxvd2VkIGluIGFuIEhSTVAgY2hhbm5lbCBhdCBvbmNlLpxzZXRfaHJtcF9tYXhfcGFyYWNoYWluX2luYm91bmRfY2hhbm5lbHMEAQxuZXcQAQx1MzIAIgRJAVNldHMgdGhlIG1heGltdW0gbnVtYmVyIG9mIGluYm91bmQgSFJNUCBjaGFubmVscyBhIHBhcmFjaGFpbiBpcyBhbGxvd2VkIHRvIGFjY2VwdC6Ec2V0X2hybXBfY2hhbm5lbF9tYXhfbWVzc2FnZV9zaXplBAEMbmV3EAEMdTMyACQEPQFTZXRzIHRoZSBtYXhpbXVtIHNpemUgb2YgYSBtZXNzYWdlIHRoYXQgY291bGQgZXZlciBiZSBwdXQgaW50byBhbiBIUk1QIGNoYW5uZWwuoHNldF9ocm1wX21heF9wYXJhY2hhaW5fb3V0Ym91bmRfY2hhbm5lbHMEAQxuZXcQAQx1MzIAJQRFAVNldHMgdGhlIG1heGltdW0gbnVtYmVyIG9mIG91dGJvdW5kIEhSTVAgY2hhbm5lbHMgYSBwYXJhY2hhaW4gaXMgYWxsb3dlZCB0byBvcGVuLphzZXRfaHJtcF9tYXhfbWVzc2FnZV9udW1fcGVyX2NhbmRpZGF0ZQQBDG5ldxABDHUzMgAnBDUBU2V0cyB0aGUgbWF4aW11bSBudW1iZXIgb2Ygb3V0Ym91bmQgSFJNUCBtZXNzYWdlcyBjYW4gYmUgc2VudCBieSBhIGNhbmRpZGF0ZS5Ic2V0X3B2Zl92b3RpbmdfdHRsBAEMbmV3EAEwU2Vzc2lvbkluZGV4ACoEUQFTZXQgdGhlIG51bWJlciBvZiBzZXNzaW9uIGNoYW5nZXMgYWZ0ZXIgd2hpY2ggYSBQVkYgcHJlLWNoZWNraW5nIHZvdGluZyBpcyByZWplY3RlZC6Qc2V0X21pbmltdW1fdmFsaWRhdGlvbl91cGdyYWRlX2RlbGF5BAEMbmV3EAFEQmxvY2tOdW1iZXJGb3I8VD4AKxBVAVNldHMgdGhlIG1pbmltdW0gZGVsYXkgYmV0d2VlbiBhbm5vdW5jaW5nIHRoZSB1cGdyYWRlIGJsb2NrIGZvciBhIHBhcmFjaGFpbiB1bnRpbCB0aGVUdXBncmFkZSB0YWtpbmcgcGxhY2UuADkBU2VlIHRoZSBmaWVsZCBkb2N1bWVudGF0aW9uIGZvciBpbmZvcm1hdGlvbiBhbmQgY29uc3RyYWludHMgZm9yIHRoZSBuZXcgdmFsdWUucHNldF9ieXBhc3NfY29uc2lzdGVuY3lfY2hlY2sEAQxuZXcgARBib29sACwITQFTZXR0aW5nIHRoaXMgdG8gdHJ1ZSB3aWxsIGRpc2FibGUgY29uc2lzdGVuY3kgY2hlY2tzIGZvciB0aGUgY29uZmlndXJhdGlvbiBzZXR0ZXJzLkRVc2Ugd2l0aCBjYXV0aW9uLmBzZXRfYXN5bmNfYmFja2luZ19wYXJhbXMEAQxuZXdZBAFIQXN5bmNCYWNraW5nUGFyYW1zAC0EoFNldCB0aGUgYXN5bmNocm9ub3VzIGJhY2tpbmcgcGFyYW1ldGVycy5Mc2V0X2V4ZWN1dG9yX3BhcmFtcwQBDG5ld10EAThFeGVjdXRvclBhcmFtcwAuBHBTZXQgUFZGIGV4ZWN1dG9yIHBhcmFtZXRlcnMuWHNldF9vbl9kZW1hbmRfYmFzZV9mZWUEAQxuZXcYARxCYWxhbmNlAC8EpFNldCB0aGUgb24gZGVtYW5kIChwYXJhdGhyZWFkcykgYmFzZSBmZWUudHNldF9vbl9kZW1hbmRfZmVlX3ZhcmlhYmlsaXR5BAEMbmV3tAEcUGVyYmlsbAAwBMBTZXQgdGhlIG9uIGRlbWFuZCAocGFyYXRocmVhZHMpIGZlZSB2YXJpYWJpbGl0eS5wc2V0X29uX2RlbWFuZF9xdWV1ZV9tYXhfc2l6ZQQBDG5ldxABDHUzMgAxBLxTZXQgdGhlIG9uIGRlbWFuZCAocGFyYXRocmVhZHMpIHF1ZXVlIG1heCBzaXplLphzZXRfb25fZGVtYW5kX3RhcmdldF9xdWV1ZV91dGlsaXphdGlvbgQBDG5ld7QBHFBlcmJpbGwAMgTAU2V0IHRoZSBvbiBkZW1hbmQgKHBhcmF0aHJlYWRzKSBmZWUgdmFyaWFiaWxpdHkuZHNldF9taW5pbXVtX2JhY2tpbmdfdm90ZXMEAQxuZXcQAQx1MzIANASgU2V0IHRoZSBtaW5pbXVtIGJhY2tpbmcgdm90ZXMgdGhyZXNob2xkLkBzZXRfbm9kZV9mZWF0dXJlCAEUaW5kZXgIAQh1OAABFHZhbHVlIAEQYm9vbAA1BGRTZXQvVW5zZXQgYSBub2RlIGZlYXR1cmUuaHNldF9hcHByb3ZhbF92b3RpbmdfcGFyYW1zBAEMbmV3cQQBUEFwcHJvdmFsVm90aW5nUGFyYW1zADYEbFNldCBhcHByb3ZhbC12b3RpbmctcGFyYW1zLlBzZXRfc2NoZWR1bGVyX3BhcmFtcwQBDG5ld3UEAYhTY2hlZHVsZXJQYXJhbXM8QmxvY2tOdW1iZXJGb3I8VD4+ADcEVFNldCBzY2hlZHVsZXItcGFyYW1zLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy5ZBBBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODRhc3luY19iYWNraW5nSEFzeW5jQmFja2luZ1BhcmFtcwAACAFMbWF4X2NhbmRpZGF0ZV9kZXB0aBABDHUzMgABUGFsbG93ZWRfYW5jZXN0cnlfbGVuEAEMdTMyAABdBBBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODxleGVjdXRvcl9wYXJhbXM4RXhlY3V0b3JQYXJhbXMAAAQAYQQBSFZlYzxFeGVjdXRvclBhcmFtPgAAYQQAAAJlBABlBBBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODxleGVjdXRvcl9wYXJhbXM0RXhlY3V0b3JQYXJhbQABHDhNYXhNZW1vcnlQYWdlcwQAEAEMdTMyAAEAPFN0YWNrTG9naWNhbE1heAQAEAEMdTMyAAIAOFN0YWNrTmF0aXZlTWF4BAAQAQx1MzIAAwBQUHJlY2hlY2tpbmdNYXhNZW1vcnkEADABDHU2NAAEADhQdmZQcmVwVGltZW91dAgAaQQBLFB2ZlByZXBLaW5kAAAwAQx1NjQABQA4UHZmRXhlY1RpbWVvdXQIAG0EASxQdmZFeGVjS2luZAAAMAEMdTY0AAYARFdhc21FeHRCdWxrTWVtb3J5AAcAAGkEDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4LFB2ZlByZXBLaW5kAAEIIFByZWNoZWNrAAAAHFByZXBhcmUAAQAAbQQMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjgsUHZmRXhlY0tpbmQAAQgcQmFja2luZwAAACBBcHByb3ZhbAABAABxBAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OFBBcHByb3ZhbFZvdGluZ1BhcmFtcwAABAFsbWF4X2FwcHJvdmFsX2NvYWxlc2NlX2NvdW50EAEMdTMyAAB1BAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODxTY2hlZHVsZXJQYXJhbXMELEJsb2NrTnVtYmVyARAALAFgZ3JvdXBfcm90YXRpb25fZnJlcXVlbmN5EAEsQmxvY2tOdW1iZXIAAWRwYXJhc19hdmFpbGFiaWxpdHlfcGVyaW9kEAEsQmxvY2tOdW1iZXIAAVxtYXhfdmFsaWRhdG9yc19wZXJfY29yZbgBLE9wdGlvbjx1MzI+AAEkbG9va2FoZWFkEAEMdTMyAAEkbnVtX2NvcmVzEAEMdTMyAAFkbWF4X2F2YWlsYWJpbGl0eV90aW1lb3V0cxABDHUzMgABYG9uX2RlbWFuZF9xdWV1ZV9tYXhfc2l6ZRABDHUzMgABiG9uX2RlbWFuZF90YXJnZXRfcXVldWVfdXRpbGl6YXRpb260ARxQZXJiaWxsAAFkb25fZGVtYW5kX2ZlZV92YXJpYWJpbGl0ebQBHFBlcmJpbGwAAUhvbl9kZW1hbmRfYmFzZV9mZWUYARxCYWxhbmNlAAEMdHRsEAEsQmxvY2tOdW1iZXIAAHkEEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMYc2hhcmVkGHBhbGxldBBDYWxsBARUAAEABA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLn0EEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9uGHBhbGxldBBDYWxsBARUAAEABA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLoEEEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnM4cGFyYXNfaW5oZXJlbnQYcGFsbGV0EENhbGwEBFQAAQQUZW50ZXIEARBkYXRhhQQBkFBhcmFjaGFpbnNJbmhlcmVudERhdGE8SGVhZGVyRm9yPFQ+PgAABDEBRW50ZXIgdGhlIHBhcmFzIGluaGVyZW50LiBUaGlzIHdpbGwgcHJvY2VzcyBiaXRmaWVsZHMgYW5kIGJhY2tlZCBjYW5kaWRhdGVzLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6FBAxMcG9sa2Fkb3RfcHJpbWl0aXZlcyB2c3RhZ2luZzBJbmhlcmVudERhdGEEDEhEUgHVAQAQASRiaXRmaWVsZHOJBAGQVW5jaGVja2VkU2lnbmVkQXZhaWxhYmlsaXR5Qml0ZmllbGRzAAFEYmFja2VkX2NhbmRpZGF0ZXOlBAF8VmVjPEJhY2tlZENhbmRpZGF0ZTxIRFI6Okhhc2g+PgABIGRpc3B1dGVz6QQBYE11bHRpRGlzcHV0ZVN0YXRlbWVudFNldAABNHBhcmVudF9oZWFkZXLVAQEMSERSAACJBAAAAo0EAI0EEExwb2xrYWRvdF9wcmltaXRpdmVzCHY4GHNpZ25lZDxVbmNoZWNrZWRTaWduZWQIHFBheWxvYWQBkQQsUmVhbFBheWxvYWQBkQQADAEccGF5bG9hZJEEARxQYXlsb2FkAAE8dmFsaWRhdG9yX2luZGV4nQQBOFZhbGlkYXRvckluZGV4AAEkc2lnbmF0dXJloQQBSFZhbGlkYXRvclNpZ25hdHVyZQAAkQQMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjhQQXZhaWxhYmlsaXR5Qml0ZmllbGQAAAQAlQQBfEJpdFZlYzx1OCwgYml0dmVjOjpvcmRlcjo6THNiMD4AAJUEAAAHCJkEAJkEDBhiaXR2ZWMUb3JkZXIQTHNiMAAAAACdBAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODhWYWxpZGF0b3JJbmRleAAABAAQAQx1MzIAAKEEEExwb2xrYWRvdF9wcmltaXRpdmVzCHY4NHZhbGlkYXRvcl9hcHAkU2lnbmF0dXJlAAAEAH0CAUhzcjI1NTE5OjpTaWduYXR1cmUAAKUEAAACqQQAqQQMTHBvbGthZG90X3ByaW1pdGl2ZXMgdnN0YWdpbmc8QmFja2VkQ2FuZGlkYXRlBARIATQADAEkY2FuZGlkYXRlrQQBeENvbW1pdHRlZENhbmRpZGF0ZVJlY2VpcHRWMjxIPgABOHZhbGlkaXR5X3ZvdGVz4QQBYFZlYzxWYWxpZGl0eUF0dGVzdGF0aW9uPgABRHZhbGlkYXRvcl9pbmRpY2VzlQQBfEJpdFZlYzx1OCwgYml0dmVjOjpvcmRlcjo6THNiMD4AAK0EDExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nbENvbW1pdHRlZENhbmRpZGF0ZVJlY2VpcHRWMgQESAE0AAgBKGRlc2NyaXB0b3KxBAFgQ2FuZGlkYXRlRGVzY3JpcHRvclYyPEg+AAEsY29tbWl0bWVudHPBBAFQQ2FuZGlkYXRlQ29tbWl0bWVudHMAALEEDExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nVENhbmRpZGF0ZURlc2NyaXB0b3JWMgQESAE0ADABHHBhcmFfaWS1AgEYUGFyYUlkAAEwcmVsYXlfcGFyZW50NAEESAABHHZlcnNpb261BAE8SW50ZXJuYWxWZXJzaW9uAAEoY29yZV9pbmRleJ0BAQx1MTYAATRzZXNzaW9uX2luZGV4EAEwU2Vzc2lvbkluZGV4AAEkcmVzZXJ2ZWQxuQQBIFt1ODsgMjVdAAF4cGVyc2lzdGVkX3ZhbGlkYXRpb25fZGF0YV9oYXNoNAEQSGFzaAABIHBvdl9oYXNoNAEQSGFzaAABMGVyYXN1cmVfcm9vdDQBEEhhc2gAASRyZXNlcnZlZDJ9AgEgW3U4OyA2NF0AASRwYXJhX2hlYWQ0ARBIYXNoAAFQdmFsaWRhdGlvbl9jb2RlX2hhc2i9BAFIVmFsaWRhdGlvbkNvZGVIYXNoAAC1BAxMcG9sa2Fkb3RfcHJpbWl0aXZlcyB2c3RhZ2luZzxJbnRlcm5hbFZlcnNpb24AAAQACAEIdTgAALkEAAADGQAAAAgAvQQMdHBvbGthZG90X3BhcmFjaGFpbl9wcmltaXRpdmVzKHByaW1pdGl2ZXNIVmFsaWRhdGlvbkNvZGVIYXNoAAAEADQBEEhhc2gAAMEEDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4UENhbmRpZGF0ZUNvbW1pdG1lbnRzBAROARAAGAE8dXB3YXJkX21lc3NhZ2VzxQQBOFVwd2FyZE1lc3NhZ2VzAAFMaG9yaXpvbnRhbF9tZXNzYWdlc8kEAUhIb3Jpem9udGFsTWVzc2FnZXMAAUxuZXdfdmFsaWRhdGlvbl9jb2Rl1QQBWE9wdGlvbjxWYWxpZGF0aW9uQ29kZT4AASRoZWFkX2RhdGHdBAEgSGVhZERhdGEAAWxwcm9jZXNzZWRfZG93bndhcmRfbWVzc2FnZXMQAQx1MzIAAThocm1wX3dhdGVybWFyaxABBE4AAMUEDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBOARTAAAEALkBARhWZWM8VD4AAMkEDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBzQQEUwAABADRBAEYVmVjPFQ+AADNBAhgcG9sa2Fkb3RfY29yZV9wcmltaXRpdmVzTE91dGJvdW5kSHJtcE1lc3NhZ2UECElkAbUCAAgBJHJlY2lwaWVudLUCAQhJZAABEGRhdGE4AUxhbGxvYzo6dmVjOjpWZWM8dTg+AADRBAAAAs0EANUEBBhPcHRpb24EBFQB2QQBCBBOb25lAAAAEFNvbWUEANkEAAABAADZBAx0cG9sa2Fkb3RfcGFyYWNoYWluX3ByaW1pdGl2ZXMocHJpbWl0aXZlczhWYWxpZGF0aW9uQ29kZQAABAA4ARxWZWM8dTg+AADdBAx0cG9sa2Fkb3RfcGFyYWNoYWluX3ByaW1pdGl2ZXMocHJpbWl0aXZlcyBIZWFkRGF0YQAABAA4ARxWZWM8dTg+AADhBAAAAuUEAOUEDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4TFZhbGlkaXR5QXR0ZXN0YXRpb24AAQggSW1wbGljaXQEAKEEAUhWYWxpZGF0b3JTaWduYXR1cmUAAQAgRXhwbGljaXQEAKEEAUhWYWxpZGF0b3JTaWduYXR1cmUAAgAA6QQAAALtBADtBAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OExEaXNwdXRlU3RhdGVtZW50U2V0AAAMAThjYW5kaWRhdGVfaGFzaPEEATRDYW5kaWRhdGVIYXNoAAEcc2Vzc2lvbhABMFNlc3Npb25JbmRleAABKHN0YXRlbWVudHP1BAHsVmVjPChEaXNwdXRlU3RhdGVtZW50LCBWYWxpZGF0b3JJbmRleCwgVmFsaWRhdG9yU2lnbmF0dXJlKT4AAPEECGBwb2xrYWRvdF9jb3JlX3ByaW1pdGl2ZXM0Q2FuZGlkYXRlSGFzaAAABAA0ARBIYXNoAAD1BAAAAvkEAPkEAAAEDP0EnQShBAD9BAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OEBEaXNwdXRlU3RhdGVtZW50AAEIFFZhbGlkBAABBQFkVmFsaWREaXNwdXRlU3RhdGVtZW50S2luZAAAABxJbnZhbGlkBAAJBQFsSW52YWxpZERpc3B1dGVTdGF0ZW1lbnRLaW5kAAEAAAEFDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4ZFZhbGlkRGlzcHV0ZVN0YXRlbWVudEtpbmQAARQgRXhwbGljaXQAAAA8QmFja2luZ1NlY29uZGVkBAA0ARBIYXNoAAEAMEJhY2tpbmdWYWxpZAQANAEQSGFzaAACAEBBcHByb3ZhbENoZWNraW5nAAMAiEFwcHJvdmFsQ2hlY2tpbmdNdWx0aXBsZUNhbmRpZGF0ZXMEAAUFAUhWZWM8Q2FuZGlkYXRlSGFzaD4ABAAABQUAAALxBAAJBQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OGxJbnZhbGlkRGlzcHV0ZVN0YXRlbWVudEtpbmQAAQQgRXhwbGljaXQAAAAADQUQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhcxhwYWxsZXQQQ2FsbAQEVAABMFhmb3JjZV9zZXRfY3VycmVudF9jb2RlCAEQcGFyYbUCARhQYXJhSWQAASBuZXdfY29kZdkEAThWYWxpZGF0aW9uQ29kZQAABPhTZXQgdGhlIHN0b3JhZ2UgZm9yIHRoZSBwYXJhY2hhaW4gdmFsaWRhdGlvbiBjb2RlIGltbWVkaWF0ZWx5Llhmb3JjZV9zZXRfY3VycmVudF9oZWFkCAEQcGFyYbUCARhQYXJhSWQAASBuZXdfaGVhZN0EASBIZWFkRGF0YQABBAEBU2V0IHRoZSBzdG9yYWdlIGZvciB0aGUgY3VycmVudCBwYXJhY2hhaW4gaGVhZCBkYXRhIGltbWVkaWF0ZWx5Lmxmb3JjZV9zY2hlZHVsZV9jb2RlX3VwZ3JhZGUMARBwYXJhtQIBGFBhcmFJZAABIG5ld19jb2Rl2QQBOFZhbGlkYXRpb25Db2RlAAFMcmVsYXlfcGFyZW50X251bWJlchABREJsb2NrTnVtYmVyRm9yPFQ+AAIELQFTY2hlZHVsZSBhbiB1cGdyYWRlIGFzIGlmIGl0IHdhcyBzY2hlZHVsZWQgaW4gdGhlIGdpdmVuIHJlbGF5IHBhcmVudCBibG9jay5MZm9yY2Vfbm90ZV9uZXdfaGVhZAgBEHBhcmG1AgEYUGFyYUlkAAEgbmV3X2hlYWTdBAEgSGVhZERhdGEAAwQdAU5vdGUgYSBuZXcgYmxvY2sgaGVhZCBmb3IgcGFyYSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIGN1cnJlbnQgYmxvY2suSGZvcmNlX3F1ZXVlX2FjdGlvbgQBEHBhcmG1AgEYUGFyYUlkAAQM+FB1dCBhIHBhcmFjaGFpbiBkaXJlY3RseSBpbnRvIHRoZSBuZXh0IHNlc3Npb24ncyBhY3Rpb24gcXVldWUu9FdlIGNhbid0IHF1ZXVlIGl0IGFueSBzb29uZXIgdGhhbiB0aGlzIHdpdGhvdXQgZ29pbmcgaW50byB0aGU4aW5pdGlhbGl6ZXIuLi5sYWRkX3RydXN0ZWRfdmFsaWRhdGlvbl9jb2RlBAE8dmFsaWRhdGlvbl9jb2Rl2QQBOFZhbGlkYXRpb25Db2RlAAU4oEFkZHMgdGhlIHZhbGlkYXRpb24gY29kZSB0byB0aGUgc3RvcmFnZS4AWQFUaGUgY29kZSB3aWxsIG5vdCBiZSBhZGRlZCBpZiBpdCBpcyBhbHJlYWR5IHByZXNlbnQuIEFkZGl0aW9uYWxseSwgaWYgUFZGIHByZS1jaGVja2luZ+BpcyBydW5uaW5nIGZvciB0aGF0IGNvZGUsIGl0IHdpbGwgYmUgaW5zdGFudGx5IGFjY2VwdGVkLgBRAU90aGVyd2lzZSwgdGhlIGNvZGUgd2lsbCBiZSBhZGRlZCBpbnRvIHRoZSBzdG9yYWdlLiBOb3RlIHRoYXQgdGhlIGNvZGUgd2lsbCBiZSBhZGRlZGEBaW50byBzdG9yYWdlIHdpdGggcmVmZXJlbmNlIGNvdW50IDAuIFRoaXMgaXMgdG8gYWNjb3VudCB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBubyB1c2Vyc00BZm9yIHRoaXMgY29kZSB5ZXQuIFRoZSBjYWxsZXIgd2lsbCBoYXZlIHRvIG1ha2Ugc3VyZSB0aGF0IHRoaXMgY29kZSBldmVudHVhbGx5IGdldHNJAXVzZWQgYnkgc29tZSBwYXJhY2hhaW4gb3IgcmVtb3ZlZCBmcm9tIHRoZSBzdG9yYWdlIHRvIGF2b2lkIHN0b3JhZ2UgbGVha3MuIEZvciB0aGVJAWxhdHRlciBwcmVmZXIgdG8gdXNlIHRoZSBgcG9rZV91bnVzZWRfdmFsaWRhdGlvbl9jb2RlYCBkaXNwYXRjaGFibGUgdG8gcmF3IHN0b3JhZ2U0bWFuaXB1bGF0aW9uLgBRAVRoaXMgZnVuY3Rpb24gaXMgbWFpbmx5IG1lYW50IHRvIGJlIHVzZWQgZm9yIHVwZ3JhZGluZyBwYXJhY2hhaW5zIHRoYXQgZG8gbm90IGZvbGxvdwkBdGhlIGdvLWFoZWFkIHNpZ25hbCB3aGlsZSB0aGUgUFZGIHByZS1jaGVja2luZyBmZWF0dXJlIGlzIGVuYWJsZWQubHBva2VfdW51c2VkX3ZhbGlkYXRpb25fY29kZQQBUHZhbGlkYXRpb25fY29kZV9oYXNovQQBSFZhbGlkYXRpb25Db2RlSGFzaAAGFCUBUmVtb3ZlIHRoZSB2YWxpZGF0aW9uIGNvZGUgZnJvbSB0aGUgc3RvcmFnZSBpZmYgdGhlIHJlZmVyZW5jZSBjb3VudCBpcyAwLgBZAVRoaXMgaXMgYmV0dGVyIHRoYW4gcmVtb3ZpbmcgdGhlIHN0b3JhZ2UgZGlyZWN0bHksIGJlY2F1c2UgaXQgd2lsbCBub3QgcmVtb3ZlIHRoZSBjb2RlQQF0aGF0IHdhcyBzdWRkZW5seSBnb3QgdXNlZCBieSBzb21lIHBhcmFjaGFpbiB3aGlsZSB0aGlzIGRpc3BhdGNoYWJsZSB3YXMgcGVuZGluZzBkaXNwYXRjaGluZy5saW5jbHVkZV9wdmZfY2hlY2tfc3RhdGVtZW50CAEQc3RtdBEFAURQdmZDaGVja1N0YXRlbWVudAABJHNpZ25hdHVyZaEEAUhWYWxpZGF0b3JTaWduYXR1cmUABwhVAUluY2x1ZGVzIGEgc3RhdGVtZW50IGZvciBhIFBWRiBwcmUtY2hlY2tpbmcgdm90ZS4gUG90ZW50aWFsbHksIGZpbmFsaXplcyB0aGUgdm90ZSBhbmRBAWVuYWN0cyB0aGUgcmVzdWx0cyBpZiB0aGF0IHdhcyB0aGUgbGFzdCB2b3RlIGJlZm9yZSBhY2hpZXZpbmcgdGhlIHN1cGVybWFqb3JpdHkudGZvcmNlX3NldF9tb3N0X3JlY2VudF9jb250ZXh0CAEQcGFyYbUCARhQYXJhSWQAARxjb250ZXh0EAFEQmxvY2tOdW1iZXJGb3I8VD4ACAQBAVNldCB0aGUgc3RvcmFnZSBmb3IgdGhlIGN1cnJlbnQgcGFyYWNoYWluIGhlYWQgZGF0YSBpbW1lZGlhdGVseS5ccmVtb3ZlX3VwZ3JhZGVfY29vbGRvd24EARBwYXJhtQIBGFBhcmFJZAAJEKxSZW1vdmUgYW4gdXBncmFkZSBjb29sZG93biBmb3IgYSBwYXJhY2hhaW4uAFEBVGhlIGNvc3QgZm9yIHJlbW92aW5nIHRoZSBjb29sZG93biBlYXJsaWVyIGRlcGVuZHMgb24gdGhlIHRpbWUgbGVmdCBmb3IgdGhlIGNvb2xkb3duQQFtdWx0aXBsaWVkIGJ5IFtgQ29uZmlnOjpDb29sZG93blJlbW92YWxNdWx0aXBsaWVyYF0uIFRoZSBwYWlkIHRva2VucyBhcmUgYnVybmVkLpRhdXRob3JpemVfZm9yY2Vfc2V0X2N1cnJlbnRfY29kZV9oYXNoDAEQcGFyYbUCARhQYXJhSWQAATRuZXdfY29kZV9oYXNovQQBSFZhbGlkYXRpb25Db2RlSGFzaAABMHZhbGlkX3BlcmlvZBABREJsb2NrTnVtYmVyRm9yPFQ+AAosHQFTZXRzIHRoZSBzdG9yYWdlIGZvciB0aGUgYXV0aG9yaXplZCBjdXJyZW50IGNvZGUgaGFzaCBvZiB0aGUgcGFyYWNoYWluLmEBSWYgbm90IGFwcGxpZWQsIGl0IHdpbGwgYmUgcmVtb3ZlZCBhdCB0aGUgYFN5c3RlbTo6YmxvY2tfbnVtYmVyKCkgKyB2YWxpZF9wZXJpb2RgIGJsb2NrLgA9AVRoaXMgY2FuIGJlIHVzZWZ1bCwgd2hlbiB0cmlnZ2VyaW5nIGBQYXJhczo6Zm9yY2Vfc2V0X2N1cnJlbnRfY29kZShwYXJhLCBjb2RlKWAlAWZyb20gYSBkaWZmZXJlbnQgY2hhaW4gdGhhbiB0aGUgb25lIHdoZXJlIHRoZSBgUGFyYXNgIHBhbGxldCBpcyBkZXBsb3llZC4AVQFUaGUgbWFpbiBwdXJwb3NlIGlzIHRvIGF2b2lkIHRyYW5zZmVycmluZyB0aGUgZW50aXJlIGBjb2RlYCBXYXNtIGJsb2IgYmV0d2VlbiBjaGFpbnMuMQFJbnN0ZWFkLCB3ZSBhdXRob3JpemUgYGNvZGVfaGFzaGAgd2l0aCBgcm9vdGAsIHdoaWNoIGNhbiBsYXRlciBiZSBhcHBsaWVkIGJ5HQFgUGFyYXM6OmFwcGx5X2F1dGhvcml6ZWRfZm9yY2Vfc2V0X2N1cnJlbnRfY29kZShwYXJhLCBjb2RlKWAgYnkgYW55b25lLgDcQXV0aG9yaXphdGlvbnMgYXJlIHN0b3JlZCBpbiBhbiAqKm92ZXJ3cml0aW5nIG1hbm5lcioqLpxhcHBseV9hdXRob3JpemVkX2ZvcmNlX3NldF9jdXJyZW50X2NvZGUIARBwYXJhtQIBGFBhcmFJZAABIG5ld19jb2Rl2QQBOFZhbGlkYXRpb25Db2RlAAsI+EFwcGxpZXMgdGhlIGFscmVhZHkgYXV0aG9yaXplZCBjdXJyZW50IGNvZGUgZm9yIHRoZSBwYXJhY2hhaW4s+HRyaWdnZXJpbmcgdGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyBgZm9yY2Vfc2V0X2N1cnJlbnRfY29kZWAuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLhEFDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4RFB2ZkNoZWNrU3RhdGVtZW50AAAQARhhY2NlcHQgARBib29sAAEcc3ViamVjdL0EAUhWYWxpZGF0aW9uQ29kZUhhc2gAATRzZXNzaW9uX2luZGV4EAEwU2Vzc2lvbkluZGV4AAE8dmFsaWRhdG9yX2luZGV4nQQBOFZhbGlkYXRvckluZGV4AAAVBRBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zLGluaXRpYWxpemVyGHBhbGxldBBDYWxsBARUAAEENGZvcmNlX2FwcHJvdmUEARR1cF90bxABLEJsb2NrTnVtYmVyAAAMOQFJc3N1ZSBhIHNpZ25hbCB0byB0aGUgY29uc2Vuc3VzIGVuZ2luZSB0byBmb3JjaWJseSBhY3QgYXMgdGhvdWdoIGFsbCBwYXJhY2hhaW5RAWJsb2NrcyBpbiBhbGwgcmVsYXkgY2hhaW4gYmxvY2tzIHVwIHRvIGFuZCBpbmNsdWRpbmcgdGhlIGdpdmVuIG51bWJlciBpbiB0aGUgY3VycmVudKBjaGFpbiBhcmUgdmFsaWQgYW5kIHNob3VsZCBiZSBmaW5hbGl6ZWQuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLhkFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMQaHJtcBhwYWxsZXQQQ2FsbAQEVAABLFhocm1wX2luaXRfb3Blbl9jaGFubmVsDAEkcmVjaXBpZW50tQIBGFBhcmFJZAABVHByb3Bvc2VkX21heF9jYXBhY2l0eRABDHUzMgABZHByb3Bvc2VkX21heF9tZXNzYWdlX3NpemUQAQx1MzIAAChNAUluaXRpYXRlIG9wZW5pbmcgYSBjaGFubmVsIGZyb20gYSBwYXJhY2hhaW4gdG8gYSBnaXZlbiByZWNpcGllbnQgd2l0aCBnaXZlbiBjaGFubmVsLHBhcmFtZXRlcnMuAFkBLSBgcHJvcG9zZWRfbWF4X2NhcGFjaXR5YCAtIHNwZWNpZmllcyBob3cgbWFueSBtZXNzYWdlcyBjYW4gYmUgaW4gdGhlIGNoYW5uZWwgYXQgb25jZS4tAS0gYHByb3Bvc2VkX21heF9tZXNzYWdlX3NpemVgIC0gc3BlY2lmaWVzIHRoZSBtYXhpbXVtIHNpemUgb2YgdGhlIG1lc3NhZ2VzLgARAVRoZXNlIG51bWJlcnMgYXJlIGEgc3ViamVjdCB0byB0aGUgcmVsYXktY2hhaW4gY29uZmlndXJhdGlvbiBsaW1pdHMuAFEBVGhlIGNoYW5uZWwgY2FuIGJlIG9wZW5lZCBvbmx5IGFmdGVyIHRoZSByZWNpcGllbnQgY29uZmlybXMgaXQgYW5kIG9ubHkgb24gYSBzZXNzaW9uHGNoYW5nZS5gaHJtcF9hY2NlcHRfb3Blbl9jaGFubmVsBAEYc2VuZGVytQIBGFBhcmFJZAABDPBBY2NlcHQgYSBwZW5kaW5nIG9wZW4gY2hhbm5lbCByZXF1ZXN0IGZyb20gdGhlIGdpdmVuIHNlbmRlci4A9FRoZSBjaGFubmVsIHdpbGwgYmUgb3BlbmVkIG9ubHkgb24gdGhlIG5leHQgc2Vzc2lvbiBib3VuZGFyeS5IaHJtcF9jbG9zZV9jaGFubmVsBAEoY2hhbm5lbF9pZB0FATRIcm1wQ2hhbm5lbElkAAIQVQFJbml0aWF0ZSB1bmlsYXRlcmFsIGNsb3Npbmcgb2YgYSBjaGFubmVsLiBUaGUgb3JpZ2luIG11c3QgYmUgZWl0aGVyIHRoZSBzZW5kZXIgb3IgdGhlmHJlY2lwaWVudCBpbiB0aGUgY2hhbm5lbCBiZWluZyBjbG9zZWQuAMBUaGUgY2xvc3VyZSBjYW4gb25seSBoYXBwZW4gb24gYSBzZXNzaW9uIGNoYW5nZS5AZm9yY2VfY2xlYW5faHJtcAwBEHBhcmG1AgEYUGFyYUlkAAEsbnVtX2luYm91bmQQAQx1MzIAATBudW1fb3V0Ym91bmQQAQx1MzIAAxxdAVRoaXMgZXh0cmluc2ljIHRyaWdnZXJzIHRoZSBjbGVhbnVwIG9mIGFsbCB0aGUgSFJNUCBzdG9yYWdlIGl0ZW1zIHRoYXQgYSBwYXJhIG1heSBoYXZlLkkBTm9ybWFsbHkgdGhpcyBoYXBwZW5zIG9uY2UgcGVyIHNlc3Npb24sIGJ1dCB0aGlzIGFsbG93cyB5b3UgdG8gdHJpZ2dlciB0aGUgY2xlYW51cJRpbW1lZGlhdGVseSBmb3IgYSBzcGVjaWZpYyBwYXJhY2hhaW4uAFEBTnVtYmVyIG9mIGluYm91bmQgYW5kIG91dGJvdW5kIGNoYW5uZWxzIGZvciBgcGFyYWAgbXVzdCBiZSBwcm92aWRlZCBhcyB3aXRuZXNzIGRhdGEuAJBPcmlnaW4gbXVzdCBiZSB0aGUgYENoYW5uZWxNYW5hZ2VyYC5cZm9yY2VfcHJvY2Vzc19ocm1wX29wZW4EASBjaGFubmVscxABDHUzMgAEIKRGb3JjZSBwcm9jZXNzIEhSTVAgb3BlbiBjaGFubmVsIHJlcXVlc3RzLgBVAUlmIHRoZXJlIGFyZSBwZW5kaW5nIEhSTVAgb3BlbiBjaGFubmVsIHJlcXVlc3RzLCB5b3UgY2FuIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIHByb2Nlc3OIYWxsIG9mIHRob3NlIHJlcXVlc3RzIGltbWVkaWF0ZWx5LgAJAVRvdGFsIG51bWJlciBvZiBvcGVuaW5nIGNoYW5uZWxzIG11c3QgYmUgcHJvdmlkZWQgYXMgd2l0bmVzcyBkYXRhLgCQT3JpZ2luIG11c3QgYmUgdGhlIGBDaGFubmVsTWFuYWdlcmAuYGZvcmNlX3Byb2Nlc3NfaHJtcF9jbG9zZQQBIGNoYW5uZWxzEAEMdTMyAAUgqEZvcmNlIHByb2Nlc3MgSFJNUCBjbG9zZSBjaGFubmVsIHJlcXVlc3RzLgBZAUlmIHRoZXJlIGFyZSBwZW5kaW5nIEhSTVAgY2xvc2UgY2hhbm5lbCByZXF1ZXN0cywgeW91IGNhbiB1c2UgdGhpcyBmdW5jdGlvbiB0byBwcm9jZXNziGFsbCBvZiB0aG9zZSByZXF1ZXN0cyBpbW1lZGlhdGVseS4ACQFUb3RhbCBudW1iZXIgb2YgY2xvc2luZyBjaGFubmVscyBtdXN0IGJlIHByb3ZpZGVkIGFzIHdpdG5lc3MgZGF0YS4AkE9yaWdpbiBtdXN0IGJlIHRoZSBgQ2hhbm5lbE1hbmFnZXJgLmBocm1wX2NhbmNlbF9vcGVuX3JlcXVlc3QIAShjaGFubmVsX2lkHQUBNEhybXBDaGFubmVsSWQAATRvcGVuX3JlcXVlc3RzEAEMdTMyAAYgXQFUaGlzIGNhbmNlbHMgYSBwZW5kaW5nIG9wZW4gY2hhbm5lbCByZXF1ZXN0LiBJdCBjYW4gYmUgY2FuY2VsZWQgYnkgZWl0aGVyIG9mIHRoZSBzZW5kZXIZAW9yIHRoZSByZWNpcGllbnQgZm9yIHRoYXQgcmVxdWVzdC4gVGhlIG9yaWdpbiBtdXN0IGJlIGVpdGhlciBvZiB0aG9zZS4AXQFUaGUgY2FuY2VsbGF0aW9uIGhhcHBlbnMgaW1tZWRpYXRlbHkuIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBjYW5jZWwgdGhlIHJlcXVlc3QgaWYgaXQgaXNEYWxyZWFkeSBhY2NlcHRlZC4AWQFUb3RhbCBudW1iZXIgb2Ygb3BlbiByZXF1ZXN0cyAoaS5lLiBgSHJtcE9wZW5DaGFubmVsUmVxdWVzdHNMaXN0YCkgbXVzdCBiZSBwcm92aWRlZCBhczR3aXRuZXNzIGRhdGEuXGZvcmNlX29wZW5faHJtcF9jaGFubmVsEAEYc2VuZGVytQIBGFBhcmFJZAABJHJlY2lwaWVudLUCARhQYXJhSWQAATBtYXhfY2FwYWNpdHkQAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplEAEMdTMyAAcgYQFPcGVuIGEgY2hhbm5lbCBmcm9tIGEgYHNlbmRlcmAgdG8gYSBgcmVjaXBpZW50YCBgUGFyYUlkYC4gQWx0aG91Z2ggb3BlbmVkIGJ5IGdvdmVybmFuY2UsQQF0aGUgYG1heF9jYXBhY2l0eWAgYW5kIGBtYXhfbWVzc2FnZV9zaXplYCBhcmUgc3RpbGwgc3ViamVjdCB0byB0aGUgUmVsYXkgQ2hhaW4nc0hjb25maWd1cmVkIGxpbWl0cy4ATQFFeHBlY3RlZCB1c2UgaXMgd2hlbiBvbmUgKGFuZCBvbmx5IG9uZSkgb2YgdGhlIGBQYXJhSWRgcyBpbnZvbHZlZCBpbiB0aGUgY2hhbm5lbCBpc8Bnb3Zlcm5lZCBieSB0aGUgc3lzdGVtLCBlLmcuIGEgc3lzdGVtIHBhcmFjaGFpbi4AkE9yaWdpbiBtdXN0IGJlIHRoZSBgQ2hhbm5lbE1hbmFnZXJgLmBlc3RhYmxpc2hfc3lzdGVtX2NoYW5uZWwIARhzZW5kZXK1AgEYUGFyYUlkAAEkcmVjaXBpZW50tQIBGFBhcmFJZAAIMFEBRXN0YWJsaXNoIGFuIEhSTVAgY2hhbm5lbCBiZXR3ZWVuIHR3byBzeXN0ZW0gY2hhaW5zLiBJZiB0aGUgY2hhbm5lbCBkb2VzIG5vdCBhbHJlYWR5UQFleGlzdCwgdGhlIHRyYW5zYWN0aW9uIGZlZXMgd2lsbCBiZSByZWZ1bmRlZCB0byB0aGUgY2FsbGVyLiBUaGUgc3lzdGVtIGRvZXMgbm90IHRha2VZAWRlcG9zaXRzIGZvciBjaGFubmVscyBiZXR3ZWVuIHN5c3RlbSBjaGFpbnMsIGFuZCBhdXRvbWF0aWNhbGx5IHNldHMgdGhlIG1lc3NhZ2UgbnVtYmVyGQFhbmQgc2l6ZSBsaW1pdHMgdG8gdGhlIG1heGltdW0gYWxsb3dlZCBieSB0aGUgbmV0d29yaydzIGNvbmZpZ3VyYXRpb24uAChBcmd1bWVudHM6AJQtIGBzZW5kZXJgOiBBIHN5c3RlbSBjaGFpbiwgYFBhcmFJZGAuoC0gYHJlY2lwaWVudGA6IEEgc3lzdGVtIGNoYWluLCBgUGFyYUlkYC4AVQFBbnkgc2lnbmVkIG9yaWdpbiBjYW4gY2FsbCB0aGlzIGZ1bmN0aW9uLCBidXQgX2JvdGhfIGlucHV0cyBNVVNUIGJlIHN5c3RlbSBjaGFpbnMuIElmwHRoZSBjaGFubmVsIGRvZXMgbm90IGV4aXN0IHlldCwgdGhlcmUgaXMgbm8gZmVlLlRwb2tlX2NoYW5uZWxfZGVwb3NpdHMIARhzZW5kZXK1AgEYUGFyYUlkAAEkcmVjaXBpZW50tQIBGFBhcmFJZAAJJFEBVXBkYXRlIHRoZSBkZXBvc2l0cyBoZWxkIGZvciBhbiBIUk1QIGNoYW5uZWwgdG8gdGhlIGxhdGVzdCBgQ29uZmlndXJhdGlvbmAuIENoYW5uZWxzsHdpdGggc3lzdGVtIGNoYWlucyBkbyBub3QgcmVxdWlyZSBhIGRlcG9zaXQuAChBcmd1bWVudHM6AHgtIGBzZW5kZXJgOiBBIGNoYWluLCBgUGFyYUlkYC6ELSBgcmVjaXBpZW50YDogQSBjaGFpbiwgYFBhcmFJZGAuAKRBbnkgc2lnbmVkIG9yaWdpbiBjYW4gY2FsbCB0aGlzIGZ1bmN0aW9uLnRlc3RhYmxpc2hfY2hhbm5lbF93aXRoX3N5c3RlbQQBTHRhcmdldF9zeXN0ZW1fY2hhaW61AgEYUGFyYUlkAAocOQFFc3RhYmxpc2ggYSBiaWRpcmVjdGlvbmFsIEhSTVAgY2hhbm5lbCBiZXR3ZWVuIGEgcGFyYWNoYWluIGFuZCBhIHN5c3RlbSBjaGFpbi4AKEFyZ3VtZW50czoAyC0gYHRhcmdldF9zeXN0ZW1fY2hhaW5gOiBBIHN5c3RlbSBjaGFpbiwgYFBhcmFJZGAuALBUaGUgb3JpZ2luIG5lZWRzIHRvIGJlIHRoZSBwYXJhY2hhaW4gb3JpZ2luLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy4dBQx0cG9sa2Fkb3RfcGFyYWNoYWluX3ByaW1pdGl2ZXMocHJpbWl0aXZlczRIcm1wQ2hhbm5lbElkAAAIARhzZW5kZXK1AgEISWQAASRyZWNpcGllbnS1AgEISWQAACEFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMgZGlzcHV0ZXMYcGFsbGV0EENhbGwEBFQAAQQ4Zm9yY2VfdW5mcmVlemUAAAAEDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuJQUUbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlcyBzbGFzaGluZxhwYWxsZXQQQ2FsbAQEVAABBHByZXBvcnRfZGlzcHV0ZV9sb3N0X3Vuc2lnbmVkCAE0ZGlzcHV0ZV9wcm9vZikFAUxCb3g8RGlzcHV0ZVByb29mVjI+AAE8a2V5X293bmVyX3Byb29m4QEBQFQ6OktleU93bmVyUHJvb2YAAAAEDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuKQUMTHBvbGthZG90X3ByaW1pdGl2ZXMgdnN0YWdpbmcwRGlzcHV0ZVByb29mAAAQASR0aW1lX3Nsb3QtBQFARGlzcHV0ZXNUaW1lU2xvdAABEGtpbmQxBQFIRGlzcHV0ZU9mZmVuY2VLaW5kAAE8dmFsaWRhdG9yX2luZGV4nQQBOFZhbGlkYXRvckluZGV4AAEwdmFsaWRhdG9yX2lkUQIBLFZhbGlkYXRvcklkAAAtBRBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OCBzbGFzaGluZ0BEaXNwdXRlc1RpbWVTbG90AAAIATRzZXNzaW9uX2luZGV4EAEwU2Vzc2lvbkluZGV4AAE4Y2FuZGlkYXRlX2hhc2jxBAE0Q2FuZGlkYXRlSGFzaAAAMQUMTHBvbGthZG90X3ByaW1pdGl2ZXMgdnN0YWdpbmdIRGlzcHV0ZU9mZmVuY2VLaW5kAAEMQEZvckludmFsaWRCYWNrZWQAAAAwQWdhaW5zdFZhbGlkAAEASEZvckludmFsaWRBcHByb3ZlZAACAAA1BRBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zJG9uX2RlbWFuZBhwYWxsZXQQQ2FsbAQEVAABDFxwbGFjZV9vcmRlcl9hbGxvd19kZWF0aAgBKG1heF9hbW91bnQYATBCYWxhbmNlT2Y8VD4AARxwYXJhX2lktQIBGFBhcmFJZAAAPJRDcmVhdGUgYSBzaW5nbGUgb24gZGVtYW5kIGNvcmUgb3JkZXIuSQFXaWxsIHVzZSB0aGUgc3BvdCBwcmljZSBmb3IgdGhlIGN1cnJlbnQgYmxvY2sgYW5kIHdpbGwgcmVhcCB0aGUgYWNjb3VudCBpZiBuZWVkZWQuACxQYXJhbWV0ZXJzOjkBLSBgb3JpZ2luYDogVGhlIHNlbmRlciBvZiB0aGUgY2FsbCwgZnVuZHMgd2lsbCBiZSB3aXRoZHJhd24gZnJvbSB0aGlzIGFjY291bnQuSQEtIGBtYXhfYW1vdW50YDogVGhlIG1heGltdW0gYmFsYW5jZSB0byB3aXRoZHJhdyBmcm9tIHRoZSBvcmlnaW4gdG8gcGxhY2UgYW4gb3JkZXIuDQEtIGBwYXJhX2lkYDogQSBgUGFyYUlkYCB0aGUgb3JpZ2luIHdhbnRzIHRvIHByb3ZpZGUgYmxvY2tzcGFjZSBmb3IuABxFcnJvcnM65C0gYEluc3VmZmljaWVudEJhbGFuY2VgOiBmcm9tIHRoZSBDdXJyZW5jeSBpbXBsZW1lbnRhdGlvbjQtIGBRdWV1ZUZ1bGxggC0gYFNwb3RQcmljZUhpZ2hlclRoYW5NYXhBbW91bnRgABxFdmVudHM6XC0gYE9uRGVtYW5kT3JkZXJQbGFjZWRgWHBsYWNlX29yZGVyX2tlZXBfYWxpdmUIAShtYXhfYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAEccGFyYV9pZLUCARhQYXJhSWQAATxhAVNhbWUgYXMgdGhlIFtgcGxhY2Vfb3JkZXJfYWxsb3dfZGVhdGhgXShTZWxmOjpwbGFjZV9vcmRlcl9hbGxvd19kZWF0aCkgY2FsbCAsIGJ1dCB3aXRoIGHcY2hlY2sgdGhhdCBwbGFjaW5nIHRoZSBvcmRlciB3aWxsIG5vdCByZWFwIHRoZSBhY2NvdW50LgAsUGFyYW1ldGVyczo5AS0gYG9yaWdpbmA6IFRoZSBzZW5kZXIgb2YgdGhlIGNhbGwsIGZ1bmRzIHdpbGwgYmUgd2l0aGRyYXduIGZyb20gdGhpcyBhY2NvdW50LkkBLSBgbWF4X2Ftb3VudGA6IFRoZSBtYXhpbXVtIGJhbGFuY2UgdG8gd2l0aGRyYXcgZnJvbSB0aGUgb3JpZ2luIHRvIHBsYWNlIGFuIG9yZGVyLg0BLSBgcGFyYV9pZGA6IEEgYFBhcmFJZGAgdGhlIG9yaWdpbiB3YW50cyB0byBwcm92aWRlIGJsb2Nrc3BhY2UgZm9yLgAcRXJyb3JzOuQtIGBJbnN1ZmZpY2llbnRCYWxhbmNlYDogZnJvbSB0aGUgQ3VycmVuY3kgaW1wbGVtZW50YXRpb240LSBgUXVldWVGdWxsYIAtIGBTcG90UHJpY2VIaWdoZXJUaGFuTWF4QW1vdW50YAAcRXZlbnRzOlwtIGBPbkRlbWFuZE9yZGVyUGxhY2VkYGBwbGFjZV9vcmRlcl93aXRoX2NyZWRpdHMIAShtYXhfYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAEccGFyYV9pZLUCARhQYXJhSWQAAkTIQ3JlYXRlIGEgc2luZ2xlIG9uIGRlbWFuZCBjb3JlIG9yZGVyIHdpdGggY3JlZGl0cy5ZAVdpbGwgY2hhcmdlIHRoZSBvd25lcidzIG9uLWRlbWFuZCBjcmVkaXQgYWNjb3VudCB0aGUgc3BvdCBwcmljZSBmb3IgdGhlIGN1cnJlbnQgYmxvY2suACxQYXJhbWV0ZXJzOkUBLSBgb3JpZ2luYDogVGhlIHNlbmRlciBvZiB0aGUgY2FsbCwgb24tZGVtYW5kIGNyZWRpdHMgd2lsbCBiZSB3aXRoZHJhd24gZnJvbSB0aGlzKCAgYWNjb3VudC5JAS0gYG1heF9hbW91bnRgOiBUaGUgbWF4aW11bSBudW1iZXIgb2YgY3JlZGl0cyB0byBzcGVuZCBmcm9tIHRoZSBvcmlnaW4gdG8gcGxhY2UgYW4gICBvcmRlci4NAS0gYHBhcmFfaWRgOiBBIGBQYXJhSWRgIHRoZSBvcmlnaW4gd2FudHMgdG8gcHJvdmlkZSBibG9ja3NwYWNlIGZvci4AHEVycm9yczpcLSBgSW5zdWZmaWNpZW50Q3JlZGl0c2A0LSBgUXVldWVGdWxsYIAtIGBTcG90UHJpY2VIaWdoZXJUaGFuTWF4QW1vdW50YAAcRXZlbnRzOlwtIGBPbkRlbWFuZE9yZGVyUGxhY2VkYAQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy45BRBccG9sa2Fkb3RfcnVudGltZV9jb21tb248cGFyYXNfcmVnaXN0cmFyGHBhbGxldBBDYWxsBARUAAEkIHJlZ2lzdGVyDAEIaWS1AgEYUGFyYUlkAAEwZ2VuZXNpc19oZWFk3QQBIEhlYWREYXRhAAE8dmFsaWRhdGlvbl9jb2Rl2QQBOFZhbGlkYXRpb25Db2RlAABQ+FJlZ2lzdGVyIGhlYWQgZGF0YSBhbmQgdmFsaWRhdGlvbiBjb2RlIGZvciBhIHJlc2VydmVkIFBhcmEgSWQuADAjIyBBcmd1bWVudHPALSBgb3JpZ2luYDogTXVzdCBiZSBjYWxsZWQgYnkgYSBgU2lnbmVkYCBvcmlnaW4uLQEtIGBpZGA6IFRoZSBwYXJhIElELiBNdXN0IGJlIG93bmVkL21hbmFnZWQgYnkgdGhlIGBvcmlnaW5gIHNpZ25pbmcgYWNjb3VudC4BAS0gYGdlbmVzaXNfaGVhZGA6IFRoZSBnZW5lc2lzIGhlYWQgZGF0YSBvZiB0aGUgcGFyYWNoYWluL3RocmVhZC4lAS0gYHZhbGlkYXRpb25fY29kZWA6IFRoZSBpbml0aWFsIHZhbGlkYXRpb24gY29kZSBvZiB0aGUgcGFyYWNoYWluL3RocmVhZC4AQCMjIERlcG9zaXRzL0ZlZXMJAVRoZSBhY2NvdW50IHdpdGggdGhlIG9yaWdpbmF0aW5nIHNpZ25hdHVyZSBtdXN0IHJlc2VydmUgYSBkZXBvc2l0LgBNAVRoZSBkZXBvc2l0IGlzIHJlcXVpcmVkIHRvIGNvdmVyIHRoZSBjb3N0cyBhc3NvY2lhdGVkIHdpdGggc3RvcmluZyB0aGUgZ2VuZXNpcyBoZWFkdGRhdGEgYW5kIHRoZSB2YWxpZGF0aW9uIGNvZGUuMQFUaGlzIGFjY291bnRzIGZvciB0aGUgcG90ZW50aWFsIHRvIHN0b3JlIHZhbGlkYXRpb24gY29kZSBvZiBhIHNpemUgdXAgdG8gdGhl3GBtYXhfY29kZV9zaXplYCwgYXMgZGVmaW5lZCBpbiB0aGUgY29uZmlndXJhdGlvbiBwYWxsZXQAHQFBbnl0aGluZyBhbHJlYWR5IHJlc2VydmVkIHByZXZpb3VzbHkgZm9yIHRoaXMgcGFyYSBJRCBpcyBhY2NvdW50ZWQgZm9yLgAkIyMgRXZlbnRz1FRoZSBgUmVnaXN0ZXJlZGAgZXZlbnQgaXMgZW1pdHRlZCBpbiBjYXNlIG9mIHN1Y2Nlc3MuOGZvcmNlX3JlZ2lzdGVyFAEMd2hvAAEwVDo6QWNjb3VudElkAAEcZGVwb3NpdBgBMEJhbGFuY2VPZjxUPgABCGlktQIBGFBhcmFJZAABMGdlbmVzaXNfaGVhZN0EASBIZWFkRGF0YQABPHZhbGlkYXRpb25fY29kZdkEAThWYWxpZGF0aW9uQ29kZQABGNxGb3JjZSB0aGUgcmVnaXN0cmF0aW9uIG9mIGEgUGFyYSBJZCBvbiB0aGUgcmVsYXkgY2hhaW4uALhUaGlzIGZ1bmN0aW9uIG11c3QgYmUgY2FsbGVkIGJ5IGEgUm9vdCBvcmlnaW4uABkBVGhlIGRlcG9zaXQgdGFrZW4gY2FuIGJlIHNwZWNpZmllZCBmb3IgdGhpcyByZWdpc3RyYXRpb24uIEFueSBgUGFyYUlkYBkBY2FuIGJlIHJlZ2lzdGVyZWQsIGluY2x1ZGluZyBzdWItMTAwMCBJRHMgd2hpY2ggYXJlIFN5c3RlbSBQYXJhY2hhaW5zLihkZXJlZ2lzdGVyBAEIaWS1AgEYUGFyYUlkAAIQBQFEZXJlZ2lzdGVyIGEgUGFyYSBJZCwgZnJlZWluZyBhbGwgZGF0YSBhbmQgcmV0dXJuaW5nIGFueSBkZXBvc2l0LgBRAVRoZSBjYWxsZXIgbXVzdCBiZSBSb290LCB0aGUgYHBhcmFgIG93bmVyLCBvciB0aGUgYHBhcmFgIGl0c2VsZi4gVGhlIHBhcmEgbXVzdCBiZSBhblBvbi1kZW1hbmQgcGFyYWNoYWluLhBzd2FwCAEIaWS1AgEYUGFyYUlkAAEUb3RoZXK1AgEYUGFyYUlkAAMwQQFTd2FwIGEgbGVhc2UgaG9sZGluZyBwYXJhY2hhaW4gd2l0aCBhbm90aGVyIHBhcmFjaGFpbiwgZWl0aGVyIG9uLWRlbWFuZCBvciBsZWFzZSBob2xkaW5nLgABAVRoZSBvcmlnaW4gbXVzdCBiZSBSb290LCB0aGUgYHBhcmFgIG93bmVyLCBvciB0aGUgYHBhcmFgIGl0c2VsZi4AYQFUaGUgc3dhcCB3aWxsIGhhcHBlbiBvbmx5IGlmIHRoZXJlIGlzIGFscmVhZHkgYW4gb3Bwb3NpdGUgc3dhcCBwZW5kaW5nLiBJZiB0aGVyZSBpcyBub3QsWQF0aGUgc3dhcCB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgcGVuZGluZyBzd2FwcyBtYXAsIHJlYWR5IGZvciBhIGxhdGVyIGNvbmZpcm1hdG9yeSBzd2FwLgBdAVRoZSBgUGFyYUlkYHMgcmVtYWluIG1hcHBlZCB0byB0aGUgc2FtZSBoZWFkIGRhdGEgYW5kIGNvZGUgc28gZXh0ZXJuYWwgY29kZSBjYW4gcmVseSBvbj0BYFBhcmFJZGAgdG8gYmUgYSBsb25nLXRlcm0gaWRlbnRpZmllciBvZiBhIG5vdGlvbmFsICJwYXJhY2hhaW4iLiBIb3dldmVyLCB0aGVpcjUBc2NoZWR1bGluZyBpbmZvIChpLmUuIHdoZXRoZXIgdGhleSdyZSBhbiBvbi1kZW1hbmQgcGFyYWNoYWluIG9yIGxlYXNlIGhvbGRpbmcVAXBhcmFjaGFpbiksIGF1Y3Rpb24gaW5mb3JtYXRpb24gYW5kIHRoZSBhdWN0aW9uIGRlcG9zaXQgYXJlIHN3aXRjaGVkLixyZW1vdmVfbG9jawQBEHBhcmG1AgEYUGFyYUlkAAQQDQFSZW1vdmUgYSBtYW5hZ2VyIGxvY2sgZnJvbSBhIHBhcmEuIFRoaXMgd2lsbCBhbGxvdyB0aGUgbWFuYWdlciBvZiBhNQFwcmV2aW91c2x5IGxvY2tlZCBwYXJhIHRvIGRlcmVnaXN0ZXIgb3Igc3dhcCBhIHBhcmEgd2l0aG91dCB1c2luZyBnb3Zlcm5hbmNlLgDcQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBSb290IG9yaWdpbiBvciB0aGUgcGFyYWNoYWluLhxyZXNlcnZlAAVElFJlc2VydmUgYSBQYXJhIElkIG9uIHRoZSByZWxheSBjaGFpbi4ATQFUaGlzIGZ1bmN0aW9uIHdpbGwgcmVzZXJ2ZSBhIG5ldyBQYXJhIElkIHRvIGJlIG93bmVkL21hbmFnZWQgYnkgdGhlIG9yaWdpbiBhY2NvdW50LmEBVGhlIG9yaWdpbiBhY2NvdW50IGlzIGFibGUgdG8gcmVnaXN0ZXIgaGVhZCBkYXRhIGFuZCB2YWxpZGF0aW9uIGNvZGUgdXNpbmcgYHJlZ2lzdGVyYCB0b1kBY3JlYXRlIGFuIG9uLWRlbWFuZCBwYXJhY2hhaW4uIFVzaW5nIHRoZSBTbG90cyBwYWxsZXQsIGFuIG9uLWRlbWFuZCBwYXJhY2hhaW4gY2FuIHRoZW6kYmUgdXBncmFkZWQgdG8gYSBsZWFzZSBob2xkaW5nIHBhcmFjaGFpbi4AMCMjIEFyZ3VtZW50c1UBLSBgb3JpZ2luYDogTXVzdCBiZSBjYWxsZWQgYnkgYSBgU2lnbmVkYCBvcmlnaW4uIEJlY29tZXMgdGhlIG1hbmFnZXIvb3duZXIgb2YgdGhlIG5ldyggIHBhcmEgSUQuAEAjIyBEZXBvc2l0cy9GZWVzIQFUaGUgb3JpZ2luIG11c3QgcmVzZXJ2ZSBhIGRlcG9zaXQgb2YgYFBhcmFEZXBvc2l0YCBmb3IgdGhlIHJlZ2lzdHJhdGlvbi4AJCMjIEV2ZW50c1kBVGhlIGBSZXNlcnZlZGAgZXZlbnQgaXMgZW1pdHRlZCBpbiBjYXNlIG9mIHN1Y2Nlc3MsIHdoaWNoIHByb3ZpZGVzIHRoZSBJRCByZXNlcnZlZCBmb3IQdXNlLiBhZGRfbG9jawQBEHBhcmG1AgEYUGFyYUlkAAYUCQFBZGQgYSBtYW5hZ2VyIGxvY2sgZnJvbSBhIHBhcmEuIFRoaXMgd2lsbCBwcmV2ZW50IHRoZSBtYW5hZ2VyIG9mIGGIcGFyYSB0byBkZXJlZ2lzdGVyIG9yIHN3YXAgYSBwYXJhLgBJAUNhbiBiZSBjYWxsZWQgYnkgUm9vdCwgdGhlIHBhcmFjaGFpbiwgb3IgdGhlIHBhcmFjaGFpbiBtYW5hZ2VyIGlmIHRoZSBwYXJhY2hhaW4gaXMkdW5sb2NrZWQuVHNjaGVkdWxlX2NvZGVfdXBncmFkZQgBEHBhcmG1AgEYUGFyYUlkAAEgbmV3X2NvZGXZBAE4VmFsaWRhdGlvbkNvZGUAByx0U2NoZWR1bGUgYSBwYXJhY2hhaW4gdXBncmFkZS4AVQFUaGlzIHdpbGwga2ljayBvZmYgYSBjaGVjayBvZiBgbmV3X2NvZGVgIGJ5IGFsbCB2YWxpZGF0b3JzLiBBZnRlciB0aGUgbWFqb3JpdHkgb2YgdGhlVQF2YWxpZGF0b3JzIGhhdmUgcmVwb3J0ZWQgb24gdGhlIHZhbGlkaXR5IG9mIHRoZSBjb2RlLCB0aGUgY29kZSB3aWxsIGVpdGhlciBiZSBlbmFjdGVkVQFvciB0aGUgdXBncmFkZSB3aWxsIGJlIHJlamVjdGVkLiBJZiB0aGUgY29kZSB3aWxsIGJlIGVuYWN0ZWQsIHRoZSBjdXJyZW50IGNvZGUgb2YgdGhlXQFwYXJhY2hhaW4gd2lsbCBiZSBvdmVyd3JpdHRlbiBkaXJlY3RseS4gVGhpcyBtZWFucyB0aGF0IGFueSBQb1Ygd2lsbCBiZSBjaGVja2VkIGJ5IHRoaXNdAW5ldyBjb2RlLiBUaGUgcGFyYWNoYWluIGl0c2VsZiB3aWxsIG5vdCBiZSBpbmZvcm1lZCBleHBsaWNpdGx5IHRoYXQgdGhlIHZhbGlkYXRpb24gY29kZTBoYXMgY2hhbmdlZC4ASQFDYW4gYmUgY2FsbGVkIGJ5IFJvb3QsIHRoZSBwYXJhY2hhaW4sIG9yIHRoZSBwYXJhY2hhaW4gbWFuYWdlciBpZiB0aGUgcGFyYWNoYWluIGlzJHVubG9ja2VkLkBzZXRfY3VycmVudF9oZWFkCAEQcGFyYbUCARhQYXJhSWQAASBuZXdfaGVhZN0EASBIZWFkRGF0YQAIEIRTZXQgdGhlIHBhcmFjaGFpbidzIGN1cnJlbnQgaGVhZC4ASQFDYW4gYmUgY2FsbGVkIGJ5IFJvb3QsIHRoZSBwYXJhY2hhaW4sIG9yIHRoZSBwYXJhY2hhaW4gbWFuYWdlciBpZiB0aGUgcGFyYWNoYWluIGlzJHVubG9ja2VkLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy49BRBccG9sa2Fkb3RfcnVudGltZV9jb21tb24Uc2xvdHMYcGFsbGV0EENhbGwEBFQAAQwsZm9yY2VfbGVhc2UUARBwYXJhtQIBGFBhcmFJZAABGGxlYXNlcgABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgABMHBlcmlvZF9iZWdpbhABQExlYXNlUGVyaW9kT2Y8VD4AATBwZXJpb2RfY291bnQQAUBMZWFzZVBlcmlvZE9mPFQ+AAAQTQFKdXN0IGEgY29ubmVjdCBpbnRvIHRoZSBgbGVhc2Vfb3V0YCBjYWxsLCBpbiBjYXNlIFJvb3Qgd2FudHMgdG8gZm9yY2Ugc29tZSBsZWFzZSB0b/xoYXBwZW4gaW5kZXBlbmRlbnRseSBvZiBhbnkgb3RoZXIgb24tY2hhaW4gbWVjaGFuaXNtIHRvIHVzZSBpdC4A+FRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IG1hdGNoIGBUOjpGb3JjZU9yaWdpbmAuQGNsZWFyX2FsbF9sZWFzZXMEARBwYXJhtQIBGFBhcmFJZAABDE0BQ2xlYXIgYWxsIGxlYXNlcyBmb3IgYSBQYXJhIElkLCByZWZ1bmRpbmcgYW55IGRlcG9zaXRzIGJhY2sgdG8gdGhlIG9yaWdpbmFsIG93bmVycy4A+FRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IG1hdGNoIGBUOjpGb3JjZU9yaWdpbmAuPHRyaWdnZXJfb25ib2FyZAQBEHBhcmG1AgEYUGFyYUlkAAIcJQFUcnkgdG8gb25ib2FyZCBhIHBhcmFjaGFpbiB0aGF0IGhhcyBhIGxlYXNlIGZvciB0aGUgY3VycmVudCBsZWFzZSBwZXJpb2QuAEUBVGhpcyBmdW5jdGlvbiBjYW4gYmUgdXNlZnVsIGlmIHRoZXJlIHdhcyBzb21lIHN0YXRlIGlzc3VlIHdpdGggYSBwYXJhIHRoYXQgc2hvdWxkOQFoYXZlIG9uYm9hcmRlZCwgYnV0IHdhcyB1bmFibGUgdG8uIEFzIGxvbmcgYXMgdGhleSBoYXZlIGEgbGVhc2UgcGVyaW9kLCB3ZSBjYW5sbGV0IHRoZW0gb25ib2FyZCBmcm9tIGhlcmUuAMxPcmlnaW4gbXVzdCBiZSBzaWduZWQsIGJ1dCBjYW4gYmUgY2FsbGVkIGJ5IGFueW9uZS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuQQUQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uIGF1Y3Rpb25zGHBhbGxldBBDYWxsBARUAAEMLG5ld19hdWN0aW9uCAEgZHVyYXRpb278AURCbG9ja051bWJlckZvcjxUPgABSGxlYXNlX3BlcmlvZF9pbmRlePwBQExlYXNlUGVyaW9kT2Y8VD4AABRUQ3JlYXRlIGEgbmV3IGF1Y3Rpb24uAFEBVGhpcyBjYW4gb25seSBoYXBwZW4gd2hlbiB0aGVyZSBpc24ndCBhbHJlYWR5IGFuIGF1Y3Rpb24gaW4gcHJvZ3Jlc3MgYW5kIG1heSBvbmx5IGJlJQFjYWxsZWQgYnkgdGhlIHJvb3Qgb3JpZ2luLiBBY2NlcHRzIHRoZSBgZHVyYXRpb25gIG9mIHRoaXMgYXVjdGlvbiBhbmQgdGhlWQFgbGVhc2VfcGVyaW9kX2luZGV4YCBvZiB0aGUgaW5pdGlhbCBsZWFzZSBwZXJpb2Qgb2YgdGhlIGZvdXIgdGhhdCBhcmUgdG8gYmUgYXVjdGlvbmVkLgxiaWQUARBwYXJhRQUBGFBhcmFJZAABNGF1Y3Rpb25faW5kZXj8ATBBdWN0aW9uSW5kZXgAAShmaXJzdF9zbG90/AFATGVhc2VQZXJpb2RPZjxUPgABJGxhc3Rfc2xvdPwBQExlYXNlUGVyaW9kT2Y8VD4AARhhbW91bnQNAQEwQmFsYW5jZU9mPFQ+AAFASQFNYWtlIGEgbmV3IGJpZCBmcm9tIGFuIGFjY291bnQgKGluY2x1ZGluZyBhIHBhcmFjaGFpbiBhY2NvdW50KSBmb3IgZGVwbG95aW5nIGEgbmV3KHBhcmFjaGFpbi4AWQFNdWx0aXBsZSBzaW11bHRhbmVvdXMgYmlkcyBmcm9tIHRoZSBzYW1lIGJpZGRlciBhcmUgYWxsb3dlZCBvbmx5IGFzIGxvbmcgYXMgYWxsIGFjdGl2ZT0BYmlkcyBvdmVybGFwIGVhY2ggb3RoZXIgKGkuZS4gYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZSkuIEJpZHMgY2Fubm90IGJlIHJlZGFjdGVkLgBVAS0gYHN1YmAgaXMgdGhlIHN1Yi1iaWRkZXIgSUQsIGFsbG93aW5nIGZvciBtdWx0aXBsZSBjb21wZXRpbmcgYmlkcyB0byBiZSBtYWRlIGJ5IChhbmRwZnVuZGVkIGJ5KSB0aGUgc2FtZSBhY2NvdW50Lk0BLSBgYXVjdGlvbl9pbmRleGAgaXMgdGhlIGluZGV4IG9mIHRoZSBhdWN0aW9uIHRvIGJpZCBvbi4gU2hvdWxkIGp1c3QgYmUgdGhlIHByZXNlbnRodmFsdWUgb2YgYEF1Y3Rpb25Db3VudGVyYC5JAS0gYGZpcnN0X3Nsb3RgIGlzIHRoZSBmaXJzdCBsZWFzZSBwZXJpb2QgaW5kZXggb2YgdGhlIHJhbmdlIHRvIGJpZCBvbi4gVGhpcyBpcyB0aGUJAWFic29sdXRlIGxlYXNlIHBlcmlvZCBpbmRleCB2YWx1ZSwgbm90IGFuIGF1Y3Rpb24tc3BlY2lmaWMgb2Zmc2V0LkEBLSBgbGFzdF9zbG90YCBpcyB0aGUgbGFzdCBsZWFzZSBwZXJpb2QgaW5kZXggb2YgdGhlIHJhbmdlIHRvIGJpZCBvbi4gVGhpcyBpcyB0aGUJAWFic29sdXRlIGxlYXNlIHBlcmlvZCBpbmRleCB2YWx1ZSwgbm90IGFuIGF1Y3Rpb24tc3BlY2lmaWMgb2Zmc2V0LkkBLSBgYW1vdW50YCBpcyB0aGUgYW1vdW50IHRvIGJpZCB0byBiZSBoZWxkIGFzIGRlcG9zaXQgZm9yIHRoZSBwYXJhY2hhaW4gc2hvdWxkIHRoZchiaWQgd2luLiBUaGlzIGFtb3VudCBpcyBoZWxkIHRocm91Z2hvdXQgdGhlIHJhbmdlLjhjYW5jZWxfYXVjdGlvbgACDHhDYW5jZWwgYW4gaW4tcHJvZ3Jlc3MgYXVjdGlvbi4AiENhbiBvbmx5IGJlIGNhbGxlZCBieSBSb290IG9yaWdpbi4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuRQUAAAa1AgBJBRBccG9sa2Fkb3RfcnVudGltZV9jb21tb24kY3Jvd2Rsb2FuGHBhbGxldBBDYWxsBARUAAEkGGNyZWF0ZRgBFGluZGV4RQUBGFBhcmFJZAABDGNhcA0BATBCYWxhbmNlT2Y8VD4AATBmaXJzdF9wZXJpb2T8AUBMZWFzZVBlcmlvZE9mPFQ+AAEsbGFzdF9wZXJpb2T8AUBMZWFzZVBlcmlvZE9mPFQ+AAEMZW5k/AFEQmxvY2tOdW1iZXJGb3I8VD4AASB2ZXJpZmllck0FAUxPcHRpb248TXVsdGlTaWduZXI+AAAUTQFDcmVhdGUgYSBuZXcgY3Jvd2Rsb2FuaW5nIGNhbXBhaWduIGZvciBhIHBhcmFjaGFpbiBzbG90IHdpdGggdGhlIGdpdmVuIGxlYXNlIHBlcmlvZBhyYW5nZS4AXQFUaGlzIGFwcGxpZXMgYSBsb2NrIHRvIHlvdXIgcGFyYWNoYWluIGNvbmZpZ3VyYXRpb24sIGVuc3VyaW5nIHRoYXQgaXQgY2Fubm90IGJlIGNoYW5nZWRkYnkgdGhlIHBhcmFjaGFpbiBtYW5hZ2VyLihjb250cmlidXRlDAEUaW5kZXhFBQEYUGFyYUlkAAEUdmFsdWUNAQEwQmFsYW5jZU9mPFQ+AAEkc2lnbmF0dXJlVQUBWE9wdGlvbjxNdWx0aVNpZ25hdHVyZT4AAQhRAUNvbnRyaWJ1dGUgdG8gYSBjcm93ZCBzYWxlLiBUaGlzIHdpbGwgdHJhbnNmZXIgc29tZSBiYWxhbmNlIG92ZXIgdG8gZnVuZCBhIHBhcmFjaGFpblEBc2xvdC4gSXQgd2lsbCBiZSB3aXRoZHJhd2FibGUgd2hlbiB0aGUgY3Jvd2Rsb2FuIGhhcyBlbmRlZCBhbmQgdGhlIGZ1bmRzIGFyZSB1bnVzZWQuIHdpdGhkcmF3CAEMd2hvAAEwVDo6QWNjb3VudElkAAEUaW5kZXhFBQEYUGFyYUlkAAJEwFdpdGhkcmF3IGZ1bGwgYmFsYW5jZSBvZiBhIHNwZWNpZmljIGNvbnRyaWJ1dG9yLgDAT3JpZ2luIG11c3QgYmUgc2lnbmVkLCBidXQgY2FuIGNvbWUgZnJvbSBhbnlvbmUuAF0BVGhlIGZ1bmQgbXVzdCBiZSBlaXRoZXIgaW4sIG9yIHJlYWR5IGZvciwgcmV0aXJlbWVudC4gRm9yIGEgZnVuZCB0byBiZSAqaW4qIHJldGlyZW1lbnQsSQF0aGVuIHRoZSByZXRpcmVtZW50IGZsYWcgbXVzdCBiZSBzZXQuIEZvciBhIGZ1bmQgdG8gYmUgcmVhZHkgZm9yIHJldGlyZW1lbnQsIHRoZW46nC0gaXQgbXVzdCBub3QgYWxyZWFkeSBiZSBpbiByZXRpcmVtZW50O00BLSB0aGUgYW1vdW50IG9mIHJhaXNlZCBmdW5kcyBtdXN0IGJlIGJpZ2dlciB0aGFuIHRoZSBfZnJlZV8gYmFsYW5jZSBvZiB0aGUgYWNjb3VudDs0LSBhbmQgZWl0aGVyOrwgIC0gdGhlIGJsb2NrIG51bWJlciBtdXN0IGJlIGF0IGxlYXN0IGBlbmRgOyBvci0BICAtIHRoZSBjdXJyZW50IGxlYXNlIHBlcmlvZCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB0aGUgZnVuZCdzIGBsYXN0X3BlcmlvZGAuAFUBSW4gdGhpcyBjYXNlLCB0aGUgZnVuZCdzIHJldGlyZW1lbnQgZmxhZyBpcyBzZXQgYW5kIGl0cyBgZW5kYCBpcyByZXNldCB0byB0aGUgY3VycmVudDRibG9jayBudW1iZXIuAPAtIGB3aG9gOiBUaGUgYWNjb3VudCB3aG9zZSBjb250cmlidXRpb24gc2hvdWxkIGJlIHdpdGhkcmF3bi4ZAS0gYGluZGV4YDogVGhlIHBhcmFjaGFpbiB0byB3aG9zZSBjcm93ZGxvYW4gdGhlIGNvbnRyaWJ1dGlvbiB3YXMgbWFkZS4YcmVmdW5kBAEUaW5kZXhFBQEYUGFyYUlkAAMU4EF1dG9tYXRpY2FsbHkgcmVmdW5kIGNvbnRyaWJ1dG9ycyBvZiBhbiBlbmRlZCBjcm93ZGxvYW4uIQFEdWUgdG8gd2VpZ2h0IHJlc3RyaWN0aW9ucywgdGhpcyBmdW5jdGlvbiBtYXkgbmVlZCB0byBiZSBjYWxsZWQgbXVsdGlwbGVJAXRpbWVzIHRvIGZ1bGx5IHJlZnVuZCBhbGwgdXNlcnMuIFdlIHdpbGwgcmVmdW5kIGBSZW1vdmVLZXlzTGltaXRgIHVzZXJzIGF0IGEgdGltZS4AwE9yaWdpbiBtdXN0IGJlIHNpZ25lZCwgYnV0IGNhbiBjb21lIGZyb20gYW55b25lLiBkaXNzb2x2ZQQBFGluZGV4RQUBGFBhcmFJZAAEBFUBUmVtb3ZlIGEgZnVuZCBhZnRlciB0aGUgcmV0aXJlbWVudCBwZXJpb2QgaGFzIGVuZGVkIGFuZCBhbGwgZnVuZHMgaGF2ZSBiZWVuIHJldHVybmVkLhBlZGl0GAEUaW5kZXhFBQEYUGFyYUlkAAEMY2FwDQEBMEJhbGFuY2VPZjxUPgABMGZpcnN0X3BlcmlvZPwBQExlYXNlUGVyaW9kT2Y8VD4AASxsYXN0X3BlcmlvZPwBQExlYXNlUGVyaW9kT2Y8VD4AAQxlbmT8AURCbG9ja051bWJlckZvcjxUPgABIHZlcmlmaWVyTQUBTE9wdGlvbjxNdWx0aVNpZ25lcj4ABQzQRWRpdCB0aGUgY29uZmlndXJhdGlvbiBmb3IgYW4gaW4tcHJvZ3Jlc3MgY3Jvd2Rsb2FuLgCIQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IFJvb3Qgb3JpZ2luLiBhZGRfbWVtbwgBFGluZGV4tQIBGFBhcmFJZAABEG1lbW84ARxWZWM8dTg+AAYM7EFkZCBhbiBvcHRpb25hbCBtZW1vIHRvIGFuIGV4aXN0aW5nIGNyb3dkbG9hbiBjb250cmlidXRpb24uAC0BT3JpZ2luIG11c3QgYmUgU2lnbmVkLCBhbmQgdGhlIHVzZXIgbXVzdCBoYXZlIGNvbnRyaWJ1dGVkIHRvIHRoZSBjcm93ZGxvYW4uEHBva2UEARRpbmRleLUCARhQYXJhSWQABwx0UG9rZSB0aGUgZnVuZCBpbnRvIGBOZXdSYWlzZWAA3E9yaWdpbiBtdXN0IGJlIFNpZ25lZCwgYW5kIHRoZSBmdW5kIGhhcyBub24temVybyByYWlzZS44Y29udHJpYnV0ZV9hbGwIARRpbmRleEUFARhQYXJhSWQAASRzaWduYXR1cmVVBQFYT3B0aW9uPE11bHRpU2lnbmF0dXJlPgAIDGEBQ29udHJpYnV0ZSB5b3VyIGVudGlyZSBiYWxhbmNlIHRvIGEgY3Jvd2Qgc2FsZS4gVGhpcyB3aWxsIHRyYW5zZmVyIHRoZSBlbnRpcmUgYmFsYW5jZSBvZlEBYSB1c2VyIG92ZXIgdG8gZnVuZCBhIHBhcmFjaGFpbiBzbG90LiBJdCB3aWxsIGJlIHdpdGhkcmF3YWJsZSB3aGVuIHRoZSBjcm93ZGxvYW4gaGFzfGVuZGVkIGFuZCB0aGUgZnVuZHMgYXJlIHVudXNlZC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuTQUEGE9wdGlvbgQEVAFRBQEIEE5vbmUAAAAQU29tZQQAUQUAAAEAAFEFCChzcF9ydW50aW1lLE11bHRpU2lnbmVyAAEMHEVkMjU1MTkEAAQBPGVkMjU1MTk6OlB1YmxpYwAAABxTcjI1NTE5BAAEATxzcjI1NTE5OjpQdWJsaWMAAQAURWNkc2EEAGECATRlY2RzYTo6UHVibGljAAIAAFUFBBhPcHRpb24EBFQBWQUBCBBOb25lAAAAEFNvbWUEAFkFAAABAABZBQgoc3BfcnVudGltZThNdWx0aVNpZ25hdHVyZQABDBxFZDI1NTE5BAB9AgFIZWQyNTUxOTo6U2lnbmF0dXJlAAAAHFNyMjU1MTkEAH0CAUhzcjI1NTE5OjpTaWduYXR1cmUAAQAURWNkc2EEANECAUBlY2RzYTo6U2lnbmF0dXJlAAIAAF0FEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMgY29yZXRpbWUYcGFsbGV0EENhbGwEBFQAARBIcmVxdWVzdF9jb3JlX2NvdW50BAEUY291bnSdAQEMdTE2AAEYUQFSZXF1ZXN0IHRoZSBjb25maWd1cmF0aW9uIHRvIGJlIHVwZGF0ZWQgd2l0aCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBjb3Jlcy4gV2FybmluZzpRAVNpbmNlIHRoaXMgb25seSBzY2hlZHVsZXMgYSBjb25maWd1cmF0aW9uIHVwZGF0ZSwgaXQgdGFrZXMgdHdvIHNlc3Npb25zIHRvIGNvbWUgaW50bxxlZmZlY3QuAJgtIGBvcmlnaW5gOiBSb290IG9yIHRoZSBDb3JldGltZSBDaGFpboAtIGBjb3VudGA6IHRvdGFsIG51bWJlciBvZiBjb3Jlc0hyZXF1ZXN0X3JldmVudWVfYXQEARB3aGVuEAEsQmxvY2tOdW1iZXIAAhBhAVJlcXVlc3QgdG8gY2xhaW0gdGhlIGluc3RhbnRhbmVvdXMgY29yZXRpbWUgc2FsZXMgcmV2ZW51ZSBzdGFydGluZyBmcm9tIHRoZSBibG9jayBpdCB3YXNdAWxhc3QgY2xhaW1lZCB1bnRpbCBhbmQgdXAgdG8gdGhlIGJsb2NrIHNwZWNpZmllZC4gVGhlIGNsYWltZWQgYW1vdW50IHZhbHVlIGlzIHNlbnQgYmFja1EBdG8gdGhlIENvcmV0aW1lIGNoYWluIGluIGEgYG5vdGlmeV9yZXZlbnVlYCBtZXNzYWdlLiBBdCB0aGUgc2FtZSB0aW1lLCB0aGUgYW1vdW50IGlzhHRlbGVwb3J0ZWQgdG8gdGhlIENvcmV0aW1lIGNoYWluLjhjcmVkaXRfYWNjb3VudAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgADACxhc3NpZ25fY29yZRABEGNvcmWdAQE8QnJva2VyQ29yZUluZGV4AAEUYmVnaW4QAURCbG9ja051bWJlckZvcjxUPgABKGFzc2lnbm1lbnRhBQGMVmVjPChDb3JlQXNzaWdubWVudCwgUGFydHNPZjU3NjAwKT4AASBlbmRfaGludLgBZE9wdGlvbjxCbG9ja051bWJlckZvcjxUPj4ABCRZAVJlY2VpdmUgaW5zdHJ1Y3Rpb25zIGZyb20gdGhlIGBFeHRlcm5hbEJyb2tlck9yaWdpbmAsIGRldGFpbGluZyBob3cgYSBzcGVjaWZpYyBjb3JlIGlzLHRvIGJlIHVzZWQuACxQYXJhbWV0ZXJzOiEBLWBvcmlnaW5gOiBUaGUgYEV4dGVybmFsQnJva2VyT3JpZ2luYCwgYXNzdW1lZCB0byBiZSB0aGUgY29yZXRpbWUgY2hhaW4urC1gY29yZWA6IFRoZSBjb3JlIHRoYXQgc2hvdWxkIGJlIHNjaGVkdWxlZC7YLWBiZWdpbmA6IFRoZSBzdGFydGluZyBibG9ja2hlaWdodCBvZiB0aGUgaW5zdHJ1Y3Rpb24u1C1gYXNzaWdubWVudGA6IEhvdyB0aGUgYmxvY2tzcGFjZSBzaG91bGQgYmUgdXRpbGlzZWQuWQEtYGVuZF9oaW50YDogQW4gb3B0aW9uYWwgaGludCBhcyB0byB3aGVuIHRoaXMgcGFydGljdWxhciBzZXQgb2YgaW5zdHJ1Y3Rpb25zIHdpbGwgZW5kLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy5hBQAAAmUFAGUFAAAECGkFbQUAaQUMNHBhbGxldF9icm9rZXJIY29yZXRpbWVfaW50ZXJmYWNlOENvcmVBc3NpZ25tZW50AAEMEElkbGUAAAAQUG9vbAABABBUYXNrBAAQARhUYXNrSWQAAgAAbQUMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWluc0Rhc3NpZ25lcl9jb3JldGltZTBQYXJ0c09mNTc2MDAAAAQAnQEBDHUxNgAAcQUMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQQQ2FsbAQEVAABGFhjb250cm9sX2F1dG9fbWlncmF0aW9uBAEwbWF5YmVfY29uZmlndQUBXE9wdGlvbjxNaWdyYXRpb25MaW1pdHM+AAAMgENvbnRyb2wgdGhlIGF1dG9tYXRpYyBtaWdyYXRpb24uAA0BVGhlIGRpc3BhdGNoIG9yaWdpbiBvZiB0aGlzIGNhbGwgbXVzdCBiZSBbYENvbmZpZzo6Q29udHJvbE9yaWdpbmBdLkBjb250aW51ZV9taWdyYXRlDAEYbGltaXRzeQUBPE1pZ3JhdGlvbkxpbWl0cwABPHJlYWxfc2l6ZV91cHBlchABDHUzMgABMHdpdG5lc3NfdGFza30FAUBNaWdyYXRpb25UYXNrPFQ+AAFUuENvbnRpbnVlIHRoZSBtaWdyYXRpb24gZm9yIHRoZSBnaXZlbiBgbGltaXRzYC4A7FRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBjYWxsIGNhbiBiZSBhbnkgc2lnbmVkIGFjY291bnQuAF0BVGhpcyB0cmFuc2FjdGlvbiBoYXMgTk8gTU9ORVRBUlkgSU5DRU5USVZFUy4gY2FsbGluZyBpdCB3aWxsIG5vdCByZXdhcmQgYW55b25lLiBBbGJlaXQs7FVwb24gc3VjY2Vzc2Z1bCBleGVjdXRpb24sIHRoZSB0cmFuc2FjdGlvbiBmZWUgaXMgcmV0dXJuZWQuAEEBVGhlIChwb3RlbnRpYWxseSBvdmVyLWVzdGltYXRlZCkgb2YgdGhlIGJ5dGUgbGVuZ3RoIG9mIGFsbCB0aGUgZGF0YSByZWFkIG11c3QgYmVZAXByb3ZpZGVkIGZvciB1cC1mcm9udCBmZWUtcGF5bWVudCBhbmQgd2VpZ2hpbmcuIEluIGVzc2VuY2UsIHRoZSBjYWxsZXIgaXMgZ3VhcmFudGVlaW5nSQF0aGF0IGV4ZWN1dGluZyB0aGUgY3VycmVudCBgTWlncmF0aW9uVGFza2Agd2l0aCB0aGUgZ2l2ZW4gYGxpbWl0c2Agd2lsbCBub3QgZXhjZWVklGByZWFsX3NpemVfdXBwZXJgIGJ5dGVzIG9mIHJlYWQgZGF0YS4ARQFUaGUgYHdpdG5lc3NfdGFza2AgaXMgbWVyZWx5IGEgaGVscGVyIHRvIHByZXZlbnQgdGhlIGNhbGxlciBmcm9tIGJlaW5nIHNsYXNoZWQgb3JdAWdlbmVyYWxseSB0cmlnZ2VyIGEgbWlncmF0aW9uIHRoYXQgdGhleSBkbyBub3QgaW50ZW5kLiBUaGlzIHBhcmFtZXRlciBpcyBqdXN0IGEgbWVzc2FnZT0BZnJvbSBjYWxsZXIsIHNheWluZyB0aGF0IHRoZXkgYmVsaWV2ZWQgYHdpdG5lc3NfdGFza2Agd2FzIHRoZSBsYXN0IHN0YXRlIG9mIHRoZVkBbWlncmF0aW9uLCBhbmQgdGhleSBvbmx5IHdpc2ggZm9yIHRoZWlyIHRyYW5zYWN0aW9uIHRvIGRvIGFueXRoaW5nLCBpZiB0aGlzIGFzc3VtcHRpb24RAWhvbGRzLiBJbiBjYXNlIGB3aXRuZXNzX3Rhc2tgIGRvZXMgbm90IG1hdGNoLCB0aGUgdHJhbnNhY3Rpb24gZmFpbHMuADkBQmFzZWQgb24gdGhlIGRvY3VtZW50YXRpb24gb2YgW2BNaWdyYXRpb25UYXNrOjptaWdyYXRlX3VudGlsX2V4aGF1c3Rpb25gXSwgdGhlTQFyZWNvbW1lbmRlZCB3YXkgb2YgZG9pbmcgdGhpcyBpcyB0byBwYXNzIGEgYGxpbWl0YCB0aGF0IG9ubHkgYm91bmRzIGBjb3VudGAsIGFzIHRoZZxgc2l6ZWAgbGltaXQgY2FuIGFsd2F5cyBiZSBvdmVyd3JpdHRlbi5IbWlncmF0ZV9jdXN0b21fdG9wCAEQa2V5c7kBATBWZWM8VmVjPHU4Pj4AATB3aXRuZXNzX3NpemUQAQx1MzIAAhAJAU1pZ3JhdGUgdGhlIGxpc3Qgb2YgdG9wIGtleXMgYnkgaXRlcmF0aW5nIGVhY2ggb2YgdGhlbSBvbmUgYnkgb25lLgBVAVRoaXMgZG9lcyBub3QgYWZmZWN0IHRoZSBnbG9iYWwgbWlncmF0aW9uIHByb2Nlc3MgdHJhY2tlciAoW2BNaWdyYXRpb25Qcm9jZXNzYF0pLCBhbmT8c2hvdWxkIG9ubHkgYmUgdXNlZCBpbiBjYXNlIGFueSBrZXlzIGFyZSBsZWZ0b3ZlciBkdWUgdG8gYSBidWcuUG1pZ3JhdGVfY3VzdG9tX2NoaWxkDAEQcm9vdDgBHFZlYzx1OD4AAShjaGlsZF9rZXlzuQEBMFZlYzxWZWM8dTg+PgABKHRvdGFsX3NpemUQAQx1MzIAAxgRAU1pZ3JhdGUgdGhlIGxpc3Qgb2YgY2hpbGQga2V5cyBieSBpdGVyYXRpbmcgZWFjaCBvZiB0aGVtIG9uZSBieSBvbmUuAA0BQWxsIG9mIHRoZSBnaXZlbiBjaGlsZCBrZXlzIG11c3QgYmUgcHJlc2VudCB1bmRlciBvbmUgYGNoaWxkX3Jvb3RgLgBVAVRoaXMgZG9lcyBub3QgYWZmZWN0IHRoZSBnbG9iYWwgbWlncmF0aW9uIHByb2Nlc3MgdHJhY2tlciAoW2BNaWdyYXRpb25Qcm9jZXNzYF0pLCBhbmT8c2hvdWxkIG9ubHkgYmUgdXNlZCBpbiBjYXNlIGFueSBrZXlzIGFyZSBsZWZ0b3ZlciBkdWUgdG8gYSBidWcuVHNldF9zaWduZWRfbWF4X2xpbWl0cwQBGGxpbWl0c3kFATxNaWdyYXRpb25MaW1pdHMABAS4U2V0IHRoZSBtYXhpbXVtIGxpbWl0IG9mIHRoZSBzaWduZWQgbWlncmF0aW9uLkhmb3JjZV9zZXRfcHJvZ3Jlc3MIATBwcm9ncmVzc190b3CBBQE0UHJvZ3Jlc3NPZjxUPgABOHByb2dyZXNzX2NoaWxkgQUBNFByb2dyZXNzT2Y8VD4ABSTIRm9yY2VmdWxseSBzZXQgdGhlIHByb2dyZXNzIHRoZSBydW5uaW5nIG1pZ3JhdGlvbi4AXQFUaGlzIGlzIG9ubHkgdXNlZnVsIGluIG9uZSBjYXNlOiB0aGUgbmV4dCBrZXkgdG8gbWlncmF0ZSBpcyB0b28gYmlnIHRvIGJlIG1pZ3JhdGVkIHdpdGhVAWEgc2lnbmVkIGFjY291bnQsIGluIGEgcGFyYWNoYWluIGNvbnRleHQsIGFuZCB3ZSBzaW1wbHkgd2FudCB0byBza2lwIGl0LiBBIHJlYXNvbmFibGVhAWV4YW1wbGUgb2YgdGhpcyB3b3VsZCBiZSBgOmNvZGU6YCwgd2hpY2ggaXMgYm90aCB2ZXJ5IGV4cGVuc2l2ZSB0byBtaWdyYXRlLCBhbmQgY29tbW9ubHmkdXNlZCwgc28gcHJvYmFibHkgaXQgaXMgYWxyZWFkeSBtaWdyYXRlZC4AXQFJbiBjYXNlIHlvdSBtZXNzIHRoaW5ncyB1cCwgeW91IGNhbiBhbHNvLCBpbiBwcmluY2lwbGUsIHVzZSB0aGlzIHRvIHJlc2V0IHRoZSBtaWdyYXRpb24gcHJvY2Vzcy4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMudQUEGE9wdGlvbgQEVAF5BQEIEE5vbmUAAAAQU29tZQQAeQUAAAEAAHkFDGxwYWxsZXRfc3RhdGVfdHJpZV9taWdyYXRpb24YcGFsbGV0PE1pZ3JhdGlvbkxpbWl0cwAACAEQc2l6ZRABDHUzMgABEGl0ZW0QAQx1MzIAAH0FDGxwYWxsZXRfc3RhdGVfdHJpZV9taWdyYXRpb24YcGFsbGV0NE1pZ3JhdGlvblRhc2sEBFQAABQBMHByb2dyZXNzX3RvcIEFATRQcm9ncmVzc09mPFQ+AAE4cHJvZ3Jlc3NfY2hpbGSBBQE0UHJvZ3Jlc3NPZjxUPgABEHNpemUQAQx1MzIAASR0b3BfaXRlbXMQAQx1MzIAASxjaGlsZF9pdGVtcxABDHUzMgAAgQUMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQgUHJvZ3Jlc3MEJE1heEtleUxlbgABDBxUb1N0YXJ0AAAAHExhc3RLZXkEAIUFAWRCb3VuZGVkVmVjPHU4LCBNYXhLZXlMZW4+AAEAIENvbXBsZXRlAAIAAIUFDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADgBGFZlYzxUPgAAiQUMKHBhbGxldF94Y20YcGFsbGV0EENhbGwEBFQAAUQQc2VuZAgBEGRlc3SNAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABHG1lc3NhZ2WNBQFUQm94PFZlcnNpb25lZFhjbTwoKT4+AAAAPHRlbGVwb3J0X2Fzc2V0cxABEGRlc3SNAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5jQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHO9BgFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgABSBEBVGVsZXBvcnQgc29tZSBhc3NldHMgZnJvbSB0aGUgbG9jYWwgY2hhaW4gdG8gc29tZSBkZXN0aW5hdGlvbiBjaGFpbi4AHQEqKlRoaXMgZnVuY3Rpb24gaXMgZGVwcmVjYXRlZDogVXNlIGBsaW1pdGVkX3RlbGVwb3J0X2Fzc2V0c2AgaW5zdGVhZC4qKgBRAUZlZSBwYXltZW50IG9uIHRoZSBkZXN0aW5hdGlvbiBzaWRlIGlzIG1hZGUgZnJvbSB0aGUgYXNzZXQgaW4gdGhlIGBhc3NldHNgIHZlY3RvciBvZmEBaW5kZXggYGZlZV9hc3NldF9pdGVtYC4gVGhlIHdlaWdodCBsaW1pdCBmb3IgZmVlcyBpcyBub3QgcHJvdmlkZWQgYW5kIHRodXMgaXMgdW5saW1pdGVkLLR3aXRoIGFsbCBmZWVzIHRha2VuIGFzIG5lZWRlZCBmcm9tIHRoZSBhc3NldC4AKQEtIGBvcmlnaW5gOiBNdXN0IGJlIGNhcGFibGUgb2Ygd2l0aGRyYXdpbmcgdGhlIGBhc3NldHNgIGFuZCBleGVjdXRpbmcgWENNLiUBLSBgZGVzdGA6IERlc3RpbmF0aW9uIGNvbnRleHQgZm9yIHRoZSBhc3NldHMuIFdpbGwgdHlwaWNhbGx5IGJlIGBbUGFyZW50LGEBICBQYXJhY2hhaW4oLi4pXWAgdG8gc2VuZCBmcm9tIHBhcmFjaGFpbiB0byBwYXJhY2hhaW4sIG9yIGBbUGFyYWNoYWluKC4uKV1gIHRvIHNlbmQgZnJvbVQgIHJlbGF5IHRvIHBhcmFjaGFpbi5VAS0gYGJlbmVmaWNpYXJ5YDogQSBiZW5lZmljaWFyeSBsb2NhdGlvbiBmb3IgdGhlIGFzc2V0cyBpbiB0aGUgY29udGV4dCBvZiBgZGVzdGAuIFdpbGyYICBnZW5lcmFsbHkgYmUgYW4gYEFjY291bnRJZDMyYCB2YWx1ZS5ZAS0gYGFzc2V0c2A6IFRoZSBhc3NldHMgdG8gYmUgd2l0aGRyYXduLiBUaGlzIHNob3VsZCBpbmNsdWRlIHRoZSBhc3NldHMgdXNlZCB0byBwYXkgdGhlaCAgZmVlIG9uIHRoZSBgZGVzdGAgY2hhaW4uTQEtIGBmZWVfYXNzZXRfaXRlbWA6IFRoZSBpbmRleCBpbnRvIGBhc3NldHNgIG9mIHRoZSBpdGVtIHdoaWNoIHNob3VsZCBiZSB1c2VkIHRvIHBheRwgIGZlZXMuXHJlc2VydmVfdHJhbnNmZXJfYXNzZXRzEAEQZGVzdI0BAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEsYmVuZWZpY2lhcnmNAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABGGFzc2V0c70GAVBCb3g8VmVyc2lvbmVkQXNzZXRzPgABOGZlZV9hc3NldF9pdGVtEAEMdTMyAAJ4XQFUcmFuc2ZlciBzb21lIGFzc2V0cyBmcm9tIHRoZSBsb2NhbCBjaGFpbiB0byB0aGUgZGVzdGluYXRpb24gY2hhaW4gdGhyb3VnaCB0aGVpciBsb2NhbCx4ZGVzdGluYXRpb24gb3IgcmVtb3RlIHJlc2VydmUuAD0BYGFzc2V0c2AgbXVzdCBoYXZlIHNhbWUgcmVzZXJ2ZSBsb2NhdGlvbiBhbmQgbWF5IG5vdCBiZSB0ZWxlcG9ydGFibGUgdG8gYGRlc3RgLk0BIC0gYGFzc2V0c2AgaGF2ZSBsb2NhbCByZXNlcnZlOiB0cmFuc2ZlciBhc3NldHMgdG8gc292ZXJlaWduIGFjY291bnQgb2YgZGVzdGluYXRpb25NASAgIGNoYWluIGFuZCBmb3J3YXJkIGEgbm90aWZpY2F0aW9uIFhDTSB0byBgZGVzdGAgdG8gbWludCBhbmQgZGVwb3NpdCByZXNlcnZlLWJhc2VkbCAgIGFzc2V0cyB0byBgYmVuZWZpY2lhcnlgLlUBIC0gYGFzc2V0c2AgaGF2ZSBkZXN0aW5hdGlvbiByZXNlcnZlOiBidXJuIGxvY2FsIGFzc2V0cyBhbmQgZm9yd2FyZCBhIG5vdGlmaWNhdGlvbiB0b1kBICAgYGRlc3RgIGNoYWluIHRvIHdpdGhkcmF3IHRoZSByZXNlcnZlIGFzc2V0cyBmcm9tIHRoaXMgY2hhaW4ncyBzb3ZlcmVpZ24gYWNjb3VudCBhbmSEICAgZGVwb3NpdCB0aGVtIHRvIGBiZW5lZmljaWFyeWAuYQEgLSBgYXNzZXRzYCBoYXZlIHJlbW90ZSByZXNlcnZlOiBidXJuIGxvY2FsIGFzc2V0cywgZm9yd2FyZCBYQ00gdG8gcmVzZXJ2ZSBjaGFpbiB0byBtb3ZlYQEgICByZXNlcnZlcyBmcm9tIHRoaXMgY2hhaW4ncyBTQSB0byBgZGVzdGAgY2hhaW4ncyBTQSwgYW5kIGZvcndhcmQgYW5vdGhlciBYQ00gdG8gYGRlc3Rg9CAgIHRvIG1pbnQgYW5kIGRlcG9zaXQgcmVzZXJ2ZS1iYXNlZCBhc3NldHMgdG8gYGJlbmVmaWNpYXJ5YC4APQEqKlRoaXMgZnVuY3Rpb24gaXMgZGVwcmVjYXRlZDogVXNlIGBsaW1pdGVkX3Jlc2VydmVfdHJhbnNmZXJfYXNzZXRzYCBpbnN0ZWFkLioqAFEBRmVlIHBheW1lbnQgb24gdGhlIGRlc3RpbmF0aW9uIHNpZGUgaXMgbWFkZSBmcm9tIHRoZSBhc3NldCBpbiB0aGUgYGFzc2V0c2AgdmVjdG9yIG9mYQFpbmRleCBgZmVlX2Fzc2V0X2l0ZW1gLiBUaGUgd2VpZ2h0IGxpbWl0IGZvciBmZWVzIGlzIG5vdCBwcm92aWRlZCBhbmQgdGh1cyBpcyB1bmxpbWl0ZWQstHdpdGggYWxsIGZlZXMgdGFrZW4gYXMgbmVlZGVkIGZyb20gdGhlIGFzc2V0LgApAS0gYG9yaWdpbmA6IE11c3QgYmUgY2FwYWJsZSBvZiB3aXRoZHJhd2luZyB0aGUgYGFzc2V0c2AgYW5kIGV4ZWN1dGluZyBYQ00uJQEtIGBkZXN0YDogRGVzdGluYXRpb24gY29udGV4dCBmb3IgdGhlIGFzc2V0cy4gV2lsbCB0eXBpY2FsbHkgYmUgYFtQYXJlbnQsYQEgIFBhcmFjaGFpbiguLildYCB0byBzZW5kIGZyb20gcGFyYWNoYWluIHRvIHBhcmFjaGFpbiwgb3IgYFtQYXJhY2hhaW4oLi4pXWAgdG8gc2VuZCBmcm9tVCAgcmVsYXkgdG8gcGFyYWNoYWluLlUBLSBgYmVuZWZpY2lhcnlgOiBBIGJlbmVmaWNpYXJ5IGxvY2F0aW9uIGZvciB0aGUgYXNzZXRzIGluIHRoZSBjb250ZXh0IG9mIGBkZXN0YC4gV2lsbJggIGdlbmVyYWxseSBiZSBhbiBgQWNjb3VudElkMzJgIHZhbHVlLlkBLSBgYXNzZXRzYDogVGhlIGFzc2V0cyB0byBiZSB3aXRoZHJhd24uIFRoaXMgc2hvdWxkIGluY2x1ZGUgdGhlIGFzc2V0cyB1c2VkIHRvIHBheSB0aGXIICBmZWUgb24gdGhlIGBkZXN0YCAoYW5kIHBvc3NpYmx5IHJlc2VydmUpIGNoYWlucy5NAS0gYGZlZV9hc3NldF9pdGVtYDogVGhlIGluZGV4IGludG8gYGFzc2V0c2Agb2YgdGhlIGl0ZW0gd2hpY2ggc2hvdWxkIGJlIHVzZWQgdG8gcGF5HCAgZmVlcy4cZXhlY3V0ZQgBHG1lc3NhZ2XBBgG0Qm94PFZlcnNpb25lZFhjbTw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4+AAEobWF4X3dlaWdodCgBGFdlaWdodAADINBFeGVjdXRlIGFuIFhDTSBtZXNzYWdlIGZyb20gYSBsb2NhbCwgc2lnbmVkLCBvcmlnaW4uAE0BQW4gZXZlbnQgaXMgZGVwb3NpdGVkIGluZGljYXRpbmcgd2hldGhlciBgbXNnYCBjb3VsZCBiZSBleGVjdXRlZCBjb21wbGV0ZWx5IG9yIG9ubHkocGFydGlhbGx5LgBdAU5vIG1vcmUgdGhhbiBgbWF4X3dlaWdodGAgd2lsbCBiZSB1c2VkIGluIGl0cyBhdHRlbXB0ZWQgZXhlY3V0aW9uLiBJZiB0aGlzIGlzIGxlc3MgdGhhbkEBdGhlIG1heGltdW0gYW1vdW50IG9mIHdlaWdodCB0aGF0IHRoZSBtZXNzYWdlIGNvdWxkIHRha2UgdG8gYmUgZXhlY3V0ZWQsIHRoZW4gbm98ZXhlY3V0aW9uIGF0dGVtcHQgd2lsbCBiZSBtYWRlLkRmb3JjZV94Y21fdmVyc2lvbggBIGxvY2F0aW9uVQEBNEJveDxMb2NhdGlvbj4AARx2ZXJzaW9uEAEoWGNtVmVyc2lvbgAEGEkBRXh0b2xsIHRoYXQgYSBwYXJ0aWN1bGFyIGRlc3RpbmF0aW9uIGNhbiBiZSBjb21tdW5pY2F0ZWQgd2l0aCB0aHJvdWdoIGEgcGFydGljdWxhcjx2ZXJzaW9uIG9mIFhDTS4A3C0gYG9yaWdpbmA6IE11c3QgYmUgYW4gb3JpZ2luIHNwZWNpZmllZCBieSBBZG1pbk9yaWdpbi7YLSBgbG9jYXRpb25gOiBUaGUgZGVzdGluYXRpb24gdGhhdCBpcyBiZWluZyBkZXNjcmliZWQuEQEtIGB4Y21fdmVyc2lvbmA6IFRoZSBsYXRlc3QgdmVyc2lvbiBvZiBYQ00gdGhhdCBgbG9jYXRpb25gIHN1cHBvcnRzLmRmb3JjZV9kZWZhdWx0X3hjbV92ZXJzaW9uBAFEbWF5YmVfeGNtX3ZlcnNpb264AUhPcHRpb248WGNtVmVyc2lvbj4ABRRZAVNldCBhIHNhZmUgWENNIHZlcnNpb24gKHRoZSB2ZXJzaW9uIHRoYXQgWENNIHNob3VsZCBiZSBlbmNvZGVkIHdpdGggaWYgdGhlIG1vc3QgcmVjZW50tHZlcnNpb24gYSBkZXN0aW5hdGlvbiBjYW4gYWNjZXB0IGlzIHVua25vd24pLgDcLSBgb3JpZ2luYDogTXVzdCBiZSBhbiBvcmlnaW4gc3BlY2lmaWVkIGJ5IEFkbWluT3JpZ2luLjkBLSBgbWF5YmVfeGNtX3ZlcnNpb25gOiBUaGUgZGVmYXVsdCBYQ00gZW5jb2RpbmcgdmVyc2lvbiwgb3IgYE5vbmVgIHRvIGRpc2FibGUueGZvcmNlX3N1YnNjcmliZV92ZXJzaW9uX25vdGlmeQQBIGxvY2F0aW9ujQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4ABhA5AUFzayBhIGxvY2F0aW9uIHRvIG5vdGlmeSB1cyByZWdhcmRpbmcgdGhlaXIgWENNIHZlcnNpb24gYW5kIGFueSBjaGFuZ2VzIHRvIGl0LgDcLSBgb3JpZ2luYDogTXVzdCBiZSBhbiBvcmlnaW4gc3BlY2lmaWVkIGJ5IEFkbWluT3JpZ2luLlkBLSBgbG9jYXRpb25gOiBUaGUgbG9jYXRpb24gdG8gd2hpY2ggd2Ugc2hvdWxkIHN1YnNjcmliZSBmb3IgWENNIHZlcnNpb24gbm90aWZpY2F0aW9ucy6AZm9yY2VfdW5zdWJzY3JpYmVfdmVyc2lvbl9ub3RpZnkEASBsb2NhdGlvbo0BAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAcYSQFSZXF1aXJlIHRoYXQgYSBwYXJ0aWN1bGFyIGRlc3RpbmF0aW9uIHNob3VsZCBubyBsb25nZXIgbm90aWZ5IHVzIHJlZ2FyZGluZyBhbnkgWENNQHZlcnNpb24gY2hhbmdlcy4A3C0gYG9yaWdpbmA6IE11c3QgYmUgYW4gb3JpZ2luIHNwZWNpZmllZCBieSBBZG1pbk9yaWdpbi49AS0gYGxvY2F0aW9uYDogVGhlIGxvY2F0aW9uIHRvIHdoaWNoIHdlIGFyZSBjdXJyZW50bHkgc3Vic2NyaWJlZCBmb3IgWENNIHZlcnNpb26oICBub3RpZmljYXRpb25zIHdoaWNoIHdlIG5vIGxvbmdlciBkZXNpcmUufGxpbWl0ZWRfcmVzZXJ2ZV90cmFuc2Zlcl9hc3NldHMUARBkZXN0jQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AASxiZW5lZmljaWFyeY0BAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEYYXNzZXRzvQYBUEJveDxWZXJzaW9uZWRBc3NldHM+AAE4ZmVlX2Fzc2V0X2l0ZW0QAQx1MzIAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQACHhdAVRyYW5zZmVyIHNvbWUgYXNzZXRzIGZyb20gdGhlIGxvY2FsIGNoYWluIHRvIHRoZSBkZXN0aW5hdGlvbiBjaGFpbiB0aHJvdWdoIHRoZWlyIGxvY2FsLHhkZXN0aW5hdGlvbiBvciByZW1vdGUgcmVzZXJ2ZS4APQFgYXNzZXRzYCBtdXN0IGhhdmUgc2FtZSByZXNlcnZlIGxvY2F0aW9uIGFuZCBtYXkgbm90IGJlIHRlbGVwb3J0YWJsZSB0byBgZGVzdGAuTQEgLSBgYXNzZXRzYCBoYXZlIGxvY2FsIHJlc2VydmU6IHRyYW5zZmVyIGFzc2V0cyB0byBzb3ZlcmVpZ24gYWNjb3VudCBvZiBkZXN0aW5hdGlvbk0BICAgY2hhaW4gYW5kIGZvcndhcmQgYSBub3RpZmljYXRpb24gWENNIHRvIGBkZXN0YCB0byBtaW50IGFuZCBkZXBvc2l0IHJlc2VydmUtYmFzZWRsICAgYXNzZXRzIHRvIGBiZW5lZmljaWFyeWAuVQEgLSBgYXNzZXRzYCBoYXZlIGRlc3RpbmF0aW9uIHJlc2VydmU6IGJ1cm4gbG9jYWwgYXNzZXRzIGFuZCBmb3J3YXJkIGEgbm90aWZpY2F0aW9uIHRvWQEgICBgZGVzdGAgY2hhaW4gdG8gd2l0aGRyYXcgdGhlIHJlc2VydmUgYXNzZXRzIGZyb20gdGhpcyBjaGFpbidzIHNvdmVyZWlnbiBhY2NvdW50IGFuZIQgICBkZXBvc2l0IHRoZW0gdG8gYGJlbmVmaWNpYXJ5YC5hASAtIGBhc3NldHNgIGhhdmUgcmVtb3RlIHJlc2VydmU6IGJ1cm4gbG9jYWwgYXNzZXRzLCBmb3J3YXJkIFhDTSB0byByZXNlcnZlIGNoYWluIHRvIG1vdmVhASAgIHJlc2VydmVzIGZyb20gdGhpcyBjaGFpbidzIFNBIHRvIGBkZXN0YCBjaGFpbidzIFNBLCBhbmQgZm9yd2FyZCBhbm90aGVyIFhDTSB0byBgZGVzdGD0ICAgdG8gbWludCBhbmQgZGVwb3NpdCByZXNlcnZlLWJhc2VkIGFzc2V0cyB0byBgYmVuZWZpY2lhcnlgLgBRAUZlZSBwYXltZW50IG9uIHRoZSBkZXN0aW5hdGlvbiBzaWRlIGlzIG1hZGUgZnJvbSB0aGUgYXNzZXQgaW4gdGhlIGBhc3NldHNgIHZlY3RvciBvZmEBaW5kZXggYGZlZV9hc3NldF9pdGVtYCwgdXAgdG8gZW5vdWdoIHRvIHBheSBmb3IgYHdlaWdodF9saW1pdGAgb2Ygd2VpZ2h0LiBJZiBtb3JlIHdlaWdodFkBaXMgbmVlZGVkIHRoYW4gYHdlaWdodF9saW1pdGAsIHRoZW4gdGhlIG9wZXJhdGlvbiB3aWxsIGZhaWwgYW5kIHRoZSBzZW50IGFzc2V0cyBtYXkgYmUgYXQgcmlzay4AKQEtIGBvcmlnaW5gOiBNdXN0IGJlIGNhcGFibGUgb2Ygd2l0aGRyYXdpbmcgdGhlIGBhc3NldHNgIGFuZCBleGVjdXRpbmcgWENNLiUBLSBgZGVzdGA6IERlc3RpbmF0aW9uIGNvbnRleHQgZm9yIHRoZSBhc3NldHMuIFdpbGwgdHlwaWNhbGx5IGJlIGBbUGFyZW50LGEBICBQYXJhY2hhaW4oLi4pXWAgdG8gc2VuZCBmcm9tIHBhcmFjaGFpbiB0byBwYXJhY2hhaW4sIG9yIGBbUGFyYWNoYWluKC4uKV1gIHRvIHNlbmQgZnJvbVQgIHJlbGF5IHRvIHBhcmFjaGFpbi5VAS0gYGJlbmVmaWNpYXJ5YDogQSBiZW5lZmljaWFyeSBsb2NhdGlvbiBmb3IgdGhlIGFzc2V0cyBpbiB0aGUgY29udGV4dCBvZiBgZGVzdGAuIFdpbGyYICBnZW5lcmFsbHkgYmUgYW4gYEFjY291bnRJZDMyYCB2YWx1ZS5ZAS0gYGFzc2V0c2A6IFRoZSBhc3NldHMgdG8gYmUgd2l0aGRyYXduLiBUaGlzIHNob3VsZCBpbmNsdWRlIHRoZSBhc3NldHMgdXNlZCB0byBwYXkgdGhlyCAgZmVlIG9uIHRoZSBgZGVzdGAgKGFuZCBwb3NzaWJseSByZXNlcnZlKSBjaGFpbnMuTQEtIGBmZWVfYXNzZXRfaXRlbWA6IFRoZSBpbmRleCBpbnRvIGBhc3NldHNgIG9mIHRoZSBpdGVtIHdoaWNoIHNob3VsZCBiZSB1c2VkIHRvIHBheRwgIGZlZXMuRQEtIGB3ZWlnaHRfbGltaXRgOiBUaGUgcmVtb3RlLXNpZGUgd2VpZ2h0IGxpbWl0LCBpZiBhbnksIGZvciB0aGUgWENNIGZlZSBwdXJjaGFzZS5cbGltaXRlZF90ZWxlcG9ydF9hc3NldHMUARBkZXN0jQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AASxiZW5lZmljaWFyeY0BAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEYYXNzZXRzvQYBUEJveDxWZXJzaW9uZWRBc3NldHM+AAE4ZmVlX2Fzc2V0X2l0ZW0QAQx1MzIAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQACUgRAVRlbGVwb3J0IHNvbWUgYXNzZXRzIGZyb20gdGhlIGxvY2FsIGNoYWluIHRvIHNvbWUgZGVzdGluYXRpb24gY2hhaW4uAFEBRmVlIHBheW1lbnQgb24gdGhlIGRlc3RpbmF0aW9uIHNpZGUgaXMgbWFkZSBmcm9tIHRoZSBhc3NldCBpbiB0aGUgYGFzc2V0c2AgdmVjdG9yIG9mYQFpbmRleCBgZmVlX2Fzc2V0X2l0ZW1gLCB1cCB0byBlbm91Z2ggdG8gcGF5IGZvciBgd2VpZ2h0X2xpbWl0YCBvZiB3ZWlnaHQuIElmIG1vcmUgd2VpZ2h0WQFpcyBuZWVkZWQgdGhhbiBgd2VpZ2h0X2xpbWl0YCwgdGhlbiB0aGUgb3BlcmF0aW9uIHdpbGwgZmFpbCBhbmQgdGhlIHNlbnQgYXNzZXRzIG1heSBiZSBhdCByaXNrLgApAS0gYG9yaWdpbmA6IE11c3QgYmUgY2FwYWJsZSBvZiB3aXRoZHJhd2luZyB0aGUgYGFzc2V0c2AgYW5kIGV4ZWN1dGluZyBYQ00uJQEtIGBkZXN0YDogRGVzdGluYXRpb24gY29udGV4dCBmb3IgdGhlIGFzc2V0cy4gV2lsbCB0eXBpY2FsbHkgYmUgYFtQYXJlbnQsYQEgIFBhcmFjaGFpbiguLildYCB0byBzZW5kIGZyb20gcGFyYWNoYWluIHRvIHBhcmFjaGFpbiwgb3IgYFtQYXJhY2hhaW4oLi4pXWAgdG8gc2VuZCBmcm9tVCAgcmVsYXkgdG8gcGFyYWNoYWluLlUBLSBgYmVuZWZpY2lhcnlgOiBBIGJlbmVmaWNpYXJ5IGxvY2F0aW9uIGZvciB0aGUgYXNzZXRzIGluIHRoZSBjb250ZXh0IG9mIGBkZXN0YC4gV2lsbJggIGdlbmVyYWxseSBiZSBhbiBgQWNjb3VudElkMzJgIHZhbHVlLlkBLSBgYXNzZXRzYDogVGhlIGFzc2V0cyB0byBiZSB3aXRoZHJhd24uIFRoaXMgc2hvdWxkIGluY2x1ZGUgdGhlIGFzc2V0cyB1c2VkIHRvIHBheSB0aGVoICBmZWUgb24gdGhlIGBkZXN0YCBjaGFpbi5NAS0gYGZlZV9hc3NldF9pdGVtYDogVGhlIGluZGV4IGludG8gYGFzc2V0c2Agb2YgdGhlIGl0ZW0gd2hpY2ggc2hvdWxkIGJlIHVzZWQgdG8gcGF5HCAgZmVlcy5FAS0gYHdlaWdodF9saW1pdGA6IFRoZSByZW1vdGUtc2lkZSB3ZWlnaHQgbGltaXQsIGlmIGFueSwgZm9yIHRoZSBYQ00gZmVlIHB1cmNoYXNlLkBmb3JjZV9zdXNwZW5zaW9uBAEkc3VzcGVuZGVkIAEQYm9vbAAKEPRTZXQgb3IgdW5zZXQgdGhlIGdsb2JhbCBzdXNwZW5zaW9uIHN0YXRlIG9mIHRoZSBYQ00gZXhlY3V0b3IuANwtIGBvcmlnaW5gOiBNdXN0IGJlIGFuIG9yaWdpbiBzcGVjaWZpZWQgYnkgQWRtaW5PcmlnaW4u0C0gYHN1c3BlbmRlZGA6IGB0cnVlYCB0byBzdXNwZW5kLCBgZmFsc2VgIHRvIHJlc3VtZS48dHJhbnNmZXJfYXNzZXRzFAEQZGVzdI0BAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEsYmVuZWZpY2lhcnmNAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABGGFzc2V0c70GAVBCb3g8VmVyc2lvbmVkQXNzZXRzPgABOGZlZV9hc3NldF9pdGVtEAEMdTMyAAEwd2VpZ2h0X2xpbWl0+QUBLFdlaWdodExpbWl0AAuEXQFUcmFuc2ZlciBzb21lIGFzc2V0cyBmcm9tIHRoZSBsb2NhbCBjaGFpbiB0byB0aGUgZGVzdGluYXRpb24gY2hhaW4gdGhyb3VnaCB0aGVpciBsb2NhbCzQZGVzdGluYXRpb24gb3IgcmVtb3RlIHJlc2VydmUsIG9yIHRocm91Z2ggdGVsZXBvcnRzLgBRAUZlZSBwYXltZW50IG9uIHRoZSBkZXN0aW5hdGlvbiBzaWRlIGlzIG1hZGUgZnJvbSB0aGUgYXNzZXQgaW4gdGhlIGBhc3NldHNgIHZlY3RvciBvZjUBaW5kZXggYGZlZV9hc3NldF9pdGVtYCAoaGVuY2UgcmVmZXJyZWQgdG8gYXMgYGZlZXNgKSwgdXAgdG8gZW5vdWdoIHRvIHBheSBmb3JBAWB3ZWlnaHRfbGltaXRgIG9mIHdlaWdodC4gSWYgbW9yZSB3ZWlnaHQgaXMgbmVlZGVkIHRoYW4gYHdlaWdodF9saW1pdGAsIHRoZW4gdGhl3G9wZXJhdGlvbiB3aWxsIGZhaWwgYW5kIHRoZSBzZW50IGFzc2V0cyBtYXkgYmUgYXQgcmlzay4AYQFgYXNzZXRzYCAoZXhjbHVkaW5nIGBmZWVzYCkgbXVzdCBoYXZlIHNhbWUgcmVzZXJ2ZSBsb2NhdGlvbiBvciBvdGhlcndpc2UgYmUgdGVsZXBvcnRhYmxlsHRvIGBkZXN0YCwgbm8gbGltaXRhdGlvbnMgaW1wb3NlZCBvbiBgZmVlc2AuTQEgLSBmb3IgbG9jYWwgcmVzZXJ2ZTogdHJhbnNmZXIgYXNzZXRzIHRvIHNvdmVyZWlnbiBhY2NvdW50IG9mIGRlc3RpbmF0aW9uIGNoYWluIGFuZE0BICAgZm9yd2FyZCBhIG5vdGlmaWNhdGlvbiBYQ00gdG8gYGRlc3RgIHRvIG1pbnQgYW5kIGRlcG9zaXQgcmVzZXJ2ZS1iYXNlZCBhc3NldHMgdG9EICAgYGJlbmVmaWNpYXJ5YC5hASAtIGZvciBkZXN0aW5hdGlvbiByZXNlcnZlOiBidXJuIGxvY2FsIGFzc2V0cyBhbmQgZm9yd2FyZCBhIG5vdGlmaWNhdGlvbiB0byBgZGVzdGAgY2hhaW5ZASAgIHRvIHdpdGhkcmF3IHRoZSByZXNlcnZlIGFzc2V0cyBmcm9tIHRoaXMgY2hhaW4ncyBzb3ZlcmVpZ24gYWNjb3VudCBhbmQgZGVwb3NpdCB0aGVtUCAgIHRvIGBiZW5lZmljaWFyeWAuXQEgLSBmb3IgcmVtb3RlIHJlc2VydmU6IGJ1cm4gbG9jYWwgYXNzZXRzLCBmb3J3YXJkIFhDTSB0byByZXNlcnZlIGNoYWluIHRvIG1vdmUgcmVzZXJ2ZXNdASAgIGZyb20gdGhpcyBjaGFpbidzIFNBIHRvIGBkZXN0YCBjaGFpbidzIFNBLCBhbmQgZm9yd2FyZCBhbm90aGVyIFhDTSB0byBgZGVzdGAgdG8gbWludNQgICBhbmQgZGVwb3NpdCByZXNlcnZlLWJhc2VkIGFzc2V0cyB0byBgYmVuZWZpY2lhcnlgLlEBIC0gZm9yIHRlbGVwb3J0czogYnVybiBsb2NhbCBhc3NldHMgYW5kIGZvcndhcmQgWENNIHRvIGBkZXN0YCBjaGFpbiB0byBtaW50L3RlbGVwb3J0sCAgIGFzc2V0cyBhbmQgZGVwb3NpdCB0aGVtIHRvIGBiZW5lZmljaWFyeWAuACkBLSBgb3JpZ2luYDogTXVzdCBiZSBjYXBhYmxlIG9mIHdpdGhkcmF3aW5nIHRoZSBgYXNzZXRzYCBhbmQgZXhlY3V0aW5nIFhDTS4tAS0gYGRlc3RgOiBEZXN0aW5hdGlvbiBjb250ZXh0IGZvciB0aGUgYXNzZXRzLiBXaWxsIHR5cGljYWxseSBiZSBgWDIoUGFyZW50LFUBICBQYXJhY2hhaW4oLi4pKWAgdG8gc2VuZCBmcm9tIHBhcmFjaGFpbiB0byBwYXJhY2hhaW4sIG9yIGBYMShQYXJhY2hhaW4oLi4pKWAgdG8gc2VuZGggIGZyb20gcmVsYXkgdG8gcGFyYWNoYWluLlUBLSBgYmVuZWZpY2lhcnlgOiBBIGJlbmVmaWNpYXJ5IGxvY2F0aW9uIGZvciB0aGUgYXNzZXRzIGluIHRoZSBjb250ZXh0IG9mIGBkZXN0YC4gV2lsbJggIGdlbmVyYWxseSBiZSBhbiBgQWNjb3VudElkMzJgIHZhbHVlLlkBLSBgYXNzZXRzYDogVGhlIGFzc2V0cyB0byBiZSB3aXRoZHJhd24uIFRoaXMgc2hvdWxkIGluY2x1ZGUgdGhlIGFzc2V0cyB1c2VkIHRvIHBheSB0aGXIICBmZWUgb24gdGhlIGBkZXN0YCAoYW5kIHBvc3NpYmx5IHJlc2VydmUpIGNoYWlucy5NAS0gYGZlZV9hc3NldF9pdGVtYDogVGhlIGluZGV4IGludG8gYGFzc2V0c2Agb2YgdGhlIGl0ZW0gd2hpY2ggc2hvdWxkIGJlIHVzZWQgdG8gcGF5HCAgZmVlcy5FAS0gYHdlaWdodF9saW1pdGA6IFRoZSByZW1vdGUtc2lkZSB3ZWlnaHQgbGltaXQsIGlmIGFueSwgZm9yIHRoZSBYQ00gZmVlIHB1cmNoYXNlLjBjbGFpbV9hc3NldHMIARhhc3NldHO9BgFQQm94PFZlcnNpb25lZEFzc2V0cz4AASxiZW5lZmljaWFyeY0BAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAwYVQFDbGFpbXMgYXNzZXRzIHRyYXBwZWQgb24gdGhpcyBwYWxsZXQgYmVjYXVzZSBvZiBsZWZ0b3ZlciBhc3NldHMgZHVyaW5nIFhDTSBleGVjdXRpb24uAKwtIGBvcmlnaW5gOiBBbnlvbmUgY2FuIGNhbGwgdGhpcyBleHRyaW5zaWMuXQEtIGBhc3NldHNgOiBUaGUgZXhhY3QgYXNzZXRzIHRoYXQgd2VyZSB0cmFwcGVkLiBVc2UgdGhlIHZlcnNpb24gdG8gc3BlY2lmeSB3aGF0IHZlcnNpb26Yd2FzIHRoZSBsYXRlc3Qgd2hlbiB0aGV5IHdlcmUgdHJhcHBlZC5FAS0gYGJlbmVmaWNpYXJ5YDogVGhlIGxvY2F0aW9uL2FjY291bnQgd2hlcmUgdGhlIGNsYWltZWQgYXNzZXRzIHdpbGwgYmUgZGVwb3NpdGVkLox0cmFuc2Zlcl9hc3NldHNfdXNpbmdfdHlwZV9hbmRfdGhlbhwBEGRlc3SNAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABGGFzc2V0c70GAVBCb3g8VmVyc2lvbmVkQXNzZXRzPgABUGFzc2V0c190cmFuc2Zlcl90eXBl7QYBREJveDxUcmFuc2ZlclR5cGU+AAE4cmVtb3RlX2ZlZXNfaWTxBgFUQm94PFZlcnNpb25lZEFzc2V0SWQ+AAFIZmVlc190cmFuc2Zlcl90eXBl7QYBREJveDxUcmFuc2ZlclR5cGU+AAFIY3VzdG9tX3hjbV9vbl9kZXN0jQUBVEJveDxWZXJzaW9uZWRYY208KCk+PgABMHdlaWdodF9saW1pdPkFASxXZWlnaHRMaW1pdAANwFUBVHJhbnNmZXIgYXNzZXRzIGZyb20gdGhlIGxvY2FsIGNoYWluIHRvIHRoZSBkZXN0aW5hdGlvbiBjaGFpbiB1c2luZyBleHBsaWNpdCB0cmFuc2Zlcmh0eXBlcyBmb3IgYXNzZXRzIGFuZCBmZWVzLgBZAWBhc3NldHNgIG11c3QgaGF2ZSBzYW1lIHJlc2VydmUgbG9jYXRpb24gb3IgbWF5IGJlIHRlbGVwb3J0YWJsZSB0byBgZGVzdGAuIENhbGxlciBtdXN07HByb3ZpZGUgdGhlIGBhc3NldHNfdHJhbnNmZXJfdHlwZWAgdG8gYmUgdXNlZCBmb3IgYGFzc2V0c2A6UQEgLSBgVHJhbnNmZXJUeXBlOjpMb2NhbFJlc2VydmVgOiB0cmFuc2ZlciBhc3NldHMgdG8gc292ZXJlaWduIGFjY291bnQgb2YgZGVzdGluYXRpb25NASAgIGNoYWluIGFuZCBmb3J3YXJkIGEgbm90aWZpY2F0aW9uIFhDTSB0byBgZGVzdGAgdG8gbWludCBhbmQgZGVwb3NpdCByZXNlcnZlLWJhc2VkbCAgIGFzc2V0cyB0byBgYmVuZWZpY2lhcnlgLlkBIC0gYFRyYW5zZmVyVHlwZTo6RGVzdGluYXRpb25SZXNlcnZlYDogYnVybiBsb2NhbCBhc3NldHMgYW5kIGZvcndhcmQgYSBub3RpZmljYXRpb24gdG9ZASAgIGBkZXN0YCBjaGFpbiB0byB3aXRoZHJhdyB0aGUgcmVzZXJ2ZSBhc3NldHMgZnJvbSB0aGlzIGNoYWluJ3Mgc292ZXJlaWduIGFjY291bnQgYW5khCAgIGRlcG9zaXQgdGhlbSB0byBgYmVuZWZpY2lhcnlgLlkBIC0gYFRyYW5zZmVyVHlwZTo6UmVtb3RlUmVzZXJ2ZShyZXNlcnZlKWA6IGJ1cm4gbG9jYWwgYXNzZXRzLCBmb3J3YXJkIFhDTSB0byBgcmVzZXJ2ZWBhASAgIGNoYWluIHRvIG1vdmUgcmVzZXJ2ZXMgZnJvbSB0aGlzIGNoYWluJ3MgU0EgdG8gYGRlc3RgIGNoYWluJ3MgU0EsIGFuZCBmb3J3YXJkIGFub3RoZXJVASAgIFhDTSB0byBgZGVzdGAgdG8gbWludCBhbmQgZGVwb3NpdCByZXNlcnZlLWJhc2VkIGFzc2V0cyB0byBgYmVuZWZpY2lhcnlgLiBUeXBpY2FsbHmUICAgdGhlIHJlbW90ZSBgcmVzZXJ2ZWAgaXMgQXNzZXQgSHViLkUBIC0gYFRyYW5zZmVyVHlwZTo6VGVsZXBvcnRgOiBidXJuIGxvY2FsIGFzc2V0cyBhbmQgZm9yd2FyZCBYQ00gdG8gYGRlc3RgIGNoYWluIHRv6CAgIG1pbnQvdGVsZXBvcnQgYXNzZXRzIGFuZCBkZXBvc2l0IHRoZW0gdG8gYGJlbmVmaWNpYXJ5YC4AVQFPbiB0aGUgZGVzdGluYXRpb24gY2hhaW4sIGFzIHdlbGwgYXMgYW55IGludGVybWVkaWFyeSBob3BzLCBgQnV5RXhlY3V0aW9uYCBpcyB1c2VkIHRvIQFidXkgZXhlY3V0aW9uIHVzaW5nIHRyYW5zZmVycmVkIGBhc3NldHNgIGlkZW50aWZpZWQgYnkgYHJlbW90ZV9mZWVzX2lkYC5ZAU1ha2Ugc3VyZSBlbm91Z2ggb2YgdGhlIHNwZWNpZmllZCBgcmVtb3RlX2ZlZXNfaWRgIGFzc2V0IGlzIGluY2x1ZGVkIGluIHRoZSBnaXZlbiBsaXN0YQFvZiBgYXNzZXRzYC4gYHJlbW90ZV9mZWVzX2lkYCBzaG91bGQgYmUgZW5vdWdoIHRvIHBheSBmb3IgYHdlaWdodF9saW1pdGAuIElmIG1vcmUgd2VpZ2h0WQFpcyBuZWVkZWQgdGhhbiBgd2VpZ2h0X2xpbWl0YCwgdGhlbiB0aGUgb3BlcmF0aW9uIHdpbGwgZmFpbCBhbmQgdGhlIHNlbnQgYXNzZXRzIG1heSBiZSBhdCByaXNrLgBFAWByZW1vdGVfZmVlc19pZGAgbWF5IHVzZSBkaWZmZXJlbnQgdHJhbnNmZXIgdHlwZSB0aGFuIHJlc3Qgb2YgYGFzc2V0c2AgYW5kIGNhbiBiZZxzcGVjaWZpZWQgdGhyb3VnaCBgZmVlc190cmFuc2Zlcl90eXBlYC4AYQFUaGUgY2FsbGVyIG5lZWRzIHRvIHNwZWNpZnkgd2hhdCBzaG91bGQgaGFwcGVuIHRvIHRoZSB0cmFuc2ZlcnJlZCBhc3NldHMgb25jZSB0aGV5IHJlYWNoQQF0aGUgYGRlc3RgIGNoYWluLiBUaGlzIGlzIGRvbmUgdGhyb3VnaCB0aGUgYGN1c3RvbV94Y21fb25fZGVzdGAgcGFyYW1ldGVyLCB3aGljaPxjb250YWlucyB0aGUgaW5zdHJ1Y3Rpb25zIHRvIGV4ZWN1dGUgb24gYGRlc3RgIGFzIGEgZmluYWwgc3RlcC58ICBUaGlzIGlzIHVzdWFsbHkgYXMgc2ltcGxlIGFzOlEBICBgWGNtKHZlYyFbRGVwb3NpdEFzc2V0IHsgYXNzZXRzOiBXaWxkKEFsbENvdW50ZWQoYXNzZXRzLmxlbigpKSksIGJlbmVmaWNpYXJ5IH1dKWAsMQEgIGJ1dCBjb3VsZCBiZSBzb21ldGhpbmcgbW9yZSBleG90aWMgbGlrZSBzZW5kaW5nIHRoZSBgYXNzZXRzYCBldmVuIGZ1cnRoZXIuACkBLSBgb3JpZ2luYDogTXVzdCBiZSBjYXBhYmxlIG9mIHdpdGhkcmF3aW5nIHRoZSBgYXNzZXRzYCBhbmQgZXhlY3V0aW5nIFhDTS4lAS0gYGRlc3RgOiBEZXN0aW5hdGlvbiBjb250ZXh0IGZvciB0aGUgYXNzZXRzLiBXaWxsIHR5cGljYWxseSBiZSBgW1BhcmVudCxhASAgUGFyYWNoYWluKC4uKV1gIHRvIHNlbmQgZnJvbSBwYXJhY2hhaW4gdG8gcGFyYWNoYWluLCBvciBgW1BhcmFjaGFpbiguLildYCB0byBzZW5kIGZyb209ASAgcmVsYXkgdG8gcGFyYWNoYWluLCBvciBgKHBhcmVudHM6IDIsIChHbG9iYWxDb25zZW5zdXMoLi4pLCAuLikpYCB0byBzZW5kIGZyb230ICBwYXJhY2hhaW4gYWNyb3NzIGEgYnJpZGdlIHRvIGFub3RoZXIgZWNvc3lzdGVtIGRlc3RpbmF0aW9uLlkBLSBgYXNzZXRzYDogVGhlIGFzc2V0cyB0byBiZSB3aXRoZHJhd24uIFRoaXMgc2hvdWxkIGluY2x1ZGUgdGhlIGFzc2V0cyB1c2VkIHRvIHBheSB0aGXIICBmZWUgb24gdGhlIGBkZXN0YCAoYW5kIHBvc3NpYmx5IHJlc2VydmUpIGNoYWlucy49AS0gYGFzc2V0c190cmFuc2Zlcl90eXBlYDogVGhlIFhDTSBgVHJhbnNmZXJUeXBlYCB1c2VkIHRvIHRyYW5zZmVyIHRoZSBgYXNzZXRzYC4hAS0gYHJlbW90ZV9mZWVzX2lkYDogT25lIG9mIHRoZSBpbmNsdWRlZCBgYXNzZXRzYCB0byBiZSB1c2VkIHRvIHBheSBmZWVzLkkBLSBgZmVlc190cmFuc2Zlcl90eXBlYDogVGhlIFhDTSBgVHJhbnNmZXJUeXBlYCB1c2VkIHRvIHRyYW5zZmVyIHRoZSBgZmVlc2AgYXNzZXRzLlkBLSBgY3VzdG9tX3hjbV9vbl9kZXN0YDogVGhlIFhDTSB0byBiZSBleGVjdXRlZCBvbiBgZGVzdGAgY2hhaW4gYXMgdGhlIGxhc3Qgc3RlcCBvZiB0aGVZASAgdHJhbnNmZXIsIHdoaWNoIGFsc28gZGV0ZXJtaW5lcyB3aGF0IGhhcHBlbnMgdG8gdGhlIGFzc2V0cyBvbiB0aGUgZGVzdGluYXRpb24gY2hhaW4uRQEtIGB3ZWlnaHRfbGltaXRgOiBUaGUgcmVtb3RlLXNpZGUgd2VpZ2h0IGxpbWl0LCBpZiBhbnksIGZvciB0aGUgWENNIGZlZSBwdXJjaGFzZS5QYWRkX2F1dGhvcml6ZWRfYWxpYXMIARxhbGlhc2VyjQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARxleHBpcmVz9QYBLE9wdGlvbjx1NjQ+AA4sXQFBdXRob3JpemUgYW5vdGhlciBgYWxpYXNlcmAgbG9jYXRpb24gdG8gYWxpYXMgaW50byB0aGUgbG9jYWwgYG9yaWdpbmAgbWFraW5nIHRoaXMgY2FsbC4pAVRoZSBgYWxpYXNlcmAgaXMgb25seSBhdXRob3JpemVkIHVudGlsIHRoZSBwcm92aWRlZCBgZXhwaXJ5YCBibG9jayBudW1iZXIuSQFUaGUgY2FsbCBjYW4gYWxzbyBiZSB1c2VkIGZvciBhIHByZXZpb3VzbHkgYXV0aG9yaXplZCBhbGlhcyBpbiBvcmRlciB0byB1cGRhdGUgaXRzWGBleHBpcnlgIGJsb2NrIG51bWJlci4AUQFVc3VhbGx5IHVzZWZ1bCB0byBhbGxvdyB5b3VyIGxvY2FsIGFjY291bnQgdG8gYmUgYWxpYXNlZCBpbnRvIGZyb20gYSByZW1vdGUgbG9jYXRpb270YWxzbyB1bmRlciB5b3VyIGNvbnRyb2wgKGxpa2UgeW91ciBhY2NvdW50IG9uIGFub3RoZXIgY2hhaW4pLgBRAVdBUk5JTkc6IG1ha2Ugc3VyZSB0aGUgY2FsbGVyIGBvcmlnaW5gICh5b3UpIHRydXN0cyB0aGUgYGFsaWFzZXJgIGxvY2F0aW9uIHRvIGFjdCBpblkBdGhlaXIveW91ciBuYW1lLiBPbmNlIGF1dGhvcml6ZWQgdXNpbmcgdGhpcyBjYWxsLCB0aGUgYGFsaWFzZXJgIGNhbiBmcmVlbHkgaW1wZXJzb25hdGXUYG9yaWdpbmAgaW4gWENNIHByb2dyYW1zIGV4ZWN1dGVkIG9uIHRoZSBsb2NhbCBjaGFpbi5ccmVtb3ZlX2F1dGhvcml6ZWRfYWxpYXMEARxhbGlhc2VyjQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4ADwhdAVJlbW92ZSBhIHByZXZpb3VzbHkgYXV0aG9yaXplZCBgYWxpYXNlcmAgZnJvbSB0aGUgbGlzdCBvZiBsb2NhdGlvbnMgdGhhdCBjYW4gYWxpYXMgaW50b5B0aGUgbG9jYWwgYG9yaWdpbmAgbWFraW5nIHRoaXMgY2FsbC50cmVtb3ZlX2FsbF9hdXRob3JpemVkX2FsaWFzZXMAEAhJAVJlbW92ZSBhbGwgcHJldmlvdXNseSBhdXRob3JpemVkIGBhbGlhc2VyYHMgdGhhdCBjYW4gYWxpYXMgaW50byB0aGUgbG9jYWwgYG9yaWdpbmBEbWFraW5nIHRoaXMgY2FsbC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMujQUIDHhjbTBWZXJzaW9uZWRYY20ELFJ1bnRpbWVDYWxsAAEMCFYzBACRBQFQdjM6OlhjbTxSdW50aW1lQ2FsbD4AAwAIVjQEAP0FAVB2NDo6WGNtPFJ1bnRpbWVDYWxsPgAEAAhWNQQARQYBUHY1OjpYY208UnVudGltZUNhbGw+AAUAAJEFDAx4Y20IdjMMWGNtBBBDYWxsAAAEAJUFAVhWZWM8SW5zdHJ1Y3Rpb248Q2FsbD4+AACVBQAAApkFAJkFDAx4Y20IdjMsSW5zdHJ1Y3Rpb24EEENhbGwAAcA0V2l0aGRyYXdBc3NldAQAnQUBLE11bHRpQXNzZXRzAAAAVFJlc2VydmVBc3NldERlcG9zaXRlZAQAnQUBLE11bHRpQXNzZXRzAAEAWFJlY2VpdmVUZWxlcG9ydGVkQXNzZXQEAJ0FASxNdWx0aUFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQsARxRdWVyeUlkAAEgcmVzcG9uc2W1BQEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAEccXVlcmllct0FAVRPcHRpb248TXVsdGlMb2NhdGlvbj4AAwA0VHJhbnNmZXJBc3NldAgBGGFzc2V0c50FASxNdWx0aUFzc2V0cwABLGJlbmVmaWNpYXJ58AE0TXVsdGlMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c50FASxNdWx0aUFzc2V0cwABEGRlc3TwATRNdWx0aUxvY2F0aW9uAAEMeGNtkQUBHFhjbTwoKT4ABQAgVHJhbnNhY3QMASxvcmlnaW5fa2luZOEFAShPcmlnaW5LaW5kAAFYcmVxdWlyZV93ZWlnaHRfYXRfbW9zdCgBGFdlaWdodAABEGNhbGzlBQFMRG91YmxlRW5jb2RlZDxDYWxsPgAGAGRIcm1wTmV3Q2hhbm5lbE9wZW5SZXF1ZXN0DAEYc2VuZGVy/AEMdTMyAAFAbWF4X21lc3NhZ2Vfc2l6ZfwBDHUzMgABMG1heF9jYXBhY2l0efwBDHUzMgAHAExIcm1wQ2hhbm5lbEFjY2VwdGVkBAEkcmVjaXBpZW50/AEMdTMyAAgASEhybXBDaGFubmVsQ2xvc2luZwwBJGluaXRpYXRvcvwBDHUzMgABGHNlbmRlcvwBDHUzMgABJHJlY2lwaWVudPwBDHUzMgAJACxDbGVhck9yaWdpbgAKADREZXNjZW5kT3JpZ2luBAD0AVRJbnRlcmlvck11bHRpTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEAOkFAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHPtBQFATXVsdGlBc3NldEZpbHRlcgABLGJlbmVmaWNpYXJ58AE0TXVsdGlMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRz7QUBQE11bHRpQXNzZXRGaWx0ZXIAARBkZXN08AE0TXVsdGlMb2NhdGlvbgABDHhjbZEFARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZl7QUBQE11bHRpQXNzZXRGaWx0ZXIAARB3YW50nQUBLE11bHRpQXNzZXRzAAEcbWF4aW1hbCABEGJvb2wADwBcSW5pdGlhdGVSZXNlcnZlV2l0aGRyYXcMARhhc3NldHPtBQFATXVsdGlBc3NldEZpbHRlcgABHHJlc2VydmXwATRNdWx0aUxvY2F0aW9uAAEMeGNtkQUBHFhjbTwoKT4AEABASW5pdGlhdGVUZWxlcG9ydAwBGGFzc2V0c+0FAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdPABNE11bHRpTG9jYXRpb24AAQx4Y22RBQEcWGNtPCgpPgARADRSZXBvcnRIb2xkaW5nCAE0cmVzcG9uc2VfaW5mb+kFAURRdWVyeVJlc3BvbnNlSW5mbwABGGFzc2V0c+0FAUBNdWx0aUFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXOlBQEoTXVsdGlBc3NldAABMHdlaWdodF9saW1pdPkFASxXZWlnaHRMaW1pdAATADRSZWZ1bmRTdXJwbHVzABQAPFNldEVycm9ySGFuZGxlcgQAkQUBJFhjbTxDYWxsPgAVACxTZXRBcHBlbmRpeAQAkQUBJFhjbTxDYWxsPgAWAChDbGVhckVycm9yABcAKENsYWltQXNzZXQIARhhc3NldHOdBQEsTXVsdGlBc3NldHMAARh0aWNrZXTwATRNdWx0aUxvY2F0aW9uABgAEFRyYXAEACwBDHU2NAAZAEBTdWJzY3JpYmVWZXJzaW9uCAEgcXVlcnlfaWQsARxRdWVyeUlkAAFMbWF4X3Jlc3BvbnNlX3dlaWdodCgBGFdlaWdodAAaAEhVbnN1YnNjcmliZVZlcnNpb24AGwAkQnVybkFzc2V0BACdBQEsTXVsdGlBc3NldHMAHAAsRXhwZWN0QXNzZXQEAJ0FASxNdWx0aUFzc2V0cwAdADBFeHBlY3RPcmlnaW4EAN0FAVRPcHRpb248TXVsdGlMb2NhdGlvbj4AHgAsRXhwZWN0RXJyb3IEALkFAVBPcHRpb248KHUzMiwgRXJyb3IpPgAfAFBFeHBlY3RUcmFuc2FjdFN0YXR1cwQA1QUBOE1heWJlRXJyb3JDb2RlACAALFF1ZXJ5UGFsbGV0CAEsbW9kdWxlX25hbWU4ARxWZWM8dTg+AAE0cmVzcG9uc2VfaW5mb+kFAURRdWVyeVJlc3BvbnNlSW5mbwAhADBFeHBlY3RQYWxsZXQUARRpbmRlePwBDHUzMgABEG5hbWU4ARxWZWM8dTg+AAEsbW9kdWxlX25hbWU4ARxWZWM8dTg+AAEsY3JhdGVfbWFqb3L8AQx1MzIAATxtaW5fY3JhdGVfbWlub3L8AQx1MzIAIgBQUmVwb3J0VHJhbnNhY3RTdGF0dXMEAOkFAURRdWVyeVJlc3BvbnNlSW5mbwAjAExDbGVhclRyYW5zYWN0U3RhdHVzACQAPFVuaXZlcnNhbE9yaWdpbgQA+AEgSnVuY3Rpb24AJQA0RXhwb3J0TWVzc2FnZQwBHG5ldHdvcmsFAQEkTmV0d29ya0lkAAEsZGVzdGluYXRpb270AVRJbnRlcmlvck11bHRpTG9jYXRpb24AAQx4Y22RBQEcWGNtPCgpPgAmACRMb2NrQXNzZXQIARRhc3NldKUFAShNdWx0aUFzc2V0AAEgdW5sb2NrZXLwATRNdWx0aUxvY2F0aW9uACcALFVubG9ja0Fzc2V0CAEUYXNzZXSlBQEoTXVsdGlBc3NldAABGHRhcmdldPABNE11bHRpTG9jYXRpb24AKAA4Tm90ZVVubG9ja2FibGUIARRhc3NldKUFAShNdWx0aUFzc2V0AAEUb3duZXLwATRNdWx0aUxvY2F0aW9uACkANFJlcXVlc3RVbmxvY2sIARRhc3NldKUFAShNdWx0aUFzc2V0AAEYbG9ja2Vy8AE0TXVsdGlMb2NhdGlvbgAqACxTZXRGZWVzTW9kZQQBMGppdF93aXRoZHJhdyABEGJvb2wAKwAgU2V0VG9waWMEAAQBIFt1ODsgMzJdACwAKENsZWFyVG9waWMALQAsQWxpYXNPcmlnaW4EAPABNE11bHRpTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0+QUBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2lu3QUBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgAvAACdBRAMeGNtCHYzKG11bHRpYXNzZXQsTXVsdGlBc3NldHMAAAQAoQUBPFZlYzxNdWx0aUFzc2V0PgAAoQUAAAKlBQClBRAMeGNtCHYzKG11bHRpYXNzZXQoTXVsdGlBc3NldAAACAEIaWQZAQEcQXNzZXRJZAABDGZ1bqkFASxGdW5naWJpbGl0eQAAqQUQDHhjbQh2MyhtdWx0aWFzc2V0LEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlBAANAQEQdTEyOAAAACxOb25GdW5naWJsZQQArQUBNEFzc2V0SW5zdGFuY2UAAQAArQUQDHhjbQh2MyhtdWx0aWFzc2V0NEFzc2V0SW5zdGFuY2UAARgkVW5kZWZpbmVkAAAAFEluZGV4BAANAQEQdTEyOAABABhBcnJheTQEAEgBHFt1ODsgNF0AAgAYQXJyYXk4BACxBQEcW3U4OyA4XQADABxBcnJheTE2BADMASBbdTg7IDE2XQAEABxBcnJheTMyBAAEASBbdTg7IDMyXQAFAACxBQAAAwgAAAAIALUFDAx4Y20IdjMgUmVzcG9uc2UAARgQTnVsbAAAABhBc3NldHMEAJ0FASxNdWx0aUFzc2V0cwABADxFeGVjdXRpb25SZXN1bHQEALkFAVBPcHRpb248KHUzMiwgRXJyb3IpPgACABxWZXJzaW9uBAAQAThzdXBlcjo6VmVyc2lvbgADACxQYWxsZXRzSW5mbwQAxQUBmEJvdW5kZWRWZWM8UGFsbGV0SW5mbywgTWF4UGFsbGV0c0luZm8+AAQAOERpc3BhdGNoUmVzdWx0BADVBQE4TWF5YmVFcnJvckNvZGUABQAAuQUEGE9wdGlvbgQEVAG9BQEIEE5vbmUAAAAQU29tZQQAvQUAAAEAAL0FAAAECBDBBQDBBRAMeGNtCHYzGHRyYWl0cxRFcnJvcgABoCBPdmVyZmxvdwAAADRVbmltcGxlbWVudGVkAAEAYFVudHJ1c3RlZFJlc2VydmVMb2NhdGlvbgACAGRVbnRydXN0ZWRUZWxlcG9ydExvY2F0aW9uAAMAMExvY2F0aW9uRnVsbAAEAFRMb2NhdGlvbk5vdEludmVydGlibGUABQAkQmFkT3JpZ2luAAYAPEludmFsaWRMb2NhdGlvbgAHADRBc3NldE5vdEZvdW5kAAgAVEZhaWxlZFRvVHJhbnNhY3RBc3NldAAJADxOb3RXaXRoZHJhd2FibGUACgBITG9jYXRpb25DYW5ub3RIb2xkAAsAVEV4Y2VlZHNNYXhNZXNzYWdlU2l6ZQAMAFhEZXN0aW5hdGlvblVuc3VwcG9ydGVkAA0AJFRyYW5zcG9ydAAOAChVbnJvdXRhYmxlAA8AMFVua25vd25DbGFpbQAQADhGYWlsZWRUb0RlY29kZQARAEBNYXhXZWlnaHRJbnZhbGlkABIAOE5vdEhvbGRpbmdGZWVzABMAMFRvb0V4cGVuc2l2ZQAUABBUcmFwBAAwAQx1NjQAFQBARXhwZWN0YXRpb25GYWxzZQAWADhQYWxsZXROb3RGb3VuZAAXADBOYW1lTWlzbWF0Y2gAGABMVmVyc2lvbkluY29tcGF0aWJsZQAZAFBIb2xkaW5nV291bGRPdmVyZmxvdwAaACxFeHBvcnRFcnJvcgAbADhSZWFuY2hvckZhaWxlZAAcABhOb0RlYWwAHQAoRmVlc05vdE1ldAAeACRMb2NrRXJyb3IAHwAwTm9QZXJtaXNzaW9uACAAKFVuYW5jaG9yZWQAIQA4Tm90RGVwb3NpdGFibGUAIgBMVW5oYW5kbGVkWGNtVmVyc2lvbgAjAEhXZWlnaHRMaW1pdFJlYWNoZWQEACgBGFdlaWdodAAkABxCYXJyaWVyACUATFdlaWdodE5vdENvbXB1dGFibGUAJgBERXhjZWVkc1N0YWNrTGltaXQAJwAAxQUMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHJBQRTAAAEANEFARhWZWM8VD4AAMkFDAx4Y20IdjMoUGFsbGV0SW5mbwAAGAEUaW5kZXj8AQx1MzIAARBuYW1lzQUBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEsbW9kdWxlX25hbWXNBQGAQm91bmRlZFZlYzx1OCwgTWF4UGFsbGV0TmFtZUxlbj4AARRtYWpvcvwBDHUzMgABFG1pbm9y/AEMdTMyAAEUcGF0Y2j8AQx1MzIAAM0FDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADgBGFZlYzxUPgAA0QUAAALJBQDVBQwMeGNtCHYzOE1heWJlRXJyb3JDb2RlAAEMHFN1Y2Nlc3MAAAAURXJyb3IEANkFAYxCb3VuZGVkVmVjPHU4LCBNYXhEaXNwYXRjaEVycm9yTGVuPgABADhUcnVuY2F0ZWRFcnJvcgQA2QUBjEJvdW5kZWRWZWM8dTgsIE1heERpc3BhdGNoRXJyb3JMZW4+AAIAANkFDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADgBGFZlYzxUPgAA3QUEGE9wdGlvbgQEVAHwAQgQTm9uZQAAABBTb21lBADwAAABAADhBQwMeGNtCHYzKE9yaWdpbktpbmQAARAYTmF0aXZlAAAAQFNvdmVyZWlnbkFjY291bnQAAQAkU3VwZXJ1c2VyAAIADFhjbQADAADlBQwMeGNtOGRvdWJsZV9lbmNvZGVkNERvdWJsZUVuY29kZWQEBFQAAAQBHGVuY29kZWQ4ARxWZWM8dTg+AADpBQwMeGNtCHYzRFF1ZXJ5UmVzcG9uc2VJbmZvAAAMASxkZXN0aW5hdGlvbvABNE11bHRpTG9jYXRpb24AASBxdWVyeV9pZCwBHFF1ZXJ5SWQAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AADtBRAMeGNtCHYzKG11bHRpYXNzZXRATXVsdGlBc3NldEZpbHRlcgABCCBEZWZpbml0ZQQAnQUBLE11bHRpQXNzZXRzAAAAEFdpbGQEAPEFAThXaWxkTXVsdGlBc3NldAABAADxBRAMeGNtCHYzKG11bHRpYXNzZXQ4V2lsZE11bHRpQXNzZXQAARAMQWxsAAAAFEFsbE9mCAEIaWQZAQEcQXNzZXRJZAABDGZ1bvUFATxXaWxkRnVuZ2liaWxpdHkAAQAoQWxsQ291bnRlZAQA/AEMdTMyAAIAMEFsbE9mQ291bnRlZAwBCGlkGQEBHEFzc2V0SWQAAQxmdW71BQE8V2lsZEZ1bmdpYmlsaXR5AAEUY291bnT8AQx1MzIAAwAA9QUQDHhjbQh2MyhtdWx0aWFzc2V0PFdpbGRGdW5naWJpbGl0eQABCCBGdW5naWJsZQAAACxOb25GdW5naWJsZQABAAD5BQwMeGNtCHYzLFdlaWdodExpbWl0AAEIJFVubGltaXRlZAAAABxMaW1pdGVkBAAoARhXZWlnaHQAAQAA/QUMLHN0YWdpbmdfeGNtCHY0DFhjbQQQQ2FsbAAABAABBgFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAAAQYAAAIFBgAFBgwsc3RhZ2luZ194Y20IdjQsSW5zdHJ1Y3Rpb24EEENhbGwAAcA0V2l0aGRyYXdBc3NldAQACQYBGEFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAAkGARhBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQACQYBGEFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQsARxRdWVyeUlkAAEgcmVzcG9uc2UdBgEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAEccXVlcmllcjEGAUBPcHRpb248TG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHMJBgEYQXNzZXRzAAEsYmVuZWZpY2lhcnkdAQEgTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHMJBgEYQXNzZXRzAAEQZGVzdB0BASBMb2NhdGlvbgABDHhjbf0FARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmThBQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QoARhXZWlnaHQAARBjYWxs5QUBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcvwBDHUzMgABQG1heF9tZXNzYWdlX3NpemX8AQx1MzIAATBtYXhfY2FwYWNpdHn8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudPwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3L8AQx1MzIAARhzZW5kZXL8AQx1MzIAASRyZWNpcGllbnT8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAIQEBQEludGVyaW9yTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEADUGAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHM5BgEsQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyeR0BASBMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzOQYBLEFzc2V0RmlsdGVyAAEQZGVzdB0BASBMb2NhdGlvbgABDHhjbf0FARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlOQYBLEFzc2V0RmlsdGVyAAEQd2FudAkGARhBc3NldHMAARxtYXhpbWFsIAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0czkGASxBc3NldEZpbHRlcgABHHJlc2VydmUdAQEgTG9jYXRpb24AAQx4Y239BQEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzOQYBLEFzc2V0RmlsdGVyAAEQZGVzdB0BASBMb2NhdGlvbgABDHhjbf0FARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZvNQYBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzOQYBLEFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXMRBgEUQXNzZXQAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEAP0FASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAP0FASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzCQYBGEFzc2V0cwABGHRpY2tldB0BASBMb2NhdGlvbgAYABBUcmFwBAAsAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQoARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQACQYBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQACQYBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EADEGAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBAC5BQFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEANUFAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm81BgFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXj8AQx1MzIAARBuYW1lOAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABLGNyYXRlX21ham9y/AEMdTMyAAE8bWluX2NyYXRlX21pbm9y/AEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBAA1BgFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EACkBASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29yazEBASROZXR3b3JrSWQAASxkZXN0aW5hdGlvbiEBAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNt/QUBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXQRBgEUQXNzZXQAASB1bmxvY2tlch0BASBMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V0EQYBFEFzc2V0AAEYdGFyZ2V0HQEBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXQRBgEUQXNzZXQAARRvd25lch0BASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXQRBgEUQXNzZXQAARhsb2NrZXIdAQEgTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXcgARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBAAdAQEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0+QUBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2luMQYBQE9wdGlvbjxMb2NhdGlvbj4ALwAACQYQLHN0YWdpbmdfeGNtCHY0FGFzc2V0GEFzc2V0cwAABAANBgEoVmVjPEFzc2V0PgAADQYAAAIRBgARBhAsc3RhZ2luZ194Y20IdjQUYXNzZXQUQXNzZXQAAAgBCGlkUQEBHEFzc2V0SWQAAQxmdW4VBgEsRnVuZ2liaWxpdHkAABUGECxzdGFnaW5nX3hjbQh2NBRhc3NldCxGdW5naWJpbGl0eQABCCBGdW5naWJsZQQADQEBEHUxMjgAAAAsTm9uRnVuZ2libGUEABkGATRBc3NldEluc3RhbmNlAAEAABkGECxzdGFnaW5nX3hjbQh2NBRhc3NldDRBc3NldEluc3RhbmNlAAEYJFVuZGVmaW5lZAAAABRJbmRleAQADQEBEHUxMjgAAQAYQXJyYXk0BABIARxbdTg7IDRdAAIAGEFycmF5OAQAsQUBHFt1ODsgOF0AAwAcQXJyYXkxNgQAzAEgW3U4OyAxNl0ABAAcQXJyYXkzMgQABAEgW3U4OyAzMl0ABQAAHQYMLHN0YWdpbmdfeGNtCHY0IFJlc3BvbnNlAAEYEE51bGwAAAAYQXNzZXRzBAAJBgEYQXNzZXRzAAEAPEV4ZWN1dGlvblJlc3VsdAQAuQUBUE9wdGlvbjwodTMyLCBFcnJvcik+AAIAHFZlcnNpb24EABABOHN1cGVyOjpWZXJzaW9uAAMALFBhbGxldHNJbmZvBAAhBgGYQm91bmRlZFZlYzxQYWxsZXRJbmZvLCBNYXhQYWxsZXRzSW5mbz4ABAA4RGlzcGF0Y2hSZXN1bHQEANUFAThNYXliZUVycm9yQ29kZQAFAAAhBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUASUGBFMAAAQALQYBGFZlYzxUPgAAJQYMLHN0YWdpbmdfeGNtCHY0KFBhbGxldEluZm8AABgBFGluZGV4/AEMdTMyAAEQbmFtZSkGAYBCb3VuZGVkVmVjPHU4LCBNYXhQYWxsZXROYW1lTGVuPgABLG1vZHVsZV9uYW1lKQYBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEUbWFqb3L8AQx1MzIAARRtaW5vcvwBDHUzMgABFHBhdGNo/AEMdTMyAAApBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA4ARhWZWM8VD4AAC0GAAACJQYAMQYEGE9wdGlvbgQEVAEdAQEIEE5vbmUAAAAQU29tZQQAHQEAAAEAADUGDCxzdGFnaW5nX3hjbQh2NERRdWVyeVJlc3BvbnNlSW5mbwAADAEsZGVzdGluYXRpb24dAQEgTG9jYXRpb24AASBxdWVyeV9pZCwBHFF1ZXJ5SWQAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAA5BhAsc3RhZ2luZ194Y20IdjQUYXNzZXQsQXNzZXRGaWx0ZXIAAQggRGVmaW5pdGUEAAkGARhBc3NldHMAAAAQV2lsZAQAPQYBJFdpbGRBc3NldAABAAA9BhAsc3RhZ2luZ194Y20IdjQUYXNzZXQkV2lsZEFzc2V0AAEQDEFsbAAAABRBbGxPZggBCGlkUQEBHEFzc2V0SWQAAQxmdW5BBgE8V2lsZEZ1bmdpYmlsaXR5AAEAKEFsbENvdW50ZWQEAPwBDHUzMgACADBBbGxPZkNvdW50ZWQMAQhpZFEBARxBc3NldElkAAEMZnVuQQYBPFdpbGRGdW5naWJpbGl0eQABFGNvdW50/AEMdTMyAAMAAEEGECxzdGFnaW5nX3hjbQh2NBRhc3NldDxXaWxkRnVuZ2liaWxpdHkAAQggRnVuZ2libGUAAAAsTm9uRnVuZ2libGUAAQAARQYMLHN0YWdpbmdfeGNtCHY1DFhjbQQQQ2FsbAAABABJBgFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAASQYAAAJNBgBNBgwsc3RhZ2luZ194Y20IdjUsSW5zdHJ1Y3Rpb24EEENhbGwAAdA0V2l0aGRyYXdBc3NldAQAUQYBGEFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAFEGARhBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAUQYBGEFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQsARxRdWVyeUlkAAEgcmVzcG9uc2VlBgEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAEccXVlcmllcoUGAUBPcHRpb248TG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHNRBgEYQXNzZXRzAAEsYmVuZWZpY2lhcnlVAQEgTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHNRBgEYQXNzZXRzAAEQZGVzdFUBASBMb2NhdGlvbgABDHhjbUUGARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmThBQEoT3JpZ2luS2luZAABTGZhbGxiYWNrX21heF93ZWlnaHSJBgE4T3B0aW9uPFdlaWdodD4AARBjYWxs5QUBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcvwBDHUzMgABQG1heF9tZXNzYWdlX3NpemX8AQx1MzIAATBtYXhfY2FwYWNpdHn8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudPwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3L8AQx1MzIAARhzZW5kZXL8AQx1MzIAASRyZWNpcGllbnT8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAWQEBQEludGVyaW9yTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEAI0GAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHORBgEsQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyeVUBASBMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzkQYBLEFzc2V0RmlsdGVyAAEQZGVzdFUBASBMb2NhdGlvbgABDHhjbUUGARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlkQYBLEFzc2V0RmlsdGVyAAEQd2FudFEGARhBc3NldHMAARxtYXhpbWFsIAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0c5EGASxBc3NldEZpbHRlcgABHHJlc2VydmVVAQEgTG9jYXRpb24AAQx4Y21FBgEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzkQYBLEFzc2V0RmlsdGVyAAEQZGVzdFUBASBMb2NhdGlvbgABDHhjbUUGARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZvjQYBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzkQYBLEFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXNZBgEUQXNzZXQAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEAEUGASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAEUGASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzUQYBGEFzc2V0cwABGHRpY2tldFUBASBMb2NhdGlvbgAYABBUcmFwBAAsAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQoARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQAUQYBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQAUQYBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EAIUGAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBABpBgFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEANUFAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm+NBgFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXj8AQx1MzIAARBuYW1lOAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABLGNyYXRlX21ham9y/AEMdTMyAAE8bWluX2NyYXRlX21pbm9y/AEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBACNBgFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EAGEBASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29ya2kBASROZXR3b3JrSWQAASxkZXN0aW5hdGlvblkBAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNtRQYBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXRZBgEUQXNzZXQAASB1bmxvY2tlclUBASBMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V0WQYBFEFzc2V0AAEYdGFyZ2V0VQEBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXRZBgEUQXNzZXQAARRvd25lclUBASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXRZBgEUQXNzZXQAARhsb2NrZXJVAQEgTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXcgARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBABVAQEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0+QUBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2luhQYBQE9wdGlvbjxMb2NhdGlvbj4ALwAcUGF5RmVlcwQBFGFzc2V0WQYBFEFzc2V0ADAAQEluaXRpYXRlVHJhbnNmZXIUASxkZXN0aW5hdGlvblUBASBMb2NhdGlvbgABLHJlbW90ZV9mZWVznQYBbE9wdGlvbjxBc3NldFRyYW5zZmVyRmlsdGVyPgABPHByZXNlcnZlX29yaWdpbiABEGJvb2wAARhhc3NldHOlBgHgQm91bmRlZFZlYzxBc3NldFRyYW5zZmVyRmlsdGVyLCBNYXhBc3NldFRyYW5zZmVyRmlsdGVycz4AAShyZW1vdGVfeGNtRQYBHFhjbTwoKT4AMQBERXhlY3V0ZVdpdGhPcmlnaW4IAURkZXNjZW5kYW50X29yaWdpbq0GAWBPcHRpb248SW50ZXJpb3JMb2NhdGlvbj4AAQx4Y21FBgEkWGNtPENhbGw+ADIAIFNldEhpbnRzBAEUaGludHOxBgGEQm91bmRlZFZlYzxIaW50LCBIaW50TnVtVmFyaWFudHM+ADMAAFEGECxzdGFnaW5nX3hjbQh2NRRhc3NldBhBc3NldHMAAAQAVQYBKFZlYzxBc3NldD4AAFUGAAACWQYAWQYQLHN0YWdpbmdfeGNtCHY1FGFzc2V0FEFzc2V0AAAIAQhpZIkBARxBc3NldElkAAEMZnVuXQYBLEZ1bmdpYmlsaXR5AABdBhAsc3RhZ2luZ194Y20IdjUUYXNzZXQsRnVuZ2liaWxpdHkAAQggRnVuZ2libGUEAA0BARB1MTI4AAAALE5vbkZ1bmdpYmxlBABhBgE0QXNzZXRJbnN0YW5jZQABAABhBhAsc3RhZ2luZ194Y20IdjUUYXNzZXQ0QXNzZXRJbnN0YW5jZQABGCRVbmRlZmluZWQAAAAUSW5kZXgEAA0BARB1MTI4AAEAGEFycmF5NAQASAEcW3U4OyA0XQACABhBcnJheTgEALEFARxbdTg7IDhdAAMAHEFycmF5MTYEAMwBIFt1ODsgMTZdAAQAHEFycmF5MzIEAAQBIFt1ODsgMzJdAAUAAGUGDCxzdGFnaW5nX3hjbQh2NSBSZXNwb25zZQABGBBOdWxsAAAAGEFzc2V0cwQAUQYBGEFzc2V0cwABADxFeGVjdXRpb25SZXN1bHQEAGkGAVBPcHRpb248KHUzMiwgRXJyb3IpPgACABxWZXJzaW9uBAAQAThzdXBlcjo6VmVyc2lvbgADACxQYWxsZXRzSW5mbwQAdQYBmEJvdW5kZWRWZWM8UGFsbGV0SW5mbywgTWF4UGFsbGV0c0luZm8+AAQAOERpc3BhdGNoUmVzdWx0BADVBQE4TWF5YmVFcnJvckNvZGUABQAAaQYEGE9wdGlvbgQEVAFtBgEIEE5vbmUAAAAQU29tZQQAbQYAAAEAAG0GAAAECBBxBgBxBhAMeGNtCHY1GHRyYWl0cxRFcnJvcgABpCBPdmVyZmxvdwAAADRVbmltcGxlbWVudGVkAAEAYFVudHJ1c3RlZFJlc2VydmVMb2NhdGlvbgACAGRVbnRydXN0ZWRUZWxlcG9ydExvY2F0aW9uAAMAMExvY2F0aW9uRnVsbAAEAFRMb2NhdGlvbk5vdEludmVydGlibGUABQAkQmFkT3JpZ2luAAYAPEludmFsaWRMb2NhdGlvbgAHADRBc3NldE5vdEZvdW5kAAgAVEZhaWxlZFRvVHJhbnNhY3RBc3NldAAJADxOb3RXaXRoZHJhd2FibGUACgBITG9jYXRpb25DYW5ub3RIb2xkAAsAVEV4Y2VlZHNNYXhNZXNzYWdlU2l6ZQAMAFhEZXN0aW5hdGlvblVuc3VwcG9ydGVkAA0AJFRyYW5zcG9ydAAOAChVbnJvdXRhYmxlAA8AMFVua25vd25DbGFpbQAQADhGYWlsZWRUb0RlY29kZQARAEBNYXhXZWlnaHRJbnZhbGlkABIAOE5vdEhvbGRpbmdGZWVzABMAMFRvb0V4cGVuc2l2ZQAUABBUcmFwBAAwAQx1NjQAFQBARXhwZWN0YXRpb25GYWxzZQAWADhQYWxsZXROb3RGb3VuZAAXADBOYW1lTWlzbWF0Y2gAGABMVmVyc2lvbkluY29tcGF0aWJsZQAZAFBIb2xkaW5nV291bGRPdmVyZmxvdwAaACxFeHBvcnRFcnJvcgAbADhSZWFuY2hvckZhaWxlZAAcABhOb0RlYWwAHQAoRmVlc05vdE1ldAAeACRMb2NrRXJyb3IAHwAwTm9QZXJtaXNzaW9uACAAKFVuYW5jaG9yZWQAIQA4Tm90RGVwb3NpdGFibGUAIgA0VG9vTWFueUFzc2V0cwAjAExVbmhhbmRsZWRYY21WZXJzaW9uACQASFdlaWdodExpbWl0UmVhY2hlZAQAKAEYV2VpZ2h0ACUAHEJhcnJpZXIAJgBMV2VpZ2h0Tm90Q29tcHV0YWJsZQAnAERFeGNlZWRzU3RhY2tMaW1pdAAoAAB1BgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAXkGBFMAAAQAgQYBGFZlYzxUPgAAeQYMLHN0YWdpbmdfeGNtCHY1KFBhbGxldEluZm8AABgBFGluZGV4/AEMdTMyAAEQbmFtZX0GAYBCb3VuZGVkVmVjPHU4LCBNYXhQYWxsZXROYW1lTGVuPgABLG1vZHVsZV9uYW1lfQYBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEUbWFqb3L8AQx1MzIAARRtaW5vcvwBDHUzMgABFHBhdGNo/AEMdTMyAAB9BgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA4ARhWZWM8VD4AAIEGAAACeQYAhQYEGE9wdGlvbgQEVAFVAQEIEE5vbmUAAAAQU29tZQQAVQEAAAEAAIkGBBhPcHRpb24EBFQBKAEIEE5vbmUAAAAQU29tZQQAKAAAAQAAjQYMLHN0YWdpbmdfeGNtCHY1RFF1ZXJ5UmVzcG9uc2VJbmZvAAAMASxkZXN0aW5hdGlvblUBASBMb2NhdGlvbgABIHF1ZXJ5X2lkLAEcUXVlcnlJZAABKG1heF93ZWlnaHQoARhXZWlnaHQAAJEGECxzdGFnaW5nX3hjbQh2NRRhc3NldCxBc3NldEZpbHRlcgABCCBEZWZpbml0ZQQAUQYBGEFzc2V0cwAAABBXaWxkBACVBgEkV2lsZEFzc2V0AAEAAJUGECxzdGFnaW5nX3hjbQh2NRRhc3NldCRXaWxkQXNzZXQAARAMQWxsAAAAFEFsbE9mCAEIaWSJAQEcQXNzZXRJZAABDGZ1bpkGATxXaWxkRnVuZ2liaWxpdHkAAQAoQWxsQ291bnRlZAQA/AEMdTMyAAIAMEFsbE9mQ291bnRlZAwBCGlkiQEBHEFzc2V0SWQAAQxmdW6ZBgE8V2lsZEZ1bmdpYmlsaXR5AAEUY291bnT8AQx1MzIAAwAAmQYQLHN0YWdpbmdfeGNtCHY1FGFzc2V0PFdpbGRGdW5naWJpbGl0eQABCCBGdW5naWJsZQAAACxOb25GdW5naWJsZQABAACdBgQYT3B0aW9uBARUAaEGAQgQTm9uZQAAABBTb21lBAChBgAAAQAAoQYQLHN0YWdpbmdfeGNtCHY1FGFzc2V0TEFzc2V0VHJhbnNmZXJGaWx0ZXIAAQwgVGVsZXBvcnQEAJEGASxBc3NldEZpbHRlcgAAADhSZXNlcnZlRGVwb3NpdAQAkQYBLEFzc2V0RmlsdGVyAAEAPFJlc2VydmVXaXRoZHJhdwQAkQYBLEFzc2V0RmlsdGVyAAIAAKUGDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBoQYEUwAABACpBgEYVmVjPFQ+AACpBgAAAqEGAK0GBBhPcHRpb24EBFQBWQEBCBBOb25lAAAAEFNvbWUEAFkBAAABAACxBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAbUGBFMAAAQAuQYBGFZlYzxUPgAAtQYMLHN0YWdpbmdfeGNtCHY1EEhpbnQAAQQwQXNzZXRDbGFpbWVyBAEgbG9jYXRpb25VAQEgTG9jYXRpb24AAAAAuQYAAAK1BgC9BggMeGNtPFZlcnNpb25lZEFzc2V0cwABDAhWMwQAnQUBPHYzOjpNdWx0aUFzc2V0cwADAAhWNAQACQYBKHY0OjpBc3NldHMABAAIVjUEAFEGASh2NTo6QXNzZXRzAAUAAMEGCAx4Y20wVmVyc2lvbmVkWGNtBCxSdW50aW1lQ2FsbAABDAhWMwQAxQYBUHYzOjpYY208UnVudGltZUNhbGw+AAMACFY0BADVBgFQdjQ6OlhjbTxSdW50aW1lQ2FsbD4ABAAIVjUEAOEGAVB2NTo6WGNtPFJ1bnRpbWVDYWxsPgAFAADFBgwMeGNtCHYzDFhjbQQQQ2FsbAAABADJBgFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAAyQYAAALNBgDNBgwMeGNtCHYzLEluc3RydWN0aW9uBBBDYWxsAAHANFdpdGhkcmF3QXNzZXQEAJ0FASxNdWx0aUFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAJ0FASxNdWx0aUFzc2V0cwABAFhSZWNlaXZlVGVsZXBvcnRlZEFzc2V0BACdBQEsTXVsdGlBc3NldHMAAgA0UXVlcnlSZXNwb25zZRABIHF1ZXJ5X2lkLAEcUXVlcnlJZAABIHJlc3BvbnNltQUBIFJlc3BvbnNlAAEobWF4X3dlaWdodCgBGFdlaWdodAABHHF1ZXJpZXLdBQFUT3B0aW9uPE11bHRpTG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHOdBQEsTXVsdGlBc3NldHMAASxiZW5lZmljaWFyefABNE11bHRpTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHOdBQEsTXVsdGlBc3NldHMAARBkZXN08AE0TXVsdGlMb2NhdGlvbgABDHhjbZEFARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmThBQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QoARhXZWlnaHQAARBjYWxs0QYBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcvwBDHUzMgABQG1heF9tZXNzYWdlX3NpemX8AQx1MzIAATBtYXhfY2FwYWNpdHn8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudPwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3L8AQx1MzIAARhzZW5kZXL8AQx1MzIAASRyZWNpcGllbnT8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQA9AFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAsALFJlcG9ydEVycm9yBADpBQFEUXVlcnlSZXNwb25zZUluZm8ADAAwRGVwb3NpdEFzc2V0CAEYYXNzZXRz7QUBQE11bHRpQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyefABNE11bHRpTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldAwBGGFzc2V0c+0FAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdPABNE11bHRpTG9jYXRpb24AAQx4Y22RBQEcWGNtPCgpPgAOADRFeGNoYW5nZUFzc2V0DAEQZ2l2Ze0FAUBNdWx0aUFzc2V0RmlsdGVyAAEQd2FudJ0FASxNdWx0aUFzc2V0cwABHG1heGltYWwgARBib29sAA8AXEluaXRpYXRlUmVzZXJ2ZVdpdGhkcmF3DAEYYXNzZXRz7QUBQE11bHRpQXNzZXRGaWx0ZXIAARxyZXNlcnZl8AE0TXVsdGlMb2NhdGlvbgABDHhjbZEFARxYY208KCk+ABAAQEluaXRpYXRlVGVsZXBvcnQMARhhc3NldHPtBQFATXVsdGlBc3NldEZpbHRlcgABEGRlc3TwATRNdWx0aUxvY2F0aW9uAAEMeGNtkQUBHFhjbTwoKT4AEQA0UmVwb3J0SG9sZGluZwgBNHJlc3BvbnNlX2luZm/pBQFEUXVlcnlSZXNwb25zZUluZm8AARhhc3NldHPtBQFATXVsdGlBc3NldEZpbHRlcgASADBCdXlFeGVjdXRpb24IARBmZWVzpQUBKE11bHRpQXNzZXQAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEAMUGASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAMUGASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRznQUBLE11bHRpQXNzZXRzAAEYdGlja2V08AE0TXVsdGlMb2NhdGlvbgAYABBUcmFwBAAsAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQoARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQAnQUBLE11bHRpQXNzZXRzABwALEV4cGVjdEFzc2V0BACdBQEsTXVsdGlBc3NldHMAHQAwRXhwZWN0T3JpZ2luBADdBQFUT3B0aW9uPE11bHRpTG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBAC5BQFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEANUFAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm/pBQFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXj8AQx1MzIAARBuYW1lOAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABLGNyYXRlX21ham9y/AEMdTMyAAE8bWluX2NyYXRlX21pbm9y/AEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBADpBQFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EAPgBIEp1bmN0aW9uACUANEV4cG9ydE1lc3NhZ2UMARxuZXR3b3JrBQEBJE5ldHdvcmtJZAABLGRlc3RpbmF0aW9u9AFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAEMeGNtkQUBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXSlBQEoTXVsdGlBc3NldAABIHVubG9ja2Vy8AE0TXVsdGlMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V0pQUBKE11bHRpQXNzZXQAARh0YXJnZXTwATRNdWx0aUxvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXSlBQEoTXVsdGlBc3NldAABFG93bmVy8AE0TXVsdGlMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXSlBQEoTXVsdGlBc3NldAABGGxvY2tlcvABNE11bHRpTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXcgARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBADwATRNdWx0aUxvY2F0aW9uAC4APFVucGFpZEV4ZWN1dGlvbggBMHdlaWdodF9saW1pdPkFASxXZWlnaHRMaW1pdAABMGNoZWNrX29yaWdpbt0FAVRPcHRpb248TXVsdGlMb2NhdGlvbj4ALwAA0QYMDHhjbThkb3VibGVfZW5jb2RlZDREb3VibGVFbmNvZGVkBARUAAAEARxlbmNvZGVkOAEcVmVjPHU4PgAA1QYMLHN0YWdpbmdfeGNtCHY0DFhjbQQQQ2FsbAAABADZBgFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAA2QYAAALdBgDdBgwsc3RhZ2luZ194Y20IdjQsSW5zdHJ1Y3Rpb24EEENhbGwAAcA0V2l0aGRyYXdBc3NldAQACQYBGEFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAAkGARhBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQACQYBGEFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQsARxRdWVyeUlkAAEgcmVzcG9uc2UdBgEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAEccXVlcmllcjEGAUBPcHRpb248TG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHMJBgEYQXNzZXRzAAEsYmVuZWZpY2lhcnkdAQEgTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHMJBgEYQXNzZXRzAAEQZGVzdB0BASBMb2NhdGlvbgABDHhjbf0FARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmThBQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QoARhXZWlnaHQAARBjYWxs0QYBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcvwBDHUzMgABQG1heF9tZXNzYWdlX3NpemX8AQx1MzIAATBtYXhfY2FwYWNpdHn8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudPwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3L8AQx1MzIAARhzZW5kZXL8AQx1MzIAASRyZWNpcGllbnT8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAIQEBQEludGVyaW9yTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEADUGAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHM5BgEsQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyeR0BASBMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzOQYBLEFzc2V0RmlsdGVyAAEQZGVzdB0BASBMb2NhdGlvbgABDHhjbf0FARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlOQYBLEFzc2V0RmlsdGVyAAEQd2FudAkGARhBc3NldHMAARxtYXhpbWFsIAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0czkGASxBc3NldEZpbHRlcgABHHJlc2VydmUdAQEgTG9jYXRpb24AAQx4Y239BQEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzOQYBLEFzc2V0RmlsdGVyAAEQZGVzdB0BASBMb2NhdGlvbgABDHhjbf0FARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZvNQYBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzOQYBLEFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXMRBgEUQXNzZXQAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEANUGASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEANUGASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzCQYBGEFzc2V0cwABGHRpY2tldB0BASBMb2NhdGlvbgAYABBUcmFwBAAsAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQoARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQACQYBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQACQYBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EADEGAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBAC5BQFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEANUFAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm81BgFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXj8AQx1MzIAARBuYW1lOAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABLGNyYXRlX21ham9y/AEMdTMyAAE8bWluX2NyYXRlX21pbm9y/AEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBAA1BgFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EACkBASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29yazEBASROZXR3b3JrSWQAASxkZXN0aW5hdGlvbiEBAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNt/QUBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXQRBgEUQXNzZXQAASB1bmxvY2tlch0BASBMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V0EQYBFEFzc2V0AAEYdGFyZ2V0HQEBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXQRBgEUQXNzZXQAARRvd25lch0BASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXQRBgEUQXNzZXQAARhsb2NrZXIdAQEgTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXcgARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBAAdAQEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0+QUBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2luMQYBQE9wdGlvbjxMb2NhdGlvbj4ALwAA4QYMLHN0YWdpbmdfeGNtCHY1DFhjbQQQQ2FsbAAABADlBgFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAA5QYAAALpBgDpBgwsc3RhZ2luZ194Y20IdjUsSW5zdHJ1Y3Rpb24EEENhbGwAAdA0V2l0aGRyYXdBc3NldAQAUQYBGEFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAFEGARhBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAUQYBGEFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQsARxRdWVyeUlkAAEgcmVzcG9uc2VlBgEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0KAEYV2VpZ2h0AAEccXVlcmllcoUGAUBPcHRpb248TG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHNRBgEYQXNzZXRzAAEsYmVuZWZpY2lhcnlVAQEgTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHNRBgEYQXNzZXRzAAEQZGVzdFUBASBMb2NhdGlvbgABDHhjbUUGARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmThBQEoT3JpZ2luS2luZAABTGZhbGxiYWNrX21heF93ZWlnaHSJBgE4T3B0aW9uPFdlaWdodD4AARBjYWxs0QYBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcvwBDHUzMgABQG1heF9tZXNzYWdlX3NpemX8AQx1MzIAATBtYXhfY2FwYWNpdHn8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudPwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3L8AQx1MzIAARhzZW5kZXL8AQx1MzIAASRyZWNpcGllbnT8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAWQEBQEludGVyaW9yTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEAI0GAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHORBgEsQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyeVUBASBMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzkQYBLEFzc2V0RmlsdGVyAAEQZGVzdFUBASBMb2NhdGlvbgABDHhjbUUGARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlkQYBLEFzc2V0RmlsdGVyAAEQd2FudFEGARhBc3NldHMAARxtYXhpbWFsIAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0c5EGASxBc3NldEZpbHRlcgABHHJlc2VydmVVAQEgTG9jYXRpb24AAQx4Y21FBgEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzkQYBLEFzc2V0RmlsdGVyAAEQZGVzdFUBASBMb2NhdGlvbgABDHhjbUUGARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZvjQYBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzkQYBLEFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXNZBgEUQXNzZXQAATB3ZWlnaHRfbGltaXT5BQEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEAOEGASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAOEGASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzUQYBGEFzc2V0cwABGHRpY2tldFUBASBMb2NhdGlvbgAYABBUcmFwBAAsAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQoARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQAUQYBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQAUQYBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EAIUGAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBABpBgFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEANUFAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm+NBgFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXj8AQx1MzIAARBuYW1lOAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lOAEcVmVjPHU4PgABLGNyYXRlX21ham9y/AEMdTMyAAE8bWluX2NyYXRlX21pbm9y/AEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBACNBgFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EAGEBASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29ya2kBASROZXR3b3JrSWQAASxkZXN0aW5hdGlvblkBAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNtRQYBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXRZBgEUQXNzZXQAASB1bmxvY2tlclUBASBMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V0WQYBFEFzc2V0AAEYdGFyZ2V0VQEBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXRZBgEUQXNzZXQAARRvd25lclUBASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXRZBgEUQXNzZXQAARhsb2NrZXJVAQEgTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXcgARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBABVAQEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0+QUBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2luhQYBQE9wdGlvbjxMb2NhdGlvbj4ALwAcUGF5RmVlcwQBFGFzc2V0WQYBFEFzc2V0ADAAQEluaXRpYXRlVHJhbnNmZXIUASxkZXN0aW5hdGlvblUBASBMb2NhdGlvbgABLHJlbW90ZV9mZWVznQYBbE9wdGlvbjxBc3NldFRyYW5zZmVyRmlsdGVyPgABPHByZXNlcnZlX29yaWdpbiABEGJvb2wAARhhc3NldHOlBgHgQm91bmRlZFZlYzxBc3NldFRyYW5zZmVyRmlsdGVyLCBNYXhBc3NldFRyYW5zZmVyRmlsdGVycz4AAShyZW1vdGVfeGNtRQYBHFhjbTwoKT4AMQBERXhlY3V0ZVdpdGhPcmlnaW4IAURkZXNjZW5kYW50X29yaWdpbq0GAWBPcHRpb248SW50ZXJpb3JMb2NhdGlvbj4AAQx4Y23hBgEkWGNtPENhbGw+ADIAIFNldEhpbnRzBAEUaGludHOxBgGEQm91bmRlZFZlYzxIaW50LCBIaW50TnVtVmFyaWFudHM+ADMAAO0GEFBzdGFnaW5nX3hjbV9leGVjdXRvchh0cmFpdHM4YXNzZXRfdHJhbnNmZXIwVHJhbnNmZXJUeXBlAAEQIFRlbGVwb3J0AAAAMExvY2FsUmVzZXJ2ZQABAEhEZXN0aW5hdGlvblJlc2VydmUAAgA0UmVtb3RlUmVzZXJ2ZQQAjQEBRFZlcnNpb25lZExvY2F0aW9uAAMAAPEGCAx4Y21AVmVyc2lvbmVkQXNzZXRJZAABDAhWMwQAGQEBLHYzOjpBc3NldElkAAMACFY0BABRAQEsdjQ6OkFzc2V0SWQABAAIVjUEAIkBASx2NTo6QXNzZXRJZAAFAAD1BgQYT3B0aW9uBARUATABCBBOb25lAAAAEFNvbWUEADAAAAEAAPkGDFBwYWxsZXRfbWVzc2FnZV9xdWV1ZRhwYWxsZXQQQ2FsbAQEVAABCCRyZWFwX3BhZ2UIAThtZXNzYWdlX29yaWdpbv0GAUhNZXNzYWdlT3JpZ2luT2Y8VD4AAShwYWdlX2luZGV4EAEkUGFnZUluZGV4AAAEPQFSZW1vdmUgYSBwYWdlIHdoaWNoIGhhcyBubyBtb3JlIG1lc3NhZ2VzIHJlbWFpbmluZyB0byBiZSBwcm9jZXNzZWQgb3IgaXMgc3RhbGUuSGV4ZWN1dGVfb3ZlcndlaWdodBABOG1lc3NhZ2Vfb3JpZ2lu/QYBSE1lc3NhZ2VPcmlnaW5PZjxUPgABEHBhZ2UQASRQYWdlSW5kZXgAARRpbmRleBABHFQ6OlNpemUAATB3ZWlnaHRfbGltaXQoARhXZWlnaHQAATR4RXhlY3V0ZSBhbiBvdmVyd2VpZ2h0IG1lc3NhZ2UuAE0BVGVtcG9yYXJ5IHByb2Nlc3NpbmcgZXJyb3JzIHdpbGwgYmUgcHJvcGFnYXRlZCB3aGVyZWFzIHBlcm1hbmVudCBlcnJvcnMgYXJlIHRyZWF0ZWRUYXMgc3VjY2VzcyBjb25kaXRpb24uAHQtIGBvcmlnaW5gOiBNdXN0IGJlIGBTaWduZWRgLjUBLSBgbWVzc2FnZV9vcmlnaW5gOiBUaGUgb3JpZ2luIGZyb20gd2hpY2ggdGhlIG1lc3NhZ2UgdG8gYmUgZXhlY3V0ZWQgYXJyaXZlZC49AS0gYHBhZ2VgOiBUaGUgcGFnZSBpbiB0aGUgcXVldWUgaW4gd2hpY2ggdGhlIG1lc3NhZ2UgdG8gYmUgZXhlY3V0ZWQgaXMgc2l0dGluZy4JAS0gYGluZGV4YDogVGhlIGluZGV4IGludG8gdGhlIHF1ZXVlIG9mIHRoZSBtZXNzYWdlIHRvIGJlIGV4ZWN1dGVkLlkBLSBgd2VpZ2h0X2xpbWl0YDogVGhlIG1heGltdW0gYW1vdW50IG9mIHdlaWdodCBhbGxvd2VkIHRvIGJlIGNvbnN1bWVkIGluIHRoZSBleGVjdXRpb25EICBvZiB0aGUgbWVzc2FnZS4A9EJlbmNobWFyayBjb21wbGV4aXR5IGNvbnNpZGVyYXRpb25zOiBPKGluZGV4ICsgd2VpZ2h0X2xpbWl0KS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu/QYMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRpbmNsdXNpb25YQWdncmVnYXRlTWVzc2FnZU9yaWdpbgABBAxVbXAEAAEHAShVbXBRdWV1ZUlkAAAAAAEHDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9uKFVtcFF1ZXVlSWQAAQQQUGFyYQQAtQIBGFBhcmFJZAAAAAAFBwxEcGFsbGV0X2Fzc2V0X3JhdGUYcGFsbGV0EENhbGwEBFQAAQwYY3JlYXRlCAEoYXNzZXRfa2luZOwBREJveDxUOjpBc3NldEtpbmQ+AAEQcmF0ZQkHASRGaXhlZFUxMjgAABANAUluaXRpYWxpemUgYSBjb252ZXJzaW9uIHJhdGUgdG8gbmF0aXZlIGJhbGFuY2UgZm9yIHRoZSBnaXZlbiBhc3NldC4ANCMjIENvbXBsZXhpdHkYLSBPKDEpGHVwZGF0ZQgBKGFzc2V0X2tpbmTsAURCb3g8VDo6QXNzZXRLaW5kPgABEHJhdGUJBwEkRml4ZWRVMTI4AAEQBQFVcGRhdGUgdGhlIGNvbnZlcnNpb24gcmF0ZSB0byBuYXRpdmUgYmFsYW5jZSBmb3IgdGhlIGdpdmVuIGFzc2V0LgA0IyMgQ29tcGxleGl0eRgtIE8oMSkYcmVtb3ZlBAEoYXNzZXRfa2luZOwBREJveDxUOjpBc3NldEtpbmQ+AAIQJQFSZW1vdmUgYW4gZXhpc3RpbmcgY29udmVyc2lvbiByYXRlIHRvIG5hdGl2ZSBiYWxhbmNlIGZvciB0aGUgZ2l2ZW4gYXNzZXQuADQjIyBDb21wbGV4aXR5GC0gTygxKQQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy4JBww0c3BfYXJpdGhtZXRpYyxmaXhlZF9wb2ludCRGaXhlZFUxMjgAAAQAGAEQdTEyOAAADQcMMHBhbGxldF9iZWVmeRhwYWxsZXQQQ2FsbAQEVAABHFByZXBvcnRfZG91YmxlX3ZvdGluZwgBSGVxdWl2b2NhdGlvbl9wcm9vZhEHAY0BQm94PERvdWJsZVZvdGluZ1Byb29mPEJsb2NrTnVtYmVyRm9yPFQ+LCBUOjpCZWVmeUlkLDxUOjpCZWVmeUlkCmFzIFJ1bnRpbWVBcHBQdWJsaWM+OjpTaWduYXR1cmUsPiw+AAE8a2V5X293bmVyX3Byb29m4QEBQFQ6OktleU93bmVyUHJvb2YAABAJAVJlcG9ydCB2b3RlciBlcXVpdm9jYXRpb24vbWlzYmVoYXZpb3IuIFRoaXMgbWV0aG9kIHdpbGwgdmVyaWZ5IHRoZfRlcXVpdm9jYXRpb24gcHJvb2YgYW5kIHZhbGlkYXRlIHRoZSBnaXZlbiBrZXkgb3duZXJzaGlwIHByb29m+GFnYWluc3QgdGhlIGV4dHJhY3RlZCBvZmZlbmRlci4gSWYgYm90aCBhcmUgdmFsaWQsIHRoZSBvZmZlbmNlRHdpbGwgYmUgcmVwb3J0ZWQudHJlcG9ydF9kb3VibGVfdm90aW5nX3Vuc2lnbmVkCAFIZXF1aXZvY2F0aW9uX3Byb29mEQcBjQFCb3g8RG91YmxlVm90aW5nUHJvb2Y8QmxvY2tOdW1iZXJGb3I8VD4sIFQ6OkJlZWZ5SWQsPFQ6OkJlZWZ5SWQKYXMgUnVudGltZUFwcFB1YmxpYz46OlNpZ25hdHVyZSw+LD4AATxrZXlfb3duZXJfcHJvb2bhAQFAVDo6S2V5T3duZXJQcm9vZgABJAkBUmVwb3J0IHZvdGVyIGVxdWl2b2NhdGlvbi9taXNiZWhhdmlvci4gVGhpcyBtZXRob2Qgd2lsbCB2ZXJpZnkgdGhl9GVxdWl2b2NhdGlvbiBwcm9vZiBhbmQgdmFsaWRhdGUgdGhlIGdpdmVuIGtleSBvd25lcnNoaXAgcHJvb2b4YWdhaW5zdCB0aGUgZXh0cmFjdGVkIG9mZmVuZGVyLiBJZiBib3RoIGFyZSB2YWxpZCwgdGhlIG9mZmVuY2VEd2lsbCBiZSByZXBvcnRlZC4ADQFUaGlzIGV4dHJpbnNpYyBtdXN0IGJlIGNhbGxlZCB1bnNpZ25lZCBhbmQgaXQgaXMgZXhwZWN0ZWQgdGhhdCBvbmx5FQFibG9jayBhdXRob3JzIHdpbGwgY2FsbCBpdCAodmFsaWRhdGVkIGluIGBWYWxpZGF0ZVVuc2lnbmVkYCksIGFzIHN1Y2gVAWlmIHRoZSBibG9jayBhdXRob3IgaXMgZGVmaW5lZCBpdCB3aWxsIGJlIGRlZmluZWQgYXMgdGhlIGVxdWl2b2NhdGlvbiRyZXBvcnRlci48c2V0X25ld19nZW5lc2lzBAE8ZGVsYXlfaW5fYmxvY2tzEAFEQmxvY2tOdW1iZXJGb3I8VD4AAhBdAVJlc2V0IEJFRUZZIGNvbnNlbnN1cyBieSBzZXR0aW5nIGEgbmV3IEJFRUZZIGdlbmVzaXMgYXQgYGRlbGF5X2luX2Jsb2Nrc2AgYmxvY2tzIGluIHRoZRxmdXR1cmUuALROb3RlOiBgZGVsYXlfaW5fYmxvY2tzYCBoYXMgdG8gYmUgYXQgbGVhc3QgMS5IcmVwb3J0X2Zvcmtfdm90aW5nCAFIZXF1aXZvY2F0aW9uX3Byb29mMQcBrQFCb3g8Rm9ya1ZvdGluZ1Byb29mPEhlYWRlckZvcjxUPiwgVDo6QmVlZnlJZCw8VDo6QW5jZXN0cnlIZWxwZXIKYXMgQW5jZXN0cnlIZWxwZXI8SGVhZGVyRm9yPFQ+Pj46OlByb29mLD4sPgABPGtleV9vd25lcl9wcm9vZuEBAUBUOjpLZXlPd25lclByb29mAAMMPQFSZXBvcnQgZm9yayB2b3RpbmcgZXF1aXZvY2F0aW9uLiBUaGlzIG1ldGhvZCB3aWxsIHZlcmlmeSB0aGUgZXF1aXZvY2F0aW9uIHByb29mKQFhbmQgdmFsaWRhdGUgdGhlIGdpdmVuIGtleSBvd25lcnNoaXAgcHJvb2YgYWdhaW5zdCB0aGUgZXh0cmFjdGVkIG9mZmVuZGVyLsBJZiBib3RoIGFyZSB2YWxpZCwgdGhlIG9mZmVuY2Ugd2lsbCBiZSByZXBvcnRlZC5scmVwb3J0X2Zvcmtfdm90aW5nX3Vuc2lnbmVkCAFIZXF1aXZvY2F0aW9uX3Byb29mMQcBrQFCb3g8Rm9ya1ZvdGluZ1Byb29mPEhlYWRlckZvcjxUPiwgVDo6QmVlZnlJZCw8VDo6QW5jZXN0cnlIZWxwZXIKYXMgQW5jZXN0cnlIZWxwZXI8SGVhZGVyRm9yPFQ+Pj46OlByb29mLD4sPgABPGtleV9vd25lcl9wcm9vZuEBAUBUOjpLZXlPd25lclByb29mAAQgPQFSZXBvcnQgZm9yayB2b3RpbmcgZXF1aXZvY2F0aW9uLiBUaGlzIG1ldGhvZCB3aWxsIHZlcmlmeSB0aGUgZXF1aXZvY2F0aW9uIHByb29mKQFhbmQgdmFsaWRhdGUgdGhlIGdpdmVuIGtleSBvd25lcnNoaXAgcHJvb2YgYWdhaW5zdCB0aGUgZXh0cmFjdGVkIG9mZmVuZGVyLsBJZiBib3RoIGFyZSB2YWxpZCwgdGhlIG9mZmVuY2Ugd2lsbCBiZSByZXBvcnRlZC4ADQFUaGlzIGV4dHJpbnNpYyBtdXN0IGJlIGNhbGxlZCB1bnNpZ25lZCBhbmQgaXQgaXMgZXhwZWN0ZWQgdGhhdCBvbmx5FQFibG9jayBhdXRob3JzIHdpbGwgY2FsbCBpdCAodmFsaWRhdGVkIGluIGBWYWxpZGF0ZVVuc2lnbmVkYCksIGFzIHN1Y2gVAWlmIHRoZSBibG9jayBhdXRob3IgaXMgZGVmaW5lZCBpdCB3aWxsIGJlIGRlZmluZWQgYXMgdGhlIGVxdWl2b2NhdGlvbiRyZXBvcnRlci5ocmVwb3J0X2Z1dHVyZV9ibG9ja192b3RpbmcIAUhlcXVpdm9jYXRpb25fcHJvb2ZBBwHoQm94PEZ1dHVyZUJsb2NrVm90aW5nUHJvb2Y8QmxvY2tOdW1iZXJGb3I8VD4sIFQ6OkJlZWZ5SWQ+PgABPGtleV9vd25lcl9wcm9vZuEBAUBUOjpLZXlPd25lclByb29mAAUMXQFSZXBvcnQgZnV0dXJlIGJsb2NrIHZvdGluZyBlcXVpdm9jYXRpb24uIFRoaXMgbWV0aG9kIHdpbGwgdmVyaWZ5IHRoZSBlcXVpdm9jYXRpb24gcHJvb2YpAWFuZCB2YWxpZGF0ZSB0aGUgZ2l2ZW4ga2V5IG93bmVyc2hpcCBwcm9vZiBhZ2FpbnN0IHRoZSBleHRyYWN0ZWQgb2ZmZW5kZXIuwElmIGJvdGggYXJlIHZhbGlkLCB0aGUgb2ZmZW5jZSB3aWxsIGJlIHJlcG9ydGVkLoxyZXBvcnRfZnV0dXJlX2Jsb2NrX3ZvdGluZ191bnNpZ25lZAgBSGVxdWl2b2NhdGlvbl9wcm9vZkEHAehCb3g8RnV0dXJlQmxvY2tWb3RpbmdQcm9vZjxCbG9ja051bWJlckZvcjxUPiwgVDo6QmVlZnlJZD4+AAE8a2V5X293bmVyX3Byb29m4QEBQFQ6OktleU93bmVyUHJvb2YABiBdAVJlcG9ydCBmdXR1cmUgYmxvY2sgdm90aW5nIGVxdWl2b2NhdGlvbi4gVGhpcyBtZXRob2Qgd2lsbCB2ZXJpZnkgdGhlIGVxdWl2b2NhdGlvbiBwcm9vZikBYW5kIHZhbGlkYXRlIHRoZSBnaXZlbiBrZXkgb3duZXJzaGlwIHByb29mIGFnYWluc3QgdGhlIGV4dHJhY3RlZCBvZmZlbmRlci7ASWYgYm90aCBhcmUgdmFsaWQsIHRoZSBvZmZlbmNlIHdpbGwgYmUgcmVwb3J0ZWQuAA0BVGhpcyBleHRyaW5zaWMgbXVzdCBiZSBjYWxsZWQgdW5zaWduZWQgYW5kIGl0IGlzIGV4cGVjdGVkIHRoYXQgb25seRUBYmxvY2sgYXV0aG9ycyB3aWxsIGNhbGwgaXQgKHZhbGlkYXRlZCBpbiBgVmFsaWRhdGVVbnNpZ25lZGApLCBhcyBzdWNoFQFpZiB0aGUgYmxvY2sgYXV0aG9yIGlzIGRlZmluZWQgaXQgd2lsbCBiZSBkZWZpbmVkIGFzIHRoZSBlcXVpdm9jYXRpb24kcmVwb3J0ZXIuBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLhEHCEhzcF9jb25zZW5zdXNfYmVlZnlERG91YmxlVm90aW5nUHJvb2YMGE51bWJlcgEQCElkAV0CJFNpZ25hdHVyZQEVBwAIARRmaXJzdBkHAYhWb3RlTWVzc2FnZTxOdW1iZXIsIElkLCBTaWduYXR1cmU+AAEYc2Vjb25kGQcBiFZvdGVNZXNzYWdlPE51bWJlciwgSWQsIFNpZ25hdHVyZT4AABUHDEhzcF9jb25zZW5zdXNfYmVlZnkwZWNkc2FfY3J5cHRvJFNpZ25hdHVyZQAABADRAgFAZWNkc2E6OlNpZ25hdHVyZQAAGQcISHNwX2NvbnNlbnN1c19iZWVmeSxWb3RlTWVzc2FnZQwYTnVtYmVyARAISWQBXQIkU2lnbmF0dXJlARUHAAwBKGNvbW1pdG1lbnQdBwFIQ29tbWl0bWVudDxOdW1iZXI+AAEIaWRdAgEISWQAASRzaWduYXR1cmUVBwEkU2lnbmF0dXJlAAAdBwxIc3BfY29uc2Vuc3VzX2JlZWZ5KGNvbW1pdG1lbnQoQ29tbWl0bWVudAQwVEJsb2NrTnVtYmVyARAADAEccGF5bG9hZCEHARxQYXlsb2FkAAEwYmxvY2tfbnVtYmVyEAEwVEJsb2NrTnVtYmVyAAFAdmFsaWRhdG9yX3NldF9pZDABOFZhbGlkYXRvclNldElkAAAhBwxIc3BfY29uc2Vuc3VzX2JlZWZ5HHBheWxvYWQcUGF5bG9hZAAABAAlBwF4VmVjPChCZWVmeVBheWxvYWRJZCwgVmVjPHU4Pik+AAAlBwAAAikHACkHAAAECC0HOAAtBwAAAwIAAAAIADEHCEhzcF9jb25zZW5zdXNfYmVlZnk8Rm9ya1ZvdGluZ1Byb29mDBhIZWFkZXIB1QEISWQBXQI0QW5jZXN0cnlQcm9vZgE1BwAMARB2b3RlGQcBuFZvdGVNZXNzYWdlPEhlYWRlcjo6TnVtYmVyLCBJZCwgSWQ6OlNpZ25hdHVyZT4AAThhbmNlc3RyeV9wcm9vZjUHATRBbmNlc3RyeVByb29mAAEYaGVhZGVy1QEBGEhlYWRlcgAANQcIRHNwX21tcl9wcmltaXRpdmVzNEFuY2VzdHJ5UHJvb2YEEEhhc2gBNAAQAShwcmV2X3BlYWtzyQEBJFZlYzxIYXNoPgABPHByZXZfbGVhZl9jb3VudDABDHU2NAABKGxlYWZfY291bnQwASROb2RlSW5kZXgAARRpdGVtczkHAUBWZWM8KHU2NCwgSGFzaCk+AAA5BwAAAj0HAD0HAAAECDA0AEEHCEhzcF9jb25zZW5zdXNfYmVlZnlYRnV0dXJlQmxvY2tWb3RpbmdQcm9vZggYTnVtYmVyARAISWQBXQIABAEQdm90ZRkHAZhWb3RlTWVzc2FnZTxOdW1iZXIsIElkLCBJZDo6U2lnbmF0dXJlPgAARQcQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uSHBhcmFzX3N1ZG9fd3JhcHBlchhwYWxsZXQQQ2FsbAQEVAABGHRzdWRvX3NjaGVkdWxlX3BhcmFfaW5pdGlhbGl6ZQgBCGlktQIBGFBhcmFJZAABHGdlbmVzaXNJBwE8UGFyYUdlbmVzaXNBcmdzAAAUDQFTY2hlZHVsZSBhIHBhcmEgdG8gYmUgaW5pdGlhbGl6ZWQgYXQgdGhlIHN0YXJ0IG9mIHRoZSBuZXh0IHNlc3Npb24uAE0BVGhpcyBzaG91bGQgb25seSBiZSB1c2VkIGZvciBURVNUSU5HIGFuZCBub3Qgb24gUFJPRFVDVElPTiBjaGFpbnMuIEl0IGF1dG9tYXRpY2FsbHlJAWFzc2lnbnMgQ29yZXRpbWUgdG8gdGhlIGNoYWluIGFuZCBpbmNyZWFzZXMgdGhlIG51bWJlciBvZiBjb3Jlcy4gVGh1cywgdGhlcmUgaXMgbm+AcnVubmluZyBjb3JldGltZSBjaGFpbiByZXF1aXJlZC5oc3Vkb19zY2hlZHVsZV9wYXJhX2NsZWFudXAEAQhpZLUCARhQYXJhSWQAAQQJAVNjaGVkdWxlIGEgcGFyYSB0byBiZSBjbGVhbmVkIHVwIGF0IHRoZSBzdGFydCBvZiB0aGUgbmV4dCBzZXNzaW9uLoBzdWRvX3NjaGVkdWxlX3BhcmF0aHJlYWRfdXBncmFkZQQBCGlktQIBGFBhcmFJZAACBB0BVXBncmFkZSBhIHBhcmF0aHJlYWQgKG9uLWRlbWFuZCBwYXJhY2hhaW4pIHRvIGEgbGVhc2UgaG9sZGluZyBwYXJhY2hhaW6Ec3Vkb19zY2hlZHVsZV9wYXJhY2hhaW5fZG93bmdyYWRlBAEIaWS1AgEYUGFyYUlkAAME9ERvd25ncmFkZSBhIGxlYXNlIGhvbGRpbmcgcGFyYWNoYWluIHRvIGFuIG9uLWRlbWFuZCBwYXJhY2hhaW5cc3Vkb19xdWV1ZV9kb3dud2FyZF94Y20IAQhpZLUCARhQYXJhSWQAAQx4Y22NBQF4Qm94PHhjbTo6b3BhcXVlOjpWZXJzaW9uZWRYY20+AAQQmFNlbmQgYSBkb3dud2FyZCBYQ00gdG8gdGhlIGdpdmVuIHBhcmEuAFEBVGhlIGdpdmVuIHBhcmFjaGFpbiBzaG91bGQgZXhpc3QgYW5kIHRoZSBwYXlsb2FkIHNob3VsZCBub3QgZXhjZWVkIHRoZSBwcmVjb25maWd1cmVkoHNpemUgYGNvbmZpZy5tYXhfZG93bndhcmRfbWVzc2FnZV9zaXplYC5sc3Vkb19lc3RhYmxpc2hfaHJtcF9jaGFubmVsEAEYc2VuZGVytQIBGFBhcmFJZAABJHJlY2lwaWVudLUCARhQYXJhSWQAATBtYXhfY2FwYWNpdHkQAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplEAEMdTMyAAUQAQFGb3JjZWZ1bGx5IGVzdGFibGlzaCBhIGNoYW5uZWwgZnJvbSB0aGUgc2VuZGVyIHRvIHRoZSByZWNpcGllbnQuAFUBVGhpcyBpcyBlcXVpdmFsZW50IHRvIHNlbmRpbmcgYW4gYEhybXA6OmhybXBfaW5pdF9vcGVuX2NoYW5uZWxgIGV4dHJpbnNpYyBmb2xsb3dlZCBieYRgSHJtcDo6aHJtcF9hY2NlcHRfb3Blbl9jaGFubmVsYC4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuSQcMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhczxQYXJhR2VuZXNpc0FyZ3MAAAwBMGdlbmVzaXNfaGVhZN0EASBIZWFkRGF0YQABPHZhbGlkYXRpb25fY29kZdkEAThWYWxpZGF0aW9uQ29kZQABJHBhcmFfa2luZCABIFBhcmFLaW5kAABNBwwscGFsbGV0X3N1ZG8YcGFsbGV0EENhbGwEBFQAARQQc3VkbwQBEGNhbGypAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgAABDUBQXV0aGVudGljYXRlcyB0aGUgc3VkbyBrZXkgYW5kIGRpc3BhdGNoZXMgYSBmdW5jdGlvbiBjYWxsIHdpdGggYFJvb3RgIG9yaWdpbi5Uc3Vkb191bmNoZWNrZWRfd2VpZ2h0CAEQY2FsbKkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAEYd2VpZ2h0KAEYV2VpZ2h0AAEUNQFBdXRoZW50aWNhdGVzIHRoZSBzdWRvIGtleSBhbmQgZGlzcGF0Y2hlcyBhIGZ1bmN0aW9uIGNhbGwgd2l0aCBgUm9vdGAgb3JpZ2luLi0BVGhpcyBmdW5jdGlvbiBkb2VzIG5vdCBjaGVjayB0aGUgd2VpZ2h0IG9mIHRoZSBjYWxsLCBhbmQgaW5zdGVhZCBhbGxvd3MgdGhlsFN1ZG8gdXNlciB0byBzcGVjaWZ5IHRoZSB3ZWlnaHQgb2YgdGhlIGNhbGwuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4cc2V0X2tleQQBDG5ld/kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgACCF0BQXV0aGVudGljYXRlcyB0aGUgY3VycmVudCBzdWRvIGtleSBhbmQgc2V0cyB0aGUgZ2l2ZW4gQWNjb3VudElkIChgbmV3YCkgYXMgdGhlIG5ldyBzdWRvEGtleS4cc3Vkb19hcwgBDHdob/kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABEGNhbGypAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgADEE0BQXV0aGVudGljYXRlcyB0aGUgc3VkbyBrZXkgYW5kIGRpc3BhdGNoZXMgYSBmdW5jdGlvbiBjYWxsIHdpdGggYFNpZ25lZGAgb3JpZ2luIGZyb21AYSBnaXZlbiBhY2NvdW50LgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uKHJlbW92ZV9rZXkABAyEUGVybWFuZW50bHkgcmVtb3ZlcyB0aGUgc3VkbyBrZXkuAGwqKlRoaXMgY2Fubm90IGJlIHVuLWRvbmUuKioEDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuUQcMSHBhbGxldF9yY19taWdyYXRvchhwYWxsZXQQQ2FsbAQEVAABNDxmb3JjZV9zZXRfc3RhZ2UEARRzdGFnZVUHAWBCb3g8TWlncmF0aW9uU3RhZ2VPZjxUPj4AABBgU2V0IHRoZSBtaWdyYXRpb24gc3RhZ2UuAAkBVGhpcyBjYWxsIGlzIGludGVuZGVkIGZvciBlbWVyZ2VuY3kgdXNlIG9ubHkgYW5kIGlzIGd1YXJkZWQgYnkgdGhlYFtgQ29uZmlnOjpBZG1pbk9yaWdpbmBdLkhzY2hlZHVsZV9taWdyYXRpb24QARRzdGFydL0CAXxEaXNwYXRjaFRpbWU8QmxvY2tOdW1iZXJGb3I8VD4+AAEcd2FybV91cL0CAXxEaXNwYXRjaFRpbWU8QmxvY2tOdW1iZXJGb3I8VD4+AAEgY29vbF9vZma9AgF8RGlzcGF0Y2hUaW1lPEJsb2NrTnVtYmVyRm9yPFQ+PgABgHVuc2FmZV9pZ25vcmVfc3Rha2luZ19sb2NrX2NoZWNrIAEQYm9vbAABVMhTY2hlZHVsZSB0aGUgbWlncmF0aW9uIHRvIHN0YXJ0IGF0IGEgZ2l2ZW4gbW9tZW50LgA8IyMjIFBhcmFtZXRlcnM6YQEtIGBzdGFydGA6IFRoZSBibG9jayBudW1iZXIgYXQgd2hpY2ggdGhlIG1pZ3JhdGlvbiB3aWxsIHN0YXJ0LiBgRGlzcGF0Y2hUaW1lYCBjYWxjdWxhdGVkrCAgYXQgdGhlIG1vbWVudCBvZiB0aGUgZXh0cmluc2ljIGV4ZWN1dGlvbi5hAS0gYHdhcm1fdXBgOiBEdXJhdGlvbiBvciB0aW1lcG9pbnQgdGhhdCB3aWxsIGJlIHVzZWQgdG8gcHJlcGFyZSBmb3IgdGhlIG1pZ3JhdGlvbi4gQ2FsbHNVASAgYXJlIGZpbHRlcmVkIGR1cmluZyB0aGlzIHBlcmlvZC4gSXQgaXMgaW50ZW5kZWQgdG8gZ2l2ZSBlbm91Z2ggdGltZSBmb3IgVU1QIGFuZCBETVBNASAgcXVldWVzIHRvIGVtcHR5LiBgRGlzcGF0Y2hUaW1lYCBjYWxjdWxhdGVkIGF0IHRoZSBtb21lbnQgb2YgdGhlIHRyYW5zaXRpb24gdG8gdGhlQCAgd2FybS11cCBzdGFnZS5hAS0gYGNvb2xfb2ZmYDogVGhlIGJsb2NrIG51bWJlciBhdCB3aGljaCB0aGUgcG9zdCBtaWdyYXRpb24gY29vbC1vZmYgcGVyaW9kIHdpbGwgZW5kLiBUaGVJASAgYERpc3BhdGNoVGltZWAgY2FsY3VsYXRlZCBhdCB0aGUgbW9tZW50IG9mIHRoZSB0cmFuc2l0aW9uIHRvIHRoZSBjb29sLW9mZiBzdGFnZS5RAS0gYHVuc2FmZV9pZ25vcmVfc3Rha2luZ19sb2NrX2NoZWNrYDogT05MWSBGT1IgVEVTVElORy4gSWdub3JlIHRoZSBjaGVjayB3aGV0aGVyIHRoZcwgIHNjaGVkdWxlZCB0aW1lIHBvaW50IGlzIGZhciBlbm91Z2ggaW4gdGhlIGZ1dHVyZS4AMQFOb3RlOiBJZiB0aGUgc3Rha2luZyBlbGVjdGlvbiBmb3IgbmV4dCBlcmEgaXMgYWxyZWFkeSBjb21wbGV0ZSwgYW5kIHRoZSBuZXh0PQF2YWxpZGF0b3Igc2V0IGlzIHF1ZXVlZCBpbiBgcGFsbGV0LXNlc3Npb25gLCB3ZSB3YW50IHRvIGF2b2lkIHN0YXJ0aW5nIHRoZSBkYXRhTQFtaWdyYXRpb24gYXQgdGhpcyBwb2ludCBhcyBpdCBjYW4gbGVhZCB0byBzb21lIG1pc3NlZCB2YWxpZGF0b3IgcmV3YXJkcy4gVG8gYWRkcmVzc0EBdGhpcywgd2Ugc3RvcCBzdGFraW5nIGVsZWN0aW9uIGF0IHRoZSBzdGFydCBvZiBtaWdyYXRpb24gYW5kIG11c3Qgd2FpdCBhdGxlYXN0IDH0c2Vzc2lvbiAoc2V0IHZpYSB3YXJtX3VwKSBiZWZvcmUgc3RhcnRpbmcgdGhlIGRhdGEgbWlncmF0aW9uLgAJAVJlYWQgW2BNaWdyYXRpb25TdGFnZTo6U2NoZWR1bGVkYF0gZG9jdW1lbnRhdGlvbiBmb3IgbW9yZSBkZXRhaWxzLlBzdGFydF9kYXRhX21pZ3JhdGlvbgACEGRTdGFydCB0aGUgZGF0YSBtaWdyYXRpb24uAE0BVGhpcyBpcyB0eXBpY2FsbHkgY2FsbGVkIGJ5IHRoZSBBc3NldCBIdWIgdG8gaW5kaWNhdGUgaXQncyByZWFkaW5lc3MgdG8gcmVjZWl2ZSB0aGU8bWlncmF0aW9uIGRhdGEuWHJlY2VpdmVfcXVlcnlfcmVzcG9uc2UIASBxdWVyeV9pZDABHFF1ZXJ5SWQAASByZXNwb25zZWUGASBSZXNwb25zZQADBDkBUmVjZWl2ZSBhIHF1ZXJ5IHJlc3BvbnNlIGZyb20gdGhlIEFzc2V0IEh1YiBmb3IgYSBwcmV2aW91c2x5IHNlbnQgeGNtIG1lc3NhZ2UuKHJlc2VuZF94Y20EASBxdWVyeV9pZDABDHU2NAAEBNRSZXNlbmQgYSBwcmV2aW91c2x5IHNlbnQgYW5kIHVuY29uZmlybWVkIFhDTSBtZXNzYWdlLmhzZXRfdW5wcm9jZXNzZWRfbXNnX2J1ZmZlcgQBDG5ld7gBLE9wdGlvbjx1MzI+AAUMoFNldCB0aGUgdW5wcm9jZXNzZWQgbWVzc2FnZSBidWZmZXIgc2l6ZS4AsGBOb25lYCBtZWFucyB0byB1c2UgdGhlIGNvbmZpZ3VyYXRpb24gdmFsdWUuZHNldF9haF91bXBfcXVldWVfcHJpb3JpdHkEAQxuZXf9BwGUQWhVbXBRdWV1ZVByaW9yaXR5PEJsb2NrTnVtYmVyRm9yPFQ+PgAGDLBTZXQgdGhlIEFIIFVNUCBxdWV1ZSBwcmlvcml0eSBjb25maWd1cmF0aW9uLgCgQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBgQWRtaW5PcmlnaW5gLixzZXRfbWFuYWdlcgQBDG5ldzECAVBPcHRpb248VDo6QWNjb3VudElkPgAHEGxTZXQgdGhlIG1hbmFnZXIgYWNjb3VudCBpZC4AQQFUaGUgbWFuYWdlciBoYXMgdGhlIHNpbWlsYXIgdG8gW2BDb25maWc6OkFkbWluT3JpZ2luYF0gcHJpdmlsZWdlcyBleGNlcHQgdGhhdCBpdOhjYW4gbm90IHNldCB0aGUgbWFuYWdlciBhY2NvdW50IGlkIHZpYSBgc2V0X21hbmFnZXJgIGNhbGwuQHNlbmRfeGNtX21lc3NhZ2UIARBkZXN0jQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARxtZXNzYWdljQUBVEJveDxWZXJzaW9uZWRYY208KCk+PgAIDDUBWENNIHNlbmQgY2FsbCBpZGVudGljYWwgdG8gdGhlIFtgcGFsbGV0X3hjbTo6UGFsbGV0OjpzZW5kYF0gY2FsbCBidXQgd2l0aCB0aGVRAVtDb25maWc6OlNlbmRYY21dIHJvdXRlciB3aGljaCB3aWxsIGJlIGFibGUgdG8gc2VuZCBtZXNzYWdlcyB0byB0aGUgQXNzZXQgSHViIGR1cmluZzh0aGUgbWlncmF0aW9uLkRwcmVzZXJ2ZV9hY2NvdW50cwQBIGFjY291bnRzBQIBRFZlYzxUOjpBY2NvdW50SWQ+AAkMFQFTZXQgdGhlIGFjY291bnRzIHRvIGJlIHByZXNlcnZlZCBvbiBSZWxheSBDaGFpbiBkdXJpbmcgdGhlIG1pZ3JhdGlvbi4AvFRoZSBhY2NvdW50cyBtdXN0IGhhdmUgbm8gY29uc3VtZXJzIHJlZmVyZW5jZXMuNHNldF9jYW5jZWxsZXIEAQxuZXcxAgFQT3B0aW9uPFQ6OkFjY291bnRJZD4ACgx0U2V0IHRoZSBjYW5jZWxsZXIgYWNjb3VudCBpZC4AwFRoZSBjYW5jZWxsZXIgY2FuIG9ubHkgc3RvcCBzY2hlZHVsZWQgbWlncmF0aW9uLjxwYXVzZV9taWdyYXRpb24ACwRQUGF1c2UgdGhlIG1pZ3JhdGlvbi5AY2FuY2VsX21pZ3JhdGlvbgAMDFRDYW5jZWwgdGhlIG1pZ3JhdGlvbi4AUQFNaWdyYXRpb24gY2FuIG9ubHkgYmUgY2FuY2VsbGVkIGlmIGl0IGlzIGluIHRoZSBbYE1pZ3JhdGlvblN0YWdlOjpTY2hlZHVsZWRgXSBzdGF0ZS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuVQcISHBhbGxldF9yY19taWdyYXRvcjhNaWdyYXRpb25TdGFnZRgkQWNjb3VudElkAQAsQmxvY2tOdW1iZXIBEDRCYWdzTGlzdFNjb3JlATAsVm90aW5nQ2xhc3MBnQEkQXNzZXRLaW5kAexQU2NoZWR1bGVyQmxvY2tOdW1iZXIBEAEtARxQZW5kaW5nAAAAPE1pZ3JhdGlvblBhdXNlZAABACRTY2hlZHVsZWQEARRzdGFydBABLEJsb2NrTnVtYmVyAAIAMFdhaXRpbmdGb3JBaAADABhXYXJtVXAEARhlbmRfYXQQASxCbG9ja051bWJlcgAEACBTdGFydGluZwAFAIBQdXJlUHJveHlDYW5kaWRhdGVzTWlncmF0aW9uSW5pdAAGAFRBY2NvdW50c01pZ3JhdGlvbkluaXQABwBgQWNjb3VudHNNaWdyYXRpb25PbmdvaW5nBAEgbGFzdF9rZXkxAgFET3B0aW9uPEFjY291bnRJZD4ACABUQWNjb3VudHNNaWdyYXRpb25Eb25lAAkAVE11bHRpc2lnTWlncmF0aW9uSW5pdAAKAGBNdWx0aXNpZ01pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tleVkHAXBPcHRpb248KEFjY291bnRJZCxbdTg7IDMyXSk+AAsAVE11bHRpc2lnTWlncmF0aW9uRG9uZQAMAExDbGFpbXNNaWdyYXRpb25Jbml0AA0AWENsYWltc01pZ3JhdGlvbk9uZ29pbmcEASxjdXJyZW50X2tleWEHAXhPcHRpb248Q2xhaW1zU3RhZ2U8QWNjb3VudElkPj4ADgBMQ2xhaW1zTWlncmF0aW9uRG9uZQAPAEhQcm94eU1pZ3JhdGlvbkluaXQAEABUUHJveHlNaWdyYXRpb25Qcm94aWVzBAEgbGFzdF9rZXkxAgFET3B0aW9uPEFjY291bnRJZD4AEQBsUHJveHlNaWdyYXRpb25Bbm5vdW5jZW1lbnRzBAEgbGFzdF9rZXkxAgFET3B0aW9uPEFjY291bnRJZD4AEgBIUHJveHlNaWdyYXRpb25Eb25lABMAVFByZWltYWdlTWlncmF0aW9uSW5pdAAUAHhQcmVpbWFnZU1pZ3JhdGlvbkNodW5rc09uZ29pbmcEASBsYXN0X2tleW0HAWhPcHRpb248KChIMjU2LCB1MzIpLCB1MzIpPgAVAGxQcmVpbWFnZU1pZ3JhdGlvbkNodW5rc0RvbmUAFgCUUHJlaW1hZ2VNaWdyYXRpb25SZXF1ZXN0U3RhdHVzT25nb2luZwQBIG5leHRfa2V5wQIBME9wdGlvbjxIMjU2PgAXAIhQcmVpbWFnZU1pZ3JhdGlvblJlcXVlc3RTdGF0dXNEb25lABgAoFByZWltYWdlTWlncmF0aW9uTGVnYWN5UmVxdWVzdFN0YXR1c0luaXQAGQCsUHJlaW1hZ2VNaWdyYXRpb25MZWdhY3lSZXF1ZXN0U3RhdHVzT25nb2luZwQBIG5leHRfa2V5wQIBME9wdGlvbjxIMjU2PgAaAKBQcmVpbWFnZU1pZ3JhdGlvbkxlZ2FjeVJlcXVlc3RTdGF0dXNEb25lABsAVFByZWltYWdlTWlncmF0aW9uRG9uZQAcAFROb21Qb29sc01pZ3JhdGlvbkluaXQAHQBgTm9tUG9vbHNNaWdyYXRpb25PbmdvaW5nBAEgbmV4dF9rZXl5BwGAT3B0aW9uPE5vbVBvb2xzU3RhZ2U8QWNjb3VudElkPj4AHgBUTm9tUG9vbHNNaWdyYXRpb25Eb25lAB8AUFZlc3RpbmdNaWdyYXRpb25Jbml0ACAAXFZlc3RpbmdNaWdyYXRpb25PbmdvaW5nBAEgbmV4dF9rZXkxAgFET3B0aW9uPEFjY291bnRJZD4AIQBQVmVzdGluZ01pZ3JhdGlvbkRvbmUAIgB0RGVsZWdhdGVkU3Rha2luZ01pZ3JhdGlvbkluaXQAIwCARGVsZWdhdGVkU3Rha2luZ01pZ3JhdGlvbk9uZ29pbmcEASBuZXh0X2tleYEHAaBPcHRpb248RGVsZWdhdGVkU3Rha2luZ1N0YWdlPEFjY291bnRJZD4+ACQAdERlbGVnYXRlZFN0YWtpbmdNaWdyYXRpb25Eb25lACUAUEluZGljZXNNaWdyYXRpb25Jbml0ACYAXEluZGljZXNNaWdyYXRpb25PbmdvaW5nBAEgbmV4dF9rZXmJBwEoT3B0aW9uPCgpPgAnAFBJbmRpY2VzTWlncmF0aW9uRG9uZQAoAFhSZWZlcmVuZGFNaWdyYXRpb25Jbml0ACkAZFJlZmVyZW5kYU1pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tleY0HAVhPcHRpb248UmVmZXJlbmRhU3RhZ2U+ACoAWFJlZmVyZW5kYU1pZ3JhdGlvbkRvbmUAKwBUQmFnc0xpc3RNaWdyYXRpb25Jbml0ACwAYEJhZ3NMaXN0TWlncmF0aW9uT25nb2luZwQBIG5leHRfa2V5lQcBvE9wdGlvbjxCYWdzTGlzdFN0YWdlPEFjY291bnRJZCwgQmFnc0xpc3RTY29yZT4+AC0AVEJhZ3NMaXN0TWlncmF0aW9uRG9uZQAuAFhTY2hlZHVsZXJNaWdyYXRpb25Jbml0AC8AZFNjaGVkdWxlck1pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tleZ0HAdxPcHRpb248c2NoZWR1bGVyOjpTY2hlZHVsZXJTdGFnZTxTY2hlZHVsZXJCbG9ja051bWJlcj4+ADAAfFNjaGVkdWxlckFnZW5kYU1pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tlebgBcE9wdGlvbjxTY2hlZHVsZXJCbG9ja051bWJlcj4AMQBYU2NoZWR1bGVyTWlncmF0aW9uRG9uZQAyAHRDb252aWN0aW9uVm90aW5nTWlncmF0aW9uSW5pdAAzAIBDb252aWN0aW9uVm90aW5nTWlncmF0aW9uT25nb2luZwQBIGxhc3Rfa2V5pQcBJQFPcHRpb248Y29udmljdGlvbl92b3Rpbmc6OkNvbnZpY3Rpb25Wb3RpbmdTdGFnZTxBY2NvdW50SWQsIFZvdGluZ0NsYXNzPgo+ADQAdENvbnZpY3Rpb25Wb3RpbmdNaWdyYXRpb25Eb25lADUAVEJvdW50aWVzTWlncmF0aW9uSW5pdAA2AGBCb3VudGllc01pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tlebUHAXxPcHRpb248Ym91bnRpZXM6OkJvdW50aWVzU3RhZ2U+ADcAVEJvdW50aWVzTWlncmF0aW9uRG9uZQA4AGhDaGlsZEJvdW50aWVzTWlncmF0aW9uSW5pdAA5AHRDaGlsZEJvdW50aWVzTWlncmF0aW9uT25nb2luZwQBIGxhc3Rfa2V5vQcBqE9wdGlvbjxjaGlsZF9ib3VudGllczo6Q2hpbGRCb3VudGllc1N0YWdlPgA6AGhDaGlsZEJvdW50aWVzTWlncmF0aW9uRG9uZQA7AFhBc3NldFJhdGVNaWdyYXRpb25Jbml0ADwAZEFzc2V0UmF0ZU1pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tlecUHAURPcHRpb248QXNzZXRLaW5kPgA9AFhBc3NldFJhdGVNaWdyYXRpb25Eb25lAD4AWENyb3dkbG9hbk1pZ3JhdGlvbkluaXQAPwBkQ3Jvd2Rsb2FuTWlncmF0aW9uT25nb2luZwQBIGxhc3Rfa2V5yQcBhE9wdGlvbjxjcm93ZGxvYW46OkNyb3dkbG9hblN0YWdlPgBAAFhDcm93ZGxvYW5NaWdyYXRpb25Eb25lAEEAVFRyZWFzdXJ5TWlncmF0aW9uSW5pdABCAGBUcmVhc3VyeU1pZ3JhdGlvbk9uZ29pbmcEASBsYXN0X2tledUHAXxPcHRpb248dHJlYXN1cnk6OlRyZWFzdXJ5U3RhZ2U+AEMAVFRyZWFzdXJ5TWlncmF0aW9uRG9uZQBEAFBTdGFraW5nTWlncmF0aW9uSW5pdABFAFxTdGFraW5nTWlncmF0aW9uT25nb2luZwQBIG5leHRfa2V53QcBoE9wdGlvbjxzdGFraW5nOjpTdGFraW5nU3RhZ2U8QWNjb3VudElkPj4ARgBQU3Rha2luZ01pZ3JhdGlvbkRvbmUARwAcQ29vbE9mZgQBGGVuZF9hdBABLEJsb2NrTnVtYmVyAEgAVFNpZ25hbE1pZ3JhdGlvbkZpbmlzaABJADRNaWdyYXRpb25Eb25lAEoAAFkHBBhPcHRpb24EBFQBXQcBCBBOb25lAAAAEFNvbWUEAF0HAAABAABdBwAABAgABABhBwQYT3B0aW9uBARUAWUHAQgQTm9uZQAAABBTb21lBABlBwAAAQAAZQcMSHBhbGxldF9yY19taWdyYXRvchhjbGFpbXMsQ2xhaW1zU3RhZ2UEJEFjY291bnRJZAEAARg0U3RvcmFnZVZhbHVlcwAAABhDbGFpbXMEAGkHAVxPcHRpb248RXRoZXJldW1BZGRyZXNzPgABABxWZXN0aW5nBABpBwFcT3B0aW9uPEV0aGVyZXVtQWRkcmVzcz4AAgAcU2lnbmluZwQAaQcBXE9wdGlvbjxFdGhlcmV1bUFkZHJlc3M+AAMAJFByZWNsYWltcwQAMQIBRE9wdGlvbjxBY2NvdW50SWQ+AAQAIEZpbmlzaGVkAAUAAGkHBBhPcHRpb24EBFQB1QIBCBBOb25lAAAAEFNvbWUEANUCAAABAABtBwQYT3B0aW9uBARUAXEHAQgQTm9uZQAAABBTb21lBABxBwAAAQAAcQcAAAQIdQcQAHUHAAAECDQQAHkHBBhPcHRpb24EBFQBfQcBCBBOb25lAAAAEFNvbWUEAH0HAAABAAB9BxBIcGFsbGV0X3JjX21pZ3JhdG9yHHN0YWtpbmckbm9tX3Bvb2xzNE5vbVBvb2xzU3RhZ2UEJEFjY291bnRJZAEAASQ0U3RvcmFnZVZhbHVlcwAAACxQb29sTWVtYmVycwQAMQIBRE9wdGlvbjxBY2NvdW50SWQ+AAEALEJvbmRlZFBvb2xzBAC4AThPcHRpb248UG9vbElkPgACACxSZXdhcmRQb29scwQAuAE4T3B0aW9uPFBvb2xJZD4AAwA8U3ViUG9vbHNTdG9yYWdlBAC4AThPcHRpb248UG9vbElkPgAEACBNZXRhZGF0YQQAuAE4T3B0aW9uPFBvb2xJZD4ABQBMUmV2ZXJzZVBvb2xJZExvb2t1cAQAMQIBRE9wdGlvbjxBY2NvdW50SWQ+AAYAQENsYWltUGVybWlzc2lvbnMEADECAURPcHRpb248QWNjb3VudElkPgAHACBGaW5pc2hlZAAIAACBBwQYT3B0aW9uBARUAYUHAQgQTm9uZQAAABBTb21lBACFBwAAAQAAhQcQSHBhbGxldF9yY19taWdyYXRvchxzdGFraW5nRGRlbGVnYXRlZF9zdGFraW5nVERlbGVnYXRlZFN0YWtpbmdTdGFnZQQkQWNjb3VudElkAQABDChEZWxlZ2F0b3JzBAAxAgFET3B0aW9uPEFjY291bnRJZD4AAAAYQWdlbnRzBAAxAgFET3B0aW9uPEFjY291bnRJZD4AAQAgRmluaXNoZWQAAgAAiQcEGE9wdGlvbgQEVAGQAQgQTm9uZQAAABBTb21lBACQAAABAACNBwQYT3B0aW9uBARUAZEHAQgQTm9uZQAAABBTb21lBACRBwAAAQAAkQcMSHBhbGxldF9yY19taWdyYXRvciRyZWZlcmVuZGE4UmVmZXJlbmRhU3RhZ2UAAQw0U3RvcmFnZVZhbHVlcwAAACBNZXRhZGF0YQQAuAEsT3B0aW9uPHUzMj4AAQA4UmVmZXJlbmR1bUluZm8EALgBLE9wdGlvbjx1MzI+AAIAAJUHBBhPcHRpb24EBFQBmQcBCBBOb25lAAAAEFNvbWUEAJkHAAABAACZBxBIcGFsbGV0X3JjX21pZ3JhdG9yHHN0YWtpbmckYmFnc19saXN0NEJhZ3NMaXN0U3RhZ2UIJEFjY291bnRJZAEAFFNjb3JlATABDCRMaXN0Tm9kZXMEADECAURPcHRpb248QWNjb3VudElkPgAAACBMaXN0QmFncwQA9QYBNE9wdGlvbjxTY29yZT4AAQAgRmluaXNoZWQAAgAAnQcEGE9wdGlvbgQEVAGhBwEIEE5vbmUAAAAQU29tZQQAoQcAAAEAAKEHDEhwYWxsZXRfcmNfbWlncmF0b3Ikc2NoZWR1bGVyOFNjaGVkdWxlclN0YWdlBCxCbG9ja051bWJlcgEQARA8SW5jb21wbGV0ZVNpbmNlAAAAHFJldHJpZXMEAMEBAYBPcHRpb248VGFza0FkZHJlc3M8QmxvY2tOdW1iZXI+PgABABhMb29rdXAEAIgBQE9wdGlvbjxUYXNrTmFtZT4AAgAgRmluaXNoZWQAAwAApQcEGE9wdGlvbgQEVAGpBwEIEE5vbmUAAAAQU29tZQQAqQcAAAEAAKkHDEhwYWxsZXRfcmNfbWlncmF0b3JEY29udmljdGlvbl92b3RpbmdUQ29udmljdGlvblZvdGluZ1N0YWdlCCRBY2NvdW50SWQBABRDbGFzcwGdAQEMJFZvdGluZ0ZvcgQArQcBaE9wdGlvbjwoQWNjb3VudElkLCBDbGFzcyk+AAAANENsYXNzTG9ja3NGb3IEADECAURPcHRpb248QWNjb3VudElkPgABACBGaW5pc2hlZAACAACtBwQYT3B0aW9uBARUAbEHAQgQTm9uZQAAABBTb21lBACxBwAAAQAAsQcAAAQIAJ0BALUHBBhPcHRpb24EBFQBuQcBCBBOb25lAAAAEFNvbWUEALkHAAABAAC5BwxIcGFsbGV0X3JjX21pZ3JhdG9yIGJvdW50aWVzNEJvdW50aWVzU3RhZ2UAARQsQm91bnR5Q291bnQAAAA8Qm91bnR5QXBwcm92YWxzAAEASEJvdW50eURlc2NyaXB0aW9ucwQBIGxhc3Rfa2V5uAFMT3B0aW9uPEJvdW50eUluZGV4PgACACBCb3VudGllcwQBIGxhc3Rfa2V5uAFMT3B0aW9uPEJvdW50eUluZGV4PgADACBGaW5pc2hlZAAEAAC9BwQYT3B0aW9uBARUAcEHAQgQTm9uZQAAABBTb21lBADBBwAAAQAAwQcMSHBhbGxldF9yY19taWdyYXRvcjhjaGlsZF9ib3VudGllc0hDaGlsZEJvdW50aWVzU3RhZ2UAASBAQ2hpbGRCb3VudHlDb3VudAAAAExQYXJlbnRDaGlsZEJvdW50aWVzBAEkcGFyZW50X2lkuAFMT3B0aW9uPEJvdW50eUluZGV4PgABAGBQYXJlbnRUb3RhbENoaWxkQm91bnRpZXMEASRwYXJlbnRfaWS4AUxPcHRpb248Qm91bnR5SW5kZXg+AAIANENoaWxkQm91bnRpZXMEAQxpZHPBAQGIT3B0aW9uPChCb3VudHlJbmRleCwgQm91bnR5SW5kZXgpPgADAGRDaGlsZEJvdW50eURlc2NyaXB0aW9uc1YxBAEMaWRzwQEBiE9wdGlvbjwoQm91bnR5SW5kZXgsIEJvdW50eUluZGV4KT4ABABQVjBUb1YxQ2hpbGRCb3VudHlJZHMEASBjaGlsZF9pZLgBTE9wdGlvbjxCb3VudHlJbmRleD4ABQBMQ2hpbGRyZW5DdXJhdG9yRmVlcwQBIGNoaWxkX2lkuAFMT3B0aW9uPEJvdW50eUluZGV4PgAGACBGaW5pc2hlZAAHAADFBwQYT3B0aW9uBARUAewBCBBOb25lAAAAEFNvbWUEAOwAAAEAAMkHBBhPcHRpb24EBFQBzQcBCBBOb25lAAAAEFNvbWUEAM0HAAABAADNBwxIcGFsbGV0X3JjX21pZ3JhdG9yJGNyb3dkbG9hbjhDcm93ZGxvYW5TdGFnZQABFBRTZXR1cAAAADBMZWFzZVJlc2VydmUEASBsYXN0X2tledEHAThPcHRpb248UGFyYUlkPgABAFRDcm93ZGxvYW5Db250cmlidXRpb24EASBsYXN0X2tledEHAThPcHRpb248UGFyYUlkPgACAEBDcm93ZGxvYW5SZXNlcnZlAAMAIEZpbmlzaGVkAAQAANEHBBhPcHRpb24EBFQBtQIBCBBOb25lAAAAEFNvbWUEALUCAAABAADVBwQYT3B0aW9uBARUAdkHAQgQTm9uZQAAABBTb21lBADZBwAAAQAA2QcMSHBhbGxldF9yY19taWdyYXRvciB0cmVhc3VyeTRUcmVhc3VyeVN0YWdlAAEgNFByb3Bvc2FsQ291bnQAAAAkUHJvcG9zYWxzBAC4AVRPcHRpb248UHJvcG9zYWxJbmRleD4AAQAkQXBwcm92YWxzAAIAKFNwZW5kQ291bnQAAwAYU3BlbmRzBAC4AUhPcHRpb248U3BlbmRJbmRleD4ABAA8TGFzdFNwZW5kUGVyaW9kAAUAFEZ1bmRzAAYAIEZpbmlzaGVkAAcAAN0HBBhPcHRpb24EBFQB4QcBCBBOb25lAAAAEFNvbWUEAOEHAAABAADhBxBIcGFsbGV0X3JjX21pZ3JhdG9yHHN0YWtpbmcwc3Rha2luZ19pbXBsMFN0YWtpbmdTdGFnZQQkQWNjb3VudElkAQABWBhWYWx1ZXMAAAA0SW52dWxuZXJhYmxlcwABABhCb25kZWQEADECAURPcHRpb248QWNjb3VudElkPgACABhMZWRnZXIEADECAURPcHRpb248QWNjb3VudElkPgADABRQYXllZQQAMQIBRE9wdGlvbjxBY2NvdW50SWQ+AAQAKFZhbGlkYXRvcnMEADECAURPcHRpb248QWNjb3VudElkPgAFAChOb21pbmF0b3JzBAAxAgFET3B0aW9uPEFjY291bnRJZD4ABgA4VmlydHVhbFN0YWtlcnMEADECAURPcHRpb248QWNjb3VudElkPgAHAExFcmFzU3Rha2Vyc092ZXJ2aWV3BADlBwF0T3B0aW9uPChFcmFJbmRleCwgQWNjb3VudElkKT4ACABARXJhc1N0YWtlcnNQYWdlZAQA7QcBjE9wdGlvbjwoRXJhSW5kZXgsIEFjY291bnRJZCwgUGFnZSk+AAkAOENsYWltZWRSZXdhcmRzBADlBwF0T3B0aW9uPChFcmFJbmRleCwgQWNjb3VudElkKT4ACgBIRXJhc1ZhbGlkYXRvclByZWZzBADlBwF0T3B0aW9uPChFcmFJbmRleCwgQWNjb3VudElkKT4ACwBMRXJhc1ZhbGlkYXRvclJld2FyZAQAuAFAT3B0aW9uPEVyYUluZGV4PgAMAEBFcmFzUmV3YXJkUG9pbnRzBAC4AUBPcHRpb248RXJhSW5kZXg+AA0AOEVyYXNUb3RhbFN0YWtlBAC4AUBPcHRpb248RXJhSW5kZXg+AA4AQFVuYXBwbGllZFNsYXNoZXMEALgBQE9wdGlvbjxFcmFJbmRleD4ADwAoQm9uZGVkRXJhcwAQAExWYWxpZGF0b3JTbGFzaEluRXJhBADlBwF0T3B0aW9uPChFcmFJbmRleCwgQWNjb3VudElkKT4AEQBMTm9taW5hdG9yU2xhc2hJbkVyYQQA5QcBdE9wdGlvbjwoRXJhSW5kZXgsIEFjY291bnRJZCk+ABIANFNsYXNoaW5nU3BhbnMEADECAURPcHRpb248QWNjb3VudElkPgATACRTcGFuU2xhc2gEAPUHAXhPcHRpb248KEFjY291bnRJZCwgU3BhbkluZGV4KT4AFAAgRmluaXNoZWQAFQAA5QcEGE9wdGlvbgQEVAHpBwEIEE5vbmUAAAAQU29tZQQA6QcAAAEAAOkHAAAECBAAAO0HBBhPcHRpb24EBFQB8QcBCBBOb25lAAAAEFNvbWUEAPEHAAABAADxBwAABAwQABAA9QcEGE9wdGlvbgQEVAH5BwEIEE5vbmUAAAAQU29tZQQA+QcAAAEAAPkHAAAECAAQAP0HDEhwYWxsZXRfcmNfbWlncmF0b3IUdHlwZXM0UXVldWVQcmlvcml0eQQsQmxvY2tOdW1iZXIBEAEMGENvbmZpZwAAADhPdmVycmlkZUNvbmZpZwgAEAEsQmxvY2tOdW1iZXIAABABLEJsb2NrTnVtYmVyAAEAIERpc2FibGVkAAIAAAEIDChzcF9ydW50aW1lGHRyYWl0cyxCbGFrZVR3bzI1NgAAAAAFCAxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA4ARhWZWM8VD4AAAkIDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcUdHlwZXMUVGFsbHkIFFZvdGVzARgUVG90YWwAAAwBEGF5ZXMYARRWb3RlcwABEG5heXMYARRWb3RlcwABHHN1cHBvcnQYARRWb3RlcwAADQgMQHBhbGxldF93aGl0ZWxpc3QYcGFsbGV0FEV2ZW50BARUAAEMPENhbGxXaGl0ZWxpc3RlZAQBJGNhbGxfaGFzaDQBHFQ6Okhhc2gAAABYV2hpdGVsaXN0ZWRDYWxsUmVtb3ZlZAQBJGNhbGxfaGFzaDQBHFQ6Okhhc2gAAQBkV2hpdGVsaXN0ZWRDYWxsRGlzcGF0Y2hlZAgBJGNhbGxfaGFzaDQBHFQ6Okhhc2gAARhyZXN1bHQRCAFoRGlzcGF0Y2hSZXN1bHRXaXRoUG9zdEluZm8AAgAEfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQRCAQYUmVzdWx0CARUARUIBEUBGQgBCAhPawQAFQgAAAAADEVycgQAGQgAAAEAABUIDDRmcmFtZV9zdXBwb3J0IGRpc3BhdGNoQFBvc3REaXNwYXRjaEluZm8AAAgBNGFjdHVhbF93ZWlnaHSJBgE4T3B0aW9uPFdlaWdodD4AASBwYXlzX2ZlZWQBEFBheXMAABkICChzcF9ydW50aW1lZERpc3BhdGNoRXJyb3JXaXRoUG9zdEluZm8EEEluZm8BFQgACAEkcG9zdF9pbmZvFQgBEEluZm8AARRlcnJvcmgBNERpc3BhdGNoRXJyb3IAAB0IEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhhjbGFpbXMYcGFsbGV0FEV2ZW50BARUAAEEHENsYWltZWQMAQx3aG8AATBUOjpBY2NvdW50SWQAAUBldGhlcmV1bV9hZGRyZXNz1QIBPEV0aGVyZXVtQWRkcmVzcwABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgAABGhTb21lb25lIGNsYWltZWQgc29tZSBET1RzLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldCEIDDhwYWxsZXRfdmVzdGluZxhwYWxsZXQURXZlbnQEBFQAAQw4VmVzdGluZ0NyZWF0ZWQIARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAE4c2NoZWR1bGVfaW5kZXgQAQx1MzIAAASQQSB2ZXN0aW5nIHNjaGVkdWxlIGhhcyBiZWVuIGNyZWF0ZWQuOFZlc3RpbmdVcGRhdGVkCAEcYWNjb3VudAABMFQ6OkFjY291bnRJZAABIHVudmVzdGVkGAEwQmFsYW5jZU9mPFQ+AAEIUQFUaGUgYW1vdW50IHZlc3RlZCBoYXMgYmVlbiB1cGRhdGVkLiBUaGlzIGNvdWxkIGluZGljYXRlIGEgY2hhbmdlIGluIGZ1bmRzIGF2YWlsYWJsZS4lAVRoZSBiYWxhbmNlIGdpdmVuIGlzIHRoZSBhbW91bnQgd2hpY2ggaXMgbGVmdCB1bnZlc3RlZCAoYW5kIHRodXMgbG9ja2VkKS5AVmVzdGluZ0NvbXBsZXRlZAQBHGFjY291bnQAATBUOjpBY2NvdW50SWQAAgScQW4gXFthY2NvdW50XF0gaGFzIGJlY29tZSBmdWxseSB2ZXN0ZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0JQgMOHBhbGxldF91dGlsaXR5GHBhbGxldBRFdmVudAABIEBCYXRjaEludGVycnVwdGVkCAEUaW5kZXgQAQx1MzIAARRlcnJvcmgBNERpc3BhdGNoRXJyb3IAAAhVAUJhdGNoIG9mIGRpc3BhdGNoZXMgZGlkIG5vdCBjb21wbGV0ZSBmdWxseS4gSW5kZXggb2YgZmlyc3QgZmFpbGluZyBkaXNwYXRjaCBnaXZlbiwgYXNId2VsbCBhcyB0aGUgZXJyb3IuOEJhdGNoQ29tcGxldGVkAAEEyEJhdGNoIG9mIGRpc3BhdGNoZXMgY29tcGxldGVkIGZ1bGx5IHdpdGggbm8gZXJyb3IuYEJhdGNoQ29tcGxldGVkV2l0aEVycm9ycwACBLRCYXRjaCBvZiBkaXNwYXRjaGVzIGNvbXBsZXRlZCBidXQgaGFzIGVycm9ycy40SXRlbUNvbXBsZXRlZAADBB0BQSBzaW5nbGUgaXRlbSB3aXRoaW4gYSBCYXRjaCBvZiBkaXNwYXRjaGVzIGhhcyBjb21wbGV0ZWQgd2l0aCBubyBlcnJvci4oSXRlbUZhaWxlZAQBFGVycm9yaAE0RGlzcGF0Y2hFcnJvcgAEBBEBQSBzaW5nbGUgaXRlbSB3aXRoaW4gYSBCYXRjaCBvZiBkaXNwYXRjaGVzIGhhcyBjb21wbGV0ZWQgd2l0aCBlcnJvci4wRGlzcGF0Y2hlZEFzBAEYcmVzdWx0jAE4RGlzcGF0Y2hSZXN1bHQABQRYQSBjYWxsIHdhcyBkaXNwYXRjaGVkLkRJZkVsc2VNYWluU3VjY2VzcwAGBGRNYWluIGNhbGwgd2FzIGRpc3BhdGNoZWQuUElmRWxzZUZhbGxiYWNrQ2FsbGVkBAEobWFpbl9lcnJvcmgBNERpc3BhdGNoRXJyb3IABwSEVGhlIGZhbGxiYWNrIGNhbGwgd2FzIGRpc3BhdGNoZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0KQgMMHBhbGxldF9wcm94eRhwYWxsZXQURXZlbnQEBFQAARw0UHJveHlFeGVjdXRlZAQBGHJlc3VsdIwBOERpc3BhdGNoUmVzdWx0AAAEvEEgcHJveHkgd2FzIGV4ZWN1dGVkIGNvcnJlY3RseSwgd2l0aCB0aGUgZ2l2ZW4uLFB1cmVDcmVhdGVkEAEQcHVyZQABMFQ6OkFjY291bnRJZAABDHdobwABMFQ6OkFjY291bnRJZAABKHByb3h5X3R5cGUBAwEwVDo6UHJveHlUeXBlAAFQZGlzYW1iaWd1YXRpb25faW5kZXidAQEMdTE2AAEI3EEgcHVyZSBhY2NvdW50IGhhcyBiZWVuIGNyZWF0ZWQgYnkgbmV3IHByb3h5IHdpdGggZ2l2ZW6QZGlzYW1iaWd1YXRpb24gaW5kZXggYW5kIHByb3h5IHR5cGUuKFB1cmVLaWxsZWQQARBwdXJlAAEwVDo6QWNjb3VudElkAAEcc3Bhd25lcgABMFQ6OkFjY291bnRJZAABKHByb3h5X3R5cGUBAwEwVDo6UHJveHlUeXBlAAFQZGlzYW1iaWd1YXRpb25faW5kZXidAQEMdTE2AAIEnEEgcHVyZSBwcm94eSB3YXMga2lsbGVkIGJ5IGl0cyBzcGF3bmVyLiRBbm5vdW5jZWQMARByZWFsAAEwVDo6QWNjb3VudElkAAEUcHJveHkAATBUOjpBY2NvdW50SWQAASRjYWxsX2hhc2g0ATRDYWxsSGFzaE9mPFQ+AAME4EFuIGFubm91bmNlbWVudCB3YXMgcGxhY2VkIHRvIG1ha2UgYSBjYWxsIGluIHRoZSBmdXR1cmUuKFByb3h5QWRkZWQQASRkZWxlZ2F0b3IAATBUOjpBY2NvdW50SWQAASRkZWxlZ2F0ZWUAATBUOjpBY2NvdW50SWQAAShwcm94eV90eXBlAQMBMFQ6OlByb3h5VHlwZQABFGRlbGF5EAFEQmxvY2tOdW1iZXJGb3I8VD4ABARIQSBwcm94eSB3YXMgYWRkZWQuMFByb3h5UmVtb3ZlZBABJGRlbGVnYXRvcgABMFQ6OkFjY291bnRJZAABJGRlbGVnYXRlZQABMFQ6OkFjY291bnRJZAABKHByb3h5X3R5cGUBAwEwVDo6UHJveHlUeXBlAAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgAFBFBBIHByb3h5IHdhcyByZW1vdmVkLjBEZXBvc2l0UG9rZWQQAQx3aG8AATBUOjpBY2NvdW50SWQAARBraW5kLQgBLERlcG9zaXRLaW5kAAEsb2xkX2RlcG9zaXQYATBCYWxhbmNlT2Y8VD4AASxuZXdfZGVwb3NpdBgBMEJhbGFuY2VPZjxUPgAGBAkBQSBkZXBvc2l0IHN0b3JlZCBmb3IgcHJveGllcyBvciBhbm5vdW5jZW1lbnRzIHdhcyBwb2tlZCAvIHVwZGF0ZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0LQgIMHBhbGxldF9wcm94eSxEZXBvc2l0S2luZAABCBxQcm94aWVzAAAANEFubm91bmNlbWVudHMAAQAAMQgMPHBhbGxldF9tdWx0aXNpZxhwYWxsZXQURXZlbnQEBFQAARQsTmV3TXVsdGlzaWcMASRhcHByb3ZpbmcAATBUOjpBY2NvdW50SWQAASBtdWx0aXNpZwABMFQ6OkFjY291bnRJZAABJGNhbGxfaGFzaAQBIENhbGxIYXNoAAAEjEEgbmV3IG11bHRpc2lnIG9wZXJhdGlvbiBoYXMgYmVndW4uQE11bHRpc2lnQXBwcm92YWwQASRhcHByb3ZpbmcAATBUOjpBY2NvdW50SWQAASR0aW1lcG9pbnQNAwFwVGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+PgABIG11bHRpc2lnAAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoBAEgQ2FsbEhhc2gAAQTIQSBtdWx0aXNpZyBvcGVyYXRpb24gaGFzIGJlZW4gYXBwcm92ZWQgYnkgc29tZW9uZS5ATXVsdGlzaWdFeGVjdXRlZBQBJGFwcHJvdmluZwABMFQ6OkFjY291bnRJZAABJHRpbWVwb2ludA0DAXBUaW1lcG9pbnQ8QmxvY2tOdW1iZXJGb3I8VD4+AAEgbXVsdGlzaWcAATBUOjpBY2NvdW50SWQAASRjYWxsX2hhc2gEASBDYWxsSGFzaAABGHJlc3VsdIwBOERpc3BhdGNoUmVzdWx0AAIEnEEgbXVsdGlzaWcgb3BlcmF0aW9uIGhhcyBiZWVuIGV4ZWN1dGVkLkRNdWx0aXNpZ0NhbmNlbGxlZBABKGNhbmNlbGxpbmcAATBUOjpBY2NvdW50SWQAASR0aW1lcG9pbnQNAwFwVGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+PgABIG11bHRpc2lnAAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoBAEgQ2FsbEhhc2gAAwSgQSBtdWx0aXNpZyBvcGVyYXRpb24gaGFzIGJlZW4gY2FuY2VsbGVkLjBEZXBvc2l0UG9rZWQQAQx3aG8AATBUOjpBY2NvdW50SWQAASRjYWxsX2hhc2gEASBDYWxsSGFzaAABLG9sZF9kZXBvc2l0GAEwQmFsYW5jZU9mPFQ+AAEsbmV3X2RlcG9zaXQYATBCYWxhbmNlT2Y8VD4ABATwVGhlIGRlcG9zaXQgZm9yIGEgbXVsdGlzaWcgb3BlcmF0aW9uIGhhcyBiZWVuIHVwZGF0ZWQvcG9rZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0NQgMPHBhbGxldF9ib3VudGllcxhwYWxsZXQURXZlbnQIBFQABEkAATA4Qm91bnR5UHJvcG9zZWQEARRpbmRleBABLEJvdW50eUluZGV4AAAEUE5ldyBib3VudHkgcHJvcG9zYWwuOEJvdW50eVJlamVjdGVkCAEUaW5kZXgQASxCb3VudHlJbmRleAABEGJvbmQYATxCYWxhbmNlT2Y8VCwgST4AAQTMQSBib3VudHkgcHJvcG9zYWwgd2FzIHJlamVjdGVkOyBmdW5kcyB3ZXJlIHNsYXNoZWQuSEJvdW50eUJlY2FtZUFjdGl2ZQQBFGluZGV4EAEsQm91bnR5SW5kZXgAAgS4QSBib3VudHkgcHJvcG9zYWwgaXMgZnVuZGVkIGFuZCBiZWNhbWUgYWN0aXZlLjRCb3VudHlBd2FyZGVkCAEUaW5kZXgQASxCb3VudHlJbmRleAABLGJlbmVmaWNpYXJ5AAEwVDo6QWNjb3VudElkAAMElEEgYm91bnR5IGlzIGF3YXJkZWQgdG8gYSBiZW5lZmljaWFyeS40Qm91bnR5Q2xhaW1lZAwBFGluZGV4EAEsQm91bnR5SW5kZXgAARhwYXlvdXQYATxCYWxhbmNlT2Y8VCwgST4AASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAAEBIxBIGJvdW50eSBpcyBjbGFpbWVkIGJ5IGJlbmVmaWNpYXJ5LjhCb3VudHlDYW5jZWxlZAQBFGluZGV4EAEsQm91bnR5SW5kZXgABQRYQSBib3VudHkgaXMgY2FuY2VsbGVkLjhCb3VudHlFeHRlbmRlZAQBFGluZGV4EAEsQm91bnR5SW5kZXgABgRwQSBib3VudHkgZXhwaXJ5IGlzIGV4dGVuZGVkLjhCb3VudHlBcHByb3ZlZAQBFGluZGV4EAEsQm91bnR5SW5kZXgABwRUQSBib3VudHkgaXMgYXBwcm92ZWQuPEN1cmF0b3JQcm9wb3NlZAgBJGJvdW50eV9pZBABLEJvdW50eUluZGV4AAEcY3VyYXRvcgABMFQ6OkFjY291bnRJZAAIBHRBIGJvdW50eSBjdXJhdG9yIGlzIHByb3Bvc2VkLkRDdXJhdG9yVW5hc3NpZ25lZAQBJGJvdW50eV9pZBABLEJvdW50eUluZGV4AAkEfEEgYm91bnR5IGN1cmF0b3IgaXMgdW5hc3NpZ25lZC48Q3VyYXRvckFjY2VwdGVkCAEkYm91bnR5X2lkEAEsQm91bnR5SW5kZXgAARxjdXJhdG9yAAEwVDo6QWNjb3VudElkAAoEdEEgYm91bnR5IGN1cmF0b3IgaXMgYWNjZXB0ZWQuMERlcG9zaXRQb2tlZBABJGJvdW50eV9pZBABLEJvdW50eUluZGV4AAEgcHJvcG9zZXIAATBUOjpBY2NvdW50SWQAASxvbGRfZGVwb3NpdBgBPEJhbGFuY2VPZjxULCBJPgABLG5ld19kZXBvc2l0GAE8QmFsYW5jZU9mPFQsIEk+AAsEgEEgYm91bnR5IGRlcG9zaXQgaGFzIGJlZW4gcG9rZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0OQgMVHBhbGxldF9jaGlsZF9ib3VudGllcxhwYWxsZXQURXZlbnQEBFQAARAUQWRkZWQIARRpbmRleBABLEJvdW50eUluZGV4AAEsY2hpbGRfaW5kZXgQASxCb3VudHlJbmRleAAABGBBIGNoaWxkLWJvdW50eSBpcyBhZGRlZC4cQXdhcmRlZAwBFGluZGV4EAEsQm91bnR5SW5kZXgAASxjaGlsZF9pbmRleBABLEJvdW50eUluZGV4AAEsYmVuZWZpY2lhcnkAATBUOjpBY2NvdW50SWQAAQSsQSBjaGlsZC1ib3VudHkgaXMgYXdhcmRlZCB0byBhIGJlbmVmaWNpYXJ5LhxDbGFpbWVkEAEUaW5kZXgQASxCb3VudHlJbmRleAABLGNoaWxkX2luZGV4EAEsQm91bnR5SW5kZXgAARhwYXlvdXQYATBCYWxhbmNlT2Y8VD4AASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAACBKRBIGNoaWxkLWJvdW50eSBpcyBjbGFpbWVkIGJ5IGJlbmVmaWNpYXJ5LiBDYW5jZWxlZAgBFGluZGV4EAEsQm91bnR5SW5kZXgAASxjaGlsZF9pbmRleBABLEJvdW50eUluZGV4AAMEcEEgY2hpbGQtYm91bnR5IGlzIGNhbmNlbGxlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQ9CAyQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlGHBhbGxldBRFdmVudAQEVAABGDhTb2x1dGlvblN0b3JlZAwBHGNvbXB1dGVBCAE8RWxlY3Rpb25Db21wdXRlAAEYb3JpZ2luMQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEwcHJldl9lamVjdGVkIAEQYm9vbAAAHLRBIHNvbHV0aW9uIHdhcyBzdG9yZWQgd2l0aCB0aGUgZ2l2ZW4gY29tcHV0ZS4AUQFUaGUgYG9yaWdpbmAgaW5kaWNhdGVzIHRoZSBvcmlnaW4gb2YgdGhlIHNvbHV0aW9uLiBJZiBgb3JpZ2luYCBpcyBgU29tZShBY2NvdW50SWQpYCxZAXRoZSBzdG9yZWQgc29sdXRpb24gd2FzIHN1Ym1pdHRlZCBpbiB0aGUgc2lnbmVkIHBoYXNlIGJ5IGEgbWluZXIgd2l0aCB0aGUgYEFjY291bnRJZGAuJQFPdGhlcndpc2UsIHRoZSBzb2x1dGlvbiB3YXMgc3RvcmVkIGVpdGhlciBkdXJpbmcgdGhlIHVuc2lnbmVkIHBoYXNlIG9yIGJ5TQFgVDo6Rm9yY2VPcmlnaW5gLiBUaGUgYGJvb2xgIGlzIGB0cnVlYCB3aGVuIGEgcHJldmlvdXMgc29sdXRpb24gd2FzIGVqZWN0ZWQgdG8gbWFrZUhyb29tIGZvciB0aGlzIG9uZS5ERWxlY3Rpb25GaW5hbGl6ZWQIARxjb21wdXRlQQgBPEVsZWN0aW9uQ29tcHV0ZQABFHNjb3Jl7QMBNEVsZWN0aW9uU2NvcmUAAQQZAVRoZSBlbGVjdGlvbiBoYXMgYmVlbiBmaW5hbGl6ZWQsIHdpdGggdGhlIGdpdmVuIGNvbXB1dGF0aW9uIGFuZCBzY29yZS44RWxlY3Rpb25GYWlsZWQAAgxMQW4gZWxlY3Rpb24gZmFpbGVkLgABAU5vdCBtdWNoIGNhbiBiZSBzYWlkIGFib3V0IHdoaWNoIGNvbXB1dGVzIGZhaWxlZCBpbiB0aGUgcHJvY2Vzcy4gUmV3YXJkZWQIARxhY2NvdW50AAGYPFQgYXMgZnJhbWVfc3lzdGVtOjpDb25maWc+OjpBY2NvdW50SWQAARR2YWx1ZRgBMEJhbGFuY2VPZjxUPgADBCUBQW4gYWNjb3VudCBoYXMgYmVlbiByZXdhcmRlZCBmb3IgdGhlaXIgc2lnbmVkIHN1Ym1pc3Npb24gYmVpbmcgZmluYWxpemVkLhxTbGFzaGVkCAEcYWNjb3VudAABmDxUIGFzIGZyYW1lX3N5c3RlbTo6Q29uZmlnPjo6QWNjb3VudElkAAEUdmFsdWUYATBCYWxhbmNlT2Y8VD4ABAQhAUFuIGFjY291bnQgaGFzIGJlZW4gc2xhc2hlZCBmb3Igc3VibWl0dGluZyBhbiBpbnZhbGlkIHNpZ25lZCBzdWJtaXNzaW9uLkRQaGFzZVRyYW5zaXRpb25lZAwBEGZyb21FCAFgUGhhc2U8QmxvY2tOdW1iZXJGb3I8VD4+AAEIdG9FCAFgUGhhc2U8QmxvY2tOdW1iZXJGb3I8VD4+AAEUcm91bmQQAQx1MzIABQS4VGhlcmUgd2FzIGEgcGhhc2UgdHJhbnNpdGlvbiBpbiBhIGdpdmVuIHJvdW5kLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldEEICJBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2U8RWxlY3Rpb25Db21wdXRlAAEUHE9uQ2hhaW4AAAAYU2lnbmVkAAEAIFVuc2lnbmVkAAIAIEZhbGxiYWNrAAMAJEVtZXJnZW5jeQAEAABFCAiQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlFFBoYXNlBAhCbgEQARAMT2ZmAAAAGFNpZ25lZAABACBVbnNpZ25lZAQASQgBKChib29sLCBCbikAAgAkRW1lcmdlbmN5AAMAAEkIAAAECCAQAE0IDEBwYWxsZXRfYmFnc19saXN0GHBhbGxldBRFdmVudAgEVAAESQABCCBSZWJhZ2dlZAwBDHdobwABMFQ6OkFjY291bnRJZAABEGZyb20wASBUOjpTY29yZQABCHRvMAEgVDo6U2NvcmUAAASkTW92ZWQgYW4gYWNjb3VudCBmcm9tIG9uZSBiYWcgdG8gYW5vdGhlci4wU2NvcmVVcGRhdGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEkbmV3X3Njb3JlMAEgVDo6U2NvcmUAAQTYVXBkYXRlZCB0aGUgc2NvcmUgb2Ygc29tZSBhY2NvdW50IHRvIHRoZSBnaXZlbiBhbW91bnQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0UQgMXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzGHBhbGxldBRFdmVudAQEVAABXBxDcmVhdGVkCAEkZGVwb3NpdG9yAAEwVDo6QWNjb3VudElkAAEccG9vbF9pZBABGFBvb2xJZAAABGBBIHBvb2wgaGFzIGJlZW4gY3JlYXRlZC4YQm9uZGVkEAEYbWVtYmVyAAEwVDo6QWNjb3VudElkAAEccG9vbF9pZBABGFBvb2xJZAABGGJvbmRlZBgBMEJhbGFuY2VPZjxUPgABGGpvaW5lZCABEGJvb2wAAQSUQSBtZW1iZXIgaGFzIGJlY2FtZSBib25kZWQgaW4gYSBwb29sLhxQYWlkT3V0DAEYbWVtYmVyAAEwVDo6QWNjb3VudElkAAEccG9vbF9pZBABGFBvb2xJZAABGHBheW91dBgBMEJhbGFuY2VPZjxUPgACBIxBIHBheW91dCBoYXMgYmVlbiBtYWRlIHRvIGEgbWVtYmVyLiBVbmJvbmRlZBQBGG1lbWJlcgABMFQ6OkFjY291bnRJZAABHHBvb2xfaWQQARhQb29sSWQAARxiYWxhbmNlGAEwQmFsYW5jZU9mPFQ+AAEYcG9pbnRzGAEwQmFsYW5jZU9mPFQ+AAEMZXJhEAEgRXJhSW5kZXgAAyyYQSBtZW1iZXIgaGFzIHVuYm9uZGVkIGZyb20gdGhlaXIgcG9vbC4AOQEtIGBiYWxhbmNlYCBpcyB0aGUgY29ycmVzcG9uZGluZyBiYWxhbmNlIG9mIHRoZSBudW1iZXIgb2YgcG9pbnRzIHRoYXQgaGFzIGJlZW5VASAgcmVxdWVzdGVkIHRvIGJlIHVuYm9uZGVkICh0aGUgYXJndW1lbnQgb2YgdGhlIGB1bmJvbmRgIHRyYW5zYWN0aW9uKSBmcm9tIHRoZSBib25kZWQcICBwb29sLkUBLSBgcG9pbnRzYCBpcyB0aGUgbnVtYmVyIG9mIHBvaW50cyB0aGF0IGFyZSBpc3N1ZWQgYXMgYSByZXN1bHQgb2YgYGJhbGFuY2VgIGJlaW5nwGRpc3NvbHZlZCBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIHVuYm9uZGluZyBwb29sLuQtIGBlcmFgIGlzIHRoZSBlcmEgaW4gd2hpY2ggdGhlIGJhbGFuY2Ugd2lsbCBiZSB1bmJvbmRlZC5VAUluIHRoZSBhYnNlbmNlIG9mIHNsYXNoaW5nLCB0aGVzZSB2YWx1ZXMgd2lsbCBtYXRjaC4gSW4gdGhlIHByZXNlbmNlIG9mIHNsYXNoaW5nLCB0aGVNAW51bWJlciBvZiBwb2ludHMgdGhhdCBhcmUgaXNzdWVkIGluIHRoZSB1bmJvbmRpbmcgcG9vbCB3aWxsIGJlIGxlc3MgdGhhbiB0aGUgYW1vdW50ZHJlcXVlc3RlZCB0byBiZSB1bmJvbmRlZC4kV2l0aGRyYXduEAEYbWVtYmVyAAEwVDo6QWNjb3VudElkAAEccG9vbF9pZBABGFBvb2xJZAABHGJhbGFuY2UYATBCYWxhbmNlT2Y8VD4AARhwb2ludHMYATBCYWxhbmNlT2Y8VD4ABBicQSBtZW1iZXIgaGFzIHdpdGhkcmF3biBmcm9tIHRoZWlyIHBvb2wuACEBVGhlIGdpdmVuIG51bWJlciBvZiBgcG9pbnRzYCBoYXZlIGJlZW4gZGlzc29sdmVkIGluIHJldHVybiBvZiBgYmFsYW5jZWAuAFkBU2ltaWxhciB0byBgVW5ib25kZWRgIGV2ZW50LCBpbiB0aGUgYWJzZW5jZSBvZiBzbGFzaGluZywgdGhlIHJhdGlvIG9mIHBvaW50IHRvIGJhbGFuY2Uod2lsbCBiZSAxLiREZXN0cm95ZWQEARxwb29sX2lkEAEYUG9vbElkAAUEaEEgcG9vbCBoYXMgYmVlbiBkZXN0cm95ZWQuMFN0YXRlQ2hhbmdlZAgBHHBvb2xfaWQQARhQb29sSWQAASRuZXdfc3RhdGUZBAEkUG9vbFN0YXRlAAYEfFRoZSBzdGF0ZSBvZiBhIHBvb2wgaGFzIGNoYW5nZWQ0TWVtYmVyUmVtb3ZlZAwBHHBvb2xfaWQQARhQb29sSWQAARhtZW1iZXIAATBUOjpBY2NvdW50SWQAAUByZWxlYXNlZF9iYWxhbmNlGAEwQmFsYW5jZU9mPFQ+AAcUmEEgbWVtYmVyIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSBhIHBvb2wuAFEBVGhlIHJlbW92YWwgY2FuIGJlIHZvbHVudGFyeSAod2l0aGRyYXduIGFsbCB1bmJvbmRlZCBmdW5kcykgb3IgaW52b2x1bnRhcnkgKGtpY2tlZCkuSQFBbnkgZnVuZHMgdGhhdCBhcmUgc3RpbGwgZGVsZWdhdGVkIChpLmUuIGRhbmdsaW5nIGRlbGVnYXRpb24pIGFyZSByZWxlYXNlZCBhbmQgYXJliHJlcHJlc2VudGVkIGJ5IGByZWxlYXNlZF9iYWxhbmNlYC4wUm9sZXNVcGRhdGVkDAEQcm9vdDECAVBPcHRpb248VDo6QWNjb3VudElkPgABHGJvdW5jZXIxAgFQT3B0aW9uPFQ6OkFjY291bnRJZD4AASRub21pbmF0b3IxAgFQT3B0aW9uPFQ6OkFjY291bnRJZD4ACAhVAVRoZSByb2xlcyBvZiBhIHBvb2wgaGF2ZSBiZWVuIHVwZGF0ZWQgdG8gdGhlIGdpdmVuIG5ldyByb2xlcy4gTm90ZSB0aGF0IHRoZSBkZXBvc2l0b3JEY2FuIG5ldmVyIGNoYW5nZS4sUG9vbFNsYXNoZWQIARxwb29sX2lkEAEYUG9vbElkAAEcYmFsYW5jZRgBMEJhbGFuY2VPZjxUPgAJBA0BVGhlIGFjdGl2ZSBiYWxhbmNlIG9mIHBvb2wgYHBvb2xfaWRgIGhhcyBiZWVuIHNsYXNoZWQgdG8gYGJhbGFuY2VgLlBVbmJvbmRpbmdQb29sU2xhc2hlZAwBHHBvb2xfaWQQARhQb29sSWQAAQxlcmEQASBFcmFJbmRleAABHGJhbGFuY2UYATBCYWxhbmNlT2Y8VD4ACgQlAVRoZSB1bmJvbmQgcG9vbCBhdCBgZXJhYCBvZiBwb29sIGBwb29sX2lkYCBoYXMgYmVlbiBzbGFzaGVkIHRvIGBiYWxhbmNlYC5UUG9vbENvbW1pc3Npb25VcGRhdGVkCAEccG9vbF9pZBABGFBvb2xJZAABHGN1cnJlbnQxBAF8T3B0aW9uPChQZXJiaWxsLCBUOjpBY2NvdW50SWQpPgALBLRBIHBvb2wncyBjb21taXNzaW9uIHNldHRpbmcgaGFzIGJlZW4gY2hhbmdlZC5gUG9vbE1heENvbW1pc3Npb25VcGRhdGVkCAEccG9vbF9pZBABGFBvb2xJZAABOG1heF9jb21taXNzaW9utAEcUGVyYmlsbAAMBNRBIHBvb2wncyBtYXhpbXVtIGNvbW1pc3Npb24gc2V0dGluZyBoYXMgYmVlbiBjaGFuZ2VkLnxQb29sQ29tbWlzc2lvbkNoYW5nZVJhdGVVcGRhdGVkCAEccG9vbF9pZBABGFBvb2xJZAABLGNoYW5nZV9yYXRlOQQBnENvbW1pc3Npb25DaGFuZ2VSYXRlPEJsb2NrTnVtYmVyRm9yPFQ+PgANBMxBIHBvb2wncyBjb21taXNzaW9uIGBjaGFuZ2VfcmF0ZWAgaGFzIGJlZW4gY2hhbmdlZC6QUG9vbENvbW1pc3Npb25DbGFpbVBlcm1pc3Npb25VcGRhdGVkCAEccG9vbF9pZBABGFBvb2xJZAABKHBlcm1pc3Npb249BAG8T3B0aW9uPENvbW1pc3Npb25DbGFpbVBlcm1pc3Npb248VDo6QWNjb3VudElkPj4ADgTIUG9vbCBjb21taXNzaW9uIGNsYWltIHBlcm1pc3Npb24gaGFzIGJlZW4gdXBkYXRlZC5UUG9vbENvbW1pc3Npb25DbGFpbWVkCAEccG9vbF9pZBABGFBvb2xJZAABKGNvbW1pc3Npb24YATBCYWxhbmNlT2Y8VD4ADwSEUG9vbCBjb21taXNzaW9uIGhhcyBiZWVuIGNsYWltZWQuZE1pbkJhbGFuY2VEZWZpY2l0QWRqdXN0ZWQIARxwb29sX2lkEAEYUG9vbElkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+ABAEyFRvcHBlZCB1cCBkZWZpY2l0IGluIGZyb3plbiBFRCBvZiB0aGUgcmV3YXJkIHBvb2wuYE1pbkJhbGFuY2VFeGNlc3NBZGp1c3RlZAgBHHBvb2xfaWQQARhQb29sSWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AEQS8Q2xhaW1lZCBleGNlc3MgZnJvemVuIEVEIG9mIGFmIHRoZSByZXdhcmQgcG9vbC5wTWVtYmVyQ2xhaW1QZXJtaXNzaW9uVXBkYXRlZAgBGG1lbWJlcgABMFQ6OkFjY291bnRJZAABKHBlcm1pc3Npb24tBAE8Q2xhaW1QZXJtaXNzaW9uABIEyEEgcG9vbCBtZW1iZXIncyBjbGFpbSBwZXJtaXNzaW9uIGhhcyBiZWVuIHVwZGF0ZWQuPE1ldGFkYXRhVXBkYXRlZAgBHHBvb2xfaWQQARhQb29sSWQAARhjYWxsZXIAATBUOjpBY2NvdW50SWQAEwR4QSBwb29sJ3MgbWV0YWRhdGEgd2FzIHVwZGF0ZWQuSFBvb2xOb21pbmF0aW9uTWFkZQgBHHBvb2xfaWQQARhQb29sSWQAARhjYWxsZXIAATBUOjpBY2NvdW50SWQAFAhZAUEgcG9vbCdzIG5vbWluYXRpbmcgYWNjb3VudCAob3IgdGhlIHBvb2wncyByb290IGFjY291bnQpIGhhcyBub21pbmF0ZWQgYSB2YWxpZGF0b3Igc2V0WG9uIGJlaGFsZiBvZiB0aGUgcG9vbC5QUG9vbE5vbWluYXRvckNoaWxsZWQIARxwb29sX2lkEAEYUG9vbElkAAEYY2FsbGVyAAEwVDo6QWNjb3VudElkABUEuFRoZSBwb29sIGlzIGNoaWxsZWQgaS5lLiBubyBsb25nZXIgbm9taW5hdGluZy5MR2xvYmFsUGFyYW1zVXBkYXRlZBgBNG1pbl9qb2luX2JvbmQYATBCYWxhbmNlT2Y8VD4AATxtaW5fY3JlYXRlX2JvbmQYATBCYWxhbmNlT2Y8VD4AASRtYXhfcG9vbHO4ASxPcHRpb248dTMyPgABLG1heF9tZW1iZXJzuAEsT3B0aW9uPHUzMj4AAVBtYXhfbWVtYmVyc19wZXJfcG9vbLgBLE9wdGlvbjx1MzI+AAFUZ2xvYmFsX21heF9jb21taXNzaW9uVQgBPE9wdGlvbjxQZXJiaWxsPgAWBAEBR2xvYmFsIHBhcmFtZXRlcnMgcmVndWxhdGluZyBub21pbmF0aW9uIHBvb2xzIGhhdmUgYmVlbiB1cGRhdGVkLgRYRXZlbnRzIG9mIHRoaXMgcGFsbGV0LlUIBBhPcHRpb24EBFQBtAEIEE5vbmUAAAAQU29tZQQAtAAAAQAAWQgMTHBhbGxldF9mYXN0X3Vuc3Rha2UYcGFsbGV0FEV2ZW50BARUAAEUIFVuc3Rha2VkCAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAARhyZXN1bHSMAThEaXNwYXRjaFJlc3VsdAAABFhBIHN0YWtlciB3YXMgdW5zdGFrZWQuHFNsYXNoZWQIARRzdGFzaAABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgABBBkBQSBzdGFrZXIgd2FzIHNsYXNoZWQgZm9yIHJlcXVlc3RpbmcgZmFzdC11bnN0YWtlIHdoaWxzdCBiZWluZyBleHBvc2VkLjBCYXRjaENoZWNrZWQEARBlcmFzGQIBNFZlYzxFcmFJbmRleD4AAgRFAUEgYmF0Y2ggd2FzIHBhcnRpYWxseSBjaGVja2VkIGZvciB0aGUgZ2l2ZW4gZXJhcywgYnV0IHRoZSBwcm9jZXNzIGRpZCBub3QgZmluaXNoLjRCYXRjaEZpbmlzaGVkBAEQc2l6ZRABDHUzMgADEJxBIGJhdGNoIG9mIGEgZ2l2ZW4gc2l6ZSB3YXMgdGVybWluYXRlZC4AVQFUaGlzIGlzIGFsd2F5cyBmb2xsb3dzIGJ5IGEgbnVtYmVyIG9mIGBVbnN0YWtlZGAgb3IgYFNsYXNoZWRgIGV2ZW50cywgbWFya2luZyB0aGUgZW5k6G9mIHRoZSBiYXRjaC4gQSBuZXcgYmF0Y2ggd2lsbCBiZSBjcmVhdGVkIHVwb24gbmV4dCBibG9jay40SW50ZXJuYWxFcnJvcgAEBOhBbiBpbnRlcm5hbCBlcnJvciBoYXBwZW5lZC4gT3BlcmF0aW9ucyB3aWxsIGJlIHBhdXNlZCBub3cuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0XQgMYHBhbGxldF9kZWxlZ2F0ZWRfc3Rha2luZxhwYWxsZXQURXZlbnQEBFQAARAkRGVsZWdhdGVkDAEUYWdlbnQAATBUOjpBY2NvdW50SWQAASRkZWxlZ2F0b3IAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAAR8RnVuZHMgZGVsZWdhdGVkIGJ5IGEgZGVsZWdhdG9yLiBSZWxlYXNlZAwBFGFnZW50AAEwVDo6QWNjb3VudElkAAEkZGVsZWdhdG9yAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAEEeEZ1bmRzIHJlbGVhc2VkIHRvIGEgZGVsZWdhdG9yLhxTbGFzaGVkDAEUYWdlbnQAATBUOjpBY2NvdW50SWQAASRkZWxlZ2F0b3IAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAgR8RnVuZHMgc2xhc2hlZCBmcm9tIGEgZGVsZWdhdG9yLkhNaWdyYXRlZERlbGVnYXRpb24MARRhZ2VudAABMFQ6OkFjY291bnRJZAABJGRlbGVnYXRvcgABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgADBMRVbmNsYWltZWQgZGVsZWdhdGlvbiBmdW5kcyBtaWdyYXRlZCB0byBkZWxlZ2F0b3IuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0YQgMeHBhbGxldF9zdGFraW5nX2FzeW5jX2FoX2NsaWVudBhwYWxsZXQURXZlbnQEBFQAARBQVmFsaWRhdG9yU2V0UmVjZWl2ZWQQAQhpZBABDHUzMgABXG5ld192YWxpZGF0b3Jfc2V0X2NvdW50EAEMdTMyAAEscHJ1bmVfdXBfdG+4AVBPcHRpb248U2Vzc2lvbkluZGV4PgABIGxlZnRvdmVyIAEQYm9vbAAABJhBIG5ldyB2YWxpZGF0b3Igc2V0IGhhcyBiZWVuIHJlY2VpdmVkLlxDb3VsZE5vdE1lcmdlQW5kRHJvcHBlZAABEPRXZSBjb3VsZCBub3QgbWVyZ2UsIGFuZCB0aGVyZWZvcmUgZHJvcHBlZCBhIGJ1ZmZlcmVkIG1lc3NhZ2UuAFUBTm90ZSB0aGF0IHRoaXMgZXZlbnQgaXMgbW9yZSByZXNlbWJsaW5nIGFuIGVycm9yLCBidXQgd2UgdXNlIGFuIGV2ZW50IGJlY2F1c2UgaW4gdGhpc9BwYWxsZXQgd2UgbmVlZCB0byBtdXRhdGUgc3RvcmFnZSB1cG9uIHNvbWUgZmFpbHVyZXMuVFNldFRvb1NtYWxsQW5kRHJvcHBlZAACCMxUaGUgdmFsaWRhdG9yIHNldCByZWNlaXZlZCBpcyB3YXkgdG9vIHNtYWxsLCBhcyBwZXKQW2BDb25maWc6Ok1pbmltdW1WYWxpZGF0b3JTZXRTaXplYF0uKFVuZXhwZWN0ZWQEAGUIAThVbmV4cGVjdGVkS2luZAADCFkBU29tZXRoaW5nIG9jY3VycmVkIHRoYXQgc2hvdWxkIG5ldmVyIGhhcHBlbiB1bmRlciBub3JtYWwgb3BlcmF0aW9uLiBMb2dnZWQgYXMgYW4gZXZlbnRwZm9yIGZhaWwtc2FmZSBvYnNlcnZhYmlsaXR5LgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldGUIDHhwYWxsZXRfc3Rha2luZ19hc3luY19haF9jbGllbnQYcGFsbGV0OFVuZXhwZWN0ZWRLaW5kAAEIgFJlY2VpdmVkVmFsaWRhdG9yU2V0V2hpbGVQYXNzaXZlAAAAYFVuZXhwZWN0ZWRNb2RlVHJhbnNpdGlvbgABAABpCBBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zJGluY2x1c2lvbhhwYWxsZXQURXZlbnQEBFQAARA8Q2FuZGlkYXRlQmFja2VkEABtCAFkQ2FuZGlkYXRlUmVjZWlwdDxUOjpIYXNoPgAA3QQBIEhlYWREYXRhAABxCAEkQ29yZUluZGV4AAB1CAEoR3JvdXBJbmRleAAABMBBIGNhbmRpZGF0ZSB3YXMgYmFja2VkLiBgW2NhbmRpZGF0ZSwgaGVhZF9kYXRhXWBEQ2FuZGlkYXRlSW5jbHVkZWQQAG0IAWRDYW5kaWRhdGVSZWNlaXB0PFQ6Okhhc2g+AADdBAEgSGVhZERhdGEAAHEIASRDb3JlSW5kZXgAAHUIAShHcm91cEluZGV4AAEEyEEgY2FuZGlkYXRlIHdhcyBpbmNsdWRlZC4gYFtjYW5kaWRhdGUsIGhlYWRfZGF0YV1gRENhbmRpZGF0ZVRpbWVkT3V0DABtCAFkQ2FuZGlkYXRlUmVjZWlwdDxUOjpIYXNoPgAA3QQBIEhlYWREYXRhAABxCAEkQ29yZUluZGV4AAIEvEEgY2FuZGlkYXRlIHRpbWVkIG91dC4gYFtjYW5kaWRhdGUsIGhlYWRfZGF0YV1gWFVwd2FyZE1lc3NhZ2VzUmVjZWl2ZWQIARBmcm9ttQIBGFBhcmFJZAABFGNvdW50EAEMdTMyAAME+FNvbWUgdXB3YXJkIG1lc3NhZ2VzIGhhdmUgYmVlbiByZWNlaXZlZCBhbmQgd2lsbCBiZSBwcm9jZXNzZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0bQgMTHBvbGthZG90X3ByaW1pdGl2ZXMgdnN0YWdpbmdIQ2FuZGlkYXRlUmVjZWlwdFYyBARIATQACAEoZGVzY3JpcHRvcrEEAWBDYW5kaWRhdGVEZXNjcmlwdG9yVjI8SD4AAUBjb21taXRtZW50c19oYXNoNAEQSGFzaAAAcQgMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjgkQ29yZUluZGV4AAAEABABDHUzMgAAdQgMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjgoR3JvdXBJbmRleAAABAAQAQx1MzIAAHkIEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXMYcGFsbGV0FEV2ZW50BARUAAEoSEN1cnJlbnRDb2RlVXBkYXRlZAQAtQIBGFBhcmFJZAAABMxDdXJyZW50IGNvZGUgaGFzIGJlZW4gdXBkYXRlZCBmb3IgYSBQYXJhLiBgcGFyYV9pZGBIQ3VycmVudEhlYWRVcGRhdGVkBAC1AgEYUGFyYUlkAAEEzEN1cnJlbnQgaGVhZCBoYXMgYmVlbiB1cGRhdGVkIGZvciBhIFBhcmEuIGBwYXJhX2lkYFBDb2RlVXBncmFkZVNjaGVkdWxlZAQAtQIBGFBhcmFJZAACBNxBIGNvZGUgdXBncmFkZSBoYXMgYmVlbiBzY2hlZHVsZWQgZm9yIGEgUGFyYS4gYHBhcmFfaWRgME5ld0hlYWROb3RlZAQAtQIBGFBhcmFJZAADBLxBIG5ldyBoZWFkIGhhcyBiZWVuIG5vdGVkIGZvciBhIFBhcmEuIGBwYXJhX2lkYDBBY3Rpb25RdWV1ZWQIALUCARhQYXJhSWQAABABMFNlc3Npb25JbmRleAAEBPBBIHBhcmEgaGFzIGJlZW4gcXVldWVkIHRvIGV4ZWN1dGUgcGVuZGluZyBhY3Rpb25zLiBgcGFyYV9pZGA8UHZmQ2hlY2tTdGFydGVkCAC9BAFIVmFsaWRhdGlvbkNvZGVIYXNoAAC1AgEYUGFyYUlkAAUIVQFUaGUgZ2l2ZW4gcGFyYSBlaXRoZXIgaW5pdGlhdGVkIG9yIHN1YnNjcmliZWQgdG8gYSBQVkYgY2hlY2sgZm9yIHRoZSBnaXZlbiB2YWxpZGF0aW9ubGNvZGUuIGBjb2RlX2hhc2hgIGBwYXJhX2lkYEBQdmZDaGVja0FjY2VwdGVkCAC9BAFIVmFsaWRhdGlvbkNvZGVIYXNoAAC1AgEYUGFyYUlkAAYIEQFUaGUgZ2l2ZW4gdmFsaWRhdGlvbiBjb2RlIHdhcyBhY2NlcHRlZCBieSB0aGUgUFZGIHByZS1jaGVja2luZyB2b3RlLlRgY29kZV9oYXNoYCBgcGFyYV9pZGBAUHZmQ2hlY2tSZWplY3RlZAgAvQQBSFZhbGlkYXRpb25Db2RlSGFzaAAAtQIBGFBhcmFJZAAHCBEBVGhlIGdpdmVuIHZhbGlkYXRpb24gY29kZSB3YXMgcmVqZWN0ZWQgYnkgdGhlIFBWRiBwcmUtY2hlY2tpbmcgdm90ZS5UYGNvZGVfaGFzaGAgYHBhcmFfaWRgWFVwZ3JhZGVDb29sZG93blJlbW92ZWQEARxwYXJhX2lktQIBGFBhcmFJZATEVGhlIHBhcmFjaGFpbiBmb3Igd2hpY2ggdGhlIGNvb2xkb3duIGdvdCByZW1vdmVkLggEhFRoZSB1cGdyYWRlIGNvb2xkb3duIHdhcyByZW1vdmVkLjhDb2RlQXV0aG9yaXplZAwBHHBhcmFfaWS1AgEYUGFyYUlkBBBQYXJhASRjb2RlX2hhc2i9BAFIVmFsaWRhdGlvbkNvZGVIYXNoBFRBdXRob3JpemVkIGNvZGUgaGFzaC4BJGV4cGlyZV9hdBABREJsb2NrTnVtYmVyRm9yPFQ+BORCbG9jayBhdCB3aGljaCBhdXRob3JpemF0aW9uIGV4cGlyZXMgYW5kIHdpbGwgYmUgcmVtb3ZlZC4JBLxBIG5ldyBjb2RlIGhhc2ggaGFzIGJlZW4gYXV0aG9yaXplZCBmb3IgYSBQYXJhLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldH0IEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMQaHJtcBhwYWxsZXQURXZlbnQEBFQAARxQT3BlbkNoYW5uZWxSZXF1ZXN0ZWQQARhzZW5kZXK1AgEYUGFyYUlkAAEkcmVjaXBpZW50tQIBGFBhcmFJZAABVHByb3Bvc2VkX21heF9jYXBhY2l0eRABDHUzMgABZHByb3Bvc2VkX21heF9tZXNzYWdlX3NpemUQAQx1MzIAAARwT3BlbiBIUk1QIGNoYW5uZWwgcmVxdWVzdGVkLkxPcGVuQ2hhbm5lbENhbmNlbGVkCAEwYnlfcGFyYWNoYWlutQIBGFBhcmFJZAABKGNoYW5uZWxfaWQdBQE0SHJtcENoYW5uZWxJZAABBCkBQW4gSFJNUCBjaGFubmVsIHJlcXVlc3Qgc2VudCBieSB0aGUgcmVjZWl2ZXIgd2FzIGNhbmNlbGVkIGJ5IGVpdGhlciBwYXJ0eS5MT3BlbkNoYW5uZWxBY2NlcHRlZAgBGHNlbmRlcrUCARhQYXJhSWQAASRyZWNpcGllbnS1AgEYUGFyYUlkAAIEbE9wZW4gSFJNUCBjaGFubmVsIGFjY2VwdGVkLjRDaGFubmVsQ2xvc2VkCAEwYnlfcGFyYWNoYWlutQIBGFBhcmFJZAABKGNoYW5uZWxfaWQdBQE0SHJtcENoYW5uZWxJZAADBFBIUk1QIGNoYW5uZWwgY2xvc2VkLlhIcm1wQ2hhbm5lbEZvcmNlT3BlbmVkEAEYc2VuZGVytQIBGFBhcmFJZAABJHJlY2lwaWVudLUCARhQYXJhSWQAAVRwcm9wb3NlZF9tYXhfY2FwYWNpdHkQAQx1MzIAAWRwcm9wb3NlZF9tYXhfbWVzc2FnZV9zaXplEAEMdTMyAAQErEFuIEhSTVAgY2hhbm5lbCB3YXMgb3BlbmVkIHZpYSBSb290IG9yaWdpbi5cSHJtcFN5c3RlbUNoYW5uZWxPcGVuZWQQARhzZW5kZXK1AgEYUGFyYUlkAAEkcmVjaXBpZW50tQIBGFBhcmFJZAABVHByb3Bvc2VkX21heF9jYXBhY2l0eRABDHUzMgABZHByb3Bvc2VkX21heF9tZXNzYWdlX3NpemUQAQx1MzIABQS8QW4gSFJNUCBjaGFubmVsIHdhcyBvcGVuZWQgd2l0aCBhIHN5c3RlbSBjaGFpbi5oT3BlbkNoYW5uZWxEZXBvc2l0c1VwZGF0ZWQIARhzZW5kZXK1AgEYUGFyYUlkAAEkcmVjaXBpZW50tQIBGFBhcmFJZAAGBKBBbiBIUk1QIGNoYW5uZWwncyBkZXBvc2l0cyB3ZXJlIHVwZGF0ZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0gQgQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlcxhwYWxsZXQURXZlbnQEBFQAAQxARGlzcHV0ZUluaXRpYXRlZAgA8QQBNENhbmRpZGF0ZUhhc2gAAIUIATxEaXNwdXRlTG9jYXRpb24AAAQJAUEgZGlzcHV0ZSBoYXMgYmVlbiBpbml0aWF0ZWQuIFxbY2FuZGlkYXRlIGhhc2gsIGRpc3B1dGUgbG9jYXRpb25cXUBEaXNwdXRlQ29uY2x1ZGVkCADxBAE0Q2FuZGlkYXRlSGFzaAAAiQgBNERpc3B1dGVSZXN1bHQAAQjMQSBkaXNwdXRlIGhhcyBjb25jbHVkZWQgZm9yIG9yIGFnYWluc3QgYSBjYW5kaWRhdGUutGBcW3BhcmEgaWQsIGNhbmRpZGF0ZSBoYXNoLCBkaXNwdXRlIHJlc3VsdFxdYBhSZXZlcnQEABABREJsb2NrTnVtYmVyRm9yPFQ+AAIQ/EEgZGlzcHV0ZSBoYXMgY29uY2x1ZGVkIHdpdGggc3VwZXJtYWpvcml0eSBhZ2FpbnN0IGEgY2FuZGlkYXRlLg0BQmxvY2sgYXV0aG9ycyBzaG91bGQgbm8gbG9uZ2VyIGJ1aWxkIG9uIHRvcCBvZiB0aGlzIGhlYWQgYW5kIHNob3VsZAEBaW5zdGVhZCByZXZlcnQgdGhlIGJsb2NrIGF0IHRoZSBnaXZlbiBoZWlnaHQuIFRoaXMgc2hvdWxkIGJlIHRoZfxudW1iZXIgb2YgdGhlIGNoaWxkIG9mIHRoZSBsYXN0IGtub3duIHZhbGlkIGJsb2NrIGluIHRoZSBjaGFpbi4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSFCAxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGRpc3B1dGVzPERpc3B1dGVMb2NhdGlvbgABCBRMb2NhbAAAABhSZW1vdGUAAQAAiQgMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlczREaXNwdXRlUmVzdWx0AAEIFFZhbGlkAAAAHEludmFsaWQAAQAAjQgQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRvbl9kZW1hbmQYcGFsbGV0FEV2ZW50BARUAAEMTE9uRGVtYW5kT3JkZXJQbGFjZWQMARxwYXJhX2lktQIBGFBhcmFJZAABKHNwb3RfcHJpY2UYATBCYWxhbmNlT2Y8VD4AAShvcmRlcmVkX2J5AAEwVDo6QWNjb3VudElkAAAEDQFBbiBvcmRlciB3YXMgcGxhY2VkIGF0IHNvbWUgc3BvdCBwcmljZSBhbW91bnQgYnkgb3JkZXJlciBvcmRlcmVkX2J5MFNwb3RQcmljZVNldAQBKHNwb3RfcHJpY2UYATBCYWxhbmNlT2Y8VD4AAQS4VGhlIHZhbHVlIG9mIHRoZSBzcG90IHByaWNlIGhhcyBsaWtlbHkgY2hhbmdlZDxBY2NvdW50Q3JlZGl0ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAgR0QW4gYWNjb3VudCB3YXMgZ2l2ZW4gY3JlZGl0cy4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSRCBBccG9sa2Fkb3RfcnVudGltZV9jb21tb248cGFyYXNfcmVnaXN0cmFyGHBhbGxldBRFdmVudAQEVAABEChSZWdpc3RlcmVkCAEccGFyYV9pZLUCARhQYXJhSWQAARxtYW5hZ2VyAAEwVDo6QWNjb3VudElkAAAAMERlcmVnaXN0ZXJlZAQBHHBhcmFfaWS1AgEYUGFyYUlkAAEAIFJlc2VydmVkCAEccGFyYV9pZLUCARhQYXJhSWQAAQx3aG8AATBUOjpBY2NvdW50SWQAAgAcU3dhcHBlZAgBHHBhcmFfaWS1AgEYUGFyYUlkAAEgb3RoZXJfaWS1AgEYUGFyYUlkAAMABHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0lQgQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uFHNsb3RzGHBhbGxldBRFdmVudAQEVAABCDhOZXdMZWFzZVBlcmlvZAQBMGxlYXNlX3BlcmlvZBABQExlYXNlUGVyaW9kT2Y8VD4AAASQQSBuZXcgYFtsZWFzZV9wZXJpb2RdYCBpcyBiZWdpbm5pbmcuGExlYXNlZBgBHHBhcmFfaWS1AgEYUGFyYUlkAAEYbGVhc2VyAAEwVDo6QWNjb3VudElkAAEwcGVyaW9kX2JlZ2luEAFATGVhc2VQZXJpb2RPZjxUPgABMHBlcmlvZF9jb3VudBABQExlYXNlUGVyaW9kT2Y8VD4AAThleHRyYV9yZXNlcnZlZBgBMEJhbGFuY2VPZjxUPgABMHRvdGFsX2Ftb3VudBgBMEJhbGFuY2VPZjxUPgABDDUBQSBwYXJhIGhhcyB3b24gdGhlIHJpZ2h0IHRvIGEgY29udGludW91cyBzZXQgb2YgbGVhc2UgcGVyaW9kcyBhcyBhIHBhcmFjaGFpbi5FAUZpcnN0IGJhbGFuY2UgaXMgYW55IGV4dHJhIGFtb3VudCByZXNlcnZlZCBvbiB0b3Agb2YgdGhlIHBhcmEncyBleGlzdGluZyBkZXBvc2l0LrBTZWNvbmQgYmFsYW5jZSBpcyB0aGUgdG90YWwgYW1vdW50IHJlc2VydmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldJkIEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbiBhdWN0aW9ucxhwYWxsZXQURXZlbnQEBFQAARw4QXVjdGlvblN0YXJ0ZWQMATRhdWN0aW9uX2luZGV4EAEwQXVjdGlvbkluZGV4AAEwbGVhc2VfcGVyaW9kEAFATGVhc2VQZXJpb2RPZjxUPgABGGVuZGluZxABREJsb2NrTnVtYmVyRm9yPFQ+AAAISQFBbiBhdWN0aW9uIHN0YXJ0ZWQuIFByb3ZpZGVzIGl0cyBpbmRleCBhbmQgdGhlIGJsb2NrIG51bWJlciB3aGVyZSBpdCB3aWxsIGJlZ2luIHRvFQFjbG9zZSBhbmQgdGhlIGZpcnN0IGxlYXNlIHBlcmlvZCBvZiB0aGUgcXVhZHJ1cGxldCB0aGF0IGlzIGF1Y3Rpb25lZC40QXVjdGlvbkNsb3NlZAQBNGF1Y3Rpb25faW5kZXgQATBBdWN0aW9uSW5kZXgAAQS4QW4gYXVjdGlvbiBlbmRlZC4gQWxsIGZ1bmRzIGJlY29tZSB1bnJlc2VydmVkLiBSZXNlcnZlZAwBGGJpZGRlcgABMFQ6OkFjY291bnRJZAABOGV4dHJhX3Jlc2VydmVkGAEwQmFsYW5jZU9mPFQ+AAEwdG90YWxfYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAIISQFGdW5kcyB3ZXJlIHJlc2VydmVkIGZvciBhIHdpbm5pbmcgYmlkLiBGaXJzdCBiYWxhbmNlIGlzIHRoZSBleHRyYSBhbW91bnQgcmVzZXJ2ZWQuUFNlY29uZCBpcyB0aGUgdG90YWwuKFVucmVzZXJ2ZWQIARhiaWRkZXIAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAwQpAUZ1bmRzIHdlcmUgdW5yZXNlcnZlZCBzaW5jZSBiaWRkZXIgaXMgbm8gbG9uZ2VyIGFjdGl2ZS4gYFtiaWRkZXIsIGFtb3VudF1gSFJlc2VydmVDb25maXNjYXRlZAwBHHBhcmFfaWS1AgEYUGFyYUlkAAEYbGVhc2VyAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAQIVQFTb21lb25lIGF0dGVtcHRlZCB0byBsZWFzZSB0aGUgc2FtZSBzbG90IHR3aWNlIGZvciBhIHBhcmFjaGFpbi4gVGhlIGFtb3VudCBpcyBoZWxkIGluuHJlc2VydmUgYnV0IG5vIHBhcmFjaGFpbiBzbG90IGhhcyBiZWVuIGxlYXNlZC4sQmlkQWNjZXB0ZWQUARhiaWRkZXIAATBUOjpBY2NvdW50SWQAARxwYXJhX2lktQIBGFBhcmFJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgABKGZpcnN0X3Nsb3QQAUBMZWFzZVBlcmlvZE9mPFQ+AAEkbGFzdF9zbG90EAFATGVhc2VQZXJpb2RPZjxUPgAFBMhBIG5ldyBiaWQgaGFzIGJlZW4gYWNjZXB0ZWQgYXMgdGhlIGN1cnJlbnQgd2lubmVyLjRXaW5uaW5nT2Zmc2V0CAE0YXVjdGlvbl9pbmRleBABMEF1Y3Rpb25JbmRleAABMGJsb2NrX251bWJlchABREJsb2NrTnVtYmVyRm9yPFQ+AAYIWQFUaGUgd2lubmluZyBvZmZzZXQgd2FzIGNob3NlbiBmb3IgYW4gYXVjdGlvbi4gVGhpcyB3aWxsIG1hcCBpbnRvIHRoZSBgV2lubmluZ2Agc3RvcmFnZRBtYXAuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0nQgQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uJGNyb3dkbG9hbhhwYWxsZXQURXZlbnQEBFQAASgcQ3JlYXRlZAQBHHBhcmFfaWS1AgEYUGFyYUlkAAAEjENyZWF0ZSBhIG5ldyBjcm93ZGxvYW5pbmcgY2FtcGFpZ24uLENvbnRyaWJ1dGVkDAEMd2hvAAEwVDo6QWNjb3VudElkAAEoZnVuZF9pbmRleLUCARhQYXJhSWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAQRwQ29udHJpYnV0ZWQgdG8gYSBjcm93ZCBzYWxlLiBXaXRoZHJldwwBDHdobwABMFQ6OkFjY291bnRJZAABKGZ1bmRfaW5kZXi1AgEYUGFyYUlkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAIEnFdpdGhkcmV3IGZ1bGwgYmFsYW5jZSBvZiBhIGNvbnRyaWJ1dG9yLkRQYXJ0aWFsbHlSZWZ1bmRlZAQBHHBhcmFfaWS1AgEYUGFyYUlkAAMILQFUaGUgbG9hbnMgaW4gYSBmdW5kIGhhdmUgYmVlbiBwYXJ0aWFsbHkgZGlzc29sdmVkLCBpLmUuIHRoZXJlIGFyZSBzb21lIGxlZnS0b3ZlciBjaGlsZCBrZXlzIHRoYXQgc3RpbGwgbmVlZCB0byBiZSBraWxsZWQuLEFsbFJlZnVuZGVkBAEccGFyYV9pZLUCARhQYXJhSWQABAScQWxsIGxvYW5zIGluIGEgZnVuZCBoYXZlIGJlZW4gcmVmdW5kZWQuJERpc3NvbHZlZAQBHHBhcmFfaWS1AgEYUGFyYUlkAAUESEZ1bmQgaXMgZGlzc29sdmVkLjxIYW5kbGVCaWRSZXN1bHQIARxwYXJhX2lktQIBGFBhcmFJZAABGHJlc3VsdIwBOERpc3BhdGNoUmVzdWx0AAYE9FRoZSByZXN1bHQgb2YgdHJ5aW5nIHRvIHN1Ym1pdCBhIG5ldyBiaWQgdG8gdGhlIFNsb3RzIHBhbGxldC4YRWRpdGVkBAEccGFyYV9pZLUCARhQYXJhSWQABwTEVGhlIGNvbmZpZ3VyYXRpb24gdG8gYSBjcm93ZGxvYW4gaGFzIGJlZW4gZWRpdGVkLixNZW1vVXBkYXRlZAwBDHdobwABMFQ6OkFjY291bnRJZAABHHBhcmFfaWS1AgEYUGFyYUlkAAEQbWVtbzgBHFZlYzx1OD4ACARgQSBtZW1vIGhhcyBiZWVuIHVwZGF0ZWQuPEFkZGVkVG9OZXdSYWlzZQQBHHBhcmFfaWS1AgEYUGFyYUlkAAkEoEEgcGFyYWNoYWluIGhhcyBiZWVuIG1vdmVkIHRvIGBOZXdSYWlzZWAEfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXShCBBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGNvcmV0aW1lGHBhbGxldBRFdmVudAQEVAABCFBSZXZlbnVlSW5mb1JlcXVlc3RlZAQBEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgAABCEBVGhlIGJyb2tlciBjaGFpbiBoYXMgYXNrZWQgZm9yIHJldmVudWUgaW5mb3JtYXRpb24gZm9yIGEgc3BlY2lmaWMgYmxvY2suMENvcmVBc3NpZ25lZAQBEGNvcmVxCAEkQ29yZUluZGV4AAEE7EEgY29yZSBoYXMgcmVjZWl2ZWQgYSBuZXcgYXNzaWdubWVudCBmcm9tIHRoZSBicm9rZXIgY2hhaW4uBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0pQgMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQURXZlbnQEBFQAARAgTWlncmF0ZWQMAQx0b3AQAQx1MzIAARRjaGlsZBABDHUzMgABHGNvbXB1dGWpCAFATWlncmF0aW9uQ29tcHV0ZQAACDkBR2l2ZW4gbnVtYmVyIG9mIGAodG9wLCBjaGlsZClgIGtleXMgd2VyZSBtaWdyYXRlZCByZXNwZWN0aXZlbHksIHdpdGggdGhlIGdpdmVuKGBjb21wdXRlYC4cU2xhc2hlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgABBLRTb21lIGFjY291bnQgZ290IHNsYXNoZWQgYnkgdGhlIGdpdmVuIGFtb3VudC5UQXV0b01pZ3JhdGlvbkZpbmlzaGVkAAIEhFRoZSBhdXRvIG1pZ3JhdGlvbiB0YXNrIGZpbmlzaGVkLhhIYWx0ZWQEARRlcnJvcq0IASBFcnJvcjxUPgADBOxNaWdyYXRpb24gZ290IGhhbHRlZCBkdWUgdG8gYW4gZXJyb3Igb3IgbWlzcy1jb25maWd1cmF0aW9uLgRwSW5uZXIgZXZlbnRzIG9mIHRoaXMgcGFsbGV0LqkIDGxwYWxsZXRfc3RhdGVfdHJpZV9taWdyYXRpb24YcGFsbGV0QE1pZ3JhdGlvbkNvbXB1dGUAAQgYU2lnbmVkAAAAEEF1dG8AAQAArQgMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQURXJyb3IEBFQAARg8TWF4U2lnbmVkTGltaXRzAAAEgE1heCBzaWduZWQgbGltaXRzIG5vdCByZXNwZWN0ZWQuKEtleVRvb0xvbmcAARy0QSBrZXkgd2FzIGxvbmdlciB0aGFuIHRoZSBjb25maWd1cmVkIG1heGltdW0uABEBVGhpcyBtZWFucyB0aGF0IHRoZSBtaWdyYXRpb24gaGFsdGVkIGF0IHRoZSBjdXJyZW50IFtgUHJvZ3Jlc3NgXSBhbmQBAWNhbiBiZSByZXN1bWVkIHdpdGggYSBsYXJnZXIgW2BjcmF0ZTo6Q29uZmlnOjpNYXhLZXlMZW5gXSB2YWx1ZS4hAVJldHJ5aW5nIHdpdGggdGhlIHNhbWUgW2BjcmF0ZTo6Q29uZmlnOjpNYXhLZXlMZW5gXSB2YWx1ZSB3aWxsIG5vdCB3b3JrLkUBVGhlIHZhbHVlIHNob3VsZCBvbmx5IGJlIGluY3JlYXNlZCB0byBhdm9pZCBhIHN0b3JhZ2UgbWlncmF0aW9uIGZvciB0aGUgY3VycmVudGx5kHN0b3JlZCBbYGNyYXRlOjpQcm9ncmVzczo6TGFzdEtleWBdLjhOb3RFbm91Z2hGdW5kcwACBJRzdWJtaXR0ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggZnVuZHMuKEJhZFdpdG5lc3MAAwRoQmFkIHdpdG5lc3MgZGF0YSBwcm92aWRlZC5kU2lnbmVkTWlncmF0aW9uTm90QWxsb3dlZAAEBCUBU2lnbmVkIG1pZ3JhdGlvbiBpcyBub3QgYWxsb3dlZCBiZWNhdXNlIHRoZSBtYXhpbXVtIGxpbWl0IGlzIG5vdCBzZXQgeWV0LjBCYWRDaGlsZFJvb3QABQRgQmFkIGNoaWxkIHJvb3QgcHJvdmlkZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LrEIDChwYWxsZXRfeGNtGHBhbGxldBRFdmVudAQEVAABdCRBdHRlbXB0ZWQEARxvdXRjb21ltQgBUHhjbTo6bGF0ZXN0OjpPdXRjb21lAAAEqEV4ZWN1dGlvbiBvZiBhbiBYQ00gbWVzc2FnZSB3YXMgYXR0ZW1wdGVkLhBTZW50EAEYb3JpZ2luVQEBIExvY2F0aW9uAAEsZGVzdGluYXRpb25VAQEgTG9jYXRpb24AARxtZXNzYWdlRQYBHFhjbTwoKT4AAShtZXNzYWdlX2lkBAEcWGNtSGFzaAABBGBBbiBYQ00gbWVzc2FnZSB3YXMgc2VudC4oU2VuZEZhaWxlZBABGG9yaWdpblUBASBMb2NhdGlvbgABLGRlc3RpbmF0aW9uVQEBIExvY2F0aW9uAAEUZXJyb3K9CAEkU2VuZEVycm9yAAEobWVzc2FnZV9pZAQBHFhjbUhhc2gAAgR4QW4gWENNIG1lc3NhZ2UgZmFpbGVkIHRvIHNlbmQuPFByb2Nlc3NYY21FcnJvcgwBGG9yaWdpblUBASBMb2NhdGlvbgABFGVycm9ycQYBIFhjbUVycm9yAAEobWVzc2FnZV9pZAQBHFhjbUhhc2gAAwSEQW4gWENNIG1lc3NhZ2UgZmFpbGVkIHRvIHByb2Nlc3MuSFVuZXhwZWN0ZWRSZXNwb25zZQgBGG9yaWdpblUBASBMb2NhdGlvbgABIHF1ZXJ5X2lkMAEcUXVlcnlJZAAEDFkBUXVlcnkgcmVzcG9uc2UgcmVjZWl2ZWQgd2hpY2ggZG9lcyBub3QgbWF0Y2ggYSByZWdpc3RlcmVkIHF1ZXJ5LiBUaGlzIG1heSBiZSBiZWNhdXNlIGFVAW1hdGNoaW5nIHF1ZXJ5IHdhcyBuZXZlciByZWdpc3RlcmVkLCBpdCBtYXkgYmUgYmVjYXVzZSBpdCBpcyBhIGR1cGxpY2F0ZSByZXNwb25zZSwgb3JwYmVjYXVzZSB0aGUgcXVlcnkgdGltZWQgb3V0LjRSZXNwb25zZVJlYWR5CAEgcXVlcnlfaWQwARxRdWVyeUlkAAEgcmVzcG9uc2VlBgEgUmVzcG9uc2UABQhdAVF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGFuZCBpcyByZWFkeSBmb3IgdGFraW5nIHdpdGggYHRha2VfcmVzcG9uc2VgLiBUaGVyZSBpc4BubyByZWdpc3RlcmVkIG5vdGlmaWNhdGlvbiBjYWxsLiBOb3RpZmllZAwBIHF1ZXJ5X2lkMAEcUXVlcnlJZAABMHBhbGxldF9pbmRleAgBCHU4AAEoY2FsbF9pbmRleAgBCHU4AAYIWQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgcXVlcnkgaXMgcmVtb3ZlZC4gVGhlIHJlZ2lzdGVyZWQgbm90aWZpY2F0aW9uIGhhc6hiZWVuIGRpc3BhdGNoZWQgYW5kIGV4ZWN1dGVkIHN1Y2Nlc3NmdWxseS5ATm90aWZ5T3ZlcndlaWdodBQBIHF1ZXJ5X2lkMAEcUXVlcnlJZAABMHBhbGxldF9pbmRleAgBCHU4AAEoY2FsbF9pbmRleAgBCHU4AAE0YWN0dWFsX3dlaWdodCgBGFdlaWdodAABTG1heF9idWRnZXRlZF93ZWlnaHQoARhXZWlnaHQABwxJAVF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGFuZCBxdWVyeSBpcyByZW1vdmVkLiBUaGUgcmVnaXN0ZXJlZCBub3RpZmljYXRpb25ZAWNvdWxkIG5vdCBiZSBkaXNwYXRjaGVkIGJlY2F1c2UgdGhlIGRpc3BhdGNoIHdlaWdodCBpcyBncmVhdGVyIHRoYW4gdGhlIG1heGltdW0gd2VpZ2h05G9yaWdpbmFsbHkgYnVkZ2V0ZWQgYnkgdGhpcyBydW50aW1lIGZvciB0aGUgcXVlcnkgcmVzdWx0LkxOb3RpZnlEaXNwYXRjaEVycm9yDAEgcXVlcnlfaWQwARxRdWVyeUlkAAEwcGFsbGV0X2luZGV4CAEIdTgAAShjYWxsX2luZGV4CAEIdTgACAhVAVF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGFuZCBxdWVyeSBpcyByZW1vdmVkLiBUaGVyZSB3YXMgYSBnZW5lcmFsIGVycm9yIHdpdGiIZGlzcGF0Y2hpbmcgdGhlIG5vdGlmaWNhdGlvbiBjYWxsLkhOb3RpZnlEZWNvZGVGYWlsZWQMASBxdWVyeV9pZDABHFF1ZXJ5SWQAATBwYWxsZXRfaW5kZXgIAQh1OAABKGNhbGxfaW5kZXgIAQh1OAAJDFEBUXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVjZWl2ZWQgYW5kIHF1ZXJ5IGlzIHJlbW92ZWQuIFRoZSBkaXNwYXRjaCB3YXMgdW5hYmxlIHRvIGJlWQFkZWNvZGVkIGludG8gYSBgQ2FsbGA7IHRoaXMgbWlnaHQgYmUgZHVlIHRvIGRpc3BhdGNoIGZ1bmN0aW9uIGhhdmluZyBhIHNpZ25hdHVyZSB3aGljaJRpcyBub3QgYChvcmlnaW4sIFF1ZXJ5SWQsIFJlc3BvbnNlKWAuQEludmFsaWRSZXNwb25kZXIMARhvcmlnaW5VAQEgTG9jYXRpb24AASBxdWVyeV9pZDABHFF1ZXJ5SWQAAURleHBlY3RlZF9sb2NhdGlvboUGAUBPcHRpb248TG9jYXRpb24+AAoMWQFFeHBlY3RlZCBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBidXQgdGhlIG9yaWdpbiBsb2NhdGlvbiBvZiB0aGUgcmVzcG9uc2UgZG9lc1UBbm90IG1hdGNoIHRoYXQgZXhwZWN0ZWQuIFRoZSBxdWVyeSByZW1haW5zIHJlZ2lzdGVyZWQgZm9yIGEgbGF0ZXIsIHZhbGlkLCByZXNwb25zZSB0b2xiZSByZWNlaXZlZCBhbmQgYWN0ZWQgdXBvbi5cSW52YWxpZFJlc3BvbmRlclZlcnNpb24IARhvcmlnaW5VAQEgTG9jYXRpb24AASBxdWVyeV9pZDABHFF1ZXJ5SWQACxxRAUV4cGVjdGVkIHF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGJ1dCB0aGUgZXhwZWN0ZWQgb3JpZ2luIGxvY2F0aW9uIHBsYWNlZCBpbk0Bc3RvcmFnZSBieSB0aGlzIHJ1bnRpbWUgcHJldmlvdXNseSBjYW5ub3QgYmUgZGVjb2RlZC4gVGhlIHF1ZXJ5IHJlbWFpbnMgcmVnaXN0ZXJlZC4AQQFUaGlzIGlzIHVuZXhwZWN0ZWQgKHNpbmNlIGEgbG9jYXRpb24gcGxhY2VkIGluIHN0b3JhZ2UgaW4gYSBwcmV2aW91c2x5IGV4ZWN1dGluZ00BcnVudGltZSBzaG91bGQgYmUgcmVhZGFibGUgcHJpb3IgdG8gcXVlcnkgdGltZW91dCkgYW5kIGRhbmdlcm91cyBzaW5jZSB0aGUgcG9zc2libHlZAXZhbGlkIHJlc3BvbnNlIHdpbGwgYmUgZHJvcHBlZC4gTWFudWFsIGdvdmVybmFuY2UgaW50ZXJ2ZW50aW9uIGlzIHByb2JhYmx5IGdvaW5nIHRvIGJlHG5lZWRlZC40UmVzcG9uc2VUYWtlbgQBIHF1ZXJ5X2lkMAEcUXVlcnlJZAAMBMhSZWNlaXZlZCBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWFkIGFuZCByZW1vdmVkLjRBc3NldHNUcmFwcGVkDAEQaGFzaDQBEEgyNTYAARhvcmlnaW5VAQEgTG9jYXRpb24AARhhc3NldHO9BgE8VmVyc2lvbmVkQXNzZXRzAA0EuFNvbWUgYXNzZXRzIGhhdmUgYmVlbiBwbGFjZWQgaW4gYW4gYXNzZXQgdHJhcC5UVmVyc2lvbkNoYW5nZU5vdGlmaWVkEAEsZGVzdGluYXRpb25VAQEgTG9jYXRpb24AARhyZXN1bHQQAShYY21WZXJzaW9uAAEQY29zdFEGARhBc3NldHMAAShtZXNzYWdlX2lkBAEcWGNtSGFzaAAODCUBQW4gWENNIHZlcnNpb24gY2hhbmdlIG5vdGlmaWNhdGlvbiBtZXNzYWdlIGhhcyBiZWVuIGF0dGVtcHRlZCB0byBiZSBzZW50LgDgVGhlIGNvc3Qgb2Ygc2VuZGluZyBpdCAoYm9ybmUgYnkgdGhlIGNoYWluKSBpcyBpbmNsdWRlZC5cU3VwcG9ydGVkVmVyc2lvbkNoYW5nZWQIASBsb2NhdGlvblUBASBMb2NhdGlvbgABHHZlcnNpb24QAShYY21WZXJzaW9uAA8IOQFUaGUgc3VwcG9ydGVkIHZlcnNpb24gb2YgYSBsb2NhdGlvbiBoYXMgYmVlbiBjaGFuZ2VkLiBUaGlzIG1pZ2h0IGJlIHRocm91Z2ggYW7AYXV0b21hdGljIG5vdGlmaWNhdGlvbiBvciBhIG1hbnVhbCBpbnRlcnZlbnRpb24uUE5vdGlmeVRhcmdldFNlbmRGYWlsDAEgbG9jYXRpb25VAQEgTG9jYXRpb24AASBxdWVyeV9pZDABHFF1ZXJ5SWQAARRlcnJvcnEGASBYY21FcnJvcgAQCFkBQSBnaXZlbiBsb2NhdGlvbiB3aGljaCBoYWQgYSB2ZXJzaW9uIGNoYW5nZSBzdWJzY3JpcHRpb24gd2FzIGRyb3BwZWQgb3dpbmcgdG8gYW4gZXJyb3J8c2VuZGluZyB0aGUgbm90aWZpY2F0aW9uIHRvIGl0LmROb3RpZnlUYXJnZXRNaWdyYXRpb25GYWlsCAEgbG9jYXRpb26NAQFEVmVyc2lvbmVkTG9jYXRpb24AASBxdWVyeV9pZDABHFF1ZXJ5SWQAEQhZAUEgZ2l2ZW4gbG9jYXRpb24gd2hpY2ggaGFkIGEgdmVyc2lvbiBjaGFuZ2Ugc3Vic2NyaXB0aW9uIHdhcyBkcm9wcGVkIG93aW5nIHRvIGFuIGVycm9ytG1pZ3JhdGluZyB0aGUgbG9jYXRpb24gdG8gb3VyIG5ldyBYQ00gZm9ybWF0LlRJbnZhbGlkUXVlcmllclZlcnNpb24IARhvcmlnaW5VAQEgTG9jYXRpb24AASBxdWVyeV9pZDABHFF1ZXJ5SWQAEhxVAUV4cGVjdGVkIHF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGJ1dCB0aGUgZXhwZWN0ZWQgcXVlcmllciBsb2NhdGlvbiBwbGFjZWQgaW5NAXN0b3JhZ2UgYnkgdGhpcyBydW50aW1lIHByZXZpb3VzbHkgY2Fubm90IGJlIGRlY29kZWQuIFRoZSBxdWVyeSByZW1haW5zIHJlZ2lzdGVyZWQuAEEBVGhpcyBpcyB1bmV4cGVjdGVkIChzaW5jZSBhIGxvY2F0aW9uIHBsYWNlZCBpbiBzdG9yYWdlIGluIGEgcHJldmlvdXNseSBleGVjdXRpbmdNAXJ1bnRpbWUgc2hvdWxkIGJlIHJlYWRhYmxlIHByaW9yIHRvIHF1ZXJ5IHRpbWVvdXQpIGFuZCBkYW5nZXJvdXMgc2luY2UgdGhlIHBvc3NpYmx5WQF2YWxpZCByZXNwb25zZSB3aWxsIGJlIGRyb3BwZWQuIE1hbnVhbCBnb3Zlcm5hbmNlIGludGVydmVudGlvbiBpcyBwcm9iYWJseSBnb2luZyB0byBiZRxuZWVkZWQuOEludmFsaWRRdWVyaWVyEAEYb3JpZ2luVQEBIExvY2F0aW9uAAEgcXVlcnlfaWQwARxRdWVyeUlkAAFAZXhwZWN0ZWRfcXVlcmllclUBASBMb2NhdGlvbgABUG1heWJlX2FjdHVhbF9xdWVyaWVyhQYBQE9wdGlvbjxMb2NhdGlvbj4AEwxdAUV4cGVjdGVkIHF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGJ1dCB0aGUgcXVlcmllciBsb2NhdGlvbiBvZiB0aGUgcmVzcG9uc2UgZG9lc1EBbm90IG1hdGNoIHRoZSBleHBlY3RlZC4gVGhlIHF1ZXJ5IHJlbWFpbnMgcmVnaXN0ZXJlZCBmb3IgYSBsYXRlciwgdmFsaWQsIHJlc3BvbnNlIHRvbGJlIHJlY2VpdmVkIGFuZCBhY3RlZCB1cG9uLlBWZXJzaW9uTm90aWZ5U3RhcnRlZAwBLGRlc3RpbmF0aW9uVQEBIExvY2F0aW9uAAEQY29zdFEGARhBc3NldHMAAShtZXNzYWdlX2lkBAEcWGNtSGFzaAAUCFkBQSByZW1vdGUgaGFzIHJlcXVlc3RlZCBYQ00gdmVyc2lvbiBjaGFuZ2Ugbm90aWZpY2F0aW9uIGZyb20gdXMgYW5kIHdlIGhhdmUgaG9ub3JlZCBpdC4dAUEgdmVyc2lvbiBpbmZvcm1hdGlvbiBtZXNzYWdlIGlzIHNlbnQgdG8gdGhlbSBhbmQgaXRzIGNvc3QgaXMgaW5jbHVkZWQuWFZlcnNpb25Ob3RpZnlSZXF1ZXN0ZWQMASxkZXN0aW5hdGlvblUBASBMb2NhdGlvbgABEGNvc3RRBgEYQXNzZXRzAAEobWVzc2FnZV9pZAQBHFhjbUhhc2gAFQQ9AVdlIGhhdmUgcmVxdWVzdGVkIHRoYXQgYSByZW1vdGUgY2hhaW4gc2VuZCB1cyBYQ00gdmVyc2lvbiBjaGFuZ2Ugbm90aWZpY2F0aW9ucy5gVmVyc2lvbk5vdGlmeVVucmVxdWVzdGVkDAEsZGVzdGluYXRpb25VAQEgTG9jYXRpb24AARBjb3N0UQYBGEFzc2V0cwABKG1lc3NhZ2VfaWQEARxYY21IYXNoABYIJQFXZSBoYXZlIHJlcXVlc3RlZCB0aGF0IGEgcmVtb3RlIGNoYWluIHN0b3BzIHNlbmRpbmcgdXMgWENNIHZlcnNpb24gY2hhbmdlOG5vdGlmaWNhdGlvbnMuIEZlZXNQYWlkCAEYcGF5aW5nVQEBIExvY2F0aW9uAAEQZmVlc1EGARhBc3NldHMAFwQxAUZlZXMgd2VyZSBwYWlkIGZyb20gYSBsb2NhdGlvbiBmb3IgYW4gb3BlcmF0aW9uIChvZnRlbiBmb3IgdXNpbmcgYFNlbmRYY21gKS40QXNzZXRzQ2xhaW1lZAwBEGhhc2g0ARBIMjU2AAEYb3JpZ2luVQEBIExvY2F0aW9uAAEYYXNzZXRzvQYBPFZlcnNpb25lZEFzc2V0cwAYBMBTb21lIGFzc2V0cyBoYXZlIGJlZW4gY2xhaW1lZCBmcm9tIGFuIGFzc2V0IHRyYXBgVmVyc2lvbk1pZ3JhdGlvbkZpbmlzaGVkBAEcdmVyc2lvbhABKFhjbVZlcnNpb24AGQSEQSBYQ00gdmVyc2lvbiBtaWdyYXRpb24gZmluaXNoZWQuPEFsaWFzQXV0aG9yaXplZAwBHGFsaWFzZXJVAQEgTG9jYXRpb24AARh0YXJnZXRVAQEgTG9jYXRpb24AARhleHBpcnn1BgEsT3B0aW9uPHU2ND4AGghdAUFuIGBhbGlhc2VyYCBsb2NhdGlvbiB3YXMgYXV0aG9yaXplZCBieSBgdGFyZ2V0YCB0byBhbGlhcyBpdCwgYXV0aG9yaXphdGlvbiB2YWxpZCB1bnRpbFhgZXhwaXJ5YCBibG9jayBudW1iZXIuZEFsaWFzQXV0aG9yaXphdGlvblJlbW92ZWQIARxhbGlhc2VyVQEBIExvY2F0aW9uAAEYdGFyZ2V0VQEBIExvY2F0aW9uABsEzGB0YXJnZXRgIHJlbW92ZWQgYWxpYXMgYXV0aG9yaXphdGlvbiBmb3IgYGFsaWFzZXJgLnBBbGlhc2VzQXV0aG9yaXphdGlvbnNSZW1vdmVkBAEYdGFyZ2V0VQEBIExvY2F0aW9uABwEqGB0YXJnZXRgIHJlbW92ZWQgYWxsIGFsaWFzIGF1dGhvcml6YXRpb25zLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldLUIECxzdGFnaW5nX3hjbQh2NRh0cmFpdHMcT3V0Y29tZQABDCBDb21wbGV0ZQQBEHVzZWQoARhXZWlnaHQAAAAoSW5jb21wbGV0ZQgBEHVzZWQoARhXZWlnaHQAARRlcnJvcrkIAUBJbnN0cnVjdGlvbkVycm9yAAEAFEVycm9yBAC5CAFASW5zdHJ1Y3Rpb25FcnJvcgACAAC5CBAsc3RhZ2luZ194Y20IdjUYdHJhaXRzQEluc3RydWN0aW9uRXJyb3IAAAgBFGluZGV4CAFASW5zdHJ1Y3Rpb25JbmRleAABFGVycm9ycQYBFEVycm9yAAC9CBAMeGNtCHYzGHRyYWl0cyRTZW5kRXJyb3IAARw0Tm90QXBwbGljYWJsZQAAACRUcmFuc3BvcnQAAQAoVW5yb3V0YWJsZQACAFhEZXN0aW5hdGlvblVuc3VwcG9ydGVkAAMAVEV4Y2VlZHNNYXhNZXNzYWdlU2l6ZQAEADxNaXNzaW5nQXJndW1lbnQABQAQRmVlcwAGAADBCAxQcGFsbGV0X21lc3NhZ2VfcXVldWUYcGFsbGV0FEV2ZW50BARUAAEQQFByb2Nlc3NpbmdGYWlsZWQMAQhpZDQBEEgyNTYElFRoZSBgYmxha2UyXzI1NmAgaGFzaCBvZiB0aGUgbWVzc2FnZS4BGG9yaWdpbv0GAUhNZXNzYWdlT3JpZ2luT2Y8VD4EZFRoZSBxdWV1ZSBvZiB0aGUgbWVzc2FnZS4BFGVycm9yxQgBTFByb2Nlc3NNZXNzYWdlRXJyb3IQYFRoZSBlcnJvciB0aGF0IG9jY3VycmVkLgBJAVRoaXMgZXJyb3IgaXMgcHJldHR5IG9wYXF1ZS4gTW9yZSBmaW5lLWdyYWluZWQgZXJyb3JzIG5lZWQgdG8gYmUgZW1pdHRlZCBhcyBldmVudHNoYnkgdGhlIGBNZXNzYWdlUHJvY2Vzc29yYC4ABFUBTWVzc2FnZSBkaXNjYXJkZWQgZHVlIHRvIGFuIGVycm9yIGluIHRoZSBgTWVzc2FnZVByb2Nlc3NvcmAgKHVzdWFsbHkgYSBmb3JtYXQgZXJyb3IpLiRQcm9jZXNzZWQQAQhpZDQBEEgyNTYElFRoZSBgYmxha2UyXzI1NmAgaGFzaCBvZiB0aGUgbWVzc2FnZS4BGG9yaWdpbv0GAUhNZXNzYWdlT3JpZ2luT2Y8VD4EZFRoZSBxdWV1ZSBvZiB0aGUgbWVzc2FnZS4BLHdlaWdodF91c2VkKAEYV2VpZ2h0BMBIb3cgbXVjaCB3ZWlnaHQgd2FzIHVzZWQgdG8gcHJvY2VzcyB0aGUgbWVzc2FnZS4BHHN1Y2Nlc3MgARBib29sGIhXaGV0aGVyIHRoZSBtZXNzYWdlIHdhcyBwcm9jZXNzZWQuAEkBTm90ZSB0aGF0IHRoaXMgZG9lcyBub3QgbWVhbiB0aGF0IHRoZSB1bmRlcmx5aW5nIGBNZXNzYWdlUHJvY2Vzc29yYCB3YXMgaW50ZXJuYWxseTUBc3VjY2Vzc2Z1bC4gSXQgKnNvbGVseSogbWVhbnMgdGhhdCB0aGUgTVEgcGFsbGV0IHdpbGwgdHJlYXQgdGhpcyBhcyBhIHN1Y2Nlc3NNAWNvbmRpdGlvbiBhbmQgZGlzY2FyZCB0aGUgbWVzc2FnZS4gQW55IGludGVybmFsIGVycm9yIG5lZWRzIHRvIGJlIGVtaXR0ZWQgYXMgZXZlbnRzaGJ5IHRoZSBgTWVzc2FnZVByb2Nlc3NvcmAuAQRUTWVzc2FnZSBpcyBwcm9jZXNzZWQuSE92ZXJ3ZWlnaHRFbnF1ZXVlZBABCGlkBAEgW3U4OyAzMl0ElFRoZSBgYmxha2UyXzI1NmAgaGFzaCBvZiB0aGUgbWVzc2FnZS4BGG9yaWdpbv0GAUhNZXNzYWdlT3JpZ2luT2Y8VD4EZFRoZSBxdWV1ZSBvZiB0aGUgbWVzc2FnZS4BKHBhZ2VfaW5kZXgQASRQYWdlSW5kZXgEYFRoZSBwYWdlIG9mIHRoZSBtZXNzYWdlLgE0bWVzc2FnZV9pbmRleBABHFQ6OlNpemUEpFRoZSBpbmRleCBvZiB0aGUgbWVzc2FnZSB3aXRoaW4gdGhlIHBhZ2UuAgSMTWVzc2FnZSBwbGFjZWQgaW4gb3ZlcndlaWdodCBxdWV1ZS4oUGFnZVJlYXBlZAgBGG9yaWdpbv0GAUhNZXNzYWdlT3JpZ2luT2Y8VD4EWFRoZSBxdWV1ZSBvZiB0aGUgcGFnZS4BFGluZGV4EAEkUGFnZUluZGV4BFhUaGUgaW5kZXggb2YgdGhlIHBhZ2UuAwRUVGhpcyBwYWdlIHdhcyByZWFwZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0xQgQNGZyYW1lX3N1cHBvcnQYdHJhaXRzIG1lc3NhZ2VzTFByb2Nlc3NNZXNzYWdlRXJyb3IAARgkQmFkRm9ybWF0AAAAHENvcnJ1cHQAAQAsVW5zdXBwb3J0ZWQAAgAoT3ZlcndlaWdodAQAKAEYV2VpZ2h0AAMAFFlpZWxkAAQARFN0YWNrTGltaXRSZWFjaGVkAAUAAMkIDERwYWxsZXRfYXNzZXRfcmF0ZRhwYWxsZXQURXZlbnQEBFQAAQxAQXNzZXRSYXRlQ3JlYXRlZAgBKGFzc2V0X2tpbmTsATBUOjpBc3NldEtpbmQAARByYXRlCQcBJEZpeGVkVTEyOAAAAEBBc3NldFJhdGVSZW1vdmVkBAEoYXNzZXRfa2luZOwBMFQ6OkFzc2V0S2luZAABAEBBc3NldFJhdGVVcGRhdGVkDAEoYXNzZXRfa2luZOwBMFQ6OkFzc2V0S2luZAABDG9sZAkHASRGaXhlZFUxMjgAAQxuZXcJBwEkRml4ZWRVMTI4AAIABHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0zQgMLHBhbGxldF9zdWRvGHBhbGxldBRFdmVudAQEVAABEBRTdWRpZAQBLHN1ZG9fcmVzdWx0jAE4RGlzcGF0Y2hSZXN1bHQEtFRoZSByZXN1bHQgb2YgdGhlIGNhbGwgbWFkZSBieSB0aGUgc3VkbyB1c2VyLgAEcEEgc3VkbyBjYWxsIGp1c3QgdG9vayBwbGFjZS4oS2V5Q2hhbmdlZAgBDG9sZDECAVBPcHRpb248VDo6QWNjb3VudElkPgS0VGhlIG9sZCBzdWRvIGtleSAoaWYgb25lIHdhcyBwcmV2aW91c2x5IHNldCkuAQxuZXcAATBUOjpBY2NvdW50SWQEiFRoZSBuZXcgc3VkbyBrZXkgKGlmIG9uZSB3YXMgc2V0KS4BBHhUaGUgc3VkbyBrZXkgaGFzIGJlZW4gdXBkYXRlZC4oS2V5UmVtb3ZlZAACBIBUaGUga2V5IHdhcyBwZXJtYW5lbnRseSByZW1vdmVkLihTdWRvQXNEb25lBAEsc3Vkb19yZXN1bHSMAThEaXNwYXRjaFJlc3VsdAS0VGhlIHJlc3VsdCBvZiB0aGUgY2FsbCBtYWRlIGJ5IHRoZSBzdWRvIHVzZXIuAwTIQSBbc3Vkb19hc10oUGFsbGV0OjpzdWRvX2FzKSBjYWxsIGp1c3QgdG9vayBwbGFjZS4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTRCAxIcGFsbGV0X3JjX21pZ3JhdG9yGHBhbGxldBRFdmVudAQEVAABSDxTdGFnZVRyYW5zaXRpb24IAQxvbGRVBwFMTWlncmF0aW9uU3RhZ2VPZjxUPgSQVGhlIG9sZCBzdGFnZSBiZWZvcmUgdGhlIHRyYW5zaXRpb24uAQxuZXdVBwFMTWlncmF0aW9uU3RhZ2VPZjxUPgSMVGhlIG5ldyBzdGFnZSBhZnRlciB0aGUgdHJhbnNpdGlvbi4ABIBBIHN0YWdlIHRyYW5zaXRpb24gaGFzIG9jY3VycmVkLmBBc3NldEh1Yk1pZ3JhdGlvblN0YXJ0ZWQAARhJAVRoZSBBc3NldCBIdWIgTWlncmF0aW9uIHN0YXJ0ZWQgYW5kIGlzIGFjdGl2ZSB1bnRpbCBgQXNzZXRIdWJNaWdyYXRpb25GaW5pc2hlZGAgaXMgZW1pdHRlZC4AVQFUaGlzIGV2ZW50IGlzIGVxdWl2YWxlbnQgdG8gYFN0YWdlVHJhbnNpdGlvbiB7IG5ldzogSW5pdGlhbGl6aW5nLCAuLiB9YCBidXQgaXMgZWFzaWVyLQF0byB1bmRlcnN0YW5kLiBUaGUgYWN0aXZhdGlvbiBpcyBpbW1lZGlhdGUgYW5kIGFmZmVjdHMgYWxsIGV2ZW50cyBoYXBwZW5pbmcsYWZ0ZXJ3YXJkcy5kQXNzZXRIdWJNaWdyYXRpb25GaW5pc2hlZAACFIRUaGUgQXNzZXQgSHViIE1pZ3JhdGlvbiBmaW5pc2hlZC4AWQFUaGlzIGV2ZW50IGlzIGVxdWl2YWxlbnQgdG8gYFN0YWdlVHJhbnNpdGlvbiB7IG5ldzogTWlncmF0aW9uRG9uZSwgLi4gfWAgYnV0IGlzIGVhc2llcikBdG8gdW5kZXJzdGFuZC4gVGhlIGZpbmlzaGluZyBpcyBpbW1lZGlhdGUgYW5kIGFmZmVjdHMgYWxsIGV2ZW50cyBoYXBwZW5pbmcsYWZ0ZXJ3YXJkcy5UUXVlcnlSZXNwb25zZVJlY2VpdmVkCAEgcXVlcnlfaWQwAQx1NjQENFRoZSBxdWVyeSBJRC4BIHJlc3BvbnNl1QUBOE1heWJlRXJyb3JDb2RlBDRUaGUgcmVzcG9uc2UuAwSMQSBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZC5AWGNtUmVzZW5kQXR0ZW1wdAgBIHF1ZXJ5X2lkMAEMdTY0BDRUaGUgcXVlcnkgSUQuAShzZW5kX2Vycm9y1QgBRE9wdGlvbjxTZW5kRXJyb3I+BEhUaGUgZXJyb3IgbWVzc2FnZS4EBHhBIFhDTSBtZXNzYWdlIGhhcyBiZWVuIHJlc2VudC5cVW5wcm9jZXNzZWRNc2dCdWZmZXJTZXQIAQxuZXcQAQx1MzIENFRoZSBuZXcgc2l6ZS4BDG9sZBABDHUzMgQ0VGhlIG9sZCBzaXplLgUExFRoZSB1bnByb2Nlc3NlZCBtZXNzYWdlIGJ1ZmZlciBzaXplIGhhcyBiZWVuIHNldC5UQWhVbXBRdWV1ZVByaW9yaXR5U2V0DAEscHJpb3JpdGl6ZWQgARBib29sDOxJbmRpY2F0ZXMgaWYgQUggVU1QIHF1ZXVlIHdhcyBzdWNjZXNzZnVsbHkgc2V0IGFzIHByaW9yaXR5Li0BSWYgYGZhbHNlYCwgaXQgbWVhbnMgd2UncmUgaW4gdGhlIHJvdW5kLXJvYmluIHBoYXNlIG9mIG91ciBwcmlvcml0eSBwYXR0ZXJuKQEoc2VlIFtgQ29uZmlnOjpBaFVtcFF1ZXVlUHJpb3JpdHlQYXR0ZXJuYF0pLCB3aGVyZSBubyBxdWV1ZSBnZXRzIHByaW9yaXR5LgEsY3ljbGVfYmxvY2sQAURCbG9ja051bWJlckZvcjxUPgTwQ3VycmVudCBibG9jayBudW1iZXIgd2l0aGluIHRoZSBwYXR0ZXJuIGN5Y2xlICgxIHRvIHBlcmlvZCkuATBjeWNsZV9wZXJpb2QQAURCbG9ja051bWJlckZvcjxUPgSsVG90YWwgbnVtYmVyIG9mIGJsb2NrcyBpbiB0aGUgcGF0dGVybiBjeWNsZQYE8FdoZXRoZXIgdGhlIEFIIFVNUCBxdWV1ZSB3YXMgcHJpb3JpdGl6ZWQgZm9yIHRoZSBuZXh0IGJsb2NrLmxBaFVtcFF1ZXVlUHJpb3JpdHlDb25maWdTZXQIAQxvbGT9BwGUQWhVbXBRdWV1ZVByaW9yaXR5PEJsb2NrTnVtYmVyRm9yPFQ+PgRkVGhlIG9sZCBwcmlvcml0eSBwYXR0ZXJuLgEMbmV3/QcBlEFoVW1wUXVldWVQcmlvcml0eTxCbG9ja051bWJlckZvcjxUPj4EZFRoZSBuZXcgcHJpb3JpdHkgcGF0dGVybi4HBKRUaGUgQUggVU1QIHF1ZXVlIHByaW9yaXR5IGNvbmZpZyB3YXMgc2V0LmBNaWdyYXRlZEJhbGFuY2VSZWNvcmRTZXQIARBrZXB0GAEoVDo6QmFsYW5jZQABIG1pZ3JhdGVkGAEoVDo6QmFsYW5jZQAIBIBUaGUgdG90YWwgaXNzdWFuY2Ugd2FzIHJlY29yZGVkLlxNaWdyYXRlZEJhbGFuY2VDb25zdW1lZAgBEGtlcHQYAShUOjpCYWxhbmNlAAEgbWlncmF0ZWQYAShUOjpCYWxhbmNlAAkEhFRoZSBSQyBrZXB0IGJhbGFuY2Ugd2FzIGNvbnN1bWVkLihNYW5hZ2VyU2V0CAEMb2xkMQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+BGxUaGUgb2xkIG1hbmFnZXIgYWNjb3VudCBpZC4BDG5ldzECAVBPcHRpb248VDo6QWNjb3VudElkPgRsVGhlIG5ldyBtYW5hZ2VyIGFjY291bnQgaWQuCgR8VGhlIG1hbmFnZXIgYWNjb3VudCBpZCB3YXMgc2V0LhxYY21TZW50EAEYb3JpZ2luVQEBIExvY2F0aW9uAAEsZGVzdGluYXRpb25VAQEgTG9jYXRpb24AARxtZXNzYWdlRQYBHFhjbTwoKT4AAShtZXNzYWdlX2lkBAEcWGNtSGFzaAALBGBBbiBYQ00gbWVzc2FnZSB3YXMgc2VudC5YU3Rha2luZ0VsZWN0aW9uc1BhdXNlZAAMBIhUaGUgc3Rha2luZyBlbGVjdGlvbnMgd2VyZSBwYXVzZWQuREFjY291bnRzUHJlc2VydmVkBAEgYWNjb3VudHMFAgFEVmVjPFQ6OkFjY291bnRJZD4EkFRoZSBhY2NvdW50cyB0aGF0IHdpbGwgYmUgcHJlc2VydmVkLg0E1FRoZSBhY2NvdW50cyB0byBiZSBwcmVzZXJ2ZWQgb24gUmVsYXkgQ2hhaW4gd2VyZSBzZXQuMENhbmNlbGxlclNldAgBDG9sZDECAVBPcHRpb248VDo6QWNjb3VudElkPgR0VGhlIG9sZCBjYW5jZWxsZXIgYWNjb3VudCBpZC4BDG5ldzECAVBPcHRpb248VDo6QWNjb3VudElkPgR0VGhlIG5ldyBjYW5jZWxsZXIgYWNjb3VudCBpZC4OBIRUaGUgY2FuY2VsbGVyIGFjY291bnQgaWQgd2FzIHNldC48TWlncmF0aW9uUGF1c2VkBAEscGF1c2Vfc3RhZ2VVBwFMTWlncmF0aW9uU3RhZ2VPZjxUPgSwVGhlIHN0YWdlIGF0IHdoaWNoIHRoZSBtaWdyYXRpb24gd2FzIHBhdXNlZC4PBGRUaGUgbWlncmF0aW9uIHdhcyBwYXVzZWQuSE1pZ3JhdGlvbkNhbmNlbGxlZAAQBHBUaGUgbWlncmF0aW9uIHdhcyBjYW5jZWxsZWQuTFB1cmVBY2NvdW50c0luZGV4ZWQEAURudW1fcHVyZV9hY2NvdW50cxABDHUzMgSQVGhlIG51bWJlciBvZiBpbmRleGVkIHB1cmUgYWNjb3VudHMuEQQpAVNvbWUgcHVyZSBhY2NvdW50cyB3ZXJlIGluZGV4ZWQgZm9yIHBvc3NpYmx5IHJlY2VpdmluZyBmcmVlIGBBbnlgIHByb3hpZXMuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV01QgEGE9wdGlvbgQEVAG9CAEIEE5vbmUAAAAQU29tZQQAvQgAAAEAANkICDBmcmFtZV9zeXN0ZW0UUGhhc2UAAQw4QXBwbHlFeHRyaW5zaWMEABABDHUzMgAAADBGaW5hbGl6YXRpb24AAQA4SW5pdGlhbGl6YXRpb24AAgAA3QgAAAKEAOEICDBmcmFtZV9zeXN0ZW1YTGFzdFJ1bnRpbWVVcGdyYWRlSW5mbwAACAEwc3BlY192ZXJzaW9u/AFMY29kZWM6OkNvbXBhY3Q8dTMyPgABJHNwZWNfbmFtZeUIAURDb3c8J3N0YXRpYywgc3RyPgAA5QgEDENvdwQEVAHpCAAEAOkIAAAA6QgAAAUCAO0ICDBmcmFtZV9zeXN0ZW1gQ29kZVVwZ3JhZGVBdXRob3JpemF0aW9uBARUAAAIASRjb2RlX2hhc2g0ARxUOjpIYXNoAAE0Y2hlY2tfdmVyc2lvbiABEGJvb2wAAPEIDDBmcmFtZV9zeXN0ZW0YbGltaXRzMEJsb2NrV2VpZ2h0cwAADAEoYmFzZV9ibG9jaygBGFdlaWdodAABJG1heF9ibG9jaygBGFdlaWdodAABJHBlcl9jbGFzc/UIAYRQZXJEaXNwYXRjaENsYXNzPFdlaWdodHNQZXJDbGFzcz4AAPUIDDRmcmFtZV9zdXBwb3J0IGRpc3BhdGNoQFBlckRpc3BhdGNoQ2xhc3MEBFQB+QgADAEYbm9ybWFs+QgBBFQAASxvcGVyYXRpb25hbPkIAQRUAAEkbWFuZGF0b3J5+QgBBFQAAPkIDDBmcmFtZV9zeXN0ZW0YbGltaXRzPFdlaWdodHNQZXJDbGFzcwAAEAE4YmFzZV9leHRyaW5zaWMoARhXZWlnaHQAATRtYXhfZXh0cmluc2ljiQYBOE9wdGlvbjxXZWlnaHQ+AAEkbWF4X3RvdGFsiQYBOE9wdGlvbjxXZWlnaHQ+AAEgcmVzZXJ2ZWSJBgE4T3B0aW9uPFdlaWdodD4AAP0IDDBmcmFtZV9zeXN0ZW0YbGltaXRzLEJsb2NrTGVuZ3RoAAAEAQxtYXgBCQFUUGVyRGlzcGF0Y2hDbGFzczx1MzI+AAABCQw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaEBQZXJEaXNwYXRjaENsYXNzBARUARAADAEYbm9ybWFsEAEEVAABLG9wZXJhdGlvbmFsEAEEVAABJG1hbmRhdG9yeRABBFQAAAUJCChzcF93ZWlnaHRzPFJ1bnRpbWVEYldlaWdodAAACAEQcmVhZDABDHU2NAABFHdyaXRlMAEMdTY0AAAJCQgoc3BfdmVyc2lvbjhSdW50aW1lVmVyc2lvbgAAIAEkc3BlY19uYW1l5QgBRENvdzwnc3RhdGljLCBzdHI+AAEkaW1wbF9uYW1l5QgBRENvdzwnc3RhdGljLCBzdHI+AAFEYXV0aG9yaW5nX3ZlcnNpb24QAQx1MzIAATBzcGVjX3ZlcnNpb24QAQx1MzIAATBpbXBsX3ZlcnNpb24QAQx1MzIAARBhcGlzDQkBHEFwaXNWZWMAAUx0cmFuc2FjdGlvbl92ZXJzaW9uEAEMdTMyAAE4c3lzdGVtX3ZlcnNpb24IAQh1OAAADQkEDENvdwQEVAERCQAEABEJAAAAEQkAAAIVCQAVCQAABAixBRAAGQkMMGZyYW1lX3N5c3RlbRhwYWxsZXQURXJyb3IEBFQAASQ8SW52YWxpZFNwZWNOYW1lAAAIEQFUaGUgbmFtZSBvZiBzcGVjaWZpY2F0aW9uIGRvZXMgbm90IG1hdGNoIGJldHdlZW4gdGhlIGN1cnJlbnQgcnVudGltZVBhbmQgdGhlIG5ldyBydW50aW1lLmhTcGVjVmVyc2lvbk5lZWRzVG9JbmNyZWFzZQABCEEBVGhlIHNwZWNpZmljYXRpb24gdmVyc2lvbiBpcyBub3QgYWxsb3dlZCB0byBkZWNyZWFzZSBiZXR3ZWVuIHRoZSBjdXJyZW50IHJ1bnRpbWVQYW5kIHRoZSBuZXcgcnVudGltZS50RmFpbGVkVG9FeHRyYWN0UnVudGltZVZlcnNpb24AAgzsRmFpbGVkIHRvIGV4dHJhY3QgdGhlIHJ1bnRpbWUgdmVyc2lvbiBmcm9tIHRoZSBuZXcgcnVudGltZS4ACQFFaXRoZXIgY2FsbGluZyBgQ29yZV92ZXJzaW9uYCBvciBkZWNvZGluZyBgUnVudGltZVZlcnNpb25gIGZhaWxlZC5MTm9uRGVmYXVsdENvbXBvc2l0ZQADBPxTdWljaWRlIGNhbGxlZCB3aGVuIHRoZSBhY2NvdW50IGhhcyBub24tZGVmYXVsdCBjb21wb3NpdGUgZGF0YS48Tm9uWmVyb1JlZkNvdW50AAQENQFUaGVyZSBpcyBhIG5vbi16ZXJvIHJlZmVyZW5jZSBjb3VudCBwcmV2ZW50aW5nIHRoZSBhY2NvdW50IGZyb20gYmVpbmcgcHVyZ2VkLjBDYWxsRmlsdGVyZWQABQTQVGhlIG9yaWdpbiBmaWx0ZXIgcHJldmVudCB0aGUgY2FsbCB0byBiZSBkaXNwYXRjaGVkLmxNdWx0aUJsb2NrTWlncmF0aW9uc09uZ29pbmcABgRVAUEgbXVsdGktYmxvY2sgbWlncmF0aW9uIGlzIG9uZ29pbmcgYW5kIHByZXZlbnRzIHRoZSBjdXJyZW50IGNvZGUgZnJvbSBiZWluZyByZXBsYWNlZC5ETm90aGluZ0F1dGhvcml6ZWQABwRYTm8gdXBncmFkZSBhdXRob3JpemVkLjBVbmF1dGhvcml6ZWQACASUVGhlIHN1Ym1pdHRlZCBjb2RlIGlzIG5vdCBhdXRob3JpemVkLgRsRXJyb3IgZm9yIHRoZSBTeXN0ZW0gcGFsbGV0HQkQKHNwX3J1bnRpbWUcZ2VuZXJpYxRibG9jaxRCbG9jawgYSGVhZGVyAdUBJEV4dHJpbnNpYwEhCQAIARhoZWFkZXLVAQEYSGVhZGVyAAEoZXh0cmluc2ljc1kJAThWZWM8RXh0cmluc2ljPgAAIQkQKHNwX3J1bnRpbWUcZ2VuZXJpY0x1bmNoZWNrZWRfZXh0cmluc2ljSFVuY2hlY2tlZEV4dHJpbnNpYxAcQWRkcmVzcwH5ARBDYWxsAakBJFNpZ25hdHVyZQFZBRRFeHRyYQElCQAEADgAAAAlCQAABCgpCS0JMQk1CTkJQQlFCUkJTQlRCQApCRAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnNUY2hlY2tfbm9uX3plcm9fc2VuZGVySENoZWNrTm9uWmVyb1NlbmRlcgQEVAAAAAAtCRAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnNIY2hlY2tfc3BlY192ZXJzaW9uQENoZWNrU3BlY1ZlcnNpb24EBFQAAAAAMQkQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zQGNoZWNrX3R4X3ZlcnNpb244Q2hlY2tUeFZlcnNpb24EBFQAAAAANQkQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zNGNoZWNrX2dlbmVzaXMwQ2hlY2tHZW5lc2lzBARUAAAAADkJEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uczxjaGVja19tb3J0YWxpdHk4Q2hlY2tNb3J0YWxpdHkEBFQAAAQAPQkBDEVyYQAAPQkQKHNwX3J1bnRpbWUcZ2VuZXJpYwxlcmEMRXJhAAEBBCBJbW1vcnRhbAAAABxNb3J0YWwxBAAIAAABABxNb3J0YWwyBAAIAAACABxNb3J0YWwzBAAIAAADABxNb3J0YWw0BAAIAAAEABxNb3J0YWw1BAAIAAAFABxNb3J0YWw2BAAIAAAGABxNb3J0YWw3BAAIAAAHABxNb3J0YWw4BAAIAAAIABxNb3J0YWw5BAAIAAAJACBNb3J0YWwxMAQACAAACgAgTW9ydGFsMTEEAAgAAAsAIE1vcnRhbDEyBAAIAAAMACBNb3J0YWwxMwQACAAADQAgTW9ydGFsMTQEAAgAAA4AIE1vcnRhbDE1BAAIAAAPACBNb3J0YWwxNgQACAAAEAAgTW9ydGFsMTcEAAgAABEAIE1vcnRhbDE4BAAIAAASACBNb3J0YWwxOQQACAAAEwAgTW9ydGFsMjAEAAgAABQAIE1vcnRhbDIxBAAIAAAVACBNb3J0YWwyMgQACAAAFgAgTW9ydGFsMjMEAAgAABcAIE1vcnRhbDI0BAAIAAAYACBNb3J0YWwyNQQACAAAGQAgTW9ydGFsMjYEAAgAABoAIE1vcnRhbDI3BAAIAAAbACBNb3J0YWwyOAQACAAAHAAgTW9ydGFsMjkEAAgAAB0AIE1vcnRhbDMwBAAIAAAeACBNb3J0YWwzMQQACAAAHwAgTW9ydGFsMzIEAAgAACAAIE1vcnRhbDMzBAAIAAAhACBNb3J0YWwzNAQACAAAIgAgTW9ydGFsMzUEAAgAACMAIE1vcnRhbDM2BAAIAAAkACBNb3J0YWwzNwQACAAAJQAgTW9ydGFsMzgEAAgAACYAIE1vcnRhbDM5BAAIAAAnACBNb3J0YWw0MAQACAAAKAAgTW9ydGFsNDEEAAgAACkAIE1vcnRhbDQyBAAIAAAqACBNb3J0YWw0MwQACAAAKwAgTW9ydGFsNDQEAAgAACwAIE1vcnRhbDQ1BAAIAAAtACBNb3J0YWw0NgQACAAALgAgTW9ydGFsNDcEAAgAAC8AIE1vcnRhbDQ4BAAIAAAwACBNb3J0YWw0OQQACAAAMQAgTW9ydGFsNTAEAAgAADIAIE1vcnRhbDUxBAAIAAAzACBNb3J0YWw1MgQACAAANAAgTW9ydGFsNTMEAAgAADUAIE1vcnRhbDU0BAAIAAA2ACBNb3J0YWw1NQQACAAANwAgTW9ydGFsNTYEAAgAADgAIE1vcnRhbDU3BAAIAAA5ACBNb3J0YWw1OAQACAAAOgAgTW9ydGFsNTkEAAgAADsAIE1vcnRhbDYwBAAIAAA8ACBNb3J0YWw2MQQACAAAPQAgTW9ydGFsNjIEAAgAAD4AIE1vcnRhbDYzBAAIAAA/ACBNb3J0YWw2NAQACAAAQAAgTW9ydGFsNjUEAAgAAEEAIE1vcnRhbDY2BAAIAABCACBNb3J0YWw2NwQACAAAQwAgTW9ydGFsNjgEAAgAAEQAIE1vcnRhbDY5BAAIAABFACBNb3J0YWw3MAQACAAARgAgTW9ydGFsNzEEAAgAAEcAIE1vcnRhbDcyBAAIAABIACBNb3J0YWw3MwQACAAASQAgTW9ydGFsNzQEAAgAAEoAIE1vcnRhbDc1BAAIAABLACBNb3J0YWw3NgQACAAATAAgTW9ydGFsNzcEAAgAAE0AIE1vcnRhbDc4BAAIAABOACBNb3J0YWw3OQQACAAATwAgTW9ydGFsODAEAAgAAFAAIE1vcnRhbDgxBAAIAABRACBNb3J0YWw4MgQACAAAUgAgTW9ydGFsODMEAAgAAFMAIE1vcnRhbDg0BAAIAABUACBNb3J0YWw4NQQACAAAVQAgTW9ydGFsODYEAAgAAFYAIE1vcnRhbDg3BAAIAABXACBNb3J0YWw4OAQACAAAWAAgTW9ydGFsODkEAAgAAFkAIE1vcnRhbDkwBAAIAABaACBNb3J0YWw5MQQACAAAWwAgTW9ydGFsOTIEAAgAAFwAIE1vcnRhbDkzBAAIAABdACBNb3J0YWw5NAQACAAAXgAgTW9ydGFsOTUEAAgAAF8AIE1vcnRhbDk2BAAIAABgACBNb3J0YWw5NwQACAAAYQAgTW9ydGFsOTgEAAgAAGIAIE1vcnRhbDk5BAAIAABjACRNb3J0YWwxMDAEAAgAAGQAJE1vcnRhbDEwMQQACAAAZQAkTW9ydGFsMTAyBAAIAABmACRNb3J0YWwxMDMEAAgAAGcAJE1vcnRhbDEwNAQACAAAaAAkTW9ydGFsMTA1BAAIAABpACRNb3J0YWwxMDYEAAgAAGoAJE1vcnRhbDEwNwQACAAAawAkTW9ydGFsMTA4BAAIAABsACRNb3J0YWwxMDkEAAgAAG0AJE1vcnRhbDExMAQACAAAbgAkTW9ydGFsMTExBAAIAABvACRNb3J0YWwxMTIEAAgAAHAAJE1vcnRhbDExMwQACAAAcQAkTW9ydGFsMTE0BAAIAAByACRNb3J0YWwxMTUEAAgAAHMAJE1vcnRhbDExNgQACAAAdAAkTW9ydGFsMTE3BAAIAAB1ACRNb3J0YWwxMTgEAAgAAHYAJE1vcnRhbDExOQQACAAAdwAkTW9ydGFsMTIwBAAIAAB4ACRNb3J0YWwxMjEEAAgAAHkAJE1vcnRhbDEyMgQACAAAegAkTW9ydGFsMTIzBAAIAAB7ACRNb3J0YWwxMjQEAAgAAHwAJE1vcnRhbDEyNQQACAAAfQAkTW9ydGFsMTI2BAAIAAB+ACRNb3J0YWwxMjcEAAgAAH8AJE1vcnRhbDEyOAQACAAAgAAkTW9ydGFsMTI5BAAIAACBACRNb3J0YWwxMzAEAAgAAIIAJE1vcnRhbDEzMQQACAAAgwAkTW9ydGFsMTMyBAAIAACEACRNb3J0YWwxMzMEAAgAAIUAJE1vcnRhbDEzNAQACAAAhgAkTW9ydGFsMTM1BAAIAACHACRNb3J0YWwxMzYEAAgAAIgAJE1vcnRhbDEzNwQACAAAiQAkTW9ydGFsMTM4BAAIAACKACRNb3J0YWwxMzkEAAgAAIsAJE1vcnRhbDE0MAQACAAAjAAkTW9ydGFsMTQxBAAIAACNACRNb3J0YWwxNDIEAAgAAI4AJE1vcnRhbDE0MwQACAAAjwAkTW9ydGFsMTQ0BAAIAACQACRNb3J0YWwxNDUEAAgAAJEAJE1vcnRhbDE0NgQACAAAkgAkTW9ydGFsMTQ3BAAIAACTACRNb3J0YWwxNDgEAAgAAJQAJE1vcnRhbDE0OQQACAAAlQAkTW9ydGFsMTUwBAAIAACWACRNb3J0YWwxNTEEAAgAAJcAJE1vcnRhbDE1MgQACAAAmAAkTW9ydGFsMTUzBAAIAACZACRNb3J0YWwxNTQEAAgAAJoAJE1vcnRhbDE1NQQACAAAmwAkTW9ydGFsMTU2BAAIAACcACRNb3J0YWwxNTcEAAgAAJ0AJE1vcnRhbDE1OAQACAAAngAkTW9ydGFsMTU5BAAIAACfACRNb3J0YWwxNjAEAAgAAKAAJE1vcnRhbDE2MQQACAAAoQAkTW9ydGFsMTYyBAAIAACiACRNb3J0YWwxNjMEAAgAAKMAJE1vcnRhbDE2NAQACAAApAAkTW9ydGFsMTY1BAAIAAClACRNb3J0YWwxNjYEAAgAAKYAJE1vcnRhbDE2NwQACAAApwAkTW9ydGFsMTY4BAAIAACoACRNb3J0YWwxNjkEAAgAAKkAJE1vcnRhbDE3MAQACAAAqgAkTW9ydGFsMTcxBAAIAACrACRNb3J0YWwxNzIEAAgAAKwAJE1vcnRhbDE3MwQACAAArQAkTW9ydGFsMTc0BAAIAACuACRNb3J0YWwxNzUEAAgAAK8AJE1vcnRhbDE3NgQACAAAsAAkTW9ydGFsMTc3BAAIAACxACRNb3J0YWwxNzgEAAgAALIAJE1vcnRhbDE3OQQACAAAswAkTW9ydGFsMTgwBAAIAAC0ACRNb3J0YWwxODEEAAgAALUAJE1vcnRhbDE4MgQACAAAtgAkTW9ydGFsMTgzBAAIAAC3ACRNb3J0YWwxODQEAAgAALgAJE1vcnRhbDE4NQQACAAAuQAkTW9ydGFsMTg2BAAIAAC6ACRNb3J0YWwxODcEAAgAALsAJE1vcnRhbDE4OAQACAAAvAAkTW9ydGFsMTg5BAAIAAC9ACRNb3J0YWwxOTAEAAgAAL4AJE1vcnRhbDE5MQQACAAAvwAkTW9ydGFsMTkyBAAIAADAACRNb3J0YWwxOTMEAAgAAMEAJE1vcnRhbDE5NAQACAAAwgAkTW9ydGFsMTk1BAAIAADDACRNb3J0YWwxOTYEAAgAAMQAJE1vcnRhbDE5NwQACAAAxQAkTW9ydGFsMTk4BAAIAADGACRNb3J0YWwxOTkEAAgAAMcAJE1vcnRhbDIwMAQACAAAyAAkTW9ydGFsMjAxBAAIAADJACRNb3J0YWwyMDIEAAgAAMoAJE1vcnRhbDIwMwQACAAAywAkTW9ydGFsMjA0BAAIAADMACRNb3J0YWwyMDUEAAgAAM0AJE1vcnRhbDIwNgQACAAAzgAkTW9ydGFsMjA3BAAIAADPACRNb3J0YWwyMDgEAAgAANAAJE1vcnRhbDIwOQQACAAA0QAkTW9ydGFsMjEwBAAIAADSACRNb3J0YWwyMTEEAAgAANMAJE1vcnRhbDIxMgQACAAA1AAkTW9ydGFsMjEzBAAIAADVACRNb3J0YWwyMTQEAAgAANYAJE1vcnRhbDIxNQQACAAA1wAkTW9ydGFsMjE2BAAIAADYACRNb3J0YWwyMTcEAAgAANkAJE1vcnRhbDIxOAQACAAA2gAkTW9ydGFsMjE5BAAIAADbACRNb3J0YWwyMjAEAAgAANwAJE1vcnRhbDIyMQQACAAA3QAkTW9ydGFsMjIyBAAIAADeACRNb3J0YWwyMjMEAAgAAN8AJE1vcnRhbDIyNAQACAAA4AAkTW9ydGFsMjI1BAAIAADhACRNb3J0YWwyMjYEAAgAAOIAJE1vcnRhbDIyNwQACAAA4wAkTW9ydGFsMjI4BAAIAADkACRNb3J0YWwyMjkEAAgAAOUAJE1vcnRhbDIzMAQACAAA5gAkTW9ydGFsMjMxBAAIAADnACRNb3J0YWwyMzIEAAgAAOgAJE1vcnRhbDIzMwQACAAA6QAkTW9ydGFsMjM0BAAIAADqACRNb3J0YWwyMzUEAAgAAOsAJE1vcnRhbDIzNgQACAAA7AAkTW9ydGFsMjM3BAAIAADtACRNb3J0YWwyMzgEAAgAAO4AJE1vcnRhbDIzOQQACAAA7wAkTW9ydGFsMjQwBAAIAADwACRNb3J0YWwyNDEEAAgAAPEAJE1vcnRhbDI0MgQACAAA8gAkTW9ydGFsMjQzBAAIAADzACRNb3J0YWwyNDQEAAgAAPQAJE1vcnRhbDI0NQQACAAA9QAkTW9ydGFsMjQ2BAAIAAD2ACRNb3J0YWwyNDcEAAgAAPcAJE1vcnRhbDI0OAQACAAA+AAkTW9ydGFsMjQ5BAAIAAD5ACRNb3J0YWwyNTAEAAgAAPoAJE1vcnRhbDI1MQQACAAA+wAkTW9ydGFsMjUyBAAIAAD8ACRNb3J0YWwyNTMEAAgAAP0AJE1vcnRhbDI1NAQACAAA/gAkTW9ydGFsMjU1BAAIAAD/AABBCRAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnMsY2hlY2tfbm9uY2UoQ2hlY2tOb25jZQQEVAAABAD8ASBUOjpOb25jZQAARQkQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zMGNoZWNrX3dlaWdodCxDaGVja1dlaWdodAQEVAAAAABJCQhocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnRgQ2hhcmdlVHJhbnNhY3Rpb25QYXltZW50BARUAAAEAA0BATBCYWxhbmNlT2Y8VD4AAE0JDFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhhjbGFpbXNIUHJldmFsaWRhdGVBdHRlc3RzBARUAAAAAFEJCHRmcmFtZV9tZXRhZGF0YV9oYXNoX2V4dGVuc2lvbkRDaGVja01ldGFkYXRhSGFzaAQEVAAABAEQbW9kZVUJARBNb2RlAABVCQh0ZnJhbWVfbWV0YWRhdGFfaGFzaF9leHRlbnNpb24QTW9kZQABCCBEaXNhYmxlZAAAABxFbmFibGVkAAEAAFkJAAACIQkAXQkMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAFhCQRTAAAEAGkJARhWZWM8VD4AAGEJBBhPcHRpb24EBFQBZQkBCBBOb25lAAAAEFNvbWUEAGUJAAABAABlCQhAcGFsbGV0X3NjaGVkdWxlciRTY2hlZHVsZWQUEE5hbWUBBBBDYWxsAaUBLEJsb2NrTnVtYmVyARA0UGFsbGV0c09yaWdpbgGlAiRBY2NvdW50SWQBAAAUASBtYXliZV9pZIgBME9wdGlvbjxOYW1lPgABIHByaW9yaXR5CAFIc2NoZWR1bGU6OlByaW9yaXR5AAEQY2FsbKUBARBDYWxsAAE4bWF5YmVfcGVyaW9kaWPBAQGUT3B0aW9uPHNjaGVkdWxlOjpQZXJpb2Q8QmxvY2tOdW1iZXI+PgABGG9yaWdpbqUCATRQYWxsZXRzT3JpZ2luAABpCQAAAmEJAG0JCEBwYWxsZXRfc2NoZWR1bGVyLFJldHJ5Q29uZmlnBBhQZXJpb2QBEAAMATR0b3RhbF9yZXRyaWVzCAEIdTgAASRyZW1haW5pbmcIAQh1OAABGHBlcmlvZBABGFBlcmlvZAAAcQkMQHBhbGxldF9zY2hlZHVsZXIYcGFsbGV0FEVycm9yBARUAAEUQEZhaWxlZFRvU2NoZWR1bGUAAARkRmFpbGVkIHRvIHNjaGVkdWxlIGEgY2FsbCBOb3RGb3VuZAABBHxDYW5ub3QgZmluZCB0aGUgc2NoZWR1bGVkIGNhbGwuXFRhcmdldEJsb2NrTnVtYmVySW5QYXN0AAIEpEdpdmVuIHRhcmdldCBibG9jayBudW1iZXIgaXMgaW4gdGhlIHBhc3QuSFJlc2NoZWR1bGVOb0NoYW5nZQADBPBSZXNjaGVkdWxlIGZhaWxlZCBiZWNhdXNlIGl0IGRvZXMgbm90IGNoYW5nZSBzY2hlZHVsZWQgdGltZS4UTmFtZWQABATQQXR0ZW1wdCB0byB1c2UgYSBub24tbmFtZWQgZnVuY3Rpb24gb24gYSBuYW1lZCB0YXNrLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC51CQg8cGFsbGV0X3ByZWltYWdlQE9sZFJlcXVlc3RTdGF0dXMIJEFjY291bnRJZAEAHEJhbGFuY2UBGAEILFVucmVxdWVzdGVkCAEcZGVwb3NpdAkEAVAoQWNjb3VudElkLCBCYWxhbmNlKQABDGxlbhABDHUzMgAAACRSZXF1ZXN0ZWQMARxkZXBvc2l0eQkBcE9wdGlvbjwoQWNjb3VudElkLCBCYWxhbmNlKT4AARRjb3VudBABDHUzMgABDGxlbrgBLE9wdGlvbjx1MzI+AAEAAHkJBBhPcHRpb24EBFQBCQQBCBBOb25lAAAAEFNvbWUEAAkEAAABAAB9CQg8cGFsbGV0X3ByZWltYWdlNFJlcXVlc3RTdGF0dXMIJEFjY291bnRJZAEAGFRpY2tldAGBCQEILFVucmVxdWVzdGVkCAEYdGlja2V0hQkBTChBY2NvdW50SWQsIFRpY2tldCkAAQxsZW4QAQx1MzIAAAAkUmVxdWVzdGVkDAEwbWF5YmVfdGlja2V0iQkBbE9wdGlvbjwoQWNjb3VudElkLCBUaWNrZXQpPgABFGNvdW50EAEMdTMyAAEkbWF5YmVfbGVuuAEsT3B0aW9uPHUzMj4AAQAAgQkUNGZyYW1lX3N1cHBvcnQYdHJhaXRzGHRva2VucyBmdW5naWJsZURIb2xkQ29uc2lkZXJhdGlvbhQEQQAERgAEUgAERAAIRnAAAAQAGAEoRjo6QmFsYW5jZQAAhQkAAAQIAIEJAIkJBBhPcHRpb24EBFQBhQkBCBBOb25lAAAAEFNvbWUEAIUJAAABAACNCQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA4ARhWZWM8VD4AAJEJDDxwYWxsZXRfcHJlaW1hZ2UYcGFsbGV0FEVycm9yBARUAAEgGFRvb0JpZwAABKBQcmVpbWFnZSBpcyB0b28gbGFyZ2UgdG8gc3RvcmUgb24tY2hhaW4uMEFscmVhZHlOb3RlZAABBKRQcmVpbWFnZSBoYXMgYWxyZWFkeSBiZWVuIG5vdGVkIG9uLWNoYWluLjROb3RBdXRob3JpemVkAAIEyFRoZSB1c2VyIGlzIG5vdCBhdXRob3JpemVkIHRvIHBlcmZvcm0gdGhpcyBhY3Rpb24uIE5vdE5vdGVkAAME/FRoZSBwcmVpbWFnZSBjYW5ub3QgYmUgcmVtb3ZlZCBzaW5jZSBpdCBoYXMgbm90IHlldCBiZWVuIG5vdGVkLiRSZXF1ZXN0ZWQABAQJAUEgcHJlaW1hZ2UgbWF5IG5vdCBiZSByZW1vdmVkIHdoZW4gdGhlcmUgYXJlIG91dHN0YW5kaW5nIHJlcXVlc3RzLjBOb3RSZXF1ZXN0ZWQABQQtAVRoZSBwcmVpbWFnZSByZXF1ZXN0IGNhbm5vdCBiZSByZW1vdmVkIHNpbmNlIG5vIG91dHN0YW5kaW5nIHJlcXVlc3RzIGV4aXN0LhxUb29NYW55AAYEVQFNb3JlIHRoYW4gYE1BWF9IQVNIX1VQR1JBREVfQlVMS19DT1VOVGAgaGFzaGVzIHdlcmUgcmVxdWVzdGVkIHRvIGJlIHVwZ3JhZGVkIGF0IG9uY2UuGFRvb0ZldwAHBORUb28gZmV3IGhhc2hlcyB3ZXJlIHJlcXVlc3RlZCB0byBiZSB1cGdyYWRlZCAoaS5lLiB6ZXJvKS4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQulQkMTGJvdW5kZWRfY29sbGVjdGlvbnNAd2Vha19ib3VuZGVkX3ZlYzhXZWFrQm91bmRlZFZlYwgEVAGZCQRTAAAEAJ0JARhWZWM8VD4AAJkJAAAECNkBMACdCQAAApkJAKEJDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBBARTAAAEAKUJARhWZWM8VD4AAKUJAAACBACpCQQYT3B0aW9uBARUAa0JAQgQTm9uZQAAABBTb21lBACtCQAAAQAArQkMRHNwX2NvbnNlbnN1c19iYWJlHGRpZ2VzdHMkUHJlRGlnZXN0AAEMHFByaW1hcnkEALEJAUBQcmltYXJ5UHJlRGlnZXN0AAEAOFNlY29uZGFyeVBsYWluBAC5CQFcU2Vjb25kYXJ5UGxhaW5QcmVEaWdlc3QAAgAwU2Vjb25kYXJ5VlJGBAC9CQFUU2Vjb25kYXJ5VlJGUHJlRGlnZXN0AAMAALEJDERzcF9jb25zZW5zdXNfYmFiZRxkaWdlc3RzQFByaW1hcnlQcmVEaWdlc3QAAAwBPGF1dGhvcml0eV9pbmRleBABVHN1cGVyOjpBdXRob3JpdHlJbmRleAABEHNsb3TdAQEQU2xvdAABNHZyZl9zaWduYXR1cmW1CQEwVnJmU2lnbmF0dXJlAAC1CRAcc3BfY29yZRxzcjI1NTE5DHZyZjBWcmZTaWduYXR1cmUAAAgBKHByZV9vdXRwdXQEATBWcmZQcmVPdXRwdXQAARRwcm9vZn0CASBWcmZQcm9vZgAAuQkMRHNwX2NvbnNlbnN1c19iYWJlHGRpZ2VzdHNcU2Vjb25kYXJ5UGxhaW5QcmVEaWdlc3QAAAgBPGF1dGhvcml0eV9pbmRleBABVHN1cGVyOjpBdXRob3JpdHlJbmRleAABEHNsb3TdAQEQU2xvdAAAvQkMRHNwX2NvbnNlbnN1c19iYWJlHGRpZ2VzdHNUU2Vjb25kYXJ5VlJGUHJlRGlnZXN0AAAMATxhdXRob3JpdHlfaW5kZXgQAVRzdXBlcjo6QXV0aG9yaXR5SW5kZXgAARBzbG903QEBEFNsb3QAATR2cmZfc2lnbmF0dXJltQkBMFZyZlNpZ25hdHVyZQAAwQkIRHNwX2NvbnNlbnN1c19iYWJlWEJhYmVFcG9jaENvbmZpZ3VyYXRpb24AAAgBBGPpAQEoKHU2NCwgdTY0KQABNGFsbG93ZWRfc2xvdHPtAQEwQWxsb3dlZFNsb3RzAADFCQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAckJBFMAAAQAzQkBGFZlYzxUPgAAyQkAAAQIMBAAzQkAAALJCQDRCQwscGFsbGV0X2JhYmUYcGFsbGV0FEVycm9yBARUAAEQYEludmFsaWRFcXVpdm9jYXRpb25Qcm9vZgAABDEBQW4gZXF1aXZvY2F0aW9uIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLmBJbnZhbGlkS2V5T3duZXJzaGlwUHJvb2YAAQQxAUEga2V5IG93bmVyc2hpcCBwcm9vZiBwcm92aWRlZCBhcyBwYXJ0IG9mIGFuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgaW52YWxpZC5YRHVwbGljYXRlT2ZmZW5jZVJlcG9ydAACBBUBQSBnaXZlbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIHZhbGlkIGJ1dCBhbHJlYWR5IHByZXZpb3VzbHkgcmVwb3J0ZWQuUEludmFsaWRDb25maWd1cmF0aW9uAAMEjFN1Ym1pdHRlZCBjb25maWd1cmF0aW9uIGlzIGludmFsaWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LtUJAAAEDAAYIADZCQw4cGFsbGV0X2luZGljZXMYcGFsbGV0FEVycm9yBARUAAEULE5vdEFzc2lnbmVkAAAEjFRoZSBpbmRleCB3YXMgbm90IGFscmVhZHkgYXNzaWduZWQuIE5vdE93bmVyAAEEpFRoZSBpbmRleCBpcyBhc3NpZ25lZCB0byBhbm90aGVyIGFjY291bnQuFEluVXNlAAIEcFRoZSBpbmRleCB3YXMgbm90IGF2YWlsYWJsZS4sTm90VHJhbnNmZXIAAwTIVGhlIHNvdXJjZSBhbmQgZGVzdGluYXRpb24gYWNjb3VudHMgYXJlIGlkZW50aWNhbC4kUGVybWFuZW50AAQE0FRoZSBpbmRleCBpcyBwZXJtYW5lbnQgYW5kIG1heSBub3QgYmUgZnJlZWQvY2hhbmdlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQu3QkMTGJvdW5kZWRfY29sbGVjdGlvbnNAd2Vha19ib3VuZGVkX3ZlYzhXZWFrQm91bmRlZFZlYwgEVAHhCQRTAAAEAOkJARhWZWM8VD4AAOEJDDxwYWxsZXRfYmFsYW5jZXMUdHlwZXMsQmFsYW5jZUxvY2sEHEJhbGFuY2UBGAAMAQhpZLEFAThMb2NrSWRlbnRpZmllcgABGGFtb3VudBgBHEJhbGFuY2UAARxyZWFzb25z5QkBHFJlYXNvbnMAAOUJDDxwYWxsZXRfYmFsYW5jZXMUdHlwZXMcUmVhc29ucwABDAxGZWUAAAAQTWlzYwABAAxBbGwAAgAA6QkAAALhCQDtCQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAfEJBFMAAAQA9QkBGFZlYzxUPgAA8QkMPHBhbGxldF9iYWxhbmNlcxR0eXBlcyxSZXNlcnZlRGF0YQhEUmVzZXJ2ZUlkZW50aWZpZXIBsQUcQmFsYW5jZQEYAAgBCGlksQUBRFJlc2VydmVJZGVudGlmaWVyAAEYYW1vdW50GAEcQmFsYW5jZQAA9QkAAALxCQD5CQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAf0JBFMAAAQAHQoBGFZlYzxUPgAA/QkUNGZyYW1lX3N1cHBvcnQYdHJhaXRzGHRva2VucxBtaXNjIElkQW1vdW50CAhJZAEBChxCYWxhbmNlARgACAEIaWQBCgEISWQAARhhbW91bnQYARxCYWxhbmNlAAABCgg0cGFzZW9fcnVudGltZURSdW50aW1lSG9sZFJlYXNvbgABGCBQcmVpbWFnZQQABQoBbHBhbGxldF9wcmVpbWFnZTo6SG9sZFJlYXNvbgAKABxTdGFraW5nBAAJCgFocGFsbGV0X3N0YWtpbmc6OkhvbGRSZWFzb24ABwAcU2Vzc2lvbgQADQoBaHBhbGxldF9zZXNzaW9uOjpIb2xkUmVhc29uAAkAQERlbGVnYXRlZFN0YWtpbmcEABEKAZBwYWxsZXRfZGVsZWdhdGVkX3N0YWtpbmc6OkhvbGRSZWFzb24AKQBIU3RhdGVUcmllTWlncmF0aW9uBAAVCgGccGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uOjpIb2xkUmVhc29uAGIAJFhjbVBhbGxldAQAGQoBWHBhbGxldF94Y206OkhvbGRSZWFzb24AYwAABQoMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQoSG9sZFJlYXNvbgABBCBQcmVpbWFnZQAAAAAJChA4cGFsbGV0X3N0YWtpbmcYcGFsbGV0GHBhbGxldChIb2xkUmVhc29uAAEEHFN0YWtpbmcAAAAADQoMOHBhbGxldF9zZXNzaW9uGHBhbGxldChIb2xkUmVhc29uAAEEEEtleXMAAAAAEQoMYHBhbGxldF9kZWxlZ2F0ZWRfc3Rha2luZxhwYWxsZXQoSG9sZFJlYXNvbgABBERTdGFraW5nRGVsZWdhdGlvbgAAAAAVCgxscGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uGHBhbGxldChIb2xkUmVhc29uAAEEPFNsYXNoRm9yTWlncmF0ZQAAAAAZCgwocGFsbGV0X3hjbRhwYWxsZXQoSG9sZFJlYXNvbgABBDhBdXRob3JpemVBbGlhcwAAAAAdCgAAAv0JACEKDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBJQoEUwAABAAxCgEYVmVjPFQ+AAAlChQ0ZnJhbWVfc3VwcG9ydBh0cmFpdHMYdG9rZW5zEG1pc2MgSWRBbW91bnQICElkASkKHEJhbGFuY2UBGAAIAQhpZCkKAQhJZAABGGFtb3VudBgBHEJhbGFuY2UAACkKCDRwYXNlb19ydW50aW1lTFJ1bnRpbWVGcmVlemVSZWFzb24AAQQ8Tm9taW5hdGlvblBvb2xzBAAtCgGUcGFsbGV0X25vbWluYXRpb25fcG9vbHM6OkZyZWV6ZVJlYXNvbgAnAAAtCgxccGFsbGV0X25vbWluYXRpb25fcG9vbHMYcGFsbGV0MEZyZWV6ZVJlYXNvbgABBDhQb29sTWluQmFsYW5jZQAAAAAxCgAAAiUKADUKDDxwYWxsZXRfYmFsYW5jZXMYcGFsbGV0FEVycm9yCARUAARJAAEwOFZlc3RpbmdCYWxhbmNlAAAEnFZlc3RpbmcgYmFsYW5jZSB0b28gaGlnaCB0byBzZW5kIHZhbHVlLlRMaXF1aWRpdHlSZXN0cmljdGlvbnMAAQTIQWNjb3VudCBsaXF1aWRpdHkgcmVzdHJpY3Rpb25zIHByZXZlbnQgd2l0aGRyYXdhbC5MSW5zdWZmaWNpZW50QmFsYW5jZQACBHhCYWxhbmNlIHRvbyBsb3cgdG8gc2VuZCB2YWx1ZS5IRXhpc3RlbnRpYWxEZXBvc2l0AAME7FZhbHVlIHRvbyBsb3cgdG8gY3JlYXRlIGFjY291bnQgZHVlIHRvIGV4aXN0ZW50aWFsIGRlcG9zaXQuNEV4cGVuZGFiaWxpdHkABASQVHJhbnNmZXIvcGF5bWVudCB3b3VsZCBraWxsIGFjY291bnQuXEV4aXN0aW5nVmVzdGluZ1NjaGVkdWxlAAUEzEEgdmVzdGluZyBzY2hlZHVsZSBhbHJlYWR5IGV4aXN0cyBmb3IgdGhpcyBhY2NvdW50LixEZWFkQWNjb3VudAAGBIxCZW5lZmljaWFyeSBhY2NvdW50IG11c3QgcHJlLWV4aXN0LjxUb29NYW55UmVzZXJ2ZXMABwS4TnVtYmVyIG9mIG5hbWVkIHJlc2VydmVzIGV4Y2VlZCBgTWF4UmVzZXJ2ZXNgLjBUb29NYW55SG9sZHMACAT4TnVtYmVyIG9mIGhvbGRzIGV4Y2VlZCBgVmFyaWFudENvdW50T2Y8VDo6UnVudGltZUhvbGRSZWFzb24+YC44VG9vTWFueUZyZWV6ZXMACQSYTnVtYmVyIG9mIGZyZWV6ZXMgZXhjZWVkIGBNYXhGcmVlemVzYC5MSXNzdWFuY2VEZWFjdGl2YXRlZAAKBAEBVGhlIGlzc3VhbmNlIGNhbm5vdCBiZSBtb2RpZmllZCBzaW5jZSBpdCBpcyBhbHJlYWR5IGRlYWN0aXZhdGVkLiREZWx0YVplcm8ACwRkVGhlIGRlbHRhIGNhbm5vdCBiZSB6ZXJvLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC45CghocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnQgUmVsZWFzZXMAAQgkVjFBbmNpZW50AAAACFYyAAEAAD0KCDhwYWxsZXRfc3Rha2luZzRTdGFraW5nTGVkZ2VyBARUAAAUARRzdGFzaAABMFQ6OkFjY291bnRJZAABFHRvdGFsDQEBMEJhbGFuY2VPZjxUPgABGGFjdGl2ZQ0BATBCYWxhbmNlT2Y8VD4AASR1bmxvY2tpbmc9AgHwQm91bmRlZFZlYzxVbmxvY2tDaHVuazxCYWxhbmNlT2Y8VD4+LCBUOjpNYXhVbmxvY2tpbmdDaHVua3M+AAFYbGVnYWN5X2NsYWltZWRfcmV3YXJkc0EKAZRCb3VuZGVkVmVjPEVyYUluZGV4LCBUOjpIaXN0b3J5RGVwdGg+AABBCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUARAEUwAABAAZAgEYVmVjPFQ+AABFCgg4cGFsbGV0X3N0YWtpbmcsTm9taW5hdGlvbnMEBFQAAAwBHHRhcmdldHNJCgG0Qm91bmRlZFZlYzxUOjpBY2NvdW50SWQsIE1heE5vbWluYXRpb25zT2Y8VD4+AAEwc3VibWl0dGVkX2luEAEgRXJhSW5kZXgAAShzdXBwcmVzc2VkIAEQYm9vbAAASQoMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEABFMAAAQABQIBGFZlYzxUPgAATQoIOHBhbGxldF9zdGFraW5nNEFjdGl2ZUVyYUluZm8AAAgBFGluZGV4EAEgRXJhSW5kZXgAARRzdGFydPUGASxPcHRpb248dTY0PgAAUQoIKHNwX3N0YWtpbmcgRXhwb3N1cmUIJEFjY291bnRJZAEAHEJhbGFuY2UBGAAMARR0b3RhbA0BARxCYWxhbmNlAAEMb3duDQEBHEJhbGFuY2UAARhvdGhlcnNVCgGsVmVjPEluZGl2aWR1YWxFeHBvc3VyZTxBY2NvdW50SWQsIEJhbGFuY2U+PgAAVQoAAAJZCgBZCggoc3Bfc3Rha2luZ0hJbmRpdmlkdWFsRXhwb3N1cmUIJEFjY291bnRJZAEAHEJhbGFuY2UBGAAIAQx3aG8AASRBY2NvdW50SWQAARR2YWx1ZQ0BARxCYWxhbmNlAABdCggoc3Bfc3Rha2luZ1RQYWdlZEV4cG9zdXJlTWV0YWRhdGEEHEJhbGFuY2UBGAAQARR0b3RhbA0BARxCYWxhbmNlAAEMb3duDQEBHEJhbGFuY2UAATxub21pbmF0b3JfY291bnQQAQx1MzIAAShwYWdlX2NvdW50EAEQUGFnZQAAYQoIKHNwX3N0YWtpbmcwRXhwb3N1cmVQYWdlCCRBY2NvdW50SWQBABxCYWxhbmNlARgACAEocGFnZV90b3RhbA0BARxCYWxhbmNlAAEYb3RoZXJzVQoBrFZlYzxJbmRpdmlkdWFsRXhwb3N1cmU8QWNjb3VudElkLCBCYWxhbmNlPj4AAGUKCDhwYWxsZXRfc3Rha2luZzxFcmFSZXdhcmRQb2ludHMEJEFjY291bnRJZAEAAAgBFHRvdGFsEAEsUmV3YXJkUG9pbnQAAShpbmRpdmlkdWFsaQoBgEJUcmVlTWFwPEFjY291bnRJZCwgUmV3YXJkUG9pbnQ+AABpCgQgQlRyZWVNYXAIBEsBAARWARAABABtCgAAAG0KAAAC+QcAcQoAAAJ1CgB1Cgg4cGFsbGV0X3N0YWtpbmc4VW5hcHBsaWVkU2xhc2gIJEFjY291bnRJZAEAHEJhbGFuY2UBGAAUASR2YWxpZGF0b3IAASRBY2NvdW50SWQAAQxvd24YARxCYWxhbmNlAAEYb3RoZXJzBQQBZFZlYzwoQWNjb3VudElkLCBCYWxhbmNlKT4AASRyZXBvcnRlcnMFAgE4VmVjPEFjY291bnRJZD4AARhwYXlvdXQYARxCYWxhbmNlAAB5CgAABAi0GAB9Cgw4cGFsbGV0X3N0YWtpbmcgc2xhc2hpbmc0U2xhc2hpbmdTcGFucwAAEAEoc3Bhbl9pbmRleBABJFNwYW5JbmRleAABKGxhc3Rfc3RhcnQQASBFcmFJbmRleAABSGxhc3Rfbm9uemVyb19zbGFzaBABIEVyYUluZGV4AAEUcHJpb3IZAgE0VmVjPEVyYUluZGV4PgAAgQoMOHBhbGxldF9zdGFraW5nIHNsYXNoaW5nKFNwYW5SZWNvcmQEHEJhbGFuY2UBGAAIARxzbGFzaGVkGAEcQmFsYW5jZQABIHBhaWRfb3V0GAEcQmFsYW5jZQAAhQoQOHBhbGxldF9zdGFraW5nGHBhbGxldBhwYWxsZXQURXJyb3IEBFQAAYg0Tm90Q29udHJvbGxlcgAABGROb3QgYSBjb250cm9sbGVyIGFjY291bnQuIE5vdFN0YXNoAAEEUE5vdCBhIHN0YXNoIGFjY291bnQuNEFscmVhZHlCb25kZWQAAgRgU3Rhc2ggaXMgYWxyZWFkeSBib25kZWQuNEFscmVhZHlQYWlyZWQAAwR0Q29udHJvbGxlciBpcyBhbHJlYWR5IHBhaXJlZC4wRW1wdHlUYXJnZXRzAAQEYFRhcmdldHMgY2Fubm90IGJlIGVtcHR5LjhEdXBsaWNhdGVJbmRleAAFBEBEdXBsaWNhdGUgaW5kZXguREludmFsaWRTbGFzaEluZGV4AAYEhFNsYXNoIHJlY29yZCBpbmRleCBvdXQgb2YgYm91bmRzLkBJbnN1ZmZpY2llbnRCb25kAAcMWQFDYW5ub3QgaGF2ZSBhIHZhbGlkYXRvciBvciBub21pbmF0b3Igcm9sZSwgd2l0aCB2YWx1ZSBsZXNzIHRoYW4gdGhlIG1pbmltdW0gZGVmaW5lZCBieT0BZ292ZXJuYW5jZSAoc2VlIGBNaW5WYWxpZGF0b3JCb25kYCBhbmQgYE1pbk5vbWluYXRvckJvbmRgKS4gSWYgdW5ib25kaW5nIGlzIHRoZRUBaW50ZW50aW9uLCBgY2hpbGxgIGZpcnN0IHRvIHJlbW92ZSBvbmUncyByb2xlIGFzIHZhbGlkYXRvci9ub21pbmF0b3IuME5vTW9yZUNodW5rcwAIBJBDYW4gbm90IHNjaGVkdWxlIG1vcmUgdW5sb2NrIGNodW5rcy40Tm9VbmxvY2tDaHVuawAJBKBDYW4gbm90IHJlYm9uZCB3aXRob3V0IHVubG9ja2luZyBjaHVua3MuMEZ1bmRlZFRhcmdldAAKBMhBdHRlbXB0aW5nIHRvIHRhcmdldCBhIHN0YXNoIHRoYXQgc3RpbGwgaGFzIGZ1bmRzLkhJbnZhbGlkRXJhVG9SZXdhcmQACwRYSW52YWxpZCBlcmEgdG8gcmV3YXJkLmhJbnZhbGlkTnVtYmVyT2ZOb21pbmF0aW9ucwAMBHhJbnZhbGlkIG51bWJlciBvZiBub21pbmF0aW9ucy5ITm90U29ydGVkQW5kVW5pcXVlAA0EgEl0ZW1zIGFyZSBub3Qgc29ydGVkIGFuZCB1bmlxdWUuOEFscmVhZHlDbGFpbWVkAA4ECQFSZXdhcmRzIGZvciB0aGlzIGVyYSBoYXZlIGFscmVhZHkgYmVlbiBjbGFpbWVkIGZvciB0aGlzIHZhbGlkYXRvci4sSW52YWxpZFBhZ2UADwSETm8gbm9taW5hdG9ycyBleGlzdCBvbiB0aGlzIHBhZ2UuVEluY29ycmVjdEhpc3RvcnlEZXB0aAAQBMBJbmNvcnJlY3QgcHJldmlvdXMgaGlzdG9yeSBkZXB0aCBpbnB1dCBwcm92aWRlZC5YSW5jb3JyZWN0U2xhc2hpbmdTcGFucwARBLBJbmNvcnJlY3QgbnVtYmVyIG9mIHNsYXNoaW5nIHNwYW5zIHByb3ZpZGVkLiBCYWRTdGF0ZQASBDkBSW50ZXJuYWwgc3RhdGUgaGFzIGJlY29tZSBzb21laG93IGNvcnJ1cHRlZCBhbmQgdGhlIG9wZXJhdGlvbiBjYW5ub3QgY29udGludWUuOFRvb01hbnlUYXJnZXRzABMElFRvbyBtYW55IG5vbWluYXRpb24gdGFyZ2V0cyBzdXBwbGllZC4kQmFkVGFyZ2V0ABQEPQFBIG5vbWluYXRpb24gdGFyZ2V0IHdhcyBzdXBwbGllZCB0aGF0IHdhcyBibG9ja2VkIG9yIG90aGVyd2lzZSBub3QgYSB2YWxpZGF0b3IuQENhbm5vdENoaWxsT3RoZXIAFQRVAVRoZSB1c2VyIGhhcyBlbm91Z2ggYm9uZCBhbmQgdGh1cyBjYW5ub3QgYmUgY2hpbGxlZCBmb3JjZWZ1bGx5IGJ5IGFuIGV4dGVybmFsIHBlcnNvbi5EVG9vTWFueU5vbWluYXRvcnMAFghNAVRoZXJlIGFyZSB0b28gbWFueSBub21pbmF0b3JzIGluIHRoZSBzeXN0ZW0uIEdvdmVybmFuY2UgbmVlZHMgdG8gYWRqdXN0IHRoZSBzdGFraW5ntHNldHRpbmdzIHRvIGtlZXAgdGhpbmdzIHNhZmUgZm9yIHRoZSBydW50aW1lLkRUb29NYW55VmFsaWRhdG9ycwAXCFUBVGhlcmUgYXJlIHRvbyBtYW55IHZhbGlkYXRvciBjYW5kaWRhdGVzIGluIHRoZSBzeXN0ZW0uIEdvdmVybmFuY2UgbmVlZHMgdG8gYWRqdXN0IHRoZdRzdGFraW5nIHNldHRpbmdzIHRvIGtlZXAgdGhpbmdzIHNhZmUgZm9yIHRoZSBydW50aW1lLkBDb21taXNzaW9uVG9vTG93ABgE4ENvbW1pc3Npb24gaXMgdG9vIGxvdy4gTXVzdCBiZSBhdCBsZWFzdCBgTWluQ29tbWlzc2lvbmAuLEJvdW5kTm90TWV0ABkEWFNvbWUgYm91bmQgaXMgbm90IG1ldC5QQ29udHJvbGxlckRlcHJlY2F0ZWQAGgQBAVVzZWQgd2hlbiBhdHRlbXB0aW5nIHRvIHVzZSBkZXByZWNhdGVkIGNvbnRyb2xsZXIgYWNjb3VudCBsb2dpYy5MQ2Fubm90UmVzdG9yZUxlZGdlcgAbBFhDYW5ub3QgcmVzZXQgYSBsZWRnZXIubFJld2FyZERlc3RpbmF0aW9uUmVzdHJpY3RlZAAcBKxQcm92aWRlZCByZXdhcmQgZGVzdGluYXRpb24gaXMgbm90IGFsbG93ZWQuOE5vdEVub3VnaEZ1bmRzAB0EnE5vdCBlbm91Z2ggZnVuZHMgYXZhaWxhYmxlIHRvIHdpdGhkcmF3LlxWaXJ0dWFsU3Rha2VyTm90QWxsb3dlZAAeBKhPcGVyYXRpb24gbm90IGFsbG93ZWQgZm9yIHZpcnR1YWwgc3Rha2Vycy48Q2Fubm90UmVhcFN0YXNoAB8E9FN0YXNoIGNvdWxkIG5vdCBiZSByZWFwZWQgYXMgb3RoZXIgcGFsbGV0IG1pZ2h0IGRlcGVuZCBvbiBpdC48QWxyZWFkeU1pZ3JhdGVkACAECQFUaGUgc3Rha2Ugb2YgdGhpcyBhY2NvdW50IGlzIGFscmVhZHkgbWlncmF0ZWQgdG8gYEZ1bmdpYmxlYCBob2xkcy4oUmVzdHJpY3RlZAAhCFkBQWNjb3VudCBpcyByZXN0cmljdGVkIGZyb20gcGFydGljaXBhdGlvbiBpbiBzdGFraW5nLiBUaGlzIG1heSBoYXBwZW4gaWYgdGhlIGFjY291bnQgaXPEc3Rha2luZyBpbiBhbm90aGVyIHdheSBhbHJlYWR5LCBzdWNoIGFzIHZpYSBwb29sLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC6JCgwoc3Bfc3Rha2luZxxvZmZlbmNlOE9mZmVuY2VEZXRhaWxzCCBSZXBvcnRlcgEAIE9mZmVuZGVyAY0KAAgBIG9mZmVuZGVyjQoBIE9mZmVuZGVyAAEkcmVwb3J0ZXJzBQIBNFZlYzxSZXBvcnRlcj4AAI0KAAAECABRCgCRCgAABAjMOACVCgAAApkKAJkKAAAECABNAgCdCgAAAqEKAKEKAAAECBClCgClCgwoc3Bfc3Rha2luZxxvZmZlbmNlPE9mZmVuY2VTZXZlcml0eQAABAC0ARxQZXJiaWxsAACpCgAABAitCjgArQoMHHNwX2NvcmUYY3J5cHRvJEtleVR5cGVJZAAABABIARxbdTg7IDRdAACxCgw4cGFsbGV0X3Nlc3Npb24YcGFsbGV0FEVycm9yBARUAAEUMEludmFsaWRQcm9vZgAABGBJbnZhbGlkIG93bmVyc2hpcCBwcm9vZi5cTm9Bc3NvY2lhdGVkVmFsaWRhdG9ySWQAAQScTm8gYXNzb2NpYXRlZCB2YWxpZGF0b3IgSUQgZm9yIGFjY291bnQuNER1cGxpY2F0ZWRLZXkAAgRkUmVnaXN0ZXJlZCBkdXBsaWNhdGUga2V5LhhOb0tleXMAAwSkTm8ga2V5cyBhcmUgYXNzb2NpYXRlZCB3aXRoIHRoaXMgYWNjb3VudC4kTm9BY2NvdW50AAQEGQFLZXkgc2V0dGluZyBhY2NvdW50IGlzIG5vdCBsaXZlLCBzbyBpdCdzIGltcG9zc2libGUgdG8gYXNzb2NpYXRlIGtleXMuBHRFcnJvciBmb3IgdGhlIHNlc3Npb24gcGFsbGV0LrUKCDhwYWxsZXRfZ3JhbmRwYSxTdG9yZWRTdGF0ZQQETgEQARAQTGl2ZQAAADBQZW5kaW5nUGF1c2UIATBzY2hlZHVsZWRfYXQQAQROAAEUZGVsYXkQAQROAAEAGFBhdXNlZAACADRQZW5kaW5nUmVzdW1lCAEwc2NoZWR1bGVkX2F0EAEETgABFGRlbGF5EAEETgADAAC5Cgg4cGFsbGV0X2dyYW5kcGFMU3RvcmVkUGVuZGluZ0NoYW5nZQgETgEQFExpbWl0AAAQATBzY2hlZHVsZWRfYXQQAQROAAEUZGVsYXkQAQROAAFAbmV4dF9hdXRob3JpdGllc70KAWxCb3VuZGVkQXV0aG9yaXR5TGlzdDxMaW1pdD4AARhmb3JjZWS4ASRPcHRpb248Tj4AAL0KDExib3VuZGVkX2NvbGxlY3Rpb25zQHdlYWtfYm91bmRlZF92ZWM4V2Vha0JvdW5kZWRWZWMIBFQB4ARTAAAEANwBGFZlYzxUPgAAwQoMOHBhbGxldF9ncmFuZHBhGHBhbGxldBRFcnJvcgQEVAABHCxQYXVzZUZhaWxlZAAACAUBQXR0ZW1wdCB0byBzaWduYWwgR1JBTkRQQSBwYXVzZSB3aGVuIHRoZSBhdXRob3JpdHkgc2V0IGlzbid0IGxpdmWkKGVpdGhlciBwYXVzZWQgb3IgYWxyZWFkeSBwZW5kaW5nIHBhdXNlKS4wUmVzdW1lRmFpbGVkAAEIEQFBdHRlbXB0IHRvIHNpZ25hbCBHUkFORFBBIHJlc3VtZSB3aGVuIHRoZSBhdXRob3JpdHkgc2V0IGlzbid0IHBhdXNlZKAoZWl0aGVyIGxpdmUgb3IgYWxyZWFkeSBwZW5kaW5nIHJlc3VtZSkuNENoYW5nZVBlbmRpbmcAAgToQXR0ZW1wdCB0byBzaWduYWwgR1JBTkRQQSBjaGFuZ2Ugd2l0aCBvbmUgYWxyZWFkeSBwZW5kaW5nLhxUb29Tb29uAAMEvENhbm5vdCBzaWduYWwgZm9yY2VkIGNoYW5nZSBzbyBzb29uIGFmdGVyIGxhc3QuYEludmFsaWRLZXlPd25lcnNoaXBQcm9vZgAEBDEBQSBrZXkgb3duZXJzaGlwIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLmBJbnZhbGlkRXF1aXZvY2F0aW9uUHJvb2YABQQxAUFuIGVxdWl2b2NhdGlvbiBwcm9vZiBwcm92aWRlZCBhcyBwYXJ0IG9mIGFuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgaW52YWxpZC5YRHVwbGljYXRlT2ZmZW5jZVJlcG9ydAAGBBUBQSBnaXZlbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIHZhbGlkIGJ1dCBhbHJlYWR5IHByZXZpb3VzbHkgcmVwb3J0ZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LsUKDExib3VuZGVkX2NvbGxlY3Rpb25zQHdlYWtfYm91bmRlZF92ZWM4V2Vha0JvdW5kZWRWZWMIBFQBWQIEUwAABADJCgEYVmVjPFQ+AADJCgAAAlkCAM0KCDxwYWxsZXRfdHJlYXN1cnkgUHJvcG9zYWwIJEFjY291bnRJZAEAHEJhbGFuY2UBGAAQASBwcm9wb3NlcgABJEFjY291bnRJZAABFHZhbHVlGAEcQmFsYW5jZQABLGJlbmVmaWNpYXJ5AAEkQWNjb3VudElkAAEQYm9uZBgBHEJhbGFuY2UAANEKDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBEARTAAAEABkCARhWZWM8VD4AANUKCDxwYWxsZXRfdHJlYXN1cnksU3BlbmRTdGF0dXMUJEFzc2V0S2luZAHsMEFzc2V0QmFsYW5jZQEYLEJlbmVmaWNpYXJ5AY0BLEJsb2NrTnVtYmVyARAkUGF5bWVudElkATAAGAEoYXNzZXRfa2luZOwBJEFzc2V0S2luZAABGGFtb3VudBgBMEFzc2V0QmFsYW5jZQABLGJlbmVmaWNpYXJ5jQEBLEJlbmVmaWNpYXJ5AAEodmFsaWRfZnJvbRABLEJsb2NrTnVtYmVyAAEkZXhwaXJlX2F0EAEsQmxvY2tOdW1iZXIAARhzdGF0dXPZCgFcUGF5bWVudFN0YXRlPFBheW1lbnRJZD4AANkKCDxwYWxsZXRfdHJlYXN1cnkwUGF5bWVudFN0YXRlBAhJZAEwAQwcUGVuZGluZwAAACRBdHRlbXB0ZWQEAQhpZDABCElkAAEAGEZhaWxlZAACAADdCgw0c3BfYXJpdGhtZXRpYyhwZXJfdGhpbmdzHFBlcm1pbGwAAAQAEAEMdTMyAADhCgg0ZnJhbWVfc3VwcG9ydCBQYWxsZXRJZAAABACxBQEcW3U4OyA4XQAA5QoMPHBhbGxldF90cmVhc3VyeRhwYWxsZXQURXJyb3IIBFQABEkAASwwSW52YWxpZEluZGV4AAAErE5vIHByb3Bvc2FsLCBib3VudHkgb3Igc3BlbmQgYXQgdGhhdCBpbmRleC5AVG9vTWFueUFwcHJvdmFscwABBIBUb28gbWFueSBhcHByb3ZhbHMgaW4gdGhlIHF1ZXVlLlhJbnN1ZmZpY2llbnRQZXJtaXNzaW9uAAIIRQFUaGUgc3BlbmQgb3JpZ2luIGlzIHZhbGlkIGJ1dCB0aGUgYW1vdW50IGl0IGlzIGFsbG93ZWQgdG8gc3BlbmQgaXMgbG93ZXIgdGhhbiB0aGVMYW1vdW50IHRvIGJlIHNwZW50LkxQcm9wb3NhbE5vdEFwcHJvdmVkAAMEfFByb3Bvc2FsIGhhcyBub3QgYmVlbiBhcHByb3ZlZC5YRmFpbGVkVG9Db252ZXJ0QmFsYW5jZQAEBFEBVGhlIGJhbGFuY2Ugb2YgdGhlIGFzc2V0IGtpbmQgaXMgbm90IGNvbnZlcnRpYmxlIHRvIHRoZSBiYWxhbmNlIG9mIHRoZSBuYXRpdmUgYXNzZXQuMFNwZW5kRXhwaXJlZAAFBLBUaGUgc3BlbmQgaGFzIGV4cGlyZWQgYW5kIGNhbm5vdCBiZSBjbGFpbWVkLixFYXJseVBheW91dAAGBKRUaGUgc3BlbmQgaXMgbm90IHlldCBlbGlnaWJsZSBmb3IgcGF5b3V0LkBBbHJlYWR5QXR0ZW1wdGVkAAcEnFRoZSBwYXltZW50IGhhcyBhbHJlYWR5IGJlZW4gYXR0ZW1wdGVkLixQYXlvdXRFcnJvcgAIBMxUaGVyZSB3YXMgc29tZSBpc3N1ZSB3aXRoIHRoZSBtZWNoYW5pc20gb2YgcGF5bWVudC4wTm90QXR0ZW1wdGVkAAkEpFRoZSBwYXlvdXQgd2FzIG5vdCB5ZXQgYXR0ZW1wdGVkL2NsYWltZWQuMEluY29uY2x1c2l2ZQAKBMRUaGUgcGF5bWVudCBoYXMgbmVpdGhlciBmYWlsZWQgbm9yIHN1Y2NlZWRlZCB5ZXQuBHhFcnJvciBmb3IgdGhlIHRyZWFzdXJ5IHBhbGxldC7pCgxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nEHZvdGUYVm90aW5nFBxCYWxhbmNlARgkQWNjb3VudElkAQAsQmxvY2tOdW1iZXIBECRQb2xsSW5kZXgBECBNYXhWb3RlcwABCBxDYXN0aW5nBADtCgHIQ2FzdGluZzxCYWxhbmNlLCBCbG9ja051bWJlciwgUG9sbEluZGV4LCBNYXhWb3Rlcz4AAAAoRGVsZWdhdGluZwQABQsBrERlbGVnYXRpbmc8QmFsYW5jZSwgQWNjb3VudElkLCBCbG9ja051bWJlcj4AAQAA7QoMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxB2b3RlHENhc3RpbmcQHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQJFBvbGxJbmRleAEQIE1heFZvdGVzAAAMARR2b3Rlc/EKAdxCb3VuZGVkVmVjPChQb2xsSW5kZXgsIEFjY291bnRWb3RlPEJhbGFuY2U+KSwgTWF4Vm90ZXM+AAEsZGVsZWdhdGlvbnP9CgFQRGVsZWdhdGlvbnM8QmFsYW5jZT4AARRwcmlvcgELAXxQcmlvckxvY2s8QmxvY2tOdW1iZXIsIEJhbGFuY2U+AADxCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAfUKBFMAAAQA+QoBGFZlYzxUPgAA9QoAAAQIEJUBAPkKAAAC9QoA/QoMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxR0eXBlcyxEZWxlZ2F0aW9ucwQcQmFsYW5jZQEYAAgBFHZvdGVzGAEcQmFsYW5jZQABHGNhcGl0YWwYARxCYWxhbmNlAAABCwxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nEHZvdGUkUHJpb3JMb2NrCCxCbG9ja051bWJlcgEQHEJhbGFuY2UBGAAIABABLEJsb2NrTnVtYmVyAAAYARxCYWxhbmNlAAAFCwxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nEHZvdGUoRGVsZWdhdGluZwwcQmFsYW5jZQEYJEFjY291bnRJZAEALEJsb2NrTnVtYmVyARAAFAEcYmFsYW5jZRgBHEJhbGFuY2UAARh0YXJnZXQAASRBY2NvdW50SWQAAShjb252aWN0aW9umQIBKENvbnZpY3Rpb24AASxkZWxlZ2F0aW9uc/0KAVBEZWxlZ2F0aW9uczxCYWxhbmNlPgABFHByaW9yAQsBfFByaW9yTG9jazxCbG9ja051bWJlciwgQmFsYW5jZT4AAAkLDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBDQsEUwAABAARCwEYVmVjPFQ+AAANCwAABAidARgAEQsAAAINCwAVCwxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nGHBhbGxldBRFcnJvcggEVAAESQABMChOb3RPbmdvaW5nAAAEUFBvbGwgaXMgbm90IG9uZ29pbmcuIE5vdFZvdGVyAAEErFRoZSBnaXZlbiBhY2NvdW50IGRpZCBub3Qgdm90ZSBvbiB0aGUgcG9sbC4wTm9QZXJtaXNzaW9uAAIEyFRoZSBhY3RvciBoYXMgbm8gcGVybWlzc2lvbiB0byBjb25kdWN0IHRoZSBhY3Rpb24uPE5vUGVybWlzc2lvbllldAADBFkBVGhlIGFjdG9yIGhhcyBubyBwZXJtaXNzaW9uIHRvIGNvbmR1Y3QgdGhlIGFjdGlvbiByaWdodCBub3cgYnV0IHdpbGwgZG8gaW4gdGhlIGZ1dHVyZS5EQWxyZWFkeURlbGVnYXRpbmcABASIVGhlIGFjY291bnQgaXMgYWxyZWFkeSBkZWxlZ2F0aW5nLjRBbHJlYWR5Vm90aW5nAAUIVQFUaGUgYWNjb3VudCBjdXJyZW50bHkgaGFzIHZvdGVzIGF0dGFjaGVkIHRvIGl0IGFuZCB0aGUgb3BlcmF0aW9uIGNhbm5vdCBzdWNjZWVkIHVudGlsoHRoZXNlIGFyZSByZW1vdmVkIHRocm91Z2ggYHJlbW92ZV92b3RlYC5ESW5zdWZmaWNpZW50RnVuZHMABgT8VG9vIGhpZ2ggYSBiYWxhbmNlIHdhcyBwcm92aWRlZCB0aGF0IHRoZSBhY2NvdW50IGNhbm5vdCBhZmZvcmQuNE5vdERlbGVnYXRpbmcABwSgVGhlIGFjY291bnQgaXMgbm90IGN1cnJlbnRseSBkZWxlZ2F0aW5nLiBOb25zZW5zZQAIBJREZWxlZ2F0aW9uIHRvIG9uZXNlbGYgbWFrZXMgbm8gc2Vuc2UuPE1heFZvdGVzUmVhY2hlZAAJBIBNYXhpbXVtIG51bWJlciBvZiB2b3RlcyByZWFjaGVkLixDbGFzc05lZWRlZAAKBDkBVGhlIGNsYXNzIG11c3QgYmUgc3VwcGxpZWQgc2luY2UgaXQgaXMgbm90IGVhc2lseSBkZXRlcm1pbmFibGUgZnJvbSB0aGUgc3RhdGUuIEJhZENsYXNzAAsEhFRoZSBjbGFzcyBJRCBzdXBwbGllZCBpcyBpbnZhbGlkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4ZCwxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlczhSZWZlcmVuZHVtSW5mbyAcVHJhY2tJZAGdATRSdW50aW1lT3JpZ2luAaUCGE1vbWVudAEQEENhbGwBpQEcQmFsYW5jZQEYFFRhbGx5AQkIJEFjY291bnRJZAEAPFNjaGVkdWxlQWRkcmVzcwGEARgcT25nb2luZwQAHQsBjQFSZWZlcmVuZHVtU3RhdHVzPFRyYWNrSWQsIFJ1bnRpbWVPcmlnaW4sIE1vbWVudCwgQ2FsbCwgQmFsYW5jZSwgVGFsbHksCkFjY291bnRJZCwgU2NoZWR1bGVBZGRyZXNzLD4AAAAgQXBwcm92ZWQMABABGE1vbWVudAAAJQsBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAAlCwGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AAQAgUmVqZWN0ZWQMABABGE1vbWVudAAAJQsBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAAlCwGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AAgAkQ2FuY2VsbGVkDAAQARhNb21lbnQAACULAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAJQsBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAMAIFRpbWVkT3V0DAAQARhNb21lbnQAACULAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAJQsBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAQAGEtpbGxlZAQAEAEYTW9tZW50AAUAAB0LDEBwYWxsZXRfcmVmZXJlbmRhFHR5cGVzQFJlZmVyZW5kdW1TdGF0dXMgHFRyYWNrSWQBnQE0UnVudGltZU9yaWdpbgGlAhhNb21lbnQBEBBDYWxsAaUBHEJhbGFuY2UBGBRUYWxseQEJCCRBY2NvdW50SWQBADxTY2hlZHVsZUFkZHJlc3MBhAAsARR0cmFja50BARxUcmFja0lkAAEYb3JpZ2lupQIBNFJ1bnRpbWVPcmlnaW4AASBwcm9wb3NhbKUBARBDYWxsAAEkZW5hY3RtZW50vQIBUERpc3BhdGNoVGltZTxNb21lbnQ+AAEkc3VibWl0dGVkEAEYTW9tZW50AAFIc3VibWlzc2lvbl9kZXBvc2l0IQsBbERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPgABQGRlY2lzaW9uX2RlcG9zaXQlCwGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AASBkZWNpZGluZykLAXhPcHRpb248RGVjaWRpbmdTdGF0dXM8TW9tZW50Pj4AARR0YWxseQkIARRUYWxseQABIGluX3F1ZXVlIAEQYm9vbAABFGFsYXJtMQsBhE9wdGlvbjwoTW9tZW50LCBTY2hlZHVsZUFkZHJlc3MpPgAAIQsMQHBhbGxldF9yZWZlcmVuZGEUdHlwZXMcRGVwb3NpdAgkQWNjb3VudElkAQAcQmFsYW5jZQEYAAgBDHdobwABJEFjY291bnRJZAABGGFtb3VudBgBHEJhbGFuY2UAACULBBhPcHRpb24EBFQBIQsBCBBOb25lAAAAEFNvbWUEACELAAABAAApCwQYT3B0aW9uBARUAS0LAQgQTm9uZQAAABBTb21lBAAtCwAAAQAALQsMQHBhbGxldF9yZWZlcmVuZGEUdHlwZXM4RGVjaWRpbmdTdGF0dXMELEJsb2NrTnVtYmVyARAACAEUc2luY2UQASxCbG9ja051bWJlcgABKGNvbmZpcm1pbme4AUxPcHRpb248QmxvY2tOdW1iZXI+AAAxCwQYT3B0aW9uBARUATULAQgQTm9uZQAAABBTb21lBAA1CwAAAQAANQsAAAQIEIQAOQsMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAE9CwRTAAAEAEELARhWZWM8VD4AAD0LAAAECBAYAEELAAACPQsARQsAAAJJCwBJCwAABAidAU0LAE0LDEBwYWxsZXRfcmVmZXJlbmRhFHR5cGVzMFRyYWNrRGV0YWlscwwcQmFsYW5jZQEYGE1vbWVudAEQEE5hbWUB6QgAJAEQbmFtZekIARBOYW1lAAEwbWF4X2RlY2lkaW5nEAEMdTMyAAFAZGVjaXNpb25fZGVwb3NpdBgBHEJhbGFuY2UAAThwcmVwYXJlX3BlcmlvZBABGE1vbWVudAABPGRlY2lzaW9uX3BlcmlvZBABGE1vbWVudAABOGNvbmZpcm1fcGVyaW9kEAEYTW9tZW50AAFQbWluX2VuYWN0bWVudF9wZXJpb2QQARhNb21lbnQAATBtaW5fYXBwcm92YWxRCwEUQ3VydmUAASxtaW5fc3VwcG9ydFELARRDdXJ2ZQAAUQsMQHBhbGxldF9yZWZlcmVuZGEUdHlwZXMUQ3VydmUAAQxATGluZWFyRGVjcmVhc2luZwwBGGxlbmd0aLQBHFBlcmJpbGwAARRmbG9vcrQBHFBlcmJpbGwAARBjZWlstAEcUGVyYmlsbAAAAERTdGVwcGVkRGVjcmVhc2luZxABFGJlZ2lutAEcUGVyYmlsbAABDGVuZLQBHFBlcmJpbGwAARBzdGVwtAEcUGVyYmlsbAABGHBlcmlvZLQBHFBlcmJpbGwAAQAoUmVjaXByb2NhbAwBGGZhY3RvclULASBGaXhlZEk2NAABIHhfb2Zmc2V0VQsBIEZpeGVkSTY0AAEgeV9vZmZzZXRVCwEgRml4ZWRJNjQAAgAAVQsMNHNwX2FyaXRobWV0aWMsZml4ZWRfcG9pbnQgRml4ZWRJNjQAAAQAWQsBDGk2NAAAWQsAAAUMAF0LDEBwYWxsZXRfcmVmZXJlbmRhGHBhbGxldBRFcnJvcggEVAAESQABOChOb3RPbmdvaW5nAAAEaFJlZmVyZW5kdW0gaXMgbm90IG9uZ29pbmcuKEhhc0RlcG9zaXQAAQS4UmVmZXJlbmR1bSdzIGRlY2lzaW9uIGRlcG9zaXQgaXMgYWxyZWFkeSBwYWlkLiBCYWRUcmFjawACBJxUaGUgdHJhY2sgaWRlbnRpZmllciBnaXZlbiB3YXMgaW52YWxpZC4QRnVsbAADBDEBVGhlcmUgYXJlIGFscmVhZHkgYSBmdWxsIGNvbXBsZW1lbnQgb2YgcmVmZXJlbmRhIGluIHByb2dyZXNzIGZvciB0aGlzIHRyYWNrLihRdWV1ZUVtcHR5AAQEgFRoZSBxdWV1ZSBvZiB0aGUgdHJhY2sgaXMgZW1wdHkuNEJhZFJlZmVyZW5kdW0ABQTkVGhlIHJlZmVyZW5kdW0gaW5kZXggcHJvdmlkZWQgaXMgaW52YWxpZCBpbiB0aGlzIGNvbnRleHQuLE5vdGhpbmdUb0RvAAYErFRoZXJlIHdhcyBub3RoaW5nIHRvIGRvIGluIHRoZSBhZHZhbmNlbWVudC4cTm9UcmFjawAHBKBObyB0cmFjayBleGlzdHMgZm9yIHRoZSBwcm9wb3NhbCBvcmlnaW4uKFVuZmluaXNoZWQACAQBAUFueSBkZXBvc2l0IGNhbm5vdCBiZSByZWZ1bmRlZCB1bnRpbCBhZnRlciB0aGUgZGVjaXNpb24gaXMgb3Zlci4wTm9QZXJtaXNzaW9uAAkEqFRoZSBkZXBvc2l0IHJlZnVuZGVyIGlzIG5vdCB0aGUgZGVwb3NpdG9yLiROb0RlcG9zaXQACgTMVGhlIGRlcG9zaXQgY2Fubm90IGJlIHJlZnVuZGVkIHNpbmNlIG5vbmUgd2FzIG1hZGUuJEJhZFN0YXR1cwALBNBUaGUgcmVmZXJlbmR1bSBzdGF0dXMgaXMgaW52YWxpZCBmb3IgdGhpcyBvcGVyYXRpb24uQFByZWltYWdlTm90RXhpc3QADARwVGhlIHByZWltYWdlIGRvZXMgbm90IGV4aXN0LoRQcmVpbWFnZVN0b3JlZFdpdGhEaWZmZXJlbnRMZW5ndGgADQQVAVRoZSBwcmVpbWFnZSBpcyBzdG9yZWQgd2l0aCBhIGRpZmZlcmVudCBsZW5ndGggdGhhbiB0aGUgb25lIHByb3ZpZGVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5hCwxAcGFsbGV0X3doaXRlbGlzdBhwYWxsZXQURXJyb3IEBFQAARRMVW5hdmFpbGFibGVQcmVJbWFnZQAABMhUaGUgcHJlaW1hZ2Ugb2YgdGhlIGNhbGwgaGFzaCBjb3VsZCBub3QgYmUgbG9hZGVkLjxVbmRlY29kYWJsZUNhbGwAAQR4VGhlIGNhbGwgY291bGQgbm90IGJlIGRlY29kZWQuYEludmFsaWRDYWxsV2VpZ2h0V2l0bmVzcwACBOxUaGUgd2VpZ2h0IG9mIHRoZSBkZWNvZGVkIGNhbGwgd2FzIGhpZ2hlciB0aGFuIHRoZSB3aXRuZXNzLlBDYWxsSXNOb3RXaGl0ZWxpc3RlZAADBHRUaGUgY2FsbCB3YXMgbm90IHdoaXRlbGlzdGVkLlhDYWxsQWxyZWFkeVdoaXRlbGlzdGVkAAQEoFRoZSBjYWxsIHdhcyBhbHJlYWR5IHdoaXRlbGlzdGVkOyBOby1PcC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuZQsQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uGGNsYWltcxhwYWxsZXQURXJyb3IEBFQAARhgSW52YWxpZEV0aGVyZXVtU2lnbmF0dXJlAAAEbEludmFsaWQgRXRoZXJldW0gc2lnbmF0dXJlLkBTaWduZXJIYXNOb0NsYWltAAEEeEV0aGVyZXVtIGFkZHJlc3MgaGFzIG5vIGNsYWltLkBTZW5kZXJIYXNOb0NsYWltAAIEsEFjY291bnQgSUQgc2VuZGluZyB0cmFuc2FjdGlvbiBoYXMgbm8gY2xhaW0uMFBvdFVuZGVyZmxvdwADCEkBVGhlcmUncyBub3QgZW5vdWdoIGluIHRoZSBwb3QgdG8gcGF5IG91dCBzb21lIHVudmVzdGVkIGFtb3VudC4gR2VuZXJhbGx5IGltcGxpZXMgYTBsb2dpYyBlcnJvci5ASW52YWxpZFN0YXRlbWVudAAEBJBBIG5lZWRlZCBzdGF0ZW1lbnQgd2FzIG5vdCBpbmNsdWRlZC5MVmVzdGVkQmFsYW5jZUV4aXN0cwAFBKRUaGUgYWNjb3VudCBhbHJlYWR5IGhhcyBhIHZlc3RlZCBiYWxhbmNlLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5pCwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAe0CBFMAAAQAbQsBGFZlYzxUPgAAbQsAAALtAgBxCwg4cGFsbGV0X3Zlc3RpbmcgUmVsZWFzZXMAAQgIVjAAAAAIVjEAAQAAdQsMOHBhbGxldF92ZXN0aW5nGHBhbGxldBRFcnJvcgQEVAABFChOb3RWZXN0aW5nAAAEhFRoZSBhY2NvdW50IGdpdmVuIGlzIG5vdCB2ZXN0aW5nLlRBdE1heFZlc3RpbmdTY2hlZHVsZXMAAQglAVRoZSBhY2NvdW50IGFscmVhZHkgaGFzIGBNYXhWZXN0aW5nU2NoZWR1bGVzYCBjb3VudCBvZiBzY2hlZHVsZXMgYW5kIHRodXNRAWNhbm5vdCBhZGQgYW5vdGhlciBvbmUuIENvbnNpZGVyIG1lcmdpbmcgZXhpc3Rpbmcgc2NoZWR1bGVzIGluIG9yZGVyIHRvIGFkZCBhbm90aGVyLiRBbW91bnRMb3cAAgQFAUFtb3VudCBiZWluZyB0cmFuc2ZlcnJlZCBpcyB0b28gbG93IHRvIGNyZWF0ZSBhIHZlc3Rpbmcgc2NoZWR1bGUuYFNjaGVkdWxlSW5kZXhPdXRPZkJvdW5kcwADBNBBbiBpbmRleCB3YXMgb3V0IG9mIGJvdW5kcyBvZiB0aGUgdmVzdGluZyBzY2hlZHVsZXMuVEludmFsaWRTY2hlZHVsZVBhcmFtcwAEBA0BRmFpbGVkIHRvIGNyZWF0ZSBhIG5ldyBzY2hlZHVsZSBiZWNhdXNlIHNvbWUgcGFyYW1ldGVyIHdhcyBpbnZhbGlkLgR0RXJyb3IgZm9yIHRoZSB2ZXN0aW5nIHBhbGxldC55Cww4cGFsbGV0X3V0aWxpdHkYcGFsbGV0FEVycm9yBARUAAEEMFRvb01hbnlDYWxscwAABFxUb28gbWFueSBjYWxscyBiYXRjaGVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC59CwAABAiBCxgAgQsMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAGFCwRTAAAEAIkLARhWZWM8VD4AAIULCDBwYWxsZXRfcHJveHk8UHJveHlEZWZpbml0aW9uDCRBY2NvdW50SWQBACRQcm94eVR5cGUBAQMsQmxvY2tOdW1iZXIBEAAMASBkZWxlZ2F0ZQABJEFjY291bnRJZAABKHByb3h5X3R5cGUBAwEkUHJveHlUeXBlAAEUZGVsYXkQASxCbG9ja051bWJlcgAAiQsAAAKFCwCNCwAABAiRCxgAkQsMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAGVCwRTAAAEAJkLARhWZWM8VD4AAJULCDBwYWxsZXRfcHJveHkwQW5ub3VuY2VtZW50DCRBY2NvdW50SWQBABBIYXNoATQsQmxvY2tOdW1iZXIBEAAMARByZWFsAAEkQWNjb3VudElkAAEkY2FsbF9oYXNoNAEQSGFzaAABGGhlaWdodBABLEJsb2NrTnVtYmVyAACZCwAAApULAJ0LDDBwYWxsZXRfcHJveHkYcGFsbGV0FEVycm9yBARUAAEgHFRvb01hbnkAAAQhAVRoZXJlIGFyZSB0b28gbWFueSBwcm94aWVzIHJlZ2lzdGVyZWQgb3IgdG9vIG1hbnkgYW5ub3VuY2VtZW50cyBwZW5kaW5nLiBOb3RGb3VuZAABBHRQcm94eSByZWdpc3RyYXRpb24gbm90IGZvdW5kLiBOb3RQcm94eQACBMxTZW5kZXIgaXMgbm90IGEgcHJveHkgb2YgdGhlIGFjY291bnQgdG8gYmUgcHJveGllZC4sVW5wcm94eWFibGUAAwQhAUEgY2FsbCB3aGljaCBpcyBpbmNvbXBhdGlibGUgd2l0aCB0aGUgcHJveHkgdHlwZSdzIGZpbHRlciB3YXMgYXR0ZW1wdGVkLiREdXBsaWNhdGUABARsQWNjb3VudCBpcyBhbHJlYWR5IGEgcHJveHkuME5vUGVybWlzc2lvbgAFBBUBQ2FsbCBtYXkgbm90IGJlIG1hZGUgYnkgcHJveHkgYmVjYXVzZSBpdCBtYXkgZXNjYWxhdGUgaXRzIHByaXZpbGVnZXMuLFVuYW5ub3VuY2VkAAYE0EFubm91bmNlbWVudCwgaWYgbWFkZSBhdCBhbGwsIHdhcyBtYWRlIHRvbyByZWNlbnRseS4sTm9TZWxmUHJveHkABwRkQ2Fubm90IGFkZCBzZWxmIGFzIHByb3h5LgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC6hCwg8cGFsbGV0X211bHRpc2lnIE11bHRpc2lnECxCbG9ja051bWJlcgEQHEJhbGFuY2UBGCRBY2NvdW50SWQBADBNYXhBcHByb3ZhbHMAABABEHdoZW4NAwFYVGltZXBvaW50PEJsb2NrTnVtYmVyPgABHGRlcG9zaXQYARxCYWxhbmNlAAEkZGVwb3NpdG9yAAEkQWNjb3VudElkAAEkYXBwcm92YWxzpQsBjEJvdW5kZWRWZWM8QWNjb3VudElkLCBNYXhBcHByb3ZhbHM+AAClCwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABAAFAgEYVmVjPFQ+AACpCww8cGFsbGV0X211bHRpc2lnGHBhbGxldBRFcnJvcgQEVAABOEBNaW5pbXVtVGhyZXNob2xkAAAEfFRocmVzaG9sZCBtdXN0IGJlIDIgb3IgZ3JlYXRlci48QWxyZWFkeUFwcHJvdmVkAAEErENhbGwgaXMgYWxyZWFkeSBhcHByb3ZlZCBieSB0aGlzIHNpZ25hdG9yeS5ETm9BcHByb3ZhbHNOZWVkZWQAAgScQ2FsbCBkb2Vzbid0IG5lZWQgYW55IChtb3JlKSBhcHByb3ZhbHMuRFRvb0Zld1NpZ25hdG9yaWVzAAMEqFRoZXJlIGFyZSB0b28gZmV3IHNpZ25hdG9yaWVzIGluIHRoZSBsaXN0LkhUb29NYW55U2lnbmF0b3JpZXMABASsVGhlcmUgYXJlIHRvbyBtYW55IHNpZ25hdG9yaWVzIGluIHRoZSBsaXN0LlRTaWduYXRvcmllc091dE9mT3JkZXIABQQNAVRoZSBzaWduYXRvcmllcyB3ZXJlIHByb3ZpZGVkIG91dCBvZiBvcmRlcjsgdGhleSBzaG91bGQgYmUgb3JkZXJlZC5MU2VuZGVySW5TaWduYXRvcmllcwAGBA0BVGhlIHNlbmRlciB3YXMgY29udGFpbmVkIGluIHRoZSBvdGhlciBzaWduYXRvcmllczsgaXQgc2hvdWxkbid0IGJlLiBOb3RGb3VuZAAHBKBNdWx0aXNpZyBvcGVyYXRpb24gbm90IGZvdW5kIGluIHN0b3JhZ2UuIE5vdE93bmVyAAgIUQFPbmx5IHRoZSBhY2NvdW50IHRoYXQgb3JpZ2luYWxseSBjcmVhdGVkIHRoZSBtdWx0aXNpZyBpcyBhYmxlIHRvIGNhbmNlbCBpdCBvciB1cGRhdGU0aXRzIGRlcG9zaXRzLixOb1RpbWVwb2ludAAJBB0BTm8gdGltZXBvaW50IHdhcyBnaXZlbiwgeWV0IHRoZSBtdWx0aXNpZyBvcGVyYXRpb24gaXMgYWxyZWFkeSB1bmRlcndheS44V3JvbmdUaW1lcG9pbnQACgQtAUEgZGlmZmVyZW50IHRpbWVwb2ludCB3YXMgZ2l2ZW4gdG8gdGhlIG11bHRpc2lnIG9wZXJhdGlvbiB0aGF0IGlzIHVuZGVyd2F5LkxVbmV4cGVjdGVkVGltZXBvaW50AAsE9EEgdGltZXBvaW50IHdhcyBnaXZlbiwgeWV0IG5vIG11bHRpc2lnIG9wZXJhdGlvbiBpcyB1bmRlcndheS48TWF4V2VpZ2h0VG9vTG93AAwE0FRoZSBtYXhpbXVtIHdlaWdodCBpbmZvcm1hdGlvbiBwcm92aWRlZCB3YXMgdG9vIGxvdy40QWxyZWFkeVN0b3JlZAANBKBUaGUgZGF0YSB0byBiZSBzdG9yZWQgaXMgYWxyZWFkeSBzdG9yZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lq0LCDxwYWxsZXRfYm91bnRpZXMYQm91bnR5DCRBY2NvdW50SWQBABxCYWxhbmNlARgsQmxvY2tOdW1iZXIBEAAYASBwcm9wb3NlcgABJEFjY291bnRJZAABFHZhbHVlGAEcQmFsYW5jZQABDGZlZRgBHEJhbGFuY2UAATxjdXJhdG9yX2RlcG9zaXQYARxCYWxhbmNlAAEQYm9uZBgBHEJhbGFuY2UAARhzdGF0dXOxCwGQQm91bnR5U3RhdHVzPEFjY291bnRJZCwgQmxvY2tOdW1iZXI+AACxCwg8cGFsbGV0X2JvdW50aWVzMEJvdW50eVN0YXR1cwgkQWNjb3VudElkAQAsQmxvY2tOdW1iZXIBEAEcIFByb3Bvc2VkAAAAIEFwcHJvdmVkAAEAGEZ1bmRlZAACADxDdXJhdG9yUHJvcG9zZWQEARxjdXJhdG9yAAEkQWNjb3VudElkAAMAGEFjdGl2ZQgBHGN1cmF0b3IAASRBY2NvdW50SWQAASh1cGRhdGVfZHVlEAEsQmxvY2tOdW1iZXIABAA0UGVuZGluZ1BheW91dAwBHGN1cmF0b3IAASRBY2NvdW50SWQAASxiZW5lZmljaWFyeQABJEFjY291bnRJZAABJHVubG9ja19hdBABLEJsb2NrTnVtYmVyAAUATEFwcHJvdmVkV2l0aEN1cmF0b3IEARxjdXJhdG9yAAEkQWNjb3VudElkAAYAALULDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADgBGFZlYzxUPgAAuQsMPHBhbGxldF9ib3VudGllcxhwYWxsZXQURXJyb3IIBFQABEkAATBwSW5zdWZmaWNpZW50UHJvcG9zZXJzQmFsYW5jZQAABHhQcm9wb3NlcidzIGJhbGFuY2UgaXMgdG9vIGxvdy4wSW52YWxpZEluZGV4AAEEkE5vIHByb3Bvc2FsIG9yIGJvdW50eSBhdCB0aGF0IGluZGV4LjBSZWFzb25Ub29CaWcAAgSEVGhlIHJlYXNvbiBnaXZlbiBpcyBqdXN0IHRvbyBiaWcuQFVuZXhwZWN0ZWRTdGF0dXMAAwSAVGhlIGJvdW50eSBzdGF0dXMgaXMgdW5leHBlY3RlZC44UmVxdWlyZUN1cmF0b3IABARcUmVxdWlyZSBib3VudHkgY3VyYXRvci4wSW52YWxpZFZhbHVlAAUEVEludmFsaWQgYm91bnR5IHZhbHVlLihJbnZhbGlkRmVlAAYETEludmFsaWQgYm91bnR5IGZlZS40UGVuZGluZ1BheW91dAAHCGxBIGJvdW50eSBwYXlvdXQgaXMgcGVuZGluZy74VG8gY2FuY2VsIHRoZSBib3VudHksIHlvdSBtdXN0IHVuYXNzaWduIGFuZCBzbGFzaCB0aGUgY3VyYXRvci4kUHJlbWF0dXJlAAgERQFUaGUgYm91bnRpZXMgY2Fubm90IGJlIGNsYWltZWQvY2xvc2VkIGJlY2F1c2UgaXQncyBzdGlsbCBpbiB0aGUgY291bnRkb3duIHBlcmlvZC5QSGFzQWN0aXZlQ2hpbGRCb3VudHkACQQFAVRoZSBib3VudHkgY2Fubm90IGJlIGNsb3NlZCBiZWNhdXNlIGl0IGhhcyBhY3RpdmUgY2hpbGQgYm91bnRpZXMuNFRvb01hbnlRdWV1ZWQACgSYVG9vIG1hbnkgYXBwcm92YWxzIGFyZSBhbHJlYWR5IHF1ZXVlZC4sTm90UHJvcG9zZXIACwScVXNlciBpcyBub3QgdGhlIHByb3Bvc2VyIG9mIHRoZSBib3VudHkuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lr0LCFRwYWxsZXRfY2hpbGRfYm91bnRpZXMsQ2hpbGRCb3VudHkMJEFjY291bnRJZAEAHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQABQBNHBhcmVudF9ib3VudHkQASxCb3VudHlJbmRleAABFHZhbHVlGAEcQmFsYW5jZQABDGZlZRgBHEJhbGFuY2UAATxjdXJhdG9yX2RlcG9zaXQYARxCYWxhbmNlAAEYc3RhdHVzwQsBpENoaWxkQm91bnR5U3RhdHVzPEFjY291bnRJZCwgQmxvY2tOdW1iZXI+AADBCwhUcGFsbGV0X2NoaWxkX2JvdW50aWVzRENoaWxkQm91bnR5U3RhdHVzCCRBY2NvdW50SWQBACxCbG9ja051bWJlcgEQARAUQWRkZWQAAAA8Q3VyYXRvclByb3Bvc2VkBAEcY3VyYXRvcgABJEFjY291bnRJZAABABhBY3RpdmUEARxjdXJhdG9yAAEkQWNjb3VudElkAAIANFBlbmRpbmdQYXlvdXQMARxjdXJhdG9yAAEkQWNjb3VudElkAAEsYmVuZWZpY2lhcnkAASRBY2NvdW50SWQAASR1bmxvY2tfYXQQASxCbG9ja051bWJlcgADAADFCwxUcGFsbGV0X2NoaWxkX2JvdW50aWVzGHBhbGxldBRFcnJvcgQEVAABDFRQYXJlbnRCb3VudHlOb3RBY3RpdmUAAASkVGhlIHBhcmVudCBib3VudHkgaXMgbm90IGluIGFjdGl2ZSBzdGF0ZS5kSW5zdWZmaWNpZW50Qm91bnR5QmFsYW5jZQABBORUaGUgYm91bnR5IGJhbGFuY2UgaXMgbm90IGVub3VnaCB0byBhZGQgbmV3IGNoaWxkLWJvdW50eS5QVG9vTWFueUNoaWxkQm91bnRpZXMAAgQNAU51bWJlciBvZiBjaGlsZCBib3VudGllcyBleGNlZWRzIGxpbWl0IGBNYXhBY3RpdmVDaGlsZEJvdW50eUNvdW50YC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuyQsIkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZTRSZWFkeVNvbHV0aW9uDCRBY2NvdW50SWQAKE1heFdpbm5lcnMATE1heEJhY2tlcnNQZXJXaW5uZXIAAAwBIHN1cHBvcnRzzQsB7EJvdW5kZWRTdXBwb3J0czxBY2NvdW50SWQsIE1heFdpbm5lcnMsIE1heEJhY2tlcnNQZXJXaW5uZXI+AAEUc2NvcmXtAwE0RWxlY3Rpb25TY29yZQABHGNvbXB1dGVBCAE8RWxlY3Rpb25Db21wdXRlAADNCwh8ZnJhbWVfZWxlY3Rpb25fcHJvdmlkZXJfc3VwcG9ydDxCb3VuZGVkU3VwcG9ydHMMJEFjY291bnRJZAEAGEJPdXRlcgAYQklubmVyAAAEANELAQkBQm91bmRlZFZlYzwoQWNjb3VudElkLCBCb3VuZGVkU3VwcG9ydDxBY2NvdW50SWQsIEJJbm5lcj4pLCBCT3V0ZXI+AADRCwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAdULBFMAAAQA4QsBGFZlYzxUPgAA1QsAAAQIANkLANkLCHxmcmFtZV9lbGVjdGlvbl9wcm92aWRlcl9zdXBwb3J0OEJvdW5kZWRTdXBwb3J0CCRBY2NvdW50SWQBABRCb3VuZAAACAEUdG90YWwYATxFeHRlbmRlZEJhbGFuY2UAARh2b3RlcnPdCwG8Qm91bmRlZFZlYzwoQWNjb3VudElkLCBFeHRlbmRlZEJhbGFuY2UpLCBCb3VuZD4AAN0LDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCQQEUwAABAAFBAEYVmVjPFQ+AADhCwAAAtULAOULCJBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2U0Um91bmRTbmFwc2hvdAgkQWNjb3VudElkAQAkVm90ZXJUeXBlAekLAAgBGHZvdGVyc+0LAThWZWM8Vm90ZXJUeXBlPgABHHRhcmdldHMFAgE4VmVjPEFjY291bnRJZD4AAOkLAAAEDAAwSQoA7QsAAALpCwDxCwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAfULBFMAAAQA+QsBGFZlYzxUPgAA9QsAAAQM7QMQEAD5CwAAAvULAP0LDJBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2UYc2lnbmVkQFNpZ25lZFN1Ym1pc3Npb24MJEFjY291bnRJZAEAHEJhbGFuY2UBGCBTb2x1dGlvbgEhAwAQAQx3aG8AASRBY2NvdW50SWQAARxkZXBvc2l0GAEcQmFsYW5jZQABMHJhd19zb2x1dGlvbh0DAVRSYXdTb2x1dGlvbjxTb2x1dGlvbj4AASBjYWxsX2ZlZRgBHEJhbGFuY2UAAAEMDJBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2UYcGFsbGV0FEVycm9yBARUAAE8aFByZURpc3BhdGNoRWFybHlTdWJtaXNzaW9uAAAEZFN1Ym1pc3Npb24gd2FzIHRvbyBlYXJseS5sUHJlRGlzcGF0Y2hXcm9uZ1dpbm5lckNvdW50AAEEiFdyb25nIG51bWJlciBvZiB3aW5uZXJzIHByZXNlbnRlZC5kUHJlRGlzcGF0Y2hXZWFrU3VibWlzc2lvbgACBJBTdWJtaXNzaW9uIHdhcyB0b28gd2Vhaywgc2NvcmUtd2lzZS48U2lnbmVkUXVldWVGdWxsAAMESQFUaGUgcXVldWUgd2FzIGZ1bGwsIGFuZCB0aGUgc29sdXRpb24gd2FzIG5vdCBiZXR0ZXIgdGhhbiBhbnkgb2YgdGhlIGV4aXN0aW5nIG9uZXMuWFNpZ25lZENhbm5vdFBheURlcG9zaXQABASUVGhlIG9yaWdpbiBmYWlsZWQgdG8gcGF5IHRoZSBkZXBvc2l0LlBTaWduZWRJbnZhbGlkV2l0bmVzcwAFBKBXaXRuZXNzIGRhdGEgdG8gZGlzcGF0Y2hhYmxlIGlzIGludmFsaWQuTFNpZ25lZFRvb011Y2hXZWlnaHQABgS4VGhlIHNpZ25lZCBzdWJtaXNzaW9uIGNvbnN1bWVzIHRvbyBtdWNoIHdlaWdodDxPY3dDYWxsV3JvbmdFcmEABwSYT0NXIHN1Ym1pdHRlZCBzb2x1dGlvbiBmb3Igd3Jvbmcgcm91bmRcTWlzc2luZ1NuYXBzaG90TWV0YWRhdGEACASoU25hcHNob3QgbWV0YWRhdGEgc2hvdWxkIGV4aXN0IGJ1dCBkaWRuJ3QuWEludmFsaWRTdWJtaXNzaW9uSW5kZXgACQTQYFNlbGY6Omluc2VydF9zdWJtaXNzaW9uYCByZXR1cm5lZCBhbiBpbnZhbGlkIGluZGV4LjhDYWxsTm90QWxsb3dlZAAKBJhUaGUgY2FsbCBpcyBub3QgYWxsb3dlZCBhdCB0aGlzIHBvaW50LjhGYWxsYmFja0ZhaWxlZAALBExUaGUgZmFsbGJhY2sgZmFpbGVkLEJvdW5kTm90TWV0AAwESFNvbWUgYm91bmQgbm90IG1ldDhUb29NYW55V2lubmVycwANBJxTdWJtaXR0ZWQgc29sdXRpb24gaGFzIHRvbyBtYW55IHdpbm5lcnNkUHJlRGlzcGF0Y2hEaWZmZXJlbnRSb3VuZAAOBLhTdWJtaXNzaW9uIHdhcyBwcmVwYXJlZCBmb3IgYSBkaWZmZXJlbnQgcm91bmQuBA0BRXJyb3Igb2YgdGhlIHBhbGxldCB0aGF0IGNhbiBiZSByZXR1cm5lZCBpbiByZXNwb25zZSB0byBkaXNwYXRjaGVzLgUMDEBwYWxsZXRfYmFnc19saXN0EGxpc3QQTm9kZQgEVAAESQAAFAEIaWQAATBUOjpBY2NvdW50SWQAARBwcmV2MQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEQbmV4dDECAVBPcHRpb248VDo6QWNjb3VudElkPgABJGJhZ191cHBlcjABIFQ6OlNjb3JlAAEUc2NvcmUwASBUOjpTY29yZQAACQwMQHBhbGxldF9iYWdzX2xpc3QQbGlzdAxCYWcIBFQABEkAAAgBEGhlYWQxAgFQT3B0aW9uPFQ6OkFjY291bnRJZD4AARB0YWlsMQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAANDAAAAjAAEQwMQHBhbGxldF9iYWdzX2xpc3QYcGFsbGV0FEVycm9yCARUAARJAAEIEExpc3QEABUMASRMaXN0RXJyb3IAAAS0QSBlcnJvciBpbiB0aGUgbGlzdCBpbnRlcmZhY2UgaW1wbGVtZW50YXRpb24uGExvY2tlZAABBNhDb3VsZCBub3QgdXBkYXRlIGEgbm9kZSwgYmVjYXVzZSB0aGUgcGFsbGV0IGlzIGxvY2tlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuFQwMQHBhbGxldF9iYWdzX2xpc3QQbGlzdCRMaXN0RXJyb3IAARQkRHVwbGljYXRlAAAAKE5vdEhlYXZpZXIAAQAwTm90SW5TYW1lQmFnAAIAME5vZGVOb3RGb3VuZAADABhMb2NrZWQABAAAGQwAAAQI9Qb1BgAdDAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMoUG9vbE1lbWJlcgQEVAAAEAEccG9vbF9pZBABGFBvb2xJZAABGHBvaW50cxgBMEJhbGFuY2VPZjxUPgABcGxhc3RfcmVjb3JkZWRfcmV3YXJkX2NvdW50ZXIJBwFAVDo6UmV3YXJkQ291bnRlcgABOHVuYm9uZGluZ19lcmFzIQwB4EJvdW5kZWRCVHJlZU1hcDxFcmFJbmRleCwgQmFsYW5jZU9mPFQ+LCBUOjpNYXhVbmJvbmRpbmc+AAAhDAxMYm91bmRlZF9jb2xsZWN0aW9uc0Rib3VuZGVkX2J0cmVlX21hcDxCb3VuZGVkQlRyZWVNYXAMBEsBEARWARgEUwAABAAlDAE4QlRyZWVNYXA8SywgVj4AACUMBCBCVHJlZU1hcAgESwEQBFYBGAAEAEELAAAAKQwIXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzPEJvbmRlZFBvb2xJbm5lcgQEVAAAFAEoY29tbWlzc2lvbi0MATRDb21taXNzaW9uPFQ+AAE4bWVtYmVyX2NvdW50ZXIQAQx1MzIAARhwb2ludHMYATBCYWxhbmNlT2Y8VD4AARRyb2xlczUMAVxQb29sUm9sZXM8VDo6QWNjb3VudElkPgABFHN0YXRlGQQBJFBvb2xTdGF0ZQAALQwIXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzKENvbW1pc3Npb24EBFQAABQBHGN1cnJlbnQxBAF8T3B0aW9uPChQZXJiaWxsLCBUOjpBY2NvdW50SWQpPgABDG1heFUIATxPcHRpb248UGVyYmlsbD4AASxjaGFuZ2VfcmF0ZTEMAbxPcHRpb248Q29tbWlzc2lvbkNoYW5nZVJhdGU8QmxvY2tOdW1iZXJGb3I8VD4+PgABNHRocm90dGxlX2Zyb224AWRPcHRpb248QmxvY2tOdW1iZXJGb3I8VD4+AAFAY2xhaW1fcGVybWlzc2lvbj0EAbxPcHRpb248Q29tbWlzc2lvbkNsYWltUGVybWlzc2lvbjxUOjpBY2NvdW50SWQ+PgAAMQwEGE9wdGlvbgQEVAE5BAEIEE5vbmUAAAAQU29tZQQAOQQAAAEAADUMCFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyRQb29sUm9sZXMEJEFjY291bnRJZAEAABABJGRlcG9zaXRvcgABJEFjY291bnRJZAABEHJvb3QxAgFET3B0aW9uPEFjY291bnRJZD4AASRub21pbmF0b3IxAgFET3B0aW9uPEFjY291bnRJZD4AARxib3VuY2VyMQIBRE9wdGlvbjxBY2NvdW50SWQ+AAA5DAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMoUmV3YXJkUG9vbAQEVAAAFAFwbGFzdF9yZWNvcmRlZF9yZXdhcmRfY291bnRlcgkHAUBUOjpSZXdhcmRDb3VudGVyAAFsbGFzdF9yZWNvcmRlZF90b3RhbF9wYXlvdXRzGAEwQmFsYW5jZU9mPFQ+AAFUdG90YWxfcmV3YXJkc19jbGFpbWVkGAEwQmFsYW5jZU9mPFQ+AAFgdG90YWxfY29tbWlzc2lvbl9wZW5kaW5nGAEwQmFsYW5jZU9mPFQ+AAFgdG90YWxfY29tbWlzc2lvbl9jbGFpbWVkGAEwQmFsYW5jZU9mPFQ+AAA9DAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgU3ViUG9vbHMEBFQAAAgBGG5vX2VyYUEMATRVbmJvbmRQb29sPFQ+AAEgd2l0aF9lcmFFDAEBAUJvdW5kZWRCVHJlZU1hcDxFcmFJbmRleCwgVW5ib25kUG9vbDxUPiwgVG90YWxVbmJvbmRpbmdQb29sczxUPj4AAEEMCFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyhVbmJvbmRQb29sBARUAAAIARhwb2ludHMYATBCYWxhbmNlT2Y8VD4AARxiYWxhbmNlGAEwQmFsYW5jZU9mPFQ+AABFDAxMYm91bmRlZF9jb2xsZWN0aW9uc0Rib3VuZGVkX2J0cmVlX21hcDxCb3VuZGVkQlRyZWVNYXAMBEsBEARWAUEMBFMAAAQASQwBOEJUcmVlTWFwPEssIFY+AABJDAQgQlRyZWVNYXAIBEsBEARWAUEMAAQATQwAAABNDAAAAlEMAFEMAAAECBBBDABVDAxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA4ARhWZWM8VD4AAFkMDFxwYWxsZXRfbm9taW5hdGlvbl9wb29scxhwYWxsZXQURXJyb3IEBFQAAZgwUG9vbE5vdEZvdW5kAAAEiEEgKGJvbmRlZCkgcG9vbCBpZCBkb2VzIG5vdCBleGlzdC5IUG9vbE1lbWJlck5vdEZvdW5kAAEEbEFuIGFjY291bnQgaXMgbm90IGEgbWVtYmVyLkhSZXdhcmRQb29sTm90Rm91bmQAAgQhAUEgcmV3YXJkIHBvb2wgZG9lcyBub3QgZXhpc3QuIEluIGFsbCBjYXNlcyB0aGlzIGlzIGEgc3lzdGVtIGxvZ2ljIGVycm9yLkBTdWJQb29sc05vdEZvdW5kAAMEaEEgc3ViIHBvb2wgZG9lcyBub3QgZXhpc3QuZEFjY291bnRCZWxvbmdzVG9PdGhlclBvb2wABAhNAUFuIGFjY291bnQgaXMgYWxyZWFkeSBkZWxlZ2F0aW5nIGluIGFub3RoZXIgcG9vbC4gQW4gYWNjb3VudCBtYXkgb25seSBiZWxvbmcgdG8gb25lPHBvb2wgYXQgYSB0aW1lLjhGdWxseVVuYm9uZGluZwAFCD0BVGhlIG1lbWJlciBpcyBmdWxseSB1bmJvbmRlZCAoYW5kIHRodXMgY2Fubm90IGFjY2VzcyB0aGUgYm9uZGVkIGFuZCByZXdhcmQgcG9vbKhhbnltb3JlIHRvLCBmb3IgZXhhbXBsZSwgY29sbGVjdCByZXdhcmRzKS5ETWF4VW5ib25kaW5nTGltaXQABgQJAVRoZSBtZW1iZXIgY2Fubm90IHVuYm9uZCBmdXJ0aGVyIGNodW5rcyBkdWUgdG8gcmVhY2hpbmcgdGhlIGxpbWl0LkRDYW5ub3RXaXRoZHJhd0FueQAHBE0BTm9uZSBvZiB0aGUgZnVuZHMgY2FuIGJlIHdpdGhkcmF3biB5ZXQgYmVjYXVzZSB0aGUgYm9uZGluZyBkdXJhdGlvbiBoYXMgbm90IHBhc3NlZC5ETWluaW11bUJvbmROb3RNZXQACBQpAVRoZSBhbW91bnQgZG9lcyBub3QgbWVldCB0aGUgbWluaW11bSBib25kIHRvIGVpdGhlciBqb2luIG9yIGNyZWF0ZSBhIHBvb2wuAFUBVGhlIGRlcG9zaXRvciBjYW4gbmV2ZXIgdW5ib25kIHRvIGEgdmFsdWUgbGVzcyB0aGFuIGBQYWxsZXQ6OmRlcG9zaXRvcl9taW5fYm9uZGAuIFRoZV0BY2FsbGVyIGRvZXMgbm90IGhhdmUgbm9taW5hdGluZyBwZXJtaXNzaW9ucyBmb3IgdGhlIHBvb2wuIE1lbWJlcnMgY2FuIG5ldmVyIHVuYm9uZCB0byBhaHZhbHVlIGJlbG93IGBNaW5Kb2luQm9uZGAuME92ZXJmbG93UmlzawAJBCEBVGhlIHRyYW5zYWN0aW9uIGNvdWxkIG5vdCBiZSBleGVjdXRlZCBkdWUgdG8gb3ZlcmZsb3cgcmlzayBmb3IgdGhlIHBvb2wuNE5vdERlc3Ryb3lpbmcACghdAUEgcG9vbCBtdXN0IGJlIGluIFtgUG9vbFN0YXRlOjpEZXN0cm95aW5nYF0gaW4gb3JkZXIgZm9yIHRoZSBkZXBvc2l0b3IgdG8gdW5ib25kIG9yIGZvcrhvdGhlciBtZW1iZXJzIHRvIGJlIHBlcm1pc3Npb25sZXNzbHkgdW5ib25kZWQuME5vdE5vbWluYXRvcgALBPRUaGUgY2FsbGVyIGRvZXMgbm90IGhhdmUgbm9taW5hdGluZyBwZXJtaXNzaW9ucyBmb3IgdGhlIHBvb2wuVE5vdEtpY2tlck9yRGVzdHJveWluZwAMBD0BRWl0aGVyIGEpIHRoZSBjYWxsZXIgY2Fubm90IG1ha2UgYSB2YWxpZCBraWNrIG9yIGIpIHRoZSBwb29sIGlzIG5vdCBkZXN0cm95aW5nLhxOb3RPcGVuAA0EcFRoZSBwb29sIGlzIG5vdCBvcGVuIHRvIGpvaW4gTWF4UG9vbHMADgSEVGhlIHN5c3RlbSBpcyBtYXhlZCBvdXQgb24gcG9vbHMuOE1heFBvb2xNZW1iZXJzAA8EnFRvbyBtYW55IG1lbWJlcnMgaW4gdGhlIHBvb2wgb3Igc3lzdGVtLkRDYW5Ob3RDaGFuZ2VTdGF0ZQAQBIhUaGUgcG9vbHMgc3RhdGUgY2Fubm90IGJlIGNoYW5nZWQuVERvZXNOb3RIYXZlUGVybWlzc2lvbgARBLhUaGUgY2FsbGVyIGRvZXMgbm90IGhhdmUgYWRlcXVhdGUgcGVybWlzc2lvbnMuVE1ldGFkYXRhRXhjZWVkc01heExlbgASBKxNZXRhZGF0YSBleGNlZWRzIFtgQ29uZmlnOjpNYXhNZXRhZGF0YUxlbmBdJERlZmVuc2l2ZQQAXQwBOERlZmVuc2l2ZUVycm9yABMIMQFTb21lIGVycm9yIG9jY3VycmVkIHRoYXQgc2hvdWxkIG5ldmVyIGhhcHBlbi4gVGhpcyBzaG91bGQgYmUgcmVwb3J0ZWQgdG8gdGhlMG1haW50YWluZXJzLpxQYXJ0aWFsVW5ib25kTm90QWxsb3dlZFBlcm1pc3Npb25sZXNzbHkAFAS8UGFydGlhbCB1bmJvbmRpbmcgbm93IGFsbG93ZWQgcGVybWlzc2lvbmxlc3NseS5cTWF4Q29tbWlzc2lvblJlc3RyaWN0ZWQAFQQdAVRoZSBwb29sJ3MgbWF4IGNvbW1pc3Npb24gY2Fubm90IGJlIHNldCBoaWdoZXIgdGhhbiB0aGUgZXhpc3RpbmcgdmFsdWUuYENvbW1pc3Npb25FeGNlZWRzTWF4aW11bQAWBOxUaGUgc3VwcGxpZWQgY29tbWlzc2lvbiBleGNlZWRzIHRoZSBtYXggYWxsb3dlZCBjb21taXNzaW9uLnhDb21taXNzaW9uRXhjZWVkc0dsb2JhbE1heGltdW0AFwToVGhlIHN1cHBsaWVkIGNvbW1pc3Npb24gZXhjZWVkcyBnbG9iYWwgbWF4aW11bSBjb21taXNzaW9uLmRDb21taXNzaW9uQ2hhbmdlVGhyb3R0bGVkABgECQFOb3QgZW5vdWdoIGJsb2NrcyBoYXZlIHN1cnBhc3NlZCBzaW5jZSB0aGUgbGFzdCBjb21taXNzaW9uIHVwZGF0ZS54Q29tbWlzc2lvbkNoYW5nZVJhdGVOb3RBbGxvd2VkABkEAQFUaGUgc3VibWl0dGVkIGNoYW5nZXMgdG8gY29tbWlzc2lvbiBjaGFuZ2UgcmF0ZSBhcmUgbm90IGFsbG93ZWQuTE5vUGVuZGluZ0NvbW1pc3Npb24AGgSgVGhlcmUgaXMgbm8gcGVuZGluZyBjb21taXNzaW9uIHRvIGNsYWltLlhOb0NvbW1pc3Npb25DdXJyZW50U2V0ABsEjE5vIGNvbW1pc3Npb24gY3VycmVudCBoYXMgYmVlbiBzZXQuLFBvb2xJZEluVXNlABwEZFBvb2wgaWQgY3VycmVudGx5IGluIHVzZS40SW52YWxpZFBvb2xJZAAdBJxQb29sIGlkIHByb3ZpZGVkIGlzIG5vdCBjb3JyZWN0L3VzYWJsZS5MQm9uZEV4dHJhUmVzdHJpY3RlZAAeBPxCb25kaW5nIGV4dHJhIGlzIHJlc3RyaWN0ZWQgdG8gdGhlIGV4YWN0IHBlbmRpbmcgcmV3YXJkIGFtb3VudC48Tm90aGluZ1RvQWRqdXN0AB8EsE5vIGltYmFsYW5jZSBpbiB0aGUgRUQgZGVwb3NpdCBmb3IgdGhlIHBvb2wuOE5vdGhpbmdUb1NsYXNoACAEzE5vIHNsYXNoIHBlbmRpbmcgdGhhdCBjYW4gYmUgYXBwbGllZCB0byB0aGUgbWVtYmVyLixTbGFzaFRvb0xvdwAhBKhUaGUgc2xhc2ggYW1vdW50IGlzIHRvbyBsb3cgdG8gYmUgYXBwbGllZC48QWxyZWFkeU1pZ3JhdGVkACIEFQFUaGUgcG9vbCBvciBtZW1iZXIgZGVsZWdhdGlvbiBoYXMgYWxyZWFkeSBtaWdyYXRlZCB0byBkZWxlZ2F0ZSBzdGFrZS4sTm90TWlncmF0ZWQAIwQVAVRoZSBwb29sIG9yIG1lbWJlciBkZWxlZ2F0aW9uIGhhcyBub3QgbWlncmF0ZWQgeWV0IHRvIGRlbGVnYXRlIHN0YWtlLjBOb3RTdXBwb3J0ZWQAJATwVGhpcyBjYWxsIGlzIG5vdCBhbGxvd2VkIGluIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBwYWxsZXQuKFJlc3RyaWN0ZWQAJQhRAUFjY291bnQgaXMgcmVzdHJpY3RlZCBmcm9tIHBhcnRpY2lwYXRpb24gaW4gcG9vbHMuIFRoaXMgbWF5IGhhcHBlbiBpZiB0aGUgYWNjb3VudCBpc3xzdGFraW5nIGluIGFub3RoZXIgd2F5IGFscmVhZHkuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Ll0MDFxwYWxsZXRfbm9taW5hdGlvbl9wb29scxhwYWxsZXQ4RGVmZW5zaXZlRXJyb3IAARxoTm90RW5vdWdoU3BhY2VJblVuYm9uZFBvb2wAAAAwUG9vbE5vdEZvdW5kAAEASFJld2FyZFBvb2xOb3RGb3VuZAACAEBTdWJQb29sc05vdEZvdW5kAAMAcEJvbmRlZFN0YXNoS2lsbGVkUHJlbWF0dXJlbHkABABURGVsZWdhdGlvblVuc3VwcG9ydGVkAAUAPFNsYXNoTm90QXBwbGllZAAGAABhDAxMcGFsbGV0X2Zhc3RfdW5zdGFrZRR0eXBlczhVbnN0YWtlUmVxdWVzdAQEVAAACAEcc3Rhc2hlc2UMAdhCb3VuZGVkVmVjPChUOjpBY2NvdW50SWQsIEJhbGFuY2VPZjxUPiksIFQ6OkJhdGNoU2l6ZT4AARxjaGVja2VkaQwBkEJvdW5kZWRWZWM8RXJhSW5kZXgsIE1heENoZWNraW5nPFQ+PgAAZQwMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEJBARTAAAEAAUEARhWZWM8VD4AAGkMDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBEARTAAAEABkCARhWZWM8VD4AAG0MDExwYWxsZXRfZmFzdF91bnN0YWtlGHBhbGxldBRFcnJvcgQEVAABGDROb3RDb250cm9sbGVyAAAMuFRoZSBwcm92aWRlZCBDb250cm9sbGVyIGFjY291bnQgd2FzIG5vdCBmb3VuZC4AwFRoaXMgbWVhbnMgdGhhdCB0aGUgZ2l2ZW4gYWNjb3VudCBpcyBub3QgYm9uZGVkLjRBbHJlYWR5UXVldWVkAAEErFRoZSBib25kZWQgYWNjb3VudCBoYXMgYWxyZWFkeSBiZWVuIHF1ZXVlZC44Tm90RnVsbHlCb25kZWQAAgS8VGhlIGJvbmRlZCBhY2NvdW50IGhhcyBhY3RpdmUgdW5sb2NraW5nIGNodW5rcy4kTm90UXVldWVkAAMEtFRoZSBwcm92aWRlZCB1bi1zdGFrZXIgaXMgbm90IGluIHRoZSBgUXVldWVgLixBbHJlYWR5SGVhZAAEBAUBVGhlIHByb3ZpZGVkIHVuLXN0YWtlciBpcyBhbHJlYWR5IGluIEhlYWQsIGFuZCBjYW5ub3QgZGVyZWdpc3Rlci44Q2FsbE5vdEFsbG93ZWQABQQdAVRoZSBjYWxsIGlzIG5vdCBhbGxvd2VkIGF0IHRoaXMgcG9pbnQgYmVjYXVzZSB0aGUgcGFsbGV0IGlzIG5vdCBhY3RpdmUuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LnEMDGBwYWxsZXRfZGVsZWdhdGVkX3N0YWtpbmcUdHlwZXMoRGVsZWdhdGlvbgQEVAAACAEUYWdlbnQAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAHUMDGBwYWxsZXRfZGVsZWdhdGVkX3N0YWtpbmcUdHlwZXMsQWdlbnRMZWRnZXIEBFQAABABFHBheWVlAAEwVDo6QWNjb3VudElkAAE8dG90YWxfZGVsZWdhdGVkDQEBMEJhbGFuY2VPZjxUPgABVHVuY2xhaW1lZF93aXRoZHJhd2Fscw0BATBCYWxhbmNlT2Y8VD4AATRwZW5kaW5nX3NsYXNoDQEBMEJhbGFuY2VPZjxUPgAAeQwMYHBhbGxldF9kZWxlZ2F0ZWRfc3Rha2luZxhwYWxsZXQURXJyb3IEBFQAATAoTm90QWxsb3dlZAAABKhUaGUgYWNjb3VudCBjYW5ub3QgcGVyZm9ybSB0aGlzIG9wZXJhdGlvbi44QWxyZWFkeVN0YWtpbmcAAQS4QW4gZXhpc3Rpbmcgc3Rha2VyIGNhbm5vdCBwZXJmb3JtIHRoaXMgYWN0aW9uLmBJbnZhbGlkUmV3YXJkRGVzdGluYXRpb24AAgTUUmV3YXJkIERlc3RpbmF0aW9uIGNhbm5vdCBiZSBzYW1lIGFzIGBBZ2VudGAgYWNjb3VudC5ESW52YWxpZERlbGVnYXRpb24AAxSIRGVsZWdhdGlvbiBjb25kaXRpb25zIGFyZSBub3QgbWV0LgBMUG9zc2libGUgaXNzdWVzIGFyZWwxKSBDYW5ub3QgZGVsZWdhdGUgdG8gc2VsZiykMikgQ2Fubm90IGRlbGVnYXRlIHRvIG11bHRpcGxlIGRlbGVnYXRlcy44Tm90RW5vdWdoRnVuZHMABAQBAVRoZSBhY2NvdW50IGRvZXMgbm90IGhhdmUgZW5vdWdoIGZ1bmRzIHRvIHBlcmZvcm0gdGhlIG9wZXJhdGlvbi4gTm90QWdlbnQABQSATm90IGFuIGV4aXN0aW5nIGBBZ2VudGAgYWNjb3VudC4wTm90RGVsZWdhdG9yAAYEYE5vdCBhIERlbGVnYXRvciBhY2NvdW50LiBCYWRTdGF0ZQAHBIhTb21lIGNvcnJ1cHRpb24gaW4gaW50ZXJuYWwgc3RhdGUuOFVuYXBwbGllZFNsYXNoAAgE3FVuYXBwbGllZCBwZW5kaW5nIHNsYXNoIHJlc3RyaWN0cyBvcGVyYXRpb24gb24gYEFnZW50YC44Tm90aGluZ1RvU2xhc2gACQSsYEFnZW50YCBoYXMgbm8gcGVuZGluZyBzbGFzaCB0byBiZSBhcHBsaWVkLjhXaXRoZHJhd0ZhaWxlZAAKBLBGYWlsZWQgdG8gd2l0aGRyYXcgYW1vdW50IGZyb20gQ29yZSBTdGFraW5nLjBOb3RTdXBwb3J0ZWQACwScT3BlcmF0aW9uIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBwYWxsZXQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Ln0MAAAECBAFAgCBDAQgQlRyZWVNYXAIBEsBEARWAYUMAAQAlQwAAACFDAQgQlRyZWVNYXAIBEsBAARWAYkMAAQAjQwAAACJDAh4cGFsbGV0X3N0YWtpbmdfYXN5bmNfYWhfY2xpZW50PEJ1ZmZlcmVkT2ZmZW5jZQQkQWNjb3VudElkAQAACAEgcmVwb3J0ZXIxAgFET3B0aW9uPEFjY291bnRJZD4AAThzbGFzaF9mcmFjdGlvbrQBTHNwX3J1bnRpbWU6OlBlcmJpbGwAAI0MAAACkQwAkQwAAAQIAIkMAJUMAAACmQwAmQwAAAQIEIUMAJ0MDHhwYWxsZXRfc3Rha2luZ19hc3luY19haF9jbGllbnQYcGFsbGV0FEVycm9yBARUAAEEHEJsb2NrZWQAAAQlAUNvdWxkIG5vdCBwcm9jZXNzIGluY29taW5nIG1lc3NhZ2UgYmVjYXVzZSBpbmNvbWluZyBtZXNzYWdlcyBhcmUgYmxvY2tlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuoQwMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWluczRjb25maWd1cmF0aW9uREhvc3RDb25maWd1cmF0aW9uBCxCbG9ja051bWJlcgEQAIwBNG1heF9jb2RlX3NpemUQAQx1MzIAAUhtYXhfaGVhZF9kYXRhX3NpemUQAQx1MzIAAVhtYXhfdXB3YXJkX3F1ZXVlX2NvdW50EAEMdTMyAAFUbWF4X3Vwd2FyZF9xdWV1ZV9zaXplEAEMdTMyAAFcbWF4X3Vwd2FyZF9tZXNzYWdlX3NpemUQAQx1MzIAAZBtYXhfdXB3YXJkX21lc3NhZ2VfbnVtX3Blcl9jYW5kaWRhdGUQAQx1MzIAAYhocm1wX21heF9tZXNzYWdlX251bV9wZXJfY2FuZGlkYXRlEAEMdTMyAAFsdmFsaWRhdGlvbl91cGdyYWRlX2Nvb2xkb3duEAEsQmxvY2tOdW1iZXIAAWB2YWxpZGF0aW9uX3VwZ3JhZGVfZGVsYXkQASxCbG9ja051bWJlcgABUGFzeW5jX2JhY2tpbmdfcGFyYW1zWQQBSEFzeW5jQmFja2luZ1BhcmFtcwABMG1heF9wb3Zfc2l6ZRABDHUzMgABZG1heF9kb3dud2FyZF9tZXNzYWdlX3NpemUQAQx1MzIAAZBocm1wX21heF9wYXJhY2hhaW5fb3V0Ym91bmRfY2hhbm5lbHMQAQx1MzIAAUxocm1wX3NlbmRlcl9kZXBvc2l0GAEcQmFsYW5jZQABWGhybXBfcmVjaXBpZW50X2RlcG9zaXQYARxCYWxhbmNlAAFkaHJtcF9jaGFubmVsX21heF9jYXBhY2l0eRABDHUzMgABbGhybXBfY2hhbm5lbF9tYXhfdG90YWxfc2l6ZRABDHUzMgABjGhybXBfbWF4X3BhcmFjaGFpbl9pbmJvdW5kX2NoYW5uZWxzEAEMdTMyAAF0aHJtcF9jaGFubmVsX21heF9tZXNzYWdlX3NpemUQAQx1MzIAATxleGVjdXRvcl9wYXJhbXNdBAE4RXhlY3V0b3JQYXJhbXMAAVRjb2RlX3JldGVudGlvbl9wZXJpb2QQASxCbG9ja051bWJlcgABOG1heF92YWxpZGF0b3JzuAEsT3B0aW9uPHUzMj4AAThkaXNwdXRlX3BlcmlvZBABMFNlc3Npb25JbmRleAABpGRpc3B1dGVfcG9zdF9jb25jbHVzaW9uX2FjY2VwdGFuY2VfcGVyaW9kEAEsQmxvY2tOdW1iZXIAATRub19zaG93X3Nsb3RzEAEMdTMyAAFAbl9kZWxheV90cmFuY2hlcxABDHUzMgABaHplcm90aF9kZWxheV90cmFuY2hlX3dpZHRoEAEMdTMyAAFAbmVlZGVkX2FwcHJvdmFscxABDHUzMgABYHJlbGF5X3ZyZl9tb2R1bG9fc2FtcGxlcxABDHUzMgABOHB2Zl92b3RpbmdfdHRsEAEwU2Vzc2lvbkluZGV4AAGAbWluaW11bV92YWxpZGF0aW9uX3VwZ3JhZGVfZGVsYXkQASxCbG9ja051bWJlcgABVG1pbmltdW1fYmFja2luZ192b3RlcxABDHUzMgABNG5vZGVfZmVhdHVyZXOVBAEwTm9kZUZlYXR1cmVzAAFYYXBwcm92YWxfdm90aW5nX3BhcmFtc3EEAVBBcHByb3ZhbFZvdGluZ1BhcmFtcwABQHNjaGVkdWxlcl9wYXJhbXN1BAFwU2NoZWR1bGVyUGFyYW1zPEJsb2NrTnVtYmVyPgAApQwAAAKpDACpDAAABAgQoQwArQwQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWluczRjb25maWd1cmF0aW9uGHBhbGxldBRFcnJvcgQEVAABBDxJbnZhbGlkTmV3VmFsdWUAAATcVGhlIG5ldyB2YWx1ZSBmb3IgYSBjb25maWd1cmF0aW9uIHBhcmFtZXRlciBpcyBpbnZhbGlkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC6xDAAAAp0EALUMAAACUQIAuQwMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxhzaGFyZWRoQWxsb3dlZFJlbGF5UGFyZW50c1RyYWNrZXIIEEhhc2gBNCxCbG9ja051bWJlcgEQAAgBGGJ1ZmZlcr0MAXxWZWNEZXF1ZTxSZWxheVBhcmVudEluZm88SGFzaD4+AAE0bGF0ZXN0X251bWJlchABLEJsb2NrTnVtYmVyAAC9DAAAAsEMAMEMDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMYc2hhcmVkPFJlbGF5UGFyZW50SW5mbwQQSGFzaAE0AAwBMHJlbGF5X3BhcmVudDQBEEhhc2gAAShzdGF0ZV9yb290NAEQSGFzaAABLGNsYWltX3F1ZXVlxQwBvEJUcmVlTWFwPElkLCBCVHJlZU1hcDx1OCwgQlRyZWVTZXQ8Q29yZUluZGV4Pj4+AADFDAQgQlRyZWVNYXAIBEsBtQIEVgHJDAAEAN0MAAAAyQwEIEJUcmVlTWFwCARLAQgEVgHNDAAEANUMAAAAzQwEIEJUcmVlU2V0BARUAXEIAAQA0QwAAADRDAAAAnEIANUMAAAC2QwA2QwAAAQICM0MAN0MAAAC4QwA4QwAAAQItQLJDADlDAAAAukMAOkMDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9ucENhbmRpZGF0ZVBlbmRpbmdBdmFpbGFiaWxpdHkIBEgBNAROARAAJAEQY29yZXEIASRDb3JlSW5kZXgAARBoYXNo8QQBNENhbmRpZGF0ZUhhc2gAAShkZXNjcmlwdG9ysQQBWENhbmRpZGF0ZURlc2NyaXB0b3I8SD4AASxjb21taXRtZW50c8EEAVBDYW5kaWRhdGVDb21taXRtZW50cwABSGF2YWlsYWJpbGl0eV92b3Rlc5UEAWBCaXRWZWM8dTgsIEJpdE9yZGVyTHNiMD4AARxiYWNrZXJzlQQBYEJpdFZlYzx1OCwgQml0T3JkZXJMc2IwPgABTHJlbGF5X3BhcmVudF9udW1iZXIQAQROAAFAYmFja2VkX2luX251bWJlchABBE4AATRiYWNraW5nX2dyb3VwdQgBKEdyb3VwSW5kZXgAAO0MEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9uGHBhbGxldBRFcnJvcgQEVAABRGRWYWxpZGF0b3JJbmRleE91dE9mQm91bmRzAAAEeFZhbGlkYXRvciBpbmRleCBvdXQgb2YgYm91bmRzLlBVbnNjaGVkdWxlZENhbmRpZGF0ZQABBKxDYW5kaWRhdGUgc3VibWl0dGVkIGJ1dCBwYXJhIG5vdCBzY2hlZHVsZWQuQEhlYWREYXRhVG9vTGFyZ2UAAgSkSGVhZCBkYXRhIGV4Y2VlZHMgdGhlIGNvbmZpZ3VyZWQgbWF4aW11bS5QUHJlbWF0dXJlQ29kZVVwZ3JhZGUAAwRkQ29kZSB1cGdyYWRlIHByZW1hdHVyZWx5LjxOZXdDb2RlVG9vTGFyZ2UABARgT3V0cHV0IGNvZGUgaXMgdG9vIGxhcmdlVERpc2FsbG93ZWRSZWxheVBhcmVudAAFCOxUaGUgY2FuZGlkYXRlJ3MgcmVsYXktcGFyZW50IHdhcyBub3QgYWxsb3dlZC4gRWl0aGVyIGl0IHdhcyUBbm90IHJlY2VudCBlbm91Z2ggb3IgaXQgZGlkbid0IGFkdmFuY2UgYmFzZWQgb24gdGhlIGxhc3QgcGFyYWNoYWluIGJsb2NrLkRJbnZhbGlkQXNzaWdubWVudAAGCBUBRmFpbGVkIHRvIGNvbXB1dGUgZ3JvdXAgaW5kZXggZm9yIHRoZSBjb3JlOiBlaXRoZXIgaXQncyBvdXQgb2YgYm91bmRz6G9yIHRoZSByZWxheSBwYXJlbnQgZG9lc24ndCBiZWxvbmcgdG8gdGhlIGN1cnJlbnQgc2Vzc2lvbi5ESW52YWxpZEdyb3VwSW5kZXgABwScSW52YWxpZCBncm91cCBpbmRleCBpbiBjb3JlIGFzc2lnbm1lbnQuTEluc3VmZmljaWVudEJhY2tpbmcACASQSW5zdWZmaWNpZW50IChub24tbWFqb3JpdHkpIGJhY2tpbmcuOEludmFsaWRCYWNraW5nAAkE5EludmFsaWQgKGJhZCBzaWduYXR1cmUsIHVua25vd24gdmFsaWRhdG9yLCBldGMuKSBiYWNraW5nLmhWYWxpZGF0aW9uRGF0YUhhc2hNaXNtYXRjaAAKBMRUaGUgdmFsaWRhdGlvbiBkYXRhIGhhc2ggZG9lcyBub3QgbWF0Y2ggZXhwZWN0ZWQugEluY29ycmVjdERvd253YXJkTWVzc2FnZUhhbmRsaW5nAAsE2FRoZSBkb3dud2FyZCBtZXNzYWdlIHF1ZXVlIGlzIG5vdCBwcm9jZXNzZWQgY29ycmVjdGx5LlRJbnZhbGlkVXB3YXJkTWVzc2FnZXMADAQdAUF0IGxlYXN0IG9uZSB1cHdhcmQgbWVzc2FnZSBzZW50IGRvZXMgbm90IHBhc3MgdGhlIGFjY2VwdGFuY2UgY3JpdGVyaWEuYEhybXBXYXRlcm1hcmtNaXNoYW5kbGluZwANBBEBVGhlIGNhbmRpZGF0ZSBkaWRuJ3QgZm9sbG93IHRoZSBydWxlcyBvZiBIUk1QIHdhdGVybWFyayBhZHZhbmNlbWVudC5MSW52YWxpZE91dGJvdW5kSHJtcAAOBNRUaGUgSFJNUCBtZXNzYWdlcyBzZW50IGJ5IHRoZSBjYW5kaWRhdGUgaXMgbm90IHZhbGlkLmRJbnZhbGlkVmFsaWRhdGlvbkNvZGVIYXNoAA8E3FRoZSB2YWxpZGF0aW9uIGNvZGUgaGFzaCBvZiB0aGUgY2FuZGlkYXRlIGlzIG5vdCB2YWxpZC5AUGFyYUhlYWRNaXNtYXRjaAAQCFUBVGhlIGBwYXJhX2hlYWRgIGhhc2ggaW4gdGhlIGNhbmRpZGF0ZSBkZXNjcmlwdG9yIGRvZXNuJ3QgbWF0Y2ggdGhlIGhhc2ggb2YgdGhlIGFjdHVhbHRwYXJhIGhlYWQgaW4gdGhlIGNvbW1pdG1lbnRzLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7xDAxMcG9sa2Fkb3RfcHJpbWl0aXZlcyB2c3RhZ2luZ0xTY3JhcGVkT25DaGFpblZvdGVzBARIATQADAEcc2Vzc2lvbhABMFNlc3Npb25JbmRleAABgGJhY2tpbmdfdmFsaWRhdG9yc19wZXJfY2FuZGlkYXRl9QwBJQFWZWM8CihDYW5kaWRhdGVSZWNlaXB0VjI8SD4sIFZlYzwoVmFsaWRhdG9ySW5kZXgsIFZhbGlkaXR5QXR0ZXN0YXRpb24pPik+AAEgZGlzcHV0ZXPpBAFgTXVsdGlEaXNwdXRlU3RhdGVtZW50U2V0AAD1DAAAAvkMAPkMAAAECG0I/QwA/QwAAAIBDQABDQAABAidBOUEAAUNEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnM4cGFyYXNfaW5oZXJlbnQYcGFsbGV0FEVycm9yBARUAAEQZFRvb01hbnlJbmNsdXNpb25JbmhlcmVudHMAAATMSW5jbHVzaW9uIGluaGVyZW50IGNhbGxlZCBtb3JlIHRoYW4gb25jZSBwZXIgYmxvY2suTEludmFsaWRQYXJlbnRIZWFkZXIAAQhVAVRoZSBoYXNoIG9mIHRoZSBzdWJtaXR0ZWQgcGFyZW50IGhlYWRlciBkb2Vzbid0IGNvcnJlc3BvbmQgdG8gdGhlIHNhdmVkIGJsb2NrIGhhc2ggb2YsdGhlIHBhcmVudC6MSW5oZXJlbnREYXRhRmlsdGVyZWREdXJpbmdFeGVjdXRpb24AAggxAUluaGVyZW50IGRhdGEgd2FzIGZpbHRlcmVkIGR1cmluZyBleGVjdXRpb24uIFRoaXMgc2hvdWxkIGhhdmUgb25seSBiZWVuIGRvbmVAZHVyaW5nIGNyZWF0aW9uLlBVbnNjaGVkdWxlZENhbmRpZGF0ZQADBHRUb28gbWFueSBjYW5kaWRhdGVzIHN1cHBsaWVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4JDQAAArEMAA0NBCBCVHJlZU1hcAgESwFxCARWARENAAQAGQ0AAAARDQAAAhUNABUNEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkc2NoZWR1bGVyGGNvbW1vbihBc3NpZ25tZW50AAEIEFBvb2wIARxwYXJhX2lktQIBGFBhcmFJZAABKGNvcmVfaW5kZXhxCAEkQ29yZUluZGV4AAAAEEJ1bGsEALUCARhQYXJhSWQAAQAAGQ0AAAIdDQAdDQAABAhxCBENACENDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXNcUHZmQ2hlY2tBY3RpdmVWb3RlU3RhdGUELEJsb2NrTnVtYmVyARAAFAEwdm90ZXNfYWNjZXB0lQQBYEJpdFZlYzx1OCwgQml0T3JkZXJMc2IwPgABMHZvdGVzX3JlamVjdJUEAWBCaXRWZWM8dTgsIEJpdE9yZGVyTHNiMD4AAQxhZ2UQATBTZXNzaW9uSW5kZXgAAShjcmVhdGVkX2F0EAEsQmxvY2tOdW1iZXIAARhjYXVzZXMlDQF8VmVjPFB2ZkNoZWNrQ2F1c2U8QmxvY2tOdW1iZXI+PgAAJQ0AAAIpDQApDQxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzNFB2ZkNoZWNrQ2F1c2UELEJsb2NrTnVtYmVyARABCChPbmJvYXJkaW5nBAC1AgEYUGFyYUlkAAAAHFVwZ3JhZGUMAQhpZLUCARhQYXJhSWQAASxpbmNsdWRlZF9hdBABLEJsb2NrTnVtYmVyAAFAdXBncmFkZV9zdHJhdGVneS0NATxVcGdyYWRlU3RyYXRlZ3kAAQAALQ0MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhczxVcGdyYWRlU3RyYXRlZ3kAAQhAU2V0R29BaGVhZFNpZ25hbAAAAFBBcHBseUF0RXhwZWN0ZWRCbG9jawABAAAxDQAAAr0EADUNAAACtQIAOQ0MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhczRQYXJhTGlmZWN5Y2xlAAEcKE9uYm9hcmRpbmcAAAAoUGFyYXRocmVhZAABACRQYXJhY2hhaW4AAgBMVXBncmFkaW5nUGFyYXRocmVhZAADAFBEb3duZ3JhZGluZ1BhcmFjaGFpbgAEAFRPZmZib2FyZGluZ1BhcmF0aHJlYWQABQBQT2ZmYm9hcmRpbmdQYXJhY2hhaW4ABgAAPQ0AAAQItQIQAEENDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXNAUGFyYVBhc3RDb2RlTWV0YQQETgEQAAgBNHVwZ3JhZGVfdGltZXNFDQFgVmVjPFJlcGxhY2VtZW50VGltZXM8Tj4+AAEsbGFzdF9wcnVuZWS4ASRPcHRpb248Tj4AAEUNAAACSQ0ASQ0MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhc0BSZXBsYWNlbWVudFRpbWVzBAROARAACAEsZXhwZWN0ZWRfYXQQAQROAAEwYWN0aXZhdGVkX2F0EAEETgAATQ0AAAI9DQBRDQxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzbEF1dGhvcml6ZWRDb2RlSGFzaEFuZEV4cGlyeQQEVAEQAAgBJGNvZGVfaGFzaL0EAUhWYWxpZGF0aW9uQ29kZUhhc2gAASRleHBpcmVfYXQQAQRUAABVDQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODhVcGdyYWRlR29BaGVhZAABCBRBYm9ydAAAABxHb0FoZWFkAAEAAFkNDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4SFVwZ3JhZGVSZXN0cmljdGlvbgABBBxQcmVzZW50AAAAAF0NEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXMYcGFsbGV0FEVycm9yBARUAAFANE5vdFJlZ2lzdGVyZWQAAASUUGFyYSBpcyBub3QgcmVnaXN0ZXJlZCBpbiBvdXIgc3lzdGVtLjRDYW5ub3RPbmJvYXJkAAEEFQFQYXJhIGNhbm5vdCBiZSBvbmJvYXJkZWQgYmVjYXVzZSBpdCBpcyBhbHJlYWR5IHRyYWNrZWQgYnkgb3VyIHN5c3RlbS44Q2Fubm90T2ZmYm9hcmQAAgScUGFyYSBjYW5ub3QgYmUgb2ZmYm9hcmRlZCBhdCB0aGlzIHRpbWUuNENhbm5vdFVwZ3JhZGUAAwTUUGFyYSBjYW5ub3QgYmUgdXBncmFkZWQgdG8gYSBsZWFzZSBob2xkaW5nIHBhcmFjaGFpbi48Q2Fubm90RG93bmdyYWRlAAQE0FBhcmEgY2Fubm90IGJlIGRvd25ncmFkZWQgdG8gYW4gb24tZGVtYW5kIHBhcmFjaGFpbi5YUHZmQ2hlY2tTdGF0ZW1lbnRTdGFsZQAFBLBUaGUgc3RhdGVtZW50IGZvciBQVkYgcHJlLWNoZWNraW5nIGlzIHN0YWxlLlxQdmZDaGVja1N0YXRlbWVudEZ1dHVyZQAGBOxUaGUgc3RhdGVtZW50IGZvciBQVkYgcHJlLWNoZWNraW5nIGlzIGZvciBhIGZ1dHVyZSBzZXNzaW9uLoRQdmZDaGVja1ZhbGlkYXRvckluZGV4T3V0T2ZCb3VuZHMABwSkQ2xhaW1lZCB2YWxpZGF0b3IgaW5kZXggaXMgb3V0IG9mIGJvdW5kcy5gUHZmQ2hlY2tJbnZhbGlkU2lnbmF0dXJlAAgEyFRoZSBzaWduYXR1cmUgZm9yIHRoZSBQVkYgcHJlLWNoZWNraW5nIGlzIGludmFsaWQuSFB2ZkNoZWNrRG91YmxlVm90ZQAJBLBUaGUgZ2l2ZW4gdmFsaWRhdG9yIGFscmVhZHkgaGFzIGNhc3QgYSB2b3RlLlhQdmZDaGVja1N1YmplY3RJbnZhbGlkAAoE9FRoZSBnaXZlbiBQVkYgZG9lcyBub3QgZXhpc3QgYXQgdGhlIG1vbWVudCBvZiBwcm9jZXNzIGEgdm90ZS5EQ2Fubm90VXBncmFkZUNvZGUACwTMUGFyYWNoYWluIGNhbm5vdCBjdXJyZW50bHkgc2NoZWR1bGUgYSBjb2RlIHVwZ3JhZGUuLEludmFsaWRDb2RlAAwEdEludmFsaWQgdmFsaWRhdGlvbiBjb2RlIHNpemUuRE5vdGhpbmdBdXRob3JpemVkAA0EWE5vIHVwZ3JhZGUgYXV0aG9yaXplZC4wVW5hdXRob3JpemVkAA4ElFRoZSBzdWJtaXR0ZWQgY29kZSBpcyBub3QgYXV0aG9yaXplZC5ISW52YWxpZEJsb2NrTnVtYmVyAA8EVEludmFsaWQgYmxvY2sgbnVtYmVyLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5hDQAAAmUNAGUNDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMsaW5pdGlhbGl6ZXJUQnVmZmVyZWRTZXNzaW9uQ2hhbmdlAAAMASh2YWxpZGF0b3JztQwBQFZlYzxWYWxpZGF0b3JJZD4AARhxdWV1ZWS1DAFAVmVjPFZhbGlkYXRvcklkPgABNHNlc3Npb25faW5kZXgQATBTZXNzaW9uSW5kZXgAAGkNAAACbQ0AbQ0IYHBvbGthZG90X2NvcmVfcHJpbWl0aXZlc1hJbmJvdW5kRG93bndhcmRNZXNzYWdlBCxCbG9ja051bWJlcgEQAAgBHHNlbnRfYXQQASxCbG9ja051bWJlcgABDG1zZzgBPERvd253YXJkTWVzc2FnZQAAcQ0MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxBocm1wWEhybXBPcGVuQ2hhbm5lbFJlcXVlc3QAABgBJGNvbmZpcm1lZCABEGJvb2wAARBfYWdlEAEwU2Vzc2lvbkluZGV4AAE4c2VuZGVyX2RlcG9zaXQYARxCYWxhbmNlAAFAbWF4X21lc3NhZ2Vfc2l6ZRABDHUzMgABMG1heF9jYXBhY2l0eRABDHUzMgABOG1heF90b3RhbF9zaXplEAEMdTMyAAB1DQAAAh0FAHkNDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMQaHJtcCxIcm1wQ2hhbm5lbAAAIAEwbWF4X2NhcGFjaXR5EAEMdTMyAAE4bWF4X3RvdGFsX3NpemUQAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplEAEMdTMyAAEkbXNnX2NvdW50EAEMdTMyAAEodG90YWxfc2l6ZRABDHUzMgABIG1xY19oZWFkwQIBME9wdGlvbjxIYXNoPgABOHNlbmRlcl9kZXBvc2l0GAEcQmFsYW5jZQABRHJlY2lwaWVudF9kZXBvc2l0GAEcQmFsYW5jZQAAfQ0AAAKBDQCBDQhgcG9sa2Fkb3RfY29yZV9wcmltaXRpdmVzSEluYm91bmRIcm1wTWVzc2FnZQQsQmxvY2tOdW1iZXIBEAAIARxzZW50X2F0EAEsQmxvY2tOdW1iZXIAARBkYXRhOAFMYWxsb2M6OnZlYzo6VmVjPHU4PgAAhQ0AAAKJDQCJDQAABAgQNQ0AjQ0QbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxBocm1wGHBhbGxldBRFcnJvcgQEVAABUFRPcGVuSHJtcENoYW5uZWxUb1NlbGYAAATEVGhlIHNlbmRlciB0cmllZCB0byBvcGVuIGEgY2hhbm5lbCB0byB0aGVtc2VsdmVzLnxPcGVuSHJtcENoYW5uZWxJbnZhbGlkUmVjaXBpZW50AAEEiFRoZSByZWNpcGllbnQgaXMgbm90IGEgdmFsaWQgcGFyYS5sT3BlbkhybXBDaGFubmVsWmVyb0NhcGFjaXR5AAIEfFRoZSByZXF1ZXN0ZWQgY2FwYWNpdHkgaXMgemVyby6MT3BlbkhybXBDaGFubmVsQ2FwYWNpdHlFeGNlZWRzTGltaXQAAwTAVGhlIHJlcXVlc3RlZCBjYXBhY2l0eSBleGNlZWRzIHRoZSBnbG9iYWwgbGltaXQueE9wZW5Icm1wQ2hhbm5lbFplcm9NZXNzYWdlU2l6ZQAEBKBUaGUgcmVxdWVzdGVkIG1heGltdW0gbWVzc2FnZSBzaXplIGlzIDAumE9wZW5Icm1wQ2hhbm5lbE1lc3NhZ2VTaXplRXhjZWVkc0xpbWl0AAUEKQFUaGUgb3BlbiByZXF1ZXN0IHJlcXVlc3RlZCB0aGUgbWVzc2FnZSBzaXplIHRoYXQgZXhjZWVkcyB0aGUgZ2xvYmFsIGxpbWl0LnBPcGVuSHJtcENoYW5uZWxBbHJlYWR5RXhpc3RzAAYEaFRoZSBjaGFubmVsIGFscmVhZHkgZXhpc3RzfE9wZW5Icm1wQ2hhbm5lbEFscmVhZHlSZXF1ZXN0ZWQABwTQVGhlcmUgaXMgYWxyZWFkeSBhIHJlcXVlc3QgdG8gb3BlbiB0aGUgc2FtZSBjaGFubmVsLnBPcGVuSHJtcENoYW5uZWxMaW1pdEV4Y2VlZGVkAAgEHQFUaGUgc2VuZGVyIGFscmVhZHkgaGFzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBhbGxvd2VkIG91dGJvdW5kIGNoYW5uZWxzLnBBY2NlcHRIcm1wQ2hhbm5lbERvZXNudEV4aXN0AAkE4FRoZSBjaGFubmVsIGZyb20gdGhlIHNlbmRlciB0byB0aGUgb3JpZ2luIGRvZXNuJ3QgZXhpc3QuhEFjY2VwdEhybXBDaGFubmVsQWxyZWFkeUNvbmZpcm1lZAAKBIRUaGUgY2hhbm5lbCBpcyBhbHJlYWR5IGNvbmZpcm1lZC54QWNjZXB0SHJtcENoYW5uZWxMaW1pdEV4Y2VlZGVkAAsEJQFUaGUgcmVjaXBpZW50IGFscmVhZHkgaGFzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBhbGxvd2VkIGluYm91bmQgY2hhbm5lbHMucENsb3NlSHJtcENoYW5uZWxVbmF1dGhvcml6ZWQADARVAVRoZSBvcmlnaW4gdHJpZXMgdG8gY2xvc2UgYSBjaGFubmVsIHdoZXJlIGl0IGlzIG5laXRoZXIgdGhlIHNlbmRlciBub3IgdGhlIHJlY2lwaWVudC5sQ2xvc2VIcm1wQ2hhbm5lbERvZXNudEV4aXN0AA0EnFRoZSBjaGFubmVsIHRvIGJlIGNsb3NlZCBkb2Vzbid0IGV4aXN0LnxDbG9zZUhybXBDaGFubmVsQWxyZWFkeVVuZGVyd2F5AA4EvFRoZSBjaGFubmVsIGNsb3NlIHJlcXVlc3QgaXMgYWxyZWFkeSByZXF1ZXN0ZWQuhENhbmNlbEhybXBPcGVuQ2hhbm5lbFVuYXV0aG9yaXplZAAPBF0BQ2FuY2VsaW5nIGlzIHJlcXVlc3RlZCBieSBuZWl0aGVyIHRoZSBzZW5kZXIgbm9yIHJlY2lwaWVudCBvZiB0aGUgb3BlbiBjaGFubmVsIHJlcXVlc3QuaE9wZW5Icm1wQ2hhbm5lbERvZXNudEV4aXN0ABAEfFRoZSBvcGVuIHJlcXVlc3QgZG9lc24ndCBleGlzdC58T3BlbkhybXBDaGFubmVsQWxyZWFkeUNvbmZpcm1lZAARBC0BQ2Fubm90IGNhbmNlbCBhbiBIUk1QIG9wZW4gY2hhbm5lbCByZXF1ZXN0IGJlY2F1c2UgaXQgaXMgYWxyZWFkeSBjb25maXJtZWQuMFdyb25nV2l0bmVzcwASBIxUaGUgcHJvdmlkZWQgd2l0bmVzcyBkYXRhIGlzIHdyb25nLnBDaGFubmVsQ3JlYXRpb25Ob3RBdXRob3JpemVkABME6FRoZSBjaGFubmVsIGJldHdlZW4gdGhlc2UgdHdvIGNoYWlucyBjYW5ub3QgYmUgYXV0aG9yaXplZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQukQ0AAAJVAgCVDQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OCxTZXNzaW9uSW5mbwAANAFgYWN0aXZlX3ZhbGlkYXRvcl9pbmRpY2VzsQwBTFZlYzxWYWxpZGF0b3JJbmRleD4AASxyYW5kb21fc2VlZAQBIFt1ODsgMzJdAAE4ZGlzcHV0ZV9wZXJpb2QQATBTZXNzaW9uSW5kZXgAASh2YWxpZGF0b3JzmQ0BnEluZGV4ZWRWZWM8VmFsaWRhdG9ySW5kZXgsIFZhbGlkYXRvcklkPgABOGRpc2NvdmVyeV9rZXlzyQoBZFZlYzxBdXRob3JpdHlEaXNjb3ZlcnlJZD4AATxhc3NpZ25tZW50X2tleXORDQFEVmVjPEFzc2lnbm1lbnRJZD4AAUB2YWxpZGF0b3JfZ3JvdXBznQ0BrEluZGV4ZWRWZWM8R3JvdXBJbmRleCwgVmVjPFZhbGlkYXRvckluZGV4Pj4AARxuX2NvcmVzEAEMdTMyAAFoemVyb3RoX2RlbGF5X3RyYW5jaGVfd2lkdGgQAQx1MzIAAWByZWxheV92cmZfbW9kdWxvX3NhbXBsZXMQAQx1MzIAAUBuX2RlbGF5X3RyYW5jaGVzEAEMdTMyAAE0bm9fc2hvd19zbG90cxABDHUzMgABQG5lZWRlZF9hcHByb3ZhbHMQAQx1MzIAAJkNDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4KEluZGV4ZWRWZWMIBEsBnQQEVgFRAgAEALUMARhWZWM8Vj4AAJ0NDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4KEluZGV4ZWRWZWMIBEsBdQgEVgGxDAAEAAkNARhWZWM8Vj4AAKENAAAECBDxBAClDQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODBEaXNwdXRlU3RhdGUEBE4BEAAQATh2YWxpZGF0b3JzX2ZvcpUEAXxCaXRWZWM8dTgsIGJpdHZlYzo6b3JkZXI6OkxzYjA+AAFIdmFsaWRhdG9yc19hZ2FpbnN0lQQBfEJpdFZlYzx1OCwgYml0dmVjOjpvcmRlcjo6THNiMD4AARRzdGFydBABBE4AATBjb25jbHVkZWRfYXS4ASRPcHRpb248Tj4AAKkNBCBCVHJlZVNldAQEVAGdBAAEALEMAAAArQ0QbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlcxhwYWxsZXQURXJyb3IEBFQAASR0RHVwbGljYXRlRGlzcHV0ZVN0YXRlbWVudFNldHMAAASoRHVwbGljYXRlIGRpc3B1dGUgc3RhdGVtZW50IHNldHMgcHJvdmlkZWQuXEFuY2llbnREaXNwdXRlU3RhdGVtZW50AAEEjEFuY2llbnQgZGlzcHV0ZSBzdGF0ZW1lbnQgcHJvdmlkZWQuZFZhbGlkYXRvckluZGV4T3V0T2ZCb3VuZHMAAgToVmFsaWRhdG9yIGluZGV4IG9uIHN0YXRlbWVudCBpcyBvdXQgb2YgYm91bmRzIGZvciBzZXNzaW9uLkBJbnZhbGlkU2lnbmF0dXJlAAMEfEludmFsaWQgc2lnbmF0dXJlIG9uIHN0YXRlbWVudC5IRHVwbGljYXRlU3RhdGVtZW50AAQEzFZhbGlkYXRvciB2b3RlIHN1Ym1pdHRlZCBtb3JlIHRoYW4gb25jZSB0byBkaXNwdXRlLkhTaW5nbGVTaWRlZERpc3B1dGUABQTEQSBkaXNwdXRlIHdoZXJlIHRoZXJlIGFyZSBvbmx5IHZvdGVzIG9uIG9uZSBzaWRlLjxNYWxpY2lvdXNCYWNrZXIABgScQSBkaXNwdXRlIHZvdGUgZnJvbSBhIG1hbGljaW91cyBiYWNrZXIuTE1pc3NpbmdCYWNraW5nVm90ZXMABwTgTm8gYmFja2luZyB2b3RlcyB3ZXJlIHByb3ZpZGVzIGFsb25nIGRpc3B1dGUgc3RhdGVtZW50cy5IVW5jb25maXJtZWREaXNwdXRlAAgEsFVuY29uZmlybWVkIGRpc3B1dGUgc3RhdGVtZW50IHNldHMgcHJvdmlkZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LrENDExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nOFBlbmRpbmdTbGFzaGVzAAAIARBrZXlztQ0BlEJUcmVlTWFwPFZhbGlkYXRvckluZGV4LCBWYWxpZGF0b3JJZD4AARBraW5kMQUBSERpc3B1dGVPZmZlbmNlS2luZAAAtQ0EIEJUcmVlTWFwCARLAZ0EBFYBUQIABAC5DQAAALkNAAACvQ0AvQ0AAAQInQRRAgDBDRRscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGRpc3B1dGVzIHNsYXNoaW5nGHBhbGxldBRFcnJvcgQEVAABGGBJbnZhbGlkS2V5T3duZXJzaGlwUHJvb2YAAASMVGhlIGtleSBvd25lcnNoaXAgcHJvb2YgaXMgaW52YWxpZC5MSW52YWxpZFNlc3Npb25JbmRleAABBKBUaGUgc2Vzc2lvbiBpbmRleCBpcyB0b28gb2xkIG9yIGludmFsaWQuUEludmFsaWRDYW5kaWRhdGVIYXNoAAIEeFRoZSBjYW5kaWRhdGUgaGFzaCBpcyBpbnZhbGlkLlRJbnZhbGlkVmFsaWRhdG9ySW5kZXgAAwgBAVRoZXJlIGlzIG5vIHBlbmRpbmcgc2xhc2ggZm9yIHRoZSBnaXZlbiB2YWxpZGF0b3IgaW5kZXggYW5kIHRpbWUUc2xvdC5gVmFsaWRhdG9ySW5kZXhJZE1pc21hdGNoAAQE0FRoZSB2YWxpZGF0b3IgaW5kZXggZG9lcyBub3QgbWF0Y2ggdGhlIHZhbGlkYXRvciBpZC5cRHVwbGljYXRlU2xhc2hpbmdSZXBvcnQABQQNAVRoZSBnaXZlbiBzbGFzaGluZyByZXBvcnQgaXMgdmFsaWQgYnV0IGFscmVhZHkgcHJldmlvdXNseSByZXBvcnRlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuxQ0QbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRvbl9kZW1hbmQUdHlwZXNEQ29yZUFmZmluaXR5Q291bnQAAAgBKGNvcmVfaW5kZXhxCAEkQ29yZUluZGV4AAEUY291bnQQAQx1MzIAAMkNEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkb25fZGVtYW5kFHR5cGVzPFF1ZXVlU3RhdHVzVHlwZQAAEAEcdHJhZmZpYwkHASRGaXhlZFUxMjgAAShuZXh0X2luZGV4zQ0BKFF1ZXVlSW5kZXgAAThzbWFsbGVzdF9pbmRleM0NAShRdWV1ZUluZGV4AAE0ZnJlZWRfaW5kaWNlc9ENAXRCaW5hcnlIZWFwPFJldmVyc2VRdWV1ZUluZGV4PgAAzQ0QbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRvbl9kZW1hbmQUdHlwZXMoUXVldWVJbmRleAAABAAQAQx1MzIAANENBChCaW5hcnlIZWFwBARUAdUNAAQA2Q0AAADVDRBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zJG9uX2RlbWFuZBR0eXBlc0RSZXZlcnNlUXVldWVJbmRleAAABAAQAQx1MzIAANkNAAAC1Q0A3Q0EKEJpbmFyeUhlYXAEBFQB4Q0ABADlDQAAAOENEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkb25fZGVtYW5kFHR5cGVzNEVucXVldWVkT3JkZXIAAAgBHHBhcmFfaWS1AgEYUGFyYUlkAAEMaWR4zQ0BKFF1ZXVlSW5kZXgAAOUNAAAC4Q0A6Q0MTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEYBFMAAAQA7Q0BGFZlYzxUPgAA7Q0AAAIYAPENEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkb25fZGVtYW5kGHBhbGxldBRFcnJvcgQEVAABDCRRdWV1ZUZ1bGwAAATkVGhlIG9yZGVyIHF1ZXVlIGlzIGZ1bGwsIGBwbGFjZV9vcmRlcmAgd2lsbCBub3QgY29udGludWUucFNwb3RQcmljZUhpZ2hlclRoYW5NYXhBbW91bnQAAQhNAVRoZSBjdXJyZW50IHNwb3QgcHJpY2UgaXMgaGlnaGVyIHRoYW4gdGhlIG1heCBhbW91bnQgc3BlY2lmaWVkIGluIHRoZSBgcGxhY2Vfb3JkZXJgYGNhbGwsIG1ha2luZyBpdCBpbnZhbGlkLkxJbnN1ZmZpY2llbnRDcmVkaXRzAAIEHQFUaGUgYWNjb3VudCBkb2Vzbid0IGhhdmUgZW5vdWdoIGNyZWRpdHMgdG8gcHVyY2hhc2Ugb24tZGVtYW5kIGNvcmV0aW1lLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC71DQAABAgQcQgA+Q0MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWluc0Rhc3NpZ25lcl9jb3JldGltZSBTY2hlZHVsZQQETgEQAAwBLGFzc2lnbm1lbnRzYQUBjFZlYzwoQ29yZUFzc2lnbm1lbnQsIFBhcnRzT2Y1NzYwMCk+AAEgZW5kX2hpbnS4ASRPcHRpb248Tj4AATRuZXh0X3NjaGVkdWxluAEkT3B0aW9uPE4+AAD9DQxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zRGFzc2lnbmVyX2NvcmV0aW1lOENvcmVEZXNjcmlwdG9yBAROARAACAEUcXVldWUBDgFoT3B0aW9uPFF1ZXVlRGVzY3JpcHRvcjxOPj4AATBjdXJyZW50X3dvcmsJDgFQT3B0aW9uPFdvcmtTdGF0ZTxOPj4AAAEOBBhPcHRpb24EBFQBBQ4BCBBOb25lAAAAEFNvbWUEAAUOAAABAAAFDgxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zRGFzc2lnbmVyX2NvcmV0aW1lPFF1ZXVlRGVzY3JpcHRvcgQETgEQAAgBFGZpcnN0EAEETgABEGxhc3QQAQROAAAJDgQYT3B0aW9uBARUAQ0OAQgQTm9uZQAAABBTb21lBAANDgAAAQAADQ4MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWluc0Rhc3NpZ25lcl9jb3JldGltZSRXb3JrU3RhdGUEBE4BEAAQASxhc3NpZ25tZW50cxEOAZhWZWM8KENvcmVBc3NpZ25tZW50LCBBc3NpZ25tZW50U3RhdGUpPgABIGVuZF9oaW50uAEkT3B0aW9uPE4+AAEMcG9znQEBDHUxNgABEHN0ZXBtBQEwUGFydHNPZjU3NjAwAAARDgAAAhUOABUOAAAECGkFGQ4AGQ4MbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWluc0Rhc3NpZ25lcl9jb3JldGltZTxBc3NpZ25tZW50U3RhdGUAAAgBFHJhdGlvbQUBMFBhcnRzT2Y1NzYwMAABJHJlbWFpbmluZ20FATBQYXJ0c09mNTc2MDAAAB0OEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnNEYXNzaWduZXJfY29yZXRpbWUYcGFsbGV0FEVycm9yBARUAAEIQEFzc2lnbm1lbnRzRW1wdHkAAABARGlzYWxsb3dlZEluc2VydAABCFEBYXNzaWduX2NvcmUgaXMgb25seSBhbGxvd2VkIHRvIGFwcGVuZCBuZXcgYXNzaWdubWVudHMgYXQgdGhlIGVuZCBvZiBhbHJlYWR5IGV4aXN0aW5neG9uZXMgb3IgdXBkYXRlIHRoZSBsYXN0IGVudHJ5LgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4hDgxccG9sa2Fkb3RfcnVudGltZV9jb21tb248cGFyYXNfcmVnaXN0cmFyIFBhcmFJbmZvCBxBY2NvdW50AQAcQmFsYW5jZQEYAAwBHG1hbmFnZXIAARxBY2NvdW50AAEcZGVwb3NpdBgBHEJhbGFuY2UAARhsb2NrZWQlDgEwT3B0aW9uPGJvb2w+AAAlDgQYT3B0aW9uBARUASABCBBOb25lAAAAEFNvbWUEACAAAAEAACkOEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbjxwYXJhc19yZWdpc3RyYXIYcGFsbGV0FEVycm9yBARUAAE4NE5vdFJlZ2lzdGVyZWQAAARkVGhlIElEIGlzIG5vdCByZWdpc3RlcmVkLkRBbHJlYWR5UmVnaXN0ZXJlZAABBHRUaGUgSUQgaXMgYWxyZWFkeSByZWdpc3RlcmVkLiBOb3RPd25lcgACBJxUaGUgY2FsbGVyIGlzIG5vdCB0aGUgb3duZXIgb2YgdGhpcyBJZC4wQ29kZVRvb0xhcmdlAAMEXEludmFsaWQgcGFyYSBjb2RlIHNpemUuQEhlYWREYXRhVG9vTGFyZ2UABARwSW52YWxpZCBwYXJhIGhlYWQgZGF0YSBzaXplLjBOb3RQYXJhY2hhaW4ABQRgUGFyYSBpcyBub3QgYSBQYXJhY2hhaW4uNE5vdFBhcmF0aHJlYWQABgS8UGFyYSBpcyBub3QgYSBQYXJhdGhyZWFkIChvbi1kZW1hbmQgcGFyYWNoYWluKS5AQ2Fubm90RGVyZWdpc3RlcgAHBFhDYW5ub3QgZGVyZWdpc3RlciBwYXJhPENhbm5vdERvd25ncmFkZQAIBC0BQ2Fubm90IHNjaGVkdWxlIGRvd25ncmFkZSBvZiBsZWFzZSBob2xkaW5nIHBhcmFjaGFpbiB0byBvbi1kZW1hbmQgcGFyYWNoYWluNENhbm5vdFVwZ3JhZGUACQQlAUNhbm5vdCBzY2hlZHVsZSB1cGdyYWRlIG9mIG9uLWRlbWFuZCBwYXJhY2hhaW4gdG8gbGVhc2UgaG9sZGluZyBwYXJhY2hhaW4oUGFyYUxvY2tlZAAKCEkBUGFyYSBpcyBsb2NrZWQgZnJvbSBtYW5pcHVsYXRpb24gYnkgdGhlIG1hbmFnZXIuIE11c3QgdXNlIHBhcmFjaGFpbiBvciByZWxheSBjaGFpbixnb3Zlcm5hbmNlLixOb3RSZXNlcnZlZAALBNBUaGUgSUQgZ2l2ZW4gZm9yIHJlZ2lzdHJhdGlvbiBoYXMgbm90IGJlZW4gcmVzZXJ2ZWQuLEludmFsaWRDb2RlAAwEfFRoZSB2YWxpZGF0aW9uIGNvZGUgaXMgaW52YWxpZC4oQ2Fubm90U3dhcAANCFEBQ2Fubm90IHBlcmZvcm0gYSBwYXJhY2hhaW4gc2xvdCAvIGxpZmVjeWNsZSBzd2FwLiBDaGVjayB0aGF0IHRoZSBzdGF0ZSBvZiBib3RoIHBhcmFzhGFyZSBjb3JyZWN0IGZvciB0aGUgc3dhcCB0byB3b3JrLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4tDgAAAnkJADEOEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhRzbG90cxhwYWxsZXQURXJyb3IEBFQAAQhEUGFyYU5vdE9uYm9hcmRpbmcAAASMVGhlIHBhcmFjaGFpbiBJRCBpcyBub3Qgb25ib2FyZGluZy4oTGVhc2VFcnJvcgABBIhUaGVyZSB3YXMgYW4gZXJyb3Igd2l0aCB0aGUgbGVhc2UuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LjUOAAAECAC1AgA5DgAAAyQAAAA9DgA9DgQYT3B0aW9uBARUAUEOAQgQTm9uZQAAABBTb21lBABBDgAAAQAAQQ4AAAQMALUCGABFDhBccG9sa2Fkb3RfcnVudGltZV9jb21tb24gYXVjdGlvbnMYcGFsbGV0FEVycm9yBARUAAEcREF1Y3Rpb25JblByb2dyZXNzAAAEkFRoaXMgYXVjdGlvbiBpcyBhbHJlYWR5IGluIHByb2dyZXNzLkRMZWFzZVBlcmlvZEluUGFzdAABBIBUaGUgbGVhc2UgcGVyaW9kIGlzIGluIHRoZSBwYXN0LkRQYXJhTm90UmVnaXN0ZXJlZAACBFhQYXJhIGlzIG5vdCByZWdpc3RlcmVkRE5vdEN1cnJlbnRBdWN0aW9uAAMEWE5vdCBhIGN1cnJlbnQgYXVjdGlvbi4oTm90QXVjdGlvbgAEBDxOb3QgYW4gYXVjdGlvbi4wQXVjdGlvbkVuZGVkAAUEaEF1Y3Rpb24gaGFzIGFscmVhZHkgZW5kZWQuQEFscmVhZHlMZWFzZWRPdXQABgTYVGhlIHBhcmEgaXMgYWxyZWFkeSBsZWFzZWQgb3V0IGZvciBwYXJ0IG9mIHRoaXMgcmFuZ2UuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LkkODFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbiRjcm93ZGxvYW4gRnVuZEluZm8QJEFjY291bnRJZAEAHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQLExlYXNlUGVyaW9kARAAKAEkZGVwb3NpdG9yAAEkQWNjb3VudElkAAEgdmVyaWZpZXJNBQFMT3B0aW9uPE11bHRpU2lnbmVyPgABHGRlcG9zaXQYARxCYWxhbmNlAAEYcmFpc2VkGAEcQmFsYW5jZQABDGVuZBABLEJsb2NrTnVtYmVyAAEMY2FwGAEcQmFsYW5jZQABRGxhc3RfY29udHJpYnV0aW9uTQ4BdExhc3RDb250cmlidXRpb248QmxvY2tOdW1iZXI+AAEwZmlyc3RfcGVyaW9kEAEsTGVhc2VQZXJpb2QAASxsYXN0X3BlcmlvZBABLExlYXNlUGVyaW9kAAEoZnVuZF9pbmRleBABJEZ1bmRJbmRleAAATQ4MXHBvbGthZG90X3J1bnRpbWVfY29tbW9uJGNyb3dkbG9hbkBMYXN0Q29udHJpYnV0aW9uBCxCbG9ja051bWJlcgEQAQwUTmV2ZXIAAAAkUHJlRW5kaW5nBAAQAQx1MzIAAQAYRW5kaW5nBAAQASxCbG9ja051bWJlcgACAABRDhBccG9sa2Fkb3RfcnVudGltZV9jb21tb24kY3Jvd2Rsb2FuGHBhbGxldBRFcnJvcgQEVAABXERGaXJzdFBlcmlvZEluUGFzdAAABPRUaGUgY3VycmVudCBsZWFzZSBwZXJpb2QgaXMgbW9yZSB0aGFuIHRoZSBmaXJzdCBsZWFzZSBwZXJpb2QuZEZpcnN0UGVyaW9kVG9vRmFySW5GdXR1cmUAAQQRAVRoZSBmaXJzdCBsZWFzZSBwZXJpb2QgbmVlZHMgdG8gYXQgbGVhc3QgYmUgbGVzcyB0aGFuIDMgYG1heF92YWx1ZWAubExhc3RQZXJpb2RCZWZvcmVGaXJzdFBlcmlvZAACBOhMYXN0IGxlYXNlIHBlcmlvZCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBmaXJzdCBsZWFzZSBwZXJpb2QuYExhc3RQZXJpb2RUb29GYXJJbkZ1dHVyZQADBC0BVGhlIGxhc3QgbGVhc2UgcGVyaW9kIGNhbm5vdCBiZSBtb3JlIHRoYW4gMyBwZXJpb2RzIGFmdGVyIHRoZSBmaXJzdCBwZXJpb2QuPENhbm5vdEVuZEluUGFzdAAEBEUBVGhlIGNhbXBhaWduIGVuZHMgYmVmb3JlIHRoZSBjdXJyZW50IGJsb2NrIG51bWJlci4gVGhlIGVuZCBtdXN0IGJlIGluIHRoZSBmdXR1cmUuREVuZFRvb0ZhckluRnV0dXJlAAUEwFRoZSBlbmQgZGF0ZSBmb3IgdGhpcyBjcm93ZGxvYW4gaXMgbm90IHNlbnNpYmxlLiBPdmVyZmxvdwAGBFhUaGVyZSB3YXMgYW4gb3ZlcmZsb3cuUENvbnRyaWJ1dGlvblRvb1NtYWxsAAcE6FRoZSBjb250cmlidXRpb24gd2FzIGJlbG93IHRoZSBtaW5pbXVtLCBgTWluQ29udHJpYnV0aW9uYC40SW52YWxpZFBhcmFJZAAIBExJbnZhbGlkIGZ1bmQgaW5kZXguLENhcEV4Y2VlZGVkAAkEkENvbnRyaWJ1dGlvbnMgZXhjZWVkIG1heGltdW0gYW1vdW50LlhDb250cmlidXRpb25QZXJpb2RPdmVyAAoEqFRoZSBjb250cmlidXRpb24gcGVyaW9kIGhhcyBhbHJlYWR5IGVuZGVkLjRJbnZhbGlkT3JpZ2luAAsEjFRoZSBvcmlnaW4gb2YgdGhpcyBjYWxsIGlzIGludmFsaWQuME5vdFBhcmFjaGFpbgAMBMhUaGlzIGNyb3dkbG9hbiBkb2VzIG5vdCBjb3JyZXNwb25kIHRvIGEgcGFyYWNoYWluLixMZWFzZUFjdGl2ZQANBBUBVGhpcyBwYXJhY2hhaW4gbGVhc2UgaXMgc3RpbGwgYWN0aXZlIGFuZCByZXRpcmVtZW50IGNhbm5vdCB5ZXQgYmVnaW4uQEJpZE9yTGVhc2VBY3RpdmUADgQxAVRoaXMgcGFyYWNoYWluJ3MgYmlkIG9yIGxlYXNlIGlzIHN0aWxsIGFjdGl2ZSBhbmQgd2l0aGRyYXcgY2Fubm90IHlldCBiZWdpbi4wRnVuZE5vdEVuZGVkAA8EgFRoZSBjcm93ZGxvYW4gaGFzIG5vdCB5ZXQgZW5kZWQuPE5vQ29udHJpYnV0aW9ucwAQBNBUaGVyZSBhcmUgbm8gY29udHJpYnV0aW9ucyBzdG9yZWQgaW4gdGhpcyBjcm93ZGxvYW4uSE5vdFJlYWR5VG9EaXNzb2x2ZQARCFUBVGhlIGNyb3dkbG9hbiBpcyBub3QgcmVhZHkgdG8gZGlzc29sdmUuIFBvdGVudGlhbGx5IHN0aWxsIGhhcyBhIHNsb3Qgb3IgaW4gcmV0aXJlbWVudBxwZXJpb2QuQEludmFsaWRTaWduYXR1cmUAEgRISW52YWxpZCBzaWduYXR1cmUuME1lbW9Ub29MYXJnZQATBHxUaGUgcHJvdmlkZWQgbWVtbyBpcyB0b28gbGFyZ2UuREFscmVhZHlJbk5ld1JhaXNlABQEhFRoZSBmdW5kIGlzIGFscmVhZHkgaW4gYE5ld1JhaXNlYEhWcmZEZWxheUluUHJvZ3Jlc3MAFQS0Tm8gY29udHJpYnV0aW9ucyBhbGxvd2VkIGR1cmluZyB0aGUgVlJGIGRlbGF5NE5vTGVhc2VQZXJpb2QAFgQtAUEgbGVhc2UgcGVyaW9kIGhhcyBub3Qgc3RhcnRlZCB5ZXQsIGR1ZSB0byBhbiBvZmZzZXQgaW4gdGhlIHN0YXJ0aW5nIGJsb2NrLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5VDhBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGNvcmV0aW1lGHBhbGxldBRFcnJvcgQEVAABDCROb3RCcm9rZXIAAAQpAVRoZSBwYXJhaWQgbWFraW5nIHRoZSBjYWxsIGlzIG5vdCB0aGUgY29yZXRpbWUgYnJva2VyYWdlIHN5c3RlbSBwYXJhY2hhaW4uWFJlcXVlc3RlZEZ1dHVyZVJldmVudWUAAQhFAVJlcXVlc3RlZCByZXZlbnVlIGluZm9ybWF0aW9uIGB3aGVuYCBwYXJhbWV0ZXIgd2FzIGluIHRoZSBmdXR1cmUgZnJvbSB0aGUgY3VycmVudDRibG9jayBoZWlnaHQuTEFzc2V0VHJhbnNmZXJGYWlsZWQAAgS8RmFpbGVkIHRvIHRyYW5zZmVyIGFzc2V0cyB0byB0aGUgY29yZXRpbWUgY2hhaW4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuWQ4MKHBhbGxldF94Y20YcGFsbGV0LFF1ZXJ5U3RhdHVzBCxCbG9ja051bWJlcgEQAQwcUGVuZGluZxABJHJlc3BvbmRlco0BAURWZXJzaW9uZWRMb2NhdGlvbgABTG1heWJlX21hdGNoX3F1ZXJpZXJdDgFkT3B0aW9uPFZlcnNpb25lZExvY2F0aW9uPgABMG1heWJlX25vdGlmeWEOAUBPcHRpb248KHU4LCB1OCk+AAEcdGltZW91dBABLEJsb2NrTnVtYmVyAAAAPFZlcnNpb25Ob3RpZmllcggBGG9yaWdpbo0BAURWZXJzaW9uZWRMb2NhdGlvbgABJGlzX2FjdGl2ZSABEGJvb2wAAQAUUmVhZHkIASByZXNwb25zZWkOAURWZXJzaW9uZWRSZXNwb25zZQABCGF0EAEsQmxvY2tOdW1iZXIAAgAAXQ4EGE9wdGlvbgQEVAGNAQEIEE5vbmUAAAAQU29tZQQAjQEAAAEAAGEOBBhPcHRpb24EBFQBZQ4BCBBOb25lAAAAEFNvbWUEAGUOAAABAABlDgAABAgICABpDggMeGNtRFZlcnNpb25lZFJlc3BvbnNlAAEMCFYzBAC1BQEwdjM6OlJlc3BvbnNlAAMACFY0BAAdBgEwdjQ6OlJlc3BvbnNlAAQACFY1BABlBgEwdjU6OlJlc3BvbnNlAAUAAG0OAAAECBCNAQBxDgAABAwwKBAAdQ4MTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAF5DgRTAAAEAH0OARhWZWM8VD4AAHkOAAAECI0BEAB9DgAAAnkOAIEODChwYWxsZXRfeGNtGHBhbGxldFRWZXJzaW9uTWlncmF0aW9uU3RhZ2UAARBcTWlncmF0ZVN1cHBvcnRlZFZlcnNpb24AAABcTWlncmF0ZVZlcnNpb25Ob3RpZmllcnMAAQBQTm90aWZ5Q3VycmVudFRhcmdldHMEAIUOATxPcHRpb248VmVjPHU4Pj4AAgBoTWlncmF0ZUFuZE5vdGlmeU9sZFRhcmdldHMAAwAAhQ4EGE9wdGlvbgQEVAE4AQgQTm9uZQAAABBTb21lBAA4AAABAACJDgAABAwQAPEGAI0ODChwYWxsZXRfeGNtGHBhbGxldGhSZW1vdGVMb2NrZWRGdW5naWJsZVJlY29yZAhIQ29uc3VtZXJJZGVudGlmaWVyAZAwTWF4Q29uc3VtZXJzAAAQARhhbW91bnQYARB1MTI4AAEUb3duZXKNAQFEVmVyc2lvbmVkTG9jYXRpb24AARhsb2NrZXKNAQFEVmVyc2lvbmVkTG9jYXRpb24AASRjb25zdW1lcnORDgHQQm91bmRlZFZlYzwoQ29uc3VtZXJJZGVudGlmaWVyLCB1MTI4KSwgTWF4Q29uc3VtZXJzPgAAkQ4MTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAGVDgRTAAAEAJkOARhWZWM8VD4AAJUOAAAECJAYAJkOAAAClQ4AnQ4MTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAGhDgRTAAAEAKUOARhWZWM8VD4AAKEOAAAECBiNAQClDgAAAqEOAKkOCChwYWxsZXRfeGNtWEF1dGhvcml6ZWRBbGlhc2VzRW50cnkIGFRpY2tldAGtDgxNQVgBsQ4ACAEgYWxpYXNlcnO1DgF4Qm91bmRlZFZlYzxPcmlnaW5BbGlhc2VyLCBNQVg+AAEYdGlja2V0rQ4BGFRpY2tldAAArQ4QNGZyYW1lX3N1cHBvcnQYdHJhaXRzHHN0b3JhZ2UgRGlzYWJsZWQAAAAAsQ4MKHBhbGxldF94Y20YcGFsbGV0UE1heEF1dGhvcml6ZWRBbGlhc2VzAAAAALUODExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBuQ4EUwAABAC9DgEYVmVjPFQ+AAC5DgxAeGNtX3J1bnRpbWVfYXBpc0hhdXRob3JpemVkX2FsaWFzZXM0T3JpZ2luQWxpYXNlcgAACAEgbG9jYXRpb26NAQFEVmVyc2lvbmVkTG9jYXRpb24AARhleHBpcnn1BgEsT3B0aW9uPHU2ND4AAL0OAAACuQ4AwQ4MKHBhbGxldF94Y20YcGFsbGV0FEVycm9yBARUAAFwLFVucmVhY2hhYmxlAAAIXQFUaGUgZGVzaXJlZCBkZXN0aW5hdGlvbiB3YXMgdW5yZWFjaGFibGUsIGdlbmVyYWxseSBiZWNhdXNlIHRoZXJlIGlzIGEgbm8gd2F5IG9mIHJvdXRpbmcYdG8gaXQuLFNlbmRGYWlsdXJlAAEIQQFUaGVyZSB3YXMgc29tZSBvdGhlciBpc3N1ZSAoaS5lLiBub3QgdG8gZG8gd2l0aCByb3V0aW5nKSBpbiBzZW5kaW5nIHRoZSBtZXNzYWdlLshQZXJoYXBzIGEgbGFjayBvZiBzcGFjZSBmb3IgYnVmZmVyaW5nIHRoZSBtZXNzYWdlLiBGaWx0ZXJlZAACBJxUaGUgbWVzc2FnZSBleGVjdXRpb24gZmFpbHMgdGhlIGZpbHRlci5IVW53ZWlnaGFibGVNZXNzYWdlAAMEtFRoZSBtZXNzYWdlJ3Mgd2VpZ2h0IGNvdWxkIG5vdCBiZSBkZXRlcm1pbmVkLmBEZXN0aW5hdGlvbk5vdEludmVydGlibGUABATcVGhlIGRlc3RpbmF0aW9uIGBMb2NhdGlvbmAgcHJvdmlkZWQgY2Fubm90IGJlIGludmVydGVkLhRFbXB0eQAFBIBUaGUgYXNzZXRzIHRvIGJlIHNlbnQgYXJlIGVtcHR5LjhDYW5ub3RSZWFuY2hvcgAGBDUBQ291bGQgbm90IHJlLWFuY2hvciB0aGUgYXNzZXRzIHRvIGRlY2xhcmUgdGhlIGZlZXMgZm9yIHRoZSBkZXN0aW5hdGlvbiBjaGFpbi40VG9vTWFueUFzc2V0cwAHBMRUb28gbWFueSBhc3NldHMgaGF2ZSBiZWVuIGF0dGVtcHRlZCBmb3IgdHJhbnNmZXIuNEludmFsaWRPcmlnaW4ACAR4T3JpZ2luIGlzIGludmFsaWQgZm9yIHNlbmRpbmcuKEJhZFZlcnNpb24ACQQhAVRoZSB2ZXJzaW9uIG9mIHRoZSBgVmVyc2lvbmVkYCB2YWx1ZSB1c2VkIGlzIG5vdCBhYmxlIHRvIGJlIGludGVycHJldGVkLixCYWRMb2NhdGlvbgAKCEEBVGhlIGdpdmVuIGxvY2F0aW9uIGNvdWxkIG5vdCBiZSB1c2VkIChlLmcuIGJlY2F1c2UgaXQgY2Fubm90IGJlIGV4cHJlc3NlZCBpbiB0aGVgZGVzaXJlZCB2ZXJzaW9uIG9mIFhDTSkuOE5vU3Vic2NyaXB0aW9uAAsEvFRoZSByZWZlcmVuY2VkIHN1YnNjcmlwdGlvbiBjb3VsZCBub3QgYmUgZm91bmQuREFscmVhZHlTdWJzY3JpYmVkAAwEEQFUaGUgbG9jYXRpb24gaXMgaW52YWxpZCBzaW5jZSBpdCBhbHJlYWR5IGhhcyBhIHN1YnNjcmlwdGlvbiBmcm9tIHVzLlhDYW5ub3RDaGVja091dFRlbGVwb3J0AA0EKQFDb3VsZCBub3QgY2hlY2stb3V0IHRoZSBhc3NldHMgZm9yIHRlbGVwb3J0YXRpb24gdG8gdGhlIGRlc3RpbmF0aW9uIGNoYWluLihMb3dCYWxhbmNlAA4EQQFUaGUgb3duZXIgZG9lcyBub3Qgb3duIChhbGwpIG9mIHRoZSBhc3NldCB0aGF0IHRoZXkgd2lzaCB0byBkbyB0aGUgb3BlcmF0aW9uIG9uLjBUb29NYW55TG9ja3MADwTAVGhlIGFzc2V0IG93bmVyIGhhcyB0b28gbWFueSBsb2NrcyBvbiB0aGUgYXNzZXQuTEFjY291bnROb3RTb3ZlcmVpZ24AEAQxAVRoZSBnaXZlbiBhY2NvdW50IGlzIG5vdCBhbiBpZGVudGlmaWFibGUgc292ZXJlaWduIGFjY291bnQgZm9yIGFueSBsb2NhdGlvbi4oRmVlc05vdE1ldAARBCkBVGhlIG9wZXJhdGlvbiByZXF1aXJlZCBmZWVzIHRvIGJlIHBhaWQgd2hpY2ggdGhlIGluaXRpYXRvciBjb3VsZCBub3QgbWVldC4wTG9ja05vdEZvdW5kABIE9EEgcmVtb3RlIGxvY2sgd2l0aCB0aGUgY29ycmVzcG9uZGluZyBkYXRhIGNvdWxkIG5vdCBiZSBmb3VuZC4USW5Vc2UAEwRJAVRoZSB1bmxvY2sgb3BlcmF0aW9uIGNhbm5vdCBzdWNjZWVkIGJlY2F1c2UgdGhlcmUgYXJlIHN0aWxsIGNvbnN1bWVycyBvZiB0aGUgbG9jay5oSW52YWxpZEFzc2V0VW5rbm93blJlc2VydmUAFQTwSW52YWxpZCBhc3NldCwgcmVzZXJ2ZSBjaGFpbiBjb3VsZCBub3QgYmUgZGV0ZXJtaW5lZCBmb3IgaXQueEludmFsaWRBc3NldFVuc3VwcG9ydGVkUmVzZXJ2ZQAWBEUBSW52YWxpZCBhc3NldCwgZG8gbm90IHN1cHBvcnQgcmVtb3RlIGFzc2V0IHJlc2VydmVzIHdpdGggZGlmZmVyZW50IGZlZXMgcmVzZXJ2ZXMuPFRvb01hbnlSZXNlcnZlcwAXBEkBVG9vIG1hbnkgYXNzZXRzIHdpdGggZGlmZmVyZW50IHJlc2VydmUgbG9jYXRpb25zIGhhdmUgYmVlbiBhdHRlbXB0ZWQgZm9yIHRyYW5zZmVyLmBMb2NhbEV4ZWN1dGlvbkluY29tcGxldGUAGAR8TG9jYWwgWENNIGV4ZWN1dGlvbiBpbmNvbXBsZXRlLmBUb29NYW55QXV0aG9yaXplZEFsaWFzZXMAGQS4VG9vIG1hbnkgbG9jYXRpb25zIGF1dGhvcml6ZWQgdG8gYWxpYXMgb3JpZ2luLjRFeHBpcmVzSW5QYXN0ABoEjEV4cGlyeSBibG9jayBudW1iZXIgaXMgaW4gdGhlIHBhc3QuNEFsaWFzTm90Rm91bmQAGwTQVGhlIGFsaWFzIHRvIHJlbW92ZSBhdXRob3JpemF0aW9uIGZvciB3YXMgbm90IGZvdW5kLoRMb2NhbEV4ZWN1dGlvbkluY29tcGxldGVXaXRoRXJyb3IIARRpbmRleAgBQEluc3RydWN0aW9uSW5kZXgAARRlcnJvcsUOAThFeGVjdXRpb25FcnJvcgAcCDUBTG9jYWwgWENNIGV4ZWN1dGlvbiBpbmNvbXBsZXRlIHdpdGggdGhlIGFjdHVhbCBYQ00gZXJyb3IgYW5kIHRoZSBpbmRleCBvZiB0aGWIaW5zdHJ1Y3Rpb24gdGhhdCBjYXVzZWQgdGhlIGVycm9yLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7FDgwocGFsbGV0X3hjbRhlcnJvcnM4RXhlY3V0aW9uRXJyb3IAAaQgT3ZlcmZsb3cAAAA0VW5pbXBsZW1lbnRlZAABAGBVbnRydXN0ZWRSZXNlcnZlTG9jYXRpb24AAgBkVW50cnVzdGVkVGVsZXBvcnRMb2NhdGlvbgADADBMb2NhdGlvbkZ1bGwABABUTG9jYXRpb25Ob3RJbnZlcnRpYmxlAAUAJEJhZE9yaWdpbgAGADxJbnZhbGlkTG9jYXRpb24ABwA0QXNzZXROb3RGb3VuZAAIAFRGYWlsZWRUb1RyYW5zYWN0QXNzZXQACQA8Tm90V2l0aGRyYXdhYmxlAAoASExvY2F0aW9uQ2Fubm90SG9sZAALAFRFeGNlZWRzTWF4TWVzc2FnZVNpemUADABYRGVzdGluYXRpb25VbnN1cHBvcnRlZAANACRUcmFuc3BvcnQADgAoVW5yb3V0YWJsZQAPADBVbmtub3duQ2xhaW0AEAA4RmFpbGVkVG9EZWNvZGUAEQBATWF4V2VpZ2h0SW52YWxpZAASADhOb3RIb2xkaW5nRmVlcwATADBUb29FeHBlbnNpdmUAFAAQVHJhcAAVAEBFeHBlY3RhdGlvbkZhbHNlABYAOFBhbGxldE5vdEZvdW5kABcAME5hbWVNaXNtYXRjaAAYAExWZXJzaW9uSW5jb21wYXRpYmxlABkAUEhvbGRpbmdXb3VsZE92ZXJmbG93ABoALEV4cG9ydEVycm9yABsAOFJlYW5jaG9yRmFpbGVkABwAGE5vRGVhbAAdAChGZWVzTm90TWV0AB4AJExvY2tFcnJvcgAfADBOb1Blcm1pc3Npb24AIAAoVW5hbmNob3JlZAAhADhOb3REZXBvc2l0YWJsZQAiADRUb29NYW55QXNzZXRzACMATFVuaGFuZGxlZFhjbVZlcnNpb24AJABIV2VpZ2h0TGltaXRSZWFjaGVkACUAHEJhcnJpZXIAJgBMV2VpZ2h0Tm90Q29tcHV0YWJsZQAnAERFeGNlZWRzU3RhY2tMaW1pdAAoAADJDghQcGFsbGV0X21lc3NhZ2VfcXVldWUkQm9va1N0YXRlBDRNZXNzYWdlT3JpZ2luAf0GABgBFGJlZ2luEAEkUGFnZUluZGV4AAEMZW5kEAEkUGFnZUluZGV4AAEUY291bnQQASRQYWdlSW5kZXgAAUByZWFkeV9uZWlnaGJvdXJzzQ4BhE9wdGlvbjxOZWlnaGJvdXJzPE1lc3NhZ2VPcmlnaW4+PgABNG1lc3NhZ2VfY291bnQwAQx1NjQAARBzaXplMAEMdTY0AADNDgQYT3B0aW9uBARUAdEOAQgQTm9uZQAAABBTb21lBADRDgAAAQAA0Q4IUHBhbGxldF9tZXNzYWdlX3F1ZXVlKE5laWdoYm91cnMENE1lc3NhZ2VPcmlnaW4B/QYACAEQcHJldv0GATRNZXNzYWdlT3JpZ2luAAEQbmV4dP0GATRNZXNzYWdlT3JpZ2luAADVDgAABAj9BhAA2Q4IUHBhbGxldF9tZXNzYWdlX3F1ZXVlEFBhZ2UIEFNpemUBECBIZWFwU2l6ZQAAGAEkcmVtYWluaW5nEAEQU2l6ZQABOHJlbWFpbmluZ19zaXplEAEQU2l6ZQABLGZpcnN0X2luZGV4EAEQU2l6ZQABFGZpcnN0EAEQU2l6ZQABEGxhc3QQARBTaXplAAEQaGVhcN0OAZxCb3VuZGVkVmVjPHU4LCBJbnRvVTMyPEhlYXBTaXplLCBTaXplPj4AAN0ODExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADgBGFZlYzxUPgAA4Q4MUHBhbGxldF9tZXNzYWdlX3F1ZXVlGHBhbGxldBRFcnJvcgQEVAABJCxOb3RSZWFwYWJsZQAACEkBUGFnZSBpcyBub3QgcmVhcGFibGUgYmVjYXVzZSBpdCBoYXMgaXRlbXMgcmVtYWluaW5nIHRvIGJlIHByb2Nlc3NlZCBhbmQgaXMgbm90IG9sZBxlbm91Z2guGE5vUGFnZQABBIRQYWdlIHRvIGJlIHJlYXBlZCBkb2VzIG5vdCBleGlzdC4kTm9NZXNzYWdlAAIEqFRoZSByZWZlcmVuY2VkIG1lc3NhZ2UgY291bGQgbm90IGJlIGZvdW5kLkBBbHJlYWR5UHJvY2Vzc2VkAAMEAQFUaGUgbWVzc2FnZSB3YXMgYWxyZWFkeSBwcm9jZXNzZWQgYW5kIGNhbm5vdCBiZSBwcm9jZXNzZWQgYWdhaW4uGFF1ZXVlZAAEBKxUaGUgbWVzc2FnZSBpcyBxdWV1ZWQgZm9yIGZ1dHVyZSBleGVjdXRpb24uSEluc3VmZmljaWVudFdlaWdodAAFBBkBVGhlcmUgaXMgdGVtcG9yYXJpbHkgbm90IGVub3VnaCB3ZWlnaHQgdG8gY29udGludWUgc2VydmljaW5nIG1lc3NhZ2VzLmBUZW1wb3JhcmlseVVucHJvY2Vzc2FibGUABhCoVGhpcyBtZXNzYWdlIGlzIHRlbXBvcmFyaWx5IHVucHJvY2Vzc2FibGUuAFkBU3VjaCBlcnJvcnMgYXJlIGV4cGVjdGVkLCBidXQgbm90IGd1YXJhbnRlZWQsIHRvIHJlc29sdmUgdGhlbXNlbHZlcyBldmVudHVhbGx5IHRocm91Z2gkcmV0cnlpbmcuLFF1ZXVlUGF1c2VkAAcM7FRoZSBxdWV1ZSBpcyBwYXVzZWQgYW5kIG5vIG1lc3NhZ2UgY2FuIGJlIGV4ZWN1dGVkIGZyb20gaXQuAB0BVGhpcyBjYW4gY2hhbmdlIGF0IGFueSB0aW1lIGFuZCBtYXkgcmVzb2x2ZSBpbiB0aGUgZnV0dXJlIGJ5IHJlLXRyeWluZy5MUmVjdXJzaXZlRGlzYWxsb3dlZAAIBDEBQW5vdGhlciBjYWxsIGlzIGluIHByb2dyZXNzIGFuZCBuZWVkcyB0byBmaW5pc2ggYmVmb3JlIHRoaXMgY2FsbCBjYW4gaGFwcGVuLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7lDgxEcGFsbGV0X2Fzc2V0X3JhdGUYcGFsbGV0FEVycm9yBARUAAEMQFVua25vd25Bc3NldEtpbmQAAAR4VGhlIGdpdmVuIGFzc2V0IElEIGlzIHVua25vd24uNEFscmVhZHlFeGlzdHMAAQRRAVRoZSBnaXZlbiBhc3NldCBJRCBhbHJlYWR5IGhhcyBhbiBhc3NpZ25lZCBjb252ZXJzaW9uIHJhdGUgYW5kIGNhbm5vdCBiZSByZS1jcmVhdGVkLiBPdmVyZmxvdwACBMxPdmVyZmxvdyBvY3VycmVkIHdoZW4gY2FsY3VsYXRpbmcgdGhlIGludmVyc2UgcmF0ZS4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQu6Q4MTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAFdAgRTAAAEAO0OARhWZWM8VD4AAO0OAAACXQIA8Q4MMHBhbGxldF9iZWVmeRhwYWxsZXQURXJyb3IEBFQAARxgSW52YWxpZEtleU93bmVyc2hpcFByb29mAAAEMQFBIGtleSBvd25lcnNoaXAgcHJvb2YgcHJvdmlkZWQgYXMgcGFydCBvZiBhbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIGludmFsaWQuYEludmFsaWREb3VibGVWb3RpbmdQcm9vZgABBDEBQSBkb3VibGUgdm90aW5nIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLlhJbnZhbGlkRm9ya1ZvdGluZ1Byb29mAAIEKQFBIGZvcmsgdm90aW5nIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLnRJbnZhbGlkRnV0dXJlQmxvY2tWb3RpbmdQcm9vZgADBEkBQSBmdXR1cmUgYmxvY2sgdm90aW5nIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLnxJbnZhbGlkRXF1aXZvY2F0aW9uUHJvb2ZTZXNzaW9uAAQEwFRoZSBzZXNzaW9uIG9mIHRoZSBlcXVpdm9jYXRpb24gcHJvb2YgaXMgaW52YWxpZFhEdXBsaWNhdGVPZmZlbmNlUmVwb3J0AAUEFQFBIGdpdmVuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgdmFsaWQgYnV0IGFscmVhZHkgcHJldmlvdXNseSByZXBvcnRlZC5QSW52YWxpZENvbmZpZ3VyYXRpb24ABgSMU3VibWl0dGVkIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQu9Q4MSHNwX2NvbnNlbnN1c19iZWVmeQxtbXJEQmVlZnlBdXRob3JpdHlTZXQEWEF1dGhvcml0eVNldENvbW1pdG1lbnQBNAAMAQhpZDABVGNyYXRlOjpWYWxpZGF0b3JTZXRJZAABDGxlbhABDHUzMgABRGtleXNldF9jb21taXRtZW50NAFYQXV0aG9yaXR5U2V0Q29tbWl0bWVudAAA+Q4QXHBvbGthZG90X3J1bnRpbWVfY29tbW9uSHBhcmFzX3N1ZG9fd3JhcHBlchhwYWxsZXQURXJyb3IEBFQAASg8UGFyYURvZXNudEV4aXN0AAAEqFRoZSBzcGVjaWZpZWQgcGFyYWNoYWluIGlzIG5vdCByZWdpc3RlcmVkLkRQYXJhQWxyZWFkeUV4aXN0cwABBLhUaGUgc3BlY2lmaWVkIHBhcmFjaGFpbiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQuVEV4Y2VlZHNNYXhNZXNzYWdlU2l6ZQACCEEBQSBETVAgbWVzc2FnZSBjb3VsZG4ndCBiZSBzZW50IGJlY2F1c2UgaXQgZXhjZWVkcyB0aGUgbWF4aW11bSBzaXplIGFsbG93ZWQgZm9yIGFEZG93bndhcmQgbWVzc2FnZS4oVW5yb3V0YWJsZQADBBkBQSBETVAgbWVzc2FnZSBjb3VsZG4ndCBiZSBzZW50IGJlY2F1c2UgdGhlIGRlc3RpbmF0aW9uIGlzIHVucmVhY2hhYmxlLjhDb3VsZG50Q2xlYW51cAAEBIBDb3VsZCBub3Qgc2NoZWR1bGUgcGFyYSBjbGVhbnVwLjROb3RQYXJhdGhyZWFkAAUEnE5vdCBhIHBhcmF0aHJlYWQgKG9uLWRlbWFuZCBwYXJhY2hhaW4pLjBOb3RQYXJhY2hhaW4ABgR4Tm90IGEgbGVhc2UgaG9sZGluZyBwYXJhY2hhaW4uNENhbm5vdFVwZ3JhZGUABwT4Q2Fubm90IHVwZ3JhZGUgb24tZGVtYW5kIHBhcmFjaGFpbiB0byBsZWFzZSBob2xkaW5nIHBhcmFjaGFpbi48Q2Fubm90RG93bmdyYWRlAAgE2ENhbm5vdCBkb3duZ3JhZGUgbGVhc2UgaG9sZGluZyBwYXJhY2hhaW4gdG8gb24tZGVtYW5kLjBUb29NYW55Q29yZXMACQTMVGhlcmUgYXJlIG1vcmUgY29yZXMgdGhhbiBzdXBwb3J0ZWQgYnkgdGhlIHJ1bnRpbWUuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lv0ODCxwYWxsZXRfc3VkbxhwYWxsZXQURXJyb3IEBFQAAQQsUmVxdWlyZVN1ZG8AAASAU2VuZGVyIG11c3QgYmUgdGhlIFN1ZG8gYWNjb3VudC4EaEVycm9yIGZvciB0aGUgU3VkbyBwYWxsZXQuAQ8MSHBhbGxldF9yY19taWdyYXRvciBhY2NvdW50czBBY2NvdW50U3RhdGUEHEJhbGFuY2UBGAEMHE1pZ3JhdGUAAAAgUHJlc2VydmUAAQAQUGFydAwBEGZyZWUYARxCYWxhbmNlAAEgcmVzZXJ2ZWQYARxCYWxhbmNlAAEkY29uc3VtZXJzEAEMdTMyAAIAAAUPDEhwYWxsZXRfcmNfbWlncmF0b3IgYWNjb3VudHNATWlncmF0ZWRCYWxhbmNlcwQcQmFsYW5jZQEYAAgBEGtlcHQYARxCYWxhbmNlAAEgbWlncmF0ZWQYARxCYWxhbmNlAAAJDwxIcGFsbGV0X3JjX21pZ3JhdG9yGHBhbGxldBRFcnJvcgQEVAABSCxVbnJlYWNoYWJsZQAAACxPdXRPZldlaWdodAABACBYY21FcnJvcgACBIRGYWlsZWQgdG8gc2VuZCBYQ00gbWVzc2FnZSB0byBBSC5cRmFpbGVkVG9XaXRoZHJhd0FjY291bnQAAwTcRmFpbGVkIHRvIHdpdGhkcmF3IGFjY291bnQgZnJvbSBSQyBmb3IgbWlncmF0aW9uIHRvIEFILjxQYXN0QmxvY2tOdW1iZXIABATkSW5kaWNhdGVzIHRoYXQgdGhlIHNwZWNpZmllZCBibG9jayBudW1iZXIgaXMgaW4gdGhlIHBhc3QuOEVyYUVuZHNUb29Tb29uAAUM8EluZGljYXRlcyB0aGF0IHRoZXJlIGlzIG5vdCBlbm91Z2ggdGltZSBmb3Igc3Rha2luZyB0byBsb2NrLgAlAVNjaGVkdWxlIHRoZSBtaWdyYXRpb24gYXQgbGVhc3QgdHdvIHNlc3Npb25zIGJlZm9yZSB0aGUgY3VycmVudCBlcmEgZW5kcy48QmFsYW5jZU92ZXJmbG93AAYEcEJhbGFuY2UgYWNjb3VudGluZyBvdmVyZmxvdy5AQmFsYW5jZVVuZGVyZmxvdwAHBHRCYWxhbmNlIGFjY291bnRpbmcgdW5kZXJmbG93LlBJbnZhbGlkUXVlcnlSZXNwb25zZQAIBHhUaGUgcXVlcnkgcmVzcG9uc2UgaXMgaW52YWxpZC40UXVlcnlOb3RGb3VuZAAJBHBUaGUgeGNtIHF1ZXJ5IHdhcyBub3QgZm91bmQuMFhjbVNlbmRFcnJvcgAKBGxGYWlsZWQgdG8gc2VuZCBYQ00gbWVzc2FnZS5AVW5yZWFjaGFibGVTdGFnZQALBPBUaGUgbWlncmF0aW9uIHN0YWdlIGlzIG5vdCByZWFjaGFibGUgZnJvbSB0aGUgY3VycmVudCBzdGFnZS5ASW52YWxpZFBhcmFtZXRlcgAMBEhJbnZhbGlkIHBhcmFtZXRlci5wQWhVbXBRdWV1ZVByaW9yaXR5QWxyZWFkeVNldAANBNxUaGUgQUggVU1QIHF1ZXVlIHByaW9yaXR5IGNvbmZpZ3VyYXRpb24gaXMgYWxyZWFkeSBzZXQuREFjY291bnRSZWZlcmVuY2VkAA4EPQFUaGUgYWNjb3VudCBpcyByZWZlcmVuY2VkIGJ5IHNvbWUgb3RoZXIgcGFsbGV0LiBJdCBtaWdodCBoYXZlIGZyZWV6ZXMgb3IgaG9sZHMuNEJhZFhjbVZlcnNpb24ADwRsVGhlIFhDTSB2ZXJzaW9uIGlzIGludmFsaWQuNEludmFsaWRPcmlnaW4AEARYVGhlIG9yaWdpbiBpcyBpbnZhbGlkLlhJbnZhbGlkU3RhZ2VUcmFuc2l0aW9uABEEgFRoZSBzdGFnZSB0cmFuc2l0aW9uIGlzIGludmFsaWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lg0PDDByZWxheV9jb21tb24QYXBpczRJbmZsYXRpb25JbmZvAAAIASRpbmZsYXRpb24RDwFcc3BfcnVudGltZTo6UGVycXVpbnRpbGwAASRuZXh0X21pbnQVDwHwKHBvbGthZG90X3ByaW1pdGl2ZXM6OkJhbGFuY2UsIHBvbGthZG90X3ByaW1pdGl2ZXM6OkJhbGFuY2UpAAARDww0c3BfYXJpdGhtZXRpYyhwZXJfdGhpbmdzLFBlcnF1aW50aWxsAAAEADABDHU2NAAAFQ8AAAQIGBgAGQ8IKHNwX3J1bnRpbWVYRXh0cmluc2ljSW5jbHVzaW9uTW9kZQABCDRBbGxFeHRyaW5zaWNzAAAANE9ubHlJbmhlcmVudHMAAQAAHQ8IHHNwX2NvcmU4T3BhcXVlTWV0YWRhdGEAAAQAOAEcVmVjPHU4PgAAIQ8EGE9wdGlvbgQEVAEdDwEIEE5vbmUAAAAQU29tZQQAHQ8AAAEAACUPBBhSZXN1bHQIBFQBjARFASkPAQgIT2sEAIwAAAAADEVycgQAKQ8AAAEAACkPDChzcF9ydW50aW1lUHRyYW5zYWN0aW9uX3ZhbGlkaXR5YFRyYW5zYWN0aW9uVmFsaWRpdHlFcnJvcgABCBxJbnZhbGlkBAAtDwFISW52YWxpZFRyYW5zYWN0aW9uAAAAHFVua25vd24EADEPAUhVbmtub3duVHJhbnNhY3Rpb24AAQAALQ8MKHNwX3J1bnRpbWVQdHJhbnNhY3Rpb25fdmFsaWRpdHlISW52YWxpZFRyYW5zYWN0aW9uAAE0EENhbGwAAAAcUGF5bWVudAABABhGdXR1cmUAAgAUU3RhbGUAAwAgQmFkUHJvb2YABABEQW5jaWVudEJpcnRoQmxvY2sABQBERXhoYXVzdHNSZXNvdXJjZXMABgAYQ3VzdG9tBAAIAQh1OAAHADBCYWRNYW5kYXRvcnkACABMTWFuZGF0b3J5VmFsaWRhdGlvbgAJACRCYWRTaWduZXIACgBUSW5kZXRlcm1pbmF0ZUltcGxpY2l0AAsANFVua25vd25PcmlnaW4ADAAAMQ8MKHNwX3J1bnRpbWVQdHJhbnNhY3Rpb25fdmFsaWRpdHlIVW5rbm93blRyYW5zYWN0aW9uAAEMMENhbm5vdExvb2t1cAAAAExOb1Vuc2lnbmVkVmFsaWRhdG9yAAEAGEN1c3RvbQQACAEIdTgAAgAANQ8IMHNwX2luaGVyZW50czBJbmhlcmVudERhdGEAAAQBEGRhdGE5DwGUQlRyZWVNYXA8SW5oZXJlbnRJZGVudGlmaWVyLCBWZWM8dTg+PgAAOQ8EIEJUcmVlTWFwCARLAbEFBFYBOAAEAD0PAAAAPQ8AAAJBDwBBDwAABAixBTgARQ8IMHNwX2luaGVyZW50c1BDaGVja0luaGVyZW50c1Jlc3VsdAAADAEQb2theSABEGJvb2wAASxmYXRhbF9lcnJvciABEGJvb2wAARhlcnJvcnM1DwEwSW5oZXJlbnREYXRhAABJDwAABAgAAABNDwwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eURUcmFuc2FjdGlvblNvdXJjZQABDBxJbkJsb2NrAAAAFExvY2FsAAEAIEV4dGVybmFsAAIAAFEPBBhSZXN1bHQIBFQBVQ8ERQEpDwEICE9rBABVDwAAAAAMRXJyBAApDwAAAQAAVQ8MKHNwX3J1bnRpbWVQdHJhbnNhY3Rpb25fdmFsaWRpdHlAVmFsaWRUcmFuc2FjdGlvbgAAFAEgcHJpb3JpdHkwAUxUcmFuc2FjdGlvblByaW9yaXR5AAEgcmVxdWlyZXO5AQFMVmVjPFRyYW5zYWN0aW9uVGFnPgABIHByb3ZpZGVzuQEBTFZlYzxUcmFuc2FjdGlvblRhZz4AASRsb25nZXZpdHkwAVBUcmFuc2FjdGlvbkxvbmdldml0eQABJHByb3BhZ2F0ZSABEGJvb2wAAFkPAAAECAkNXQ8AXQ8MTHBvbGthZG90X3ByaW1pdGl2ZXMIdjhER3JvdXBSb3RhdGlvbkluZm8EBE4BEAAMAUxzZXNzaW9uX3N0YXJ0X2Jsb2NrEAEETgABYGdyb3VwX3JvdGF0aW9uX2ZyZXF1ZW5jeRABBE4AAQxub3cQAQROAABhDwAAAmUPAGUPDExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nJENvcmVTdGF0ZQgESAE0BE4BEAEMIE9jY3VwaWVkBABpDwFIT2NjdXBpZWRDb3JlPEgsIE4+AAAAJFNjaGVkdWxlZAQAcQ8BNFNjaGVkdWxlZENvcmUAAQAQRnJlZQACAABpDwxMcG9sa2Fkb3RfcHJpbWl0aXZlcyB2c3RhZ2luZzBPY2N1cGllZENvcmUIBEgBNAROARAAIAFQbmV4dF91cF9vbl9hdmFpbGFibGVtDwFUT3B0aW9uPFNjaGVkdWxlZENvcmU+AAE4b2NjdXBpZWRfc2luY2UQAQROAAEsdGltZV9vdXRfYXQQAQROAAFMbmV4dF91cF9vbl90aW1lX291dG0PAVRPcHRpb248U2NoZWR1bGVkQ29yZT4AATBhdmFpbGFiaWxpdHmVBAF8Qml0VmVjPHU4LCBiaXR2ZWM6Om9yZGVyOjpMc2IwPgABRGdyb3VwX3Jlc3BvbnNpYmxldQgBKEdyb3VwSW5kZXgAAThjYW5kaWRhdGVfaGFzaPEEATRDYW5kaWRhdGVIYXNoAAFQY2FuZGlkYXRlX2Rlc2NyaXB0b3KxBAFgQ2FuZGlkYXRlRGVzY3JpcHRvclYyPEg+AABtDwQYT3B0aW9uBARUAXEPAQgQTm9uZQAAABBTb21lBABxDwAAAQAAcQ8MTHBvbGthZG90X3ByaW1pdGl2ZXMIdjg0U2NoZWR1bGVkQ29yZQAACAEccGFyYV9pZLUCAQhJZAABIGNvbGxhdG9ydQ8BSE9wdGlvbjxDb2xsYXRvcklkPgAAdQ8EGE9wdGlvbgQEVAF5DwEIEE5vbmUAAAAQU29tZQQAeQ8AAAEAAHkPEExwb2xrYWRvdF9wcmltaXRpdmVzCHY4MGNvbGxhdG9yX2FwcBhQdWJsaWMAAAQABAE8c3IyNTUxOTo6UHVibGljAAB9DwxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OFhPY2N1cGllZENvcmVBc3N1bXB0aW9uAAEMIEluY2x1ZGVkAAAAIFRpbWVkT3V0AAEAEEZyZWUAAgAAgQ8EGE9wdGlvbgQEVAGFDwEIEE5vbmUAAAAQU29tZQQAhQ8AAAEAAIUPDExwb2xrYWRvdF9wcmltaXRpdmVzCHY4XFBlcnNpc3RlZFZhbGlkYXRpb25EYXRhCARIATQETgEQABABLHBhcmVudF9oZWFk3QQBIEhlYWREYXRhAAFMcmVsYXlfcGFyZW50X251bWJlchABBE4AAWRyZWxheV9wYXJlbnRfc3RvcmFnZV9yb290NAEESAABMG1heF9wb3Zfc2l6ZRABDHUzMgAAiQ8EGE9wdGlvbgQEVAGNDwEIEE5vbmUAAAAQU29tZQQAjQ8AAAEAAI0PAAAECIUPvQQAkQ8EGE9wdGlvbgQEVAGtBAEIEE5vbmUAAAAQU29tZQQArQQAAAEAAJUPAAACmQ8AmQ8MTHBvbGthZG90X3ByaW1pdGl2ZXMgdnN0YWdpbmc4Q2FuZGlkYXRlRXZlbnQEBEgBNAEMPENhbmRpZGF0ZUJhY2tlZBAAbQgBVENhbmRpZGF0ZVJlY2VpcHRWMjxIPgAA3QQBIEhlYWREYXRhAABxCAEkQ29yZUluZGV4AAB1CAEoR3JvdXBJbmRleAAAAERDYW5kaWRhdGVJbmNsdWRlZBAAbQgBVENhbmRpZGF0ZVJlY2VpcHRWMjxIPgAA3QQBIEhlYWREYXRhAABxCAEkQ29yZUluZGV4AAB1CAEoR3JvdXBJbmRleAABAERDYW5kaWRhdGVUaW1lZE91dAwAbQgBVENhbmRpZGF0ZVJlY2VpcHRWMjxIPgAA3QQBIEhlYWREYXRhAABxCAEkQ29yZUluZGV4AAIAAJ0PBCBCVHJlZU1hcAgESwG1AgRWAX0NAAQAoQ8AAAChDwAAAqUPAKUPAAAECLUCfQ0AqQ8EGE9wdGlvbgQEVAHxDAEIEE5vbmUAAAAQU29tZQQA8QwAAAEAAK0PBBhPcHRpb24EBFQBlQ0BCBBOb25lAAAAEFNvbWUEAJUNAAABAACxDwQYT3B0aW9uBARUAb0EAQgQTm9uZQAAABBTb21lBAC9BAAAAQAAtQ8AAAK5DwC5DwAABAwQ8QSlDQC9DwQYT3B0aW9uBARUAV0EAQgQTm9uZQAAABBTb21lBABdBAAAAQAAwQ8AAALFDwDFDwAABAwQ8QTJDwDJDxBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OCBzbGFzaGluZzhQZW5kaW5nU2xhc2hlcwAACAEQa2V5c7UNAZRCVHJlZU1hcDxWYWxpZGF0b3JJbmRleCwgVmFsaWRhdG9ySWQ+AAEQa2luZM0PAUxTbGFzaGluZ09mZmVuY2VLaW5kAADNDxBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OCBzbGFzaGluZ0xTbGFzaGluZ09mZmVuY2VLaW5kAAEIKEZvckludmFsaWQAAAAwQWdhaW5zdFZhbGlkAAEAANEPBBhPcHRpb24EBFQB1Q8BCBBOb25lAAAAEFNvbWUEANUPAAABAADVDxBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OCBzbGFzaGluZ1xPcGFxdWVLZXlPd25lcnNoaXBQcm9vZgAABAA4ARxWZWM8dTg+AADZDxBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2OCBzbGFzaGluZzBEaXNwdXRlUHJvb2YAABABJHRpbWVfc2xvdC0FAUBEaXNwdXRlc1RpbWVTbG90AAEQa2luZM0PAUxTbGFzaGluZ09mZmVuY2VLaW5kAAE8dmFsaWRhdG9yX2luZGV4nQQBOFZhbGlkYXRvckluZGV4AAEwdmFsaWRhdG9yX2lkUQIBLFZhbGlkYXRvcklkAADdDwQYT3B0aW9uBARUAeEPAQgQTm9uZQAAABBTb21lBADhDwAAAQAA4Q8QTHBvbGthZG90X3ByaW1pdGl2ZXMgdnN0YWdpbmc0YXN5bmNfYmFja2luZzBCYWNraW5nU3RhdGUIBEgBNAROARAACAEsY29uc3RyYWludHPlDwGQY3JhdGU6OmFzeW5jX2JhY2tpbmc6OkNvbnN0cmFpbnRzPE4+AAFQcGVuZGluZ19hdmFpbGFiaWxpdHkFEAGcVmVjPENhbmRpZGF0ZVBlbmRpbmdBdmFpbGFiaWxpdHk8SCwgTj4+AADlDxBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODRhc3luY19iYWNraW5nLENvbnN0cmFpbnRzBAROARAAOAFcbWluX3JlbGF5X3BhcmVudF9udW1iZXIQAQROAAEwbWF4X3Bvdl9zaXplEAEMdTMyAAE0bWF4X2NvZGVfc2l6ZRABDHUzMgABNHVtcF9yZW1haW5pbmcQAQx1MzIAAUx1bXBfcmVtYWluaW5nX2J5dGVzEAEMdTMyAAFkbWF4X3VtcF9udW1fcGVyX2NhbmRpZGF0ZRABDHUzMgABWGRtcF9yZW1haW5pbmdfbWVzc2FnZXMZAgEYVmVjPE4+AAEwaHJtcF9pbmJvdW5k6Q8BZEluYm91bmRIcm1wTGltaXRhdGlvbnM8Tj4AAURocm1wX2NoYW5uZWxzX291dO0PAaRWZWM8KElkLCBPdXRib3VuZEhybXBDaGFubmVsTGltaXRhdGlvbnMpPgABaG1heF9ocm1wX251bV9wZXJfY2FuZGlkYXRlEAEMdTMyAAE8cmVxdWlyZWRfcGFyZW503QQBIEhlYWREYXRhAAFQdmFsaWRhdGlvbl9jb2RlX2hhc2i9BAFIVmFsaWRhdGlvbkNvZGVIYXNoAAFMdXBncmFkZV9yZXN0cmljdGlvbvkPAWhPcHRpb248VXBncmFkZVJlc3RyaWN0aW9uPgABWGZ1dHVyZV92YWxpZGF0aW9uX2NvZGX9DwF8T3B0aW9uPChOLCBWYWxpZGF0aW9uQ29kZUhhc2gpPgAA6Q8QTHBvbGthZG90X3ByaW1pdGl2ZXMIdjg0YXN5bmNfYmFja2luZ1hJbmJvdW5kSHJtcExpbWl0YXRpb25zBAROARAABAFAdmFsaWRfd2F0ZXJtYXJrcxkCARhWZWM8Tj4AAO0PAAAC8Q8A8Q8AAAQItQL1DwD1DxBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2ODRhc3luY19iYWNraW5neE91dGJvdW5kSHJtcENoYW5uZWxMaW1pdGF0aW9ucwAACAE8Ynl0ZXNfcmVtYWluaW5nEAEMdTMyAAFIbWVzc2FnZXNfcmVtYWluaW5nEAEMdTMyAAD5DwQYT3B0aW9uBARUAVkNAQgQTm9uZQAAABBTb21lBABZDQAAAQAA/Q8EGE9wdGlvbgQEVAEBEAEIEE5vbmUAAAAQU29tZQQAARAAAAEAAAEQAAAECBC9BAAFEAAAAgkQAAkQEExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nNGFzeW5jX2JhY2tpbmdwQ2FuZGlkYXRlUGVuZGluZ0F2YWlsYWJpbGl0eQgESAE0BE4BEAAUAThjYW5kaWRhdGVfaGFzaPEEATRDYW5kaWRhdGVIYXNoAAEoZGVzY3JpcHRvcrEEAWBDYW5kaWRhdGVEZXNjcmlwdG9yVjI8SD4AASxjb21taXRtZW50c8EEAVBDYW5kaWRhdGVDb21taXRtZW50cwABTHJlbGF5X3BhcmVudF9udW1iZXIQAQROAAEwbWF4X3Bvdl9zaXplEAEMdTMyAAANEAQgQlRyZWVNYXAIBEsBcQgEVgE1DQAEABEQAAAAERAAAAIVEAAVEAAABAhxCDUNABkQAAACrQQAHRAEGE9wdGlvbgQEVAEhEAEIEE5vbmUAAAAQU29tZQQAIRAAAAEAACEQEExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nNGFzeW5jX2JhY2tpbmcsQ29uc3RyYWludHMEBE4BEAA8AVxtaW5fcmVsYXlfcGFyZW50X251bWJlchABBE4AATBtYXhfcG92X3NpemUQAQx1MzIAATRtYXhfY29kZV9zaXplEAEMdTMyAAFIbWF4X2hlYWRfZGF0YV9zaXplEAEMdTMyAAE0dW1wX3JlbWFpbmluZxABDHUzMgABTHVtcF9yZW1haW5pbmdfYnl0ZXMQAQx1MzIAAWRtYXhfdW1wX251bV9wZXJfY2FuZGlkYXRlEAEMdTMyAAFYZG1wX3JlbWFpbmluZ19tZXNzYWdlcxkCARhWZWM8Tj4AATBocm1wX2luYm91bmTpDwFkSW5ib3VuZEhybXBMaW1pdGF0aW9uczxOPgABRGhybXBfY2hhbm5lbHNfb3V07Q8BpFZlYzwoSWQsIE91dGJvdW5kSHJtcENoYW5uZWxMaW1pdGF0aW9ucyk+AAFobWF4X2hybXBfbnVtX3Blcl9jYW5kaWRhdGUQAQx1MzIAATxyZXF1aXJlZF9wYXJlbnTdBAEgSGVhZERhdGEAAVB2YWxpZGF0aW9uX2NvZGVfaGFzaL0EAUhWYWxpZGF0aW9uQ29kZUhhc2gAAUx1cGdyYWRlX3Jlc3RyaWN0aW9u+Q8BaE9wdGlvbjxVcGdyYWRlUmVzdHJpY3Rpb24+AAFYZnV0dXJlX3ZhbGlkYXRpb25fY29kZf0PAXxPcHRpb248KE4sIFZhbGlkYXRpb25Db2RlSGFzaCk+AAAlEAQYT3B0aW9uBARUASkQAQgQTm9uZQAAABBTb21lBAApEAAAAQAAKRAISHNwX2NvbnNlbnN1c19iZWVmeTBWYWxpZGF0b3JTZXQELEF1dGhvcml0eUlkAV0CAAgBKHZhbGlkYXRvcnPtDgFAVmVjPEF1dGhvcml0eUlkPgABCGlkMAE4VmFsaWRhdG9yU2V0SWQAAC0QCChzcF9ydW50aW1lLE9wYXF1ZVZhbHVlAAAEADgBHFZlYzx1OD4AADEQCEhzcF9jb25zZW5zdXNfYmVlZnk8Rm9ya1ZvdGluZ1Byb29mDBhIZWFkZXIB1QEISWQBXQI0QW5jZXN0cnlQcm9vZgEtEAAMARB2b3RlGQcBuFZvdGVNZXNzYWdlPEhlYWRlcjo6TnVtYmVyLCBJZCwgSWQ6OlNpZ25hdHVyZT4AAThhbmNlc3RyeV9wcm9vZi0QATRBbmNlc3RyeVByb29mAAEYaGVhZGVy1QEBGEhlYWRlcgAANRAEGE9wdGlvbgQEVAEtEAEIEE5vbmUAAAAQU29tZQQALRAAAAEAADkQBBhSZXN1bHQIBFQBNARFAT0QAQgIT2sEADQAAAAADEVycgQAPRAAAAEAAD0QCERzcF9tbXJfcHJpbWl0aXZlcxRFcnJvcgABKEBJbnZhbGlkTnVtZXJpY09wAAAAEFB1c2gAAQAcR2V0Um9vdAACABhDb21taXQAAwA0R2VuZXJhdGVQcm9vZgAEABhWZXJpZnkABQAwTGVhZk5vdEZvdW5kAAYARFBhbGxldE5vdEluY2x1ZGVkAAcAQEludmFsaWRMZWFmSW5kZXgACABUSW52YWxpZEJlc3RLbm93bkJsb2NrAAkAAEEQBBhSZXN1bHQIBFQBMARFAT0QAQgIT2sEADAAAAAADEVycgQAPRAAAAEAAEUQBBhSZXN1bHQIBFQBSRAERQE9EAEICE9rBABJEAAAAAAMRXJyBAA9EAAAAQAASRAAAAQITRBVEABNEAAAAlEQAFEQCERzcF9tbXJfcHJpbWl0aXZlc0xFbmNvZGFibGVPcGFxdWVMZWFmAAAEADgBHFZlYzx1OD4AAFUQCERzcF9tbXJfcHJpbWl0aXZlcyRMZWFmUHJvb2YEEEhhc2gBNAAMATBsZWFmX2luZGljZXMNDAE4VmVjPExlYWZJbmRleD4AAShsZWFmX2NvdW50MAEkTm9kZUluZGV4AAEUaXRlbXPJAQEkVmVjPEhhc2g+AABZEAQYUmVzdWx0CARUAZAERQE9EAEICE9rBACQAAAAAAxFcnIEAD0QAAABAABdEAhEc3BfY29uc2Vuc3VzX2JhYmVEQmFiZUNvbmZpZ3VyYXRpb24AABgBNHNsb3RfZHVyYXRpb24wAQx1NjQAATBlcG9jaF9sZW5ndGgwAQx1NjQAAQRj6QEBKCh1NjQsIHU2NCkAASxhdXRob3JpdGllc50JAZxWZWM8KEF1dGhvcml0eUlkLCBCYWJlQXV0aG9yaXR5V2VpZ2h0KT4AAShyYW5kb21uZXNzBAEoUmFuZG9tbmVzcwABNGFsbG93ZWRfc2xvdHPtAQEwQWxsb3dlZFNsb3RzAABhEAhEc3BfY29uc2Vuc3VzX2JhYmUURXBvY2gAABgBLGVwb2NoX2luZGV4MAEMdTY0AAEoc3RhcnRfc2xvdN0BARBTbG90AAEgZHVyYXRpb24wAQx1NjQAASxhdXRob3JpdGllc50JAZxWZWM8KEF1dGhvcml0eUlkLCBCYWJlQXV0aG9yaXR5V2VpZ2h0KT4AAShyYW5kb21uZXNzBAEoUmFuZG9tbmVzcwABGGNvbmZpZ8EJAVhCYWJlRXBvY2hDb25maWd1cmF0aW9uAABlEAQYT3B0aW9uBARUAWkQAQgQTm9uZQAAABBTb21lBABpEAAAAQAAaRAIRHNwX2NvbnNlbnN1c19iYWJlXE9wYXF1ZUtleU93bmVyc2hpcFByb29mAAAEADgBHFZlYzx1OD4AAG0QBBhPcHRpb24EBFQBcRABCBBOb25lAAAAEFNvbWUEAHEQAAABAABxEAAAAnUQAHUQAAAECDitCgB5EAxocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnQUdHlwZXNMUnVudGltZURpc3BhdGNoSW5mbwgcQmFsYW5jZQEYGFdlaWdodAEoAAwBGHdlaWdodCgBGFdlaWdodAABFGNsYXNzYAE0RGlzcGF0Y2hDbGFzcwABLHBhcnRpYWxfZmVlGAEcQmFsYW5jZQAAfRAMaHBhbGxldF90cmFuc2FjdGlvbl9wYXltZW50FHR5cGVzKEZlZURldGFpbHMEHEJhbGFuY2UBGAAIATRpbmNsdXNpb25fZmVlgRABdE9wdGlvbjxJbmNsdXNpb25GZWU8QmFsYW5jZT4+AAEMdGlwGAEcQmFsYW5jZQAAgRAEGE9wdGlvbgQEVAGFEAEIEE5vbmUAAAAQU29tZQQAhRAAAAEAAIUQDGhwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudBR0eXBlczBJbmNsdXNpb25GZWUEHEJhbGFuY2UBGAAMASBiYXNlX2ZlZRgBHEJhbGFuY2UAARxsZW5fZmVlGAEcQmFsYW5jZQABTGFkanVzdGVkX3dlaWdodF9mZWUYARxCYWxhbmNlAACJEAQYUmVzdWx0CARUAY0QBEUBkRABCAhPawQAjRAAAAAADEVycgQAkRAAAAEAAI0QAAAC8QYAkRAMQHhjbV9ydW50aW1lX2FwaXMQZmVlcxRFcnJvcgABGDRVbmltcGxlbWVudGVkAAAAZFZlcnNpb25lZENvbnZlcnNpb25GYWlsZWQAAQBMV2VpZ2h0Tm90Q29tcHV0YWJsZQACAExVbmhhbmRsZWRYY21WZXJzaW9uAAMANEFzc2V0Tm90Rm91bmQABAAoVW5yb3V0YWJsZQAFAACVEAQYUmVzdWx0CARUASgERQGREAEICE9rBAAoAAAAAAxFcnIEAJEQAAABAACZEAQYUmVzdWx0CARUARgERQGREAEICE9rBAAYAAAAAAxFcnIEAJEQAAABAACdEAQYUmVzdWx0CARUAb0GBEUBkRABCAhPawQAvQYAAAAADEVycgQAkRAAAAEAAKEQBBhSZXN1bHQIBFQBpRAERQG9EAEICE9rBAClEAAAAAAMRXJyBAC9EAAAAQAApRAMQHhjbV9ydW50aW1lX2FwaXMcZHJ5X3J1bkRDYWxsRHJ5UnVuRWZmZWN0cwQURXZlbnQBVAAQAUBleGVjdXRpb25fcmVzdWx0EQgBaERpc3BhdGNoUmVzdWx0V2l0aFBvc3RJbmZvAAE4ZW1pdHRlZF9ldmVudHOpEAEoVmVjPEV2ZW50PgABJGxvY2FsX3hjba0QAWBPcHRpb248VmVyc2lvbmVkWGNtPCgpPj4AAThmb3J3YXJkZWRfeGNtc7EQAbxWZWM8KFZlcnNpb25lZExvY2F0aW9uLCBWZWM8VmVyc2lvbmVkWGNtPCgpPj4pPgAAqRAAAAJUAK0QBBhPcHRpb24EBFQBjQUBCBBOb25lAAAAEFNvbWUEAI0FAAABAACxEAAAArUQALUQAAAECI0BuRAAuRAAAAKNBQC9EAxAeGNtX3J1bnRpbWVfYXBpcxxkcnlfcnVuFEVycm9yAAEINFVuaW1wbGVtZW50ZWQAAABkVmVyc2lvbmVkQ29udmVyc2lvbkZhaWxlZAABAADBEAQYUmVzdWx0CARUAcUQBEUBvRABCAhPawQAxRAAAAAADEVycgQAvRAAAAEAAMUQDEB4Y21fcnVudGltZV9hcGlzHGRyeV9ydW5AWGNtRHJ5UnVuRWZmZWN0cwQURXZlbnQBVAAMAUBleGVjdXRpb25fcmVzdWx0tQgBHE91dGNvbWUAAThlbWl0dGVkX2V2ZW50c6kQAShWZWM8RXZlbnQ+AAE4Zm9yd2FyZGVkX3hjbXOxEAG8VmVjPChWZXJzaW9uZWRMb2NhdGlvbiwgVmVjPFZlcnNpb25lZFhjbTwoKT4+KT4AAMkQBBhSZXN1bHQIBFQBAARFAc0QAQgIT2sEAAAAAAAADEVycgQAzRAAAAEAAM0QDEB4Y21fcnVudGltZV9hcGlzLGNvbnZlcnNpb25zFEVycm9yAAEILFVuc3VwcG9ydGVkAAAAZFZlcnNpb25lZENvbnZlcnNpb25GYWlsZWQAAQAA0RAEGFJlc3VsdAgEVAGQBEUB6QgBCAhPawQAkAAAAAAMRXJyBADpCAAAAQAA1RAEGE9wdGlvbgQEVAHpCAEIEE5vbmUAAAAQU29tZQQA6QgAAAEAANkQAAAC6QgA3RAINHBhc2VvX3J1bnRpbWUwUnVudGltZUVycm9yAAHAGFN5c3RlbQQAGQkBcGZyYW1lX3N5c3RlbTo6RXJyb3I8UnVudGltZT4AAAAkU2NoZWR1bGVyBABxCQGAcGFsbGV0X3NjaGVkdWxlcjo6RXJyb3I8UnVudGltZT4AAQAgUHJlaW1hZ2UEAJEJAXxwYWxsZXRfcHJlaW1hZ2U6OkVycm9yPFJ1bnRpbWU+AAoAEEJhYmUEANEJAWxwYWxsZXRfYmFiZTo6RXJyb3I8UnVudGltZT4AAgAcSW5kaWNlcwQA2QkBeHBhbGxldF9pbmRpY2VzOjpFcnJvcjxSdW50aW1lPgAEACBCYWxhbmNlcwQANQoBfHBhbGxldF9iYWxhbmNlczo6RXJyb3I8UnVudGltZT4ABQAcU3Rha2luZwQAhQoBeHBhbGxldF9zdGFraW5nOjpFcnJvcjxSdW50aW1lPgAHABxTZXNzaW9uBACxCgF4cGFsbGV0X3Nlc3Npb246OkVycm9yPFJ1bnRpbWU+AAkAHEdyYW5kcGEEAMEKAXhwYWxsZXRfZ3JhbmRwYTo6RXJyb3I8UnVudGltZT4ACwAgVHJlYXN1cnkEAOUKAXxwYWxsZXRfdHJlYXN1cnk6OkVycm9yPFJ1bnRpbWU+ABMAQENvbnZpY3Rpb25Wb3RpbmcEABULAaBwYWxsZXRfY29udmljdGlvbl92b3Rpbmc6OkVycm9yPFJ1bnRpbWU+ABQAJFJlZmVyZW5kYQQAXQsBgHBhbGxldF9yZWZlcmVuZGE6OkVycm9yPFJ1bnRpbWU+ABUAJFdoaXRlbGlzdAQAYQsBgHBhbGxldF93aGl0ZWxpc3Q6OkVycm9yPFJ1bnRpbWU+ABcAGENsYWltcwQAZQsBWGNsYWltczo6RXJyb3I8UnVudGltZT4AGAAcVmVzdGluZwQAdQsBeHBhbGxldF92ZXN0aW5nOjpFcnJvcjxSdW50aW1lPgAZABxVdGlsaXR5BAB5CwF4cGFsbGV0X3V0aWxpdHk6OkVycm9yPFJ1bnRpbWU+ABoAFFByb3h5BACdCwFwcGFsbGV0X3Byb3h5OjpFcnJvcjxSdW50aW1lPgAdACBNdWx0aXNpZwQAqQsBfHBhbGxldF9tdWx0aXNpZzo6RXJyb3I8UnVudGltZT4AHgAgQm91bnRpZXMEALkLAXxwYWxsZXRfYm91bnRpZXM6OkVycm9yPFJ1bnRpbWU+ACIANENoaWxkQm91bnRpZXMEAMULAZRwYWxsZXRfY2hpbGRfYm91bnRpZXM6OkVycm9yPFJ1bnRpbWU+ACYAaEVsZWN0aW9uUHJvdmlkZXJNdWx0aVBoYXNlBAABDAHQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlOjpFcnJvcjxSdW50aW1lPgAkACRWb3Rlckxpc3QEABEMAfRwYWxsZXRfYmFnc19saXN0OjpFcnJvcjxSdW50aW1lLCBwYWxsZXRfYmFnc19saXN0OjpJbnN0YW5jZTE+ACUAPE5vbWluYXRpb25Qb29scwQAWQwBnHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzOjpFcnJvcjxSdW50aW1lPgAnACxGYXN0VW5zdGFrZQQAbQwBjHBhbGxldF9mYXN0X3Vuc3Rha2U6OkVycm9yPFJ1bnRpbWU+ACgAQERlbGVnYXRlZFN0YWtpbmcEAHkMAaBwYWxsZXRfZGVsZWdhdGVkX3N0YWtpbmc6OkVycm9yPFJ1bnRpbWU+ACkAPFN0YWtpbmdBaENsaWVudAQAnQwBuHBhbGxldF9zdGFraW5nX2FzeW5jX2FoX2NsaWVudDo6RXJyb3I8UnVudGltZT4AKgA0Q29uZmlndXJhdGlvbgQArQwBoHBhcmFjaGFpbnNfY29uZmlndXJhdGlvbjo6RXJyb3I8UnVudGltZT4AMwA0UGFyYUluY2x1c2lvbgQA7QwBkHBhcmFjaGFpbnNfaW5jbHVzaW9uOjpFcnJvcjxSdW50aW1lPgA1ADBQYXJhSW5oZXJlbnQEAAUNAaRwYXJhY2hhaW5zX3BhcmFzX2luaGVyZW50OjpFcnJvcjxSdW50aW1lPgA2ABRQYXJhcwQAXQ0BgHBhcmFjaGFpbnNfcGFyYXM6OkVycm9yPFJ1bnRpbWU+ADgAEEhybXAEAI0NAXxwYXJhY2hhaW5zX2hybXA6OkVycm9yPFJ1bnRpbWU+ADwANFBhcmFzRGlzcHV0ZXMEAK0NAYxwYXJhY2hhaW5zX2Rpc3B1dGVzOjpFcnJvcjxSdW50aW1lPgA+ADRQYXJhc1NsYXNoaW5nBADBDQGMcGFyYWNoYWluc19zbGFzaGluZzo6RXJyb3I8UnVudGltZT4APwAgT25EZW1hbmQEAPENAZBwYXJhY2hhaW5zX29uX2RlbWFuZDo6RXJyb3I8UnVudGltZT4AQABoQ29yZXRpbWVBc3NpZ25tZW50UHJvdmlkZXIEAB0OAbBwYXJhY2hhaW5zX2Fzc2lnbmVyX2NvcmV0aW1lOjpFcnJvcjxSdW50aW1lPgBBACRSZWdpc3RyYXIEACkOAXxwYXJhc19yZWdpc3RyYXI6OkVycm9yPFJ1bnRpbWU+AEYAFFNsb3RzBAAxDgFUc2xvdHM6OkVycm9yPFJ1bnRpbWU+AEcAIEF1Y3Rpb25zBABFDgFgYXVjdGlvbnM6OkVycm9yPFJ1bnRpbWU+AEgAJENyb3dkbG9hbgQAUQ4BZGNyb3dkbG9hbjo6RXJyb3I8UnVudGltZT4ASQAgQ29yZXRpbWUEAFUOAWBjb3JldGltZTo6RXJyb3I8UnVudGltZT4ASgBIU3RhdGVUcmllTWlncmF0aW9uBACtCAGscGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uOjpFcnJvcjxSdW50aW1lPgBiACRYY21QYWxsZXQEAMEOAWhwYWxsZXRfeGNtOjpFcnJvcjxSdW50aW1lPgBjADBNZXNzYWdlUXVldWUEAOEOAZBwYWxsZXRfbWVzc2FnZV9xdWV1ZTo6RXJyb3I8UnVudGltZT4AZAAkQXNzZXRSYXRlBADlDgGEcGFsbGV0X2Fzc2V0X3JhdGU6OkVycm9yPFJ1bnRpbWU+AGUAFEJlZWZ5BADxDgFwcGFsbGV0X2JlZWZ5OjpFcnJvcjxSdW50aW1lPgDIADxQYXJhU3Vkb1dyYXBwZXIEAPkOAYhwYXJhc19zdWRvX3dyYXBwZXI6OkVycm9yPFJ1bnRpbWU+APkAEFN1ZG8EAP0OAWxwYWxsZXRfc3Vkbzo6RXJyb3I8UnVudGltZT4A+wAoUmNNaWdyYXRvcgQACQ8BiHBhbGxldF9yY19taWdyYXRvcjo6RXJyb3I8UnVudGltZT4A/wAA/BhTeXN0ZW0BGFN5c3RlbUwcQWNjb3VudAEBBAIADEEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAE6CBUaGUgZnVsbCBhY2NvdW50IGluZm9ybWF0aW9uIGZvciBhIHBhcnRpY3VsYXIgYWNjb3VudCBJRC4AOEV4dHJpbnNpY0NvdW50AAAQBAAEuCBUb3RhbCBleHRyaW5zaWNzIGNvdW50IGZvciB0aGUgY3VycmVudCBibG9jay4AQEluaGVyZW50c0FwcGxpZWQBACAEAASkIFdoZXRoZXIgYWxsIGluaGVyZW50cyBoYXZlIGJlZW4gYXBwbGllZC4ALEJsb2NrV2VpZ2h0AQAkGAAAAAAAAASIIFRoZSBjdXJyZW50IHdlaWdodCBmb3IgdGhlIGJsb2NrLgBAQWxsRXh0cmluc2ljc0xlbgAAEAQABEEBIFRvdGFsIGxlbmd0aCAoaW4gYnl0ZXMpIGZvciBhbGwgZXh0cmluc2ljcyBwdXQgdG9nZXRoZXIsIGZvciB0aGUgY3VycmVudCBibG9jay4AJEJsb2NrSGFzaAEBBAUQNIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASYIE1hcCBvZiBibG9jayBudW1iZXJzIHRvIGJsb2NrIGhhc2hlcy4ANEV4dHJpbnNpY0RhdGEBAQQFEDgEAAQ9ASBFeHRyaW5zaWNzIGRhdGEgZm9yIHRoZSBjdXJyZW50IGJsb2NrIChtYXBzIGFuIGV4dHJpbnNpYydzIGluZGV4IHRvIGl0cyBkYXRhKS4AGE51bWJlcgEAEBAAAAAABAkBIFRoZSBjdXJyZW50IGJsb2NrIG51bWJlciBiZWluZyBwcm9jZXNzZWQuIFNldCBieSBgZXhlY3V0ZV9ibG9ja2AuAChQYXJlbnRIYXNoAQA0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAgSGFzaCBvZiB0aGUgcHJldmlvdXMgYmxvY2suABhEaWdlc3QBADwEAATwIERpZ2VzdCBvZiB0aGUgY3VycmVudCBibG9jaywgYWxzbyBwYXJ0IG9mIHRoZSBibG9jayBoZWFkZXIuABhFdmVudHMBAEwEABygIEV2ZW50cyBkZXBvc2l0ZWQgZm9yIHRoZSBjdXJyZW50IGJsb2NrLgAdASBOT1RFOiBUaGUgaXRlbSBpcyB1bmJvdW5kIGFuZCBzaG91bGQgdGhlcmVmb3JlIG5ldmVyIGJlIHJlYWQgb24gY2hhaW4u0CBJdCBjb3VsZCBvdGhlcndpc2UgaW5mbGF0ZSB0aGUgUG9WIHNpemUgb2YgYSBibG9jay4ALQEgRXZlbnRzIGhhdmUgYSBsYXJnZSBpbi1tZW1vcnkgc2l6ZS4gQm94IHRoZSBldmVudHMgdG8gbm90IGdvIG91dC1vZi1tZW1vcnn8IGp1c3QgaW4gY2FzZSBzb21lb25lIHN0aWxsIHJlYWRzIHRoZW0gZnJvbSB3aXRoaW4gdGhlIHJ1bnRpbWUuAChFdmVudENvdW50AQAQEAAAAAAEuCBUaGUgbnVtYmVyIG9mIGV2ZW50cyBpbiB0aGUgYEV2ZW50czxUPmAgbGlzdC4ALEV2ZW50VG9waWNzAQEEAjTdCAQAKCUBIE1hcHBpbmcgYmV0d2VlbiBhIHRvcGljIChyZXByZXNlbnRlZCBieSBUOjpIYXNoKSBhbmQgYSB2ZWN0b3Igb2YgaW5kZXhlc5Qgb2YgZXZlbnRzIGluIHRoZSBgPEV2ZW50czxUPj5gIGxpc3QuAFEBIEFsbCB0b3BpYyB2ZWN0b3JzIGhhdmUgZGV0ZXJtaW5pc3RpYyBzdG9yYWdlIGxvY2F0aW9ucyBkZXBlbmRpbmcgb24gdGhlIHRvcGljLiBUaGlzRQEgYWxsb3dzIGxpZ2h0LWNsaWVudHMgdG8gbGV2ZXJhZ2UgdGhlIGNoYW5nZXMgdHJpZSBzdG9yYWdlIHRyYWNraW5nIG1lY2hhbmlzbSBhbmTkIGluIGNhc2Ugb2YgY2hhbmdlcyBmZXRjaCB0aGUgbGlzdCBvZiBldmVudHMgb2YgaW50ZXJlc3QuAFkBIFRoZSB2YWx1ZSBoYXMgdGhlIHR5cGUgYChCbG9ja051bWJlckZvcjxUPiwgRXZlbnRJbmRleClgIGJlY2F1c2UgaWYgd2UgdXNlZCBvbmx5IGp1c3RNASB0aGUgYEV2ZW50SW5kZXhgIHRoZW4gaW4gY2FzZSBpZiB0aGUgdG9waWMgaGFzIHRoZSBzYW1lIGNvbnRlbnRzIG9uIHRoZSBuZXh0IGJsb2NrAQEgbm8gbm90aWZpY2F0aW9uIHdpbGwgYmUgdHJpZ2dlcmVkIHRodXMgdGhlIGV2ZW50IG1pZ2h0IGJlIGxvc3QuAEhMYXN0UnVudGltZVVwZ3JhZGUAAOEIBAAEVQEgU3RvcmVzIHRoZSBgc3BlY192ZXJzaW9uYCBhbmQgYHNwZWNfbmFtZWAgb2Ygd2hlbiB0aGUgbGFzdCBydW50aW1lIHVwZ3JhZGUgaGFwcGVuZWQuAFRVcGdyYWRlZFRvVTMyUmVmQ291bnQBACAEAARNASBUcnVlIGlmIHdlIGhhdmUgdXBncmFkZWQgc28gdGhhdCBgdHlwZSBSZWZDb3VudGAgaXMgYHUzMmAuIEZhbHNlIChkZWZhdWx0KSBpZiBub3QuAGBVcGdyYWRlZFRvVHJpcGxlUmVmQ291bnQBACAEAAhdASBUcnVlIGlmIHdlIGhhdmUgdXBncmFkZWQgc28gdGhhdCBBY2NvdW50SW5mbyBjb250YWlucyB0aHJlZSB0eXBlcyBvZiBgUmVmQ291bnRgLiBGYWxzZUggKGRlZmF1bHQpIGlmIG5vdC4AOEV4ZWN1dGlvblBoYXNlAADZCAQABIggVGhlIGV4ZWN1dGlvbiBwaGFzZSBvZiB0aGUgYmxvY2suAERBdXRob3JpemVkVXBncmFkZQAA7QgEAAS4IGBTb21lYCBpZiBhIGNvZGUgdXBncmFkZSBoYXMgYmVlbiBhdXRob3JpemVkLgBgRXh0cmluc2ljV2VpZ2h0UmVjbGFpbWVkAQAoCAAAHKAgVGhlIHdlaWdodCByZWNsYWltZWQgZm9yIHRoZSBleHRyaW5zaWMuACEBIFRoaXMgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlIHVudGlsIHRoZSBlbmQgb2YgdGhlIGV4dHJpbnNpYyBleGVjdXRpb24uIQEgTW9yZSBwcmVjaXNlbHkgdGhpcyBpbmZvcm1hdGlvbiBpcyByZW1vdmVkIGluIGBub3RlX2FwcGxpZWRfZXh0cmluc2ljYC4AcQEgTG9naWMgZG9pbmcgc29tZSBwb3N0IGRpc3BhdGNoIHdlaWdodCByZWR1Y3Rpb24gbXVzdCB1cGRhdGUgdGhpcyBzdG9yYWdlIHRvIGF2b2lkIGR1cGxpY2F0ZSwgcmVkdWN0aW9uLgABrQEAAVgAGDBCbG9ja1dlaWdodHPxCAECB7C96TYDAAsAIEqp0QET//////////8iLQ0eAAELuIRcj1gBE6NwPQrXo3C9AQsAmPc+XQET/////////78BAAAiLQ0eAAELuAyv+cwBE6NwPQrXo3D9AQsAIEqp0QET//////////8BBwCIUmp0EwAAAAAAAABAIi0NHgAAAAAE0CBCbG9jayAmIGV4dHJpbnNpY3Mgd2VpZ2h0czogYmFzZSB2YWx1ZXMgYW5kIGxpbWl0cy4ALEJsb2NrTGVuZ3Ro/QgwAAA8AAAAUAAAAFAABKggVGhlIG1heGltdW0gbGVuZ3RoIG9mIGEgYmxvY2sgKGluIGJ5dGVzKS4AOEJsb2NrSGFzaENvdW50EBAAEAAABFUBIE1heGltdW0gbnVtYmVyIG9mIGJsb2NrIG51bWJlciB0byBibG9jayBoYXNoIG1hcHBpbmdzIHRvIGtlZXAgKG9sZGVzdCBwcnVuZWQgZmlyc3QpLgAgRGJXZWlnaHQFCUA4yjgBAAAAAJiq+QQAAAAABAkBIFRoZSB3ZWlnaHQgb2YgcnVudGltZSBkYXRhYmFzZSBvcGVyYXRpb25zIHRoZSBydW50aW1lIGNhbiBpbnZva2UuABxWZXJzaW9uCQnpBBRwYXNlbzRwYXNlby10ZXN0bmV0AAAAAGllDwAAAAAAXMUf8fo/XQzKAQAAAN9qy2iZB2CbBQAAADfjl/x8kfXkAgAAAED+OtQB+JWaBgAAABemvA0AYq6zAQAAABjvWKO2e6dwAQAAANK8mJfu0I8VAwAAAPeLJ4vlP0VMAgAAAK8sApeiPm09DQAAAEnqrxtUigywBQAAAJHV3xiw0s9YAgAAACpekkZVOZ5gAQAAAO2ZxayyXu31AwAAAMvKJeOfFCOHAgAAAGh61ErTfwPCAQAAAKs8BXIpH+uLAQAAALydiZBPW5I/AQAAADfIuxNQqaKoBAAAAPP/FNWrUnBZAwAAAG/1LuhY5sW9AQAAAJGxyLFjKOuSAgAAAJ/7UFqnONacAQAAAPvFd7nXR+/WAQAAABoAAAABBIQgR2V0IHRoZSBjaGFpbidzIGluLWNvZGUgdmVyc2lvbi4AKFNTNThQcmVmaXidAQgAABSoIFRoZSBkZXNpZ25hdGVkIFNTNTggcHJlZml4IG9mIHRoaXMgY2hhaW4uADkBIFRoaXMgcmVwbGFjZXMgdGhlICJzczU4Rm9ybWF0IiBwcm9wZXJ0eSBkZWNsYXJlZCBpbiB0aGUgY2hhaW4gc3BlYy4gUmVhc29uIGlzMQEgdGhhdCB0aGUgcnVudGltZSBzaG91bGQga25vdyBhYm91dCB0aGUgcHJlZml4IGluIG9yZGVyIHRvIG1ha2UgdXNlIG9mIGl0IGFzcCBhbiBpZGVudGlmaWVyIG9mIHRoZSBjaGFpbi4AARkJABwsUnVudGltZUNhbGypAQSMIFRoZSBhZ2dyZWdhdGVkIGBSdW50aW1lQ2FsbGAgdHlwZS4UTm9uY2UQBEkBIFRoaXMgc3RvcmVzIHRoZSBudW1iZXIgb2YgcHJldmlvdXMgdHJhbnNhY3Rpb25zIGFzc29jaWF0ZWQgd2l0aCBhIHNlbmRlciBhY2NvdW50LhBIYXNoNASYIFRoZSBvdXRwdXQgb2YgdGhlIGBIYXNoaW5nYCBmdW5jdGlvbi4cSGFzaGluZwEIBCEBIFRoZSBoYXNoaW5nIHN5c3RlbSAoYWxnb3JpdGhtKSBiZWluZyB1c2VkIGluIHRoZSBydW50aW1lIChlLmcuIEJsYWtlMikuJEFjY291bnRJZAAEyCBUaGUgdXNlciBhY2NvdW50IGlkZW50aWZpZXIgdHlwZSBmb3IgdGhlIHJ1bnRpbWUuFEJsb2NrHQkIYQEgVGhlIEJsb2NrIHR5cGUgdXNlZCBieSB0aGUgcnVudGltZS4gVGhpcyBpcyB1c2VkIGJ5IGBjb25zdHJ1Y3RfcnVudGltZWAgdG8gcmV0cmlldmUgdGhlzCBleHRyaW5zaWNzIG9yIG90aGVyIGJsb2NrIHNwZWNpZmljIGRhdGEgYXMgbmVlZGVkLixBY2NvdW50RGF0YRQIYQEgRGF0YSB0byBiZSBhc3NvY2lhdGVkIHdpdGggYW4gYWNjb3VudCAob3RoZXIgdGhhbiBub25jZS90cmFuc2FjdGlvbiBjb3VudGVyLCB3aGljaCB0aGlzZCBwYWxsZXQgZG9lcyByZWdhcmRsZXNzKS4AAAAAJFNjaGVkdWxlcgEkU2NoZWR1bGVyEDxJbmNvbXBsZXRlU2luY2UAABAEAAT0IEJsb2NrIG51bWJlciBhdCB3aGljaCB0aGUgYWdlbmRhIGJlZ2FuIGluY29tcGxldGUgZXhlY3V0aW9uLgAYQWdlbmRhAQEEBRBdCQQABE0BIEl0ZW1zIHRvIGJlIGV4ZWN1dGVkLCBpbmRleGVkIGJ5IHRoZSBibG9jayBudW1iZXIgdGhhdCB0aGV5IHNob3VsZCBiZSBleGVjdXRlZCBvbi4AHFJldHJpZXMAAQQChG0JBAAEIQEgUmV0cnkgY29uZmlndXJhdGlvbnMgZm9yIGl0ZW1zIHRvIGJlIGV4ZWN1dGVkLCBpbmRleGVkIGJ5IHRhc2sgYWRkcmVzcy4AGExvb2t1cAABBAUEhAQAEPggTG9va3VwIGZyb20gYSBuYW1lIHRvIHRoZSBibG9jayBudW1iZXIgYW5kIGluZGV4IG9mIHRoZSB0YXNrLgBZASBGb3IgdjMgLT4gdjQgdGhlIHByZXZpb3VzbHkgdW5ib3VuZGVkIGlkZW50aXRpZXMgYXJlIEJsYWtlMi0yNTYgaGFzaGVkIHRvIGZvcm0gdGhlIHY0MCBpZGVudGl0aWVzLgABvQEAAYAACDRNYXhpbXVtV2VpZ2h0KEALAIBuh3QBE8zMzMzMzMzMBCkBIFRoZSBtYXhpbXVtIHdlaWdodCB0aGF0IG1heSBiZSBzY2hlZHVsZWQgcGVyIGJsb2NrIGZvciBhbnkgZGlzcGF0Y2hhYmxlcy4AUE1heFNjaGVkdWxlZFBlckJsb2NrEBAyAAAAFB0BIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzY2hlZHVsZWQgY2FsbHMgaW4gdGhlIHF1ZXVlIGZvciBhIHNpbmdsZSBibG9jay4AGCBOT1RFOlEBICsgRGVwZW5kZW50IHBhbGxldHMnIGJlbmNobWFya3MgbWlnaHQgcmVxdWlyZSBhIGhpZ2hlciBsaW1pdCBmb3IgdGhlIHNldHRpbmcuIFNldCBhxCBoaWdoZXIgbGltaXQgdW5kZXIgYHJ1bnRpbWUtYmVuY2htYXJrc2AgZmVhdHVyZS4AAXEJAAQsUnVudGltZUNhbGypAQRoIFRoZSBhZ2dyZWdhdGVkIGNhbGwgdHlwZS4AAQAAIFByZWltYWdlASBQcmVpbWFnZQwkU3RhdHVzRm9yAAEEBjR1CQQABJAgVGhlIHJlcXVlc3Qgc3RhdHVzIG9mIGEgZ2l2ZW4gaGFzaC4CQFJlcXVlc3RTdGF0dXNGb3IAQFJlcXVlc3RTdGF0dXNGb3IAAQQGNH0JBAAEkCBUaGUgcmVxdWVzdCBzdGF0dXMgb2YgYSBnaXZlbiBoYXNoLgAsUHJlaW1hZ2VGb3IAAQQGdQeNCQQAAAABxQEAAZQAAAGRCQAAAAoAABBCYWJlARBCYWJlRChFcG9jaEluZGV4AQAwIAAAAAAAAAAABFQgQ3VycmVudCBlcG9jaCBpbmRleC4ALEF1dGhvcml0aWVzAQCVCQQABGwgQ3VycmVudCBlcG9jaCBhdXRob3JpdGllcy4ALEdlbmVzaXNTbG90AQDdASAAAAAAAAAAAAj4IFRoZSBzbG90IGF0IHdoaWNoIHRoZSBmaXJzdCBlcG9jaCBhY3R1YWxseSBzdGFydGVkLiBUaGlzIGlzIDCQIHVudGlsIHRoZSBmaXJzdCBibG9jayBvZiB0aGUgY2hhaW4uACxDdXJyZW50U2xvdAEA3QEgAAAAAAAAAAAEVCBDdXJyZW50IHNsb3QgbnVtYmVyLgAoUmFuZG9tbmVzcwEABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACi4IFRoZSBlcG9jaCByYW5kb21uZXNzIGZvciB0aGUgKmN1cnJlbnQqIGVwb2NoLgAsICMgU2VjdXJpdHkABQEgVGhpcyBNVVNUIE5PVCBiZSB1c2VkIGZvciBnYW1ibGluZywgYXMgaXQgY2FuIGJlIGluZmx1ZW5jZWQgYnkgYfggbWFsaWNpb3VzIHZhbGlkYXRvciBpbiB0aGUgc2hvcnQgdGVybS4gSXQgTUFZIGJlIHVzZWQgaW4gbWFueRUBIGNyeXB0b2dyYXBoaWMgcHJvdG9jb2xzLCBob3dldmVyLCBzbyBsb25nIGFzIG9uZSByZW1lbWJlcnMgdGhhdCB0aGlzFQEgKGxpa2UgZXZlcnl0aGluZyBlbHNlIG9uLWNoYWluKSBpdCBpcyBwdWJsaWMuIEZvciBleGFtcGxlLCBpdCBjYW4gYmUFASB1c2VkIHdoZXJlIGEgbnVtYmVyIGlzIG5lZWRlZCB0aGF0IGNhbm5vdCBoYXZlIGJlZW4gY2hvc2VuIGJ5IGFuDQEgYWR2ZXJzYXJ5LCBmb3IgcHVycG9zZXMgc3VjaCBhcyBwdWJsaWMtY29pbiB6ZXJvLWtub3dsZWRnZSBwcm9vZnMuAGBQZW5kaW5nRXBvY2hDb25maWdDaGFuZ2UAAOUBBAAEYQEgUGVuZGluZyBlcG9jaCBjb25maWd1cmF0aW9uIGNoYW5nZSB0aGF0IHdpbGwgYmUgYXBwbGllZCB3aGVuIHRoZSBuZXh0IGVwb2NoIGlzIGVuYWN0ZWQuADhOZXh0UmFuZG9tbmVzcwEABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARcIE5leHQgZXBvY2ggcmFuZG9tbmVzcy4APE5leHRBdXRob3JpdGllcwEAlQkEAARgIE5leHQgZXBvY2ggYXV0aG9yaXRpZXMuADBTZWdtZW50SW5kZXgBABAQAAAAACR8IFJhbmRvbW5lc3MgdW5kZXIgY29uc3RydWN0aW9uLgD4IFdlIG1ha2UgYSB0cmFkZS1vZmYgYmV0d2VlbiBzdG9yYWdlIGFjY2Vzc2VzIGFuZCBsaXN0IGxlbmd0aC4BASBXZSBzdG9yZSB0aGUgdW5kZXItY29uc3RydWN0aW9uIHJhbmRvbW5lc3MgaW4gc2VnbWVudHMgb2YgdXAgdG+UIGBVTkRFUl9DT05TVFJVQ1RJT05fU0VHTUVOVF9MRU5HVEhgLgDsIE9uY2UgYSBzZWdtZW50IHJlYWNoZXMgdGhpcyBsZW5ndGgsIHdlIGJlZ2luIHRoZSBuZXh0IG9uZS4JASBXZSByZXNldCBhbGwgc2VnbWVudHMgYW5kIHJldHVybiB0byBgMGAgYXQgdGhlIGJlZ2lubmluZyBvZiBldmVyeRwgZXBvY2guAERVbmRlckNvbnN0cnVjdGlvbgEBBAUQoQkEAAQVASBUV09YLU5PVEU6IGBTZWdtZW50SW5kZXhgIGlzIGFuIGluY3JlYXNpbmcgaW50ZWdlciwgc28gdGhpcyBpcyBva2F5LgAsSW5pdGlhbGl6ZWQAAKkJBAAIAQEgVGVtcG9yYXJ5IHZhbHVlIChjbGVhcmVkIGF0IGJsb2NrIGZpbmFsaXphdGlvbikgd2hpY2ggaXMgYFNvbWVgHQEgaWYgcGVyLWJsb2NrIGluaXRpYWxpemF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gY2FsbGVkIGZvciBjdXJyZW50IGJsb2NrLgBMQXV0aG9yVnJmUmFuZG9tbmVzcwEAiAQAEBUBIFRoaXMgZmllbGQgc2hvdWxkIGFsd2F5cyBiZSBwb3B1bGF0ZWQgZHVyaW5nIGJsb2NrIHByb2Nlc3NpbmcgdW5sZXNzGQEgc2Vjb25kYXJ5IHBsYWluIHNsb3RzIGFyZSBlbmFibGVkICh3aGljaCBkb24ndCBjb250YWluIGEgVlJGIG91dHB1dCkuAEkBIEl0IGlzIHNldCBpbiBgb25fZmluYWxpemVgLCBiZWZvcmUgaXQgd2lsbCBjb250YWluIHRoZSB2YWx1ZSBmcm9tIHRoZSBsYXN0IGJsb2NrLgAoRXBvY2hTdGFydAEAhCAAAAAAAAAAABRdASBUaGUgYmxvY2sgbnVtYmVycyB3aGVuIHRoZSBsYXN0IGFuZCBjdXJyZW50IGVwb2NoIGhhdmUgc3RhcnRlZCwgcmVzcGVjdGl2ZWx5IGBOLTFgIGFuZBQgYE5gLkkBIE5PVEU6IFdlIHRyYWNrIHRoaXMgaXMgaW4gb3JkZXIgdG8gYW5ub3RhdGUgdGhlIGJsb2NrIG51bWJlciB3aGVuIGEgZ2l2ZW4gcG9vbCBvZlkBIGVudHJvcHkgd2FzIGZpeGVkIChpLmUuIGl0IHdhcyBrbm93biB0byBjaGFpbiBvYnNlcnZlcnMpLiBTaW5jZSBlcG9jaHMgYXJlIGRlZmluZWQgaW5ZASBzbG90cywgd2hpY2ggbWF5IGJlIHNraXBwZWQsIHRoZSBibG9jayBudW1iZXJzIG1heSBub3QgbGluZSB1cCB3aXRoIHRoZSBzbG90IG51bWJlcnMuACBMYXRlbmVzcwEAEBAAAAAAFNggSG93IGxhdGUgdGhlIGN1cnJlbnQgYmxvY2sgaXMgY29tcGFyZWQgdG8gaXRzIHBhcmVudC4AFQEgVGhpcyBlbnRyeSBpcyBwb3B1bGF0ZWQgYXMgcGFydCBvZiBibG9jayBleGVjdXRpb24gYW5kIGlzIGNsZWFuZWQgdXARASBvbiBibG9jayBmaW5hbGl6YXRpb24uIFF1ZXJ5aW5nIHRoaXMgc3RvcmFnZSBlbnRyeSBvdXRzaWRlIG9mIGJsb2NrsCBleGVjdXRpb24gY29udGV4dCBzaG91bGQgYWx3YXlzIHlpZWxkIHplcm8uACxFcG9jaENvbmZpZwAAwQkEAAhhASBUaGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGN1cnJlbnQgZXBvY2guIFNob3VsZCBuZXZlciBiZSBgTm9uZWAgYXMgaXQgaXMgaW5pdGlhbGl6ZWQgaW4kIGdlbmVzaXMuADxOZXh0RXBvY2hDb25maWcAAMEJBAAILQEgVGhlIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBuZXh0IGVwb2NoLCBgTm9uZWAgaWYgdGhlIGNvbmZpZyB3aWxsIG5vdCBjaGFuZ2XoICh5b3UgY2FuIGZhbGxiYWNrIHRvIGBFcG9jaENvbmZpZ2AgaW5zdGVhZCBpbiB0aGF0IGNhc2UpLgA0U2tpcHBlZEVwb2NocwEAxQkEACApASBBIGxpc3Qgb2YgdGhlIGxhc3QgMTAwIHNraXBwZWQgZXBvY2hzIGFuZCB0aGUgY29ycmVzcG9uZGluZyBzZXNzaW9uIGluZGV4cCB3aGVuIHRoZSBlcG9jaCB3YXMgc2tpcHBlZC4AMQEgVGhpcyBpcyBvbmx5IHVzZWQgZm9yIHZhbGlkYXRpbmcgZXF1aXZvY2F0aW9uIHByb29mcy4gQW4gZXF1aXZvY2F0aW9uIHByb29mNQEgbXVzdCBjb250YWlucyBhIGtleS1vd25lcnNoaXAgcHJvb2YgZm9yIGEgZ2l2ZW4gc2Vzc2lvbiwgdGhlcmVmb3JlIHdlIG5lZWQgYTkBIHdheSB0byB0aWUgdG9nZXRoZXIgc2Vzc2lvbnMgYW5kIGVwb2NoIGluZGljZXMsIGkuZS4gd2UgbmVlZCB0byB2YWxpZGF0ZSB0aGF0KQEgYSB2YWxpZGF0b3Igd2FzIHRoZSBvd25lciBvZiBhIGdpdmVuIGtleSBvbiBhIGdpdmVuIHNlc3Npb24sIGFuZCB3aGF0IHRoZbAgYWN0aXZlIGVwb2NoIGluZGV4IHdhcyBkdXJpbmcgdGhhdCBzZXNzaW9uLgABzQEAABA0RXBvY2hEdXJhdGlvbjAgWAIAAAAAAAAM7CBUaGUgYW1vdW50IG9mIHRpbWUsIGluIHNsb3RzLCB0aGF0IGVhY2ggZXBvY2ggc2hvdWxkIGxhc3QuGQEgTk9URTogQ3VycmVudGx5IGl0IGlzIG5vdCBwb3NzaWJsZSB0byBjaGFuZ2UgdGhlIGVwb2NoIGR1cmF0aW9uIGFmdGVyIQEgdGhlIGNoYWluIGhhcyBzdGFydGVkLiBBdHRlbXB0aW5nIHRvIGRvIHNvIHdpbGwgYnJpY2sgYmxvY2sgcHJvZHVjdGlvbi4AREV4cGVjdGVkQmxvY2tUaW1lMCBwFwAAAAAAABQFASBUaGUgZXhwZWN0ZWQgYXZlcmFnZSBibG9jayB0aW1lIGF0IHdoaWNoIEJBQkUgc2hvdWxkIGJlIGNyZWF0aW5nEQEgYmxvY2tzLiBTaW5jZSBCQUJFIGlzIHByb2JhYmlsaXN0aWMgaXQgaXMgbm90IHRyaXZpYWwgdG8gZmlndXJlIG91dAUBIHdoYXQgdGhlIGV4cGVjdGVkIGF2ZXJhZ2UgYmxvY2sgdGltZSBzaG91bGQgYmUgYmFzZWQgb24gdGhlIHNsb3QJASBkdXJhdGlvbiBhbmQgdGhlIHNlY3VyaXR5IHBhcmFtZXRlciBgY2AgKHdoZXJlIGAxIC0gY2AgcmVwcmVzZW50c6AgdGhlIHByb2JhYmlsaXR5IG9mIGEgc2xvdCBiZWluZyBlbXB0eSkuADhNYXhBdXRob3JpdGllcxAQoIYBAASIIE1heCBudW1iZXIgb2YgYXV0aG9yaXRpZXMgYWxsb3dlZAA0TWF4Tm9taW5hdG9ycxAQAAIAAATUIFRoZSBtYXhpbXVtIG51bWJlciBvZiBub21pbmF0b3JzIGZvciBlYWNoIHZhbGlkYXRvci4AAdEJAAQ0S2V5T3duZXJQcm9vZuEBDBkBIFRoZSBwcm9vZiBvZiBrZXkgb3duZXJzaGlwLCB1c2VkIGZvciB2YWxpZGF0aW5nIGVxdWl2b2NhdGlvbiByZXBvcnRzLhEBIFRoZSBwcm9vZiBtdXN0IGluY2x1ZGUgdGhlIHNlc3Npb24gaW5kZXggYW5kIHZhbGlkYXRvciBjb3VudCBvZiB0aGWwIHNlc3Npb24gYXQgd2hpY2ggdGhlIGVxdWl2b2NhdGlvbiBvY2N1cnJlZC4AAgAAJFRpbWVzdGFtcAEkVGltZXN0YW1wCAxOb3cBADAgAAAAAAAAAAAEoCBUaGUgY3VycmVudCB0aW1lIGZvciB0aGUgY3VycmVudCBibG9jay4AJERpZFVwZGF0ZQEAIAQAENggV2hldGhlciB0aGUgdGltZXN0YW1wIGhhcyBiZWVuIHVwZGF0ZWQgaW4gdGhpcyBibG9jay4AVQEgVGhpcyB2YWx1ZSBpcyB1cGRhdGVkIHRvIGB0cnVlYCB1cG9uIHN1Y2Nlc3NmdWwgc3VibWlzc2lvbiBvZiBhIHRpbWVzdGFtcCBieSBhIG5vZGUuRQEgSXQgaXMgdGhlbiBjaGVja2VkIGF0IHRoZSBlbmQgb2YgZWFjaCBibG9jayBleGVjdXRpb24gaW4gdGhlIGBvbl9maW5hbGl6ZWAgaG9vay4AAfEBAAAENE1pbmltdW1QZXJpb2QwILgLAAAAAAAAGIwgVGhlIG1pbmltdW0gcGVyaW9kIGJldHdlZW4gYmxvY2tzLgBNASBCZSBhd2FyZSB0aGF0IHRoaXMgaXMgZGlmZmVyZW50IHRvIHRoZSAqZXhwZWN0ZWQqIHBlcmlvZCB0aGF0IHRoZSBibG9jayBwcm9kdWN0aW9uSQEgYXBwYXJhdHVzIHByb3ZpZGVzLiBZb3VyIGNob3NlbiBjb25zZW5zdXMgc3lzdGVtIHdpbGwgZ2VuZXJhbGx5IHdvcmsgd2l0aCB0aGlzIHRvYQEgZGV0ZXJtaW5lIGEgc2Vuc2libGUgYmxvY2sgdGltZS4gRm9yIGV4YW1wbGUsIGluIHRoZSBBdXJhIHBhbGxldCBpdCB3aWxsIGJlIGRvdWJsZSB0aGlzcCBwZXJpb2Qgb24gZGVmYXVsdCBzZXR0aW5ncy4AAAQYTW9tZW50MASYIFR5cGUgdXNlZCBmb3IgZXhwcmVzc2luZyBhIHRpbWVzdGFtcC4AAwAAHEluZGljZXMBHEluZGljZXMEIEFjY291bnRzAAEEAhDVCQQABIggVGhlIGxvb2t1cCBmcm9tIGluZGV4IHRvIGFjY291bnQuAAH1AQABmAAEHERlcG9zaXQYQADodkgXAAAAAAAAAAAAAAAErCBUaGUgZGVwb3NpdCBuZWVkZWQgZm9yIHJlc2VydmluZyBhbiBpbmRleC4AAdkJAAQwQWNjb3VudEluZGV4EAhVASBUeXBlIHVzZWQgZm9yIHN0b3JpbmcgYW4gYWNjb3VudCdzIGluZGV4OyBpbXBsaWVzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBhY2NvdW50cyB0aGVEIHN5c3RlbSBjYW4gaG9sZC4ABAAAIEJhbGFuY2VzASBCYWxhbmNlcxw0VG90YWxJc3N1YW5jZQEAGEAAAAAAAAAAAAAAAAAAAAAABJggVGhlIHRvdGFsIHVuaXRzIGlzc3VlZCBpbiB0aGUgc3lzdGVtLgBASW5hY3RpdmVJc3N1YW5jZQEAGEAAAAAAAAAAAAAAAAAAAAAABAkBIFRoZSB0b3RhbCB1bml0cyBvZiBvdXRzdGFuZGluZyBkZWFjdGl2YXRlZCBiYWxhbmNlIGluIHRoZSBzeXN0ZW0uABxBY2NvdW50AQEEAgAUAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYAkBIFRoZSBCYWxhbmNlcyBwYWxsZXQgZXhhbXBsZSBvZiBzdG9yaW5nIHRoZSBiYWxhbmNlIG9mIGFuIGFjY291bnQuACggIyBFeGFtcGxlADQgYGBgbm9jb21waWxlsCAgaW1wbCBwYWxsZXRfYmFsYW5jZXM6OkNvbmZpZyBmb3IgUnVudGltZSB7GQIgICAgdHlwZSBBY2NvdW50U3RvcmUgPSBTdG9yYWdlTWFwU2hpbTxTZWxmOjpBY2NvdW50PFJ1bnRpbWU+LCBmcmFtZV9zeXN0ZW06OlByb3ZpZGVyPFJ1bnRpbWU+LCBBY2NvdW50SWQsIFNlbGY6OkFjY291bnREYXRhPEJhbGFuY2U+PgwgIH0QIGBgYAAVASBZb3UgY2FuIGFsc28gc3RvcmUgdGhlIGJhbGFuY2Ugb2YgYW4gYWNjb3VudCBpbiB0aGUgYFN5c3RlbWAgcGFsbGV0LgAoICMgRXhhbXBsZQA0IGBgYG5vY29tcGlsZbAgIGltcGwgcGFsbGV0X2JhbGFuY2VzOjpDb25maWcgZm9yIFJ1bnRpbWUge3QgICB0eXBlIEFjY291bnRTdG9yZSA9IFN5c3RlbQwgIH0QIGBgYABRASBCdXQgdGhpcyBjb21lcyB3aXRoIHRyYWRlb2Zmcywgc3RvcmluZyBhY2NvdW50IGJhbGFuY2VzIGluIHRoZSBzeXN0ZW0gcGFsbGV0IHN0b3Jlc20BIGBmcmFtZV9zeXN0ZW1gIGRhdGEgYWxvbmdzaWRlIHRoZSBhY2NvdW50IGRhdGEgY29udHJhcnkgdG8gc3RvcmluZyBhY2NvdW50IGJhbGFuY2VzIGluIHRoZSkBIGBCYWxhbmNlc2AgcGFsbGV0LCB3aGljaCB1c2VzIGEgYFN0b3JhZ2VNYXBgIHRvIHN0b3JlIGJhbGFuY2VzIGRhdGEgb25seS5BASBOT1RFOiBUaGlzIGlzIG9ubHkgdXNlZCBpbiB0aGUgY2FzZSB0aGF0IHRoaXMgcGFsbGV0IGlzIHVzZWQgdG8gc3RvcmUgYmFsYW5jZXMuABRMb2NrcwEBBAIA3QkEABC4IEFueSBsaXF1aWRpdHkgbG9ja3Mgb24gc29tZSBhY2NvdW50IGJhbGFuY2VzLiUBIE5PVEU6IFNob3VsZCBvbmx5IGJlIGFjY2Vzc2VkIHdoZW4gc2V0dGluZywgY2hhbmdpbmcgYW5kIGZyZWVpbmcgYSBsb2NrLgCtASBVc2Ugb2YgbG9ja3MgaXMgZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgZnJlZXplcy4gU2VlIGBodHRwczovL2dpdGh1Yi5jb20vcGFyaXR5dGVjaC9zdWJzdHJhdGUvcHVsbC8xMjk1MS9gACBSZXNlcnZlcwEBBAIA7QkEAAykIE5hbWVkIHJlc2VydmVzIG9uIHNvbWUgYWNjb3VudCBiYWxhbmNlcy4AsQEgVXNlIG9mIHJlc2VydmVzIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGhvbGRzLiBTZWUgYGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJpdHl0ZWNoL3N1YnN0cmF0ZS9wdWxsLzEyOTUxL2AAFEhvbGRzAQEEAgD5CQQABGwgSG9sZHMgb24gYWNjb3VudCBiYWxhbmNlcy4AHEZyZWV6ZXMBAQQCACEKBAAEiCBGcmVlemUgbG9ja3Mgb24gYWNjb3VudCBiYWxhbmNlcy4AAQECAAGcABBIRXhpc3RlbnRpYWxEZXBvc2l0GEAA5AtUAgAAAAAAAAAAAAAAIEEBIFRoZSBtaW5pbXVtIGFtb3VudCByZXF1aXJlZCB0byBrZWVwIGFuIGFjY291bnQgb3Blbi4gTVVTVCBCRSBHUkVBVEVSIFRIQU4gWkVSTyEAWQEgSWYgeW91ICpyZWFsbHkqIG5lZWQgaXQgdG8gYmUgemVybywgeW91IGNhbiBlbmFibGUgdGhlIGZlYXR1cmUgYGluc2VjdXJlX3plcm9fZWRgIGZvcmEBIHRoaXMgcGFsbGV0LiBIb3dldmVyLCB5b3UgZG8gc28gYXQgeW91ciBvd24gcmlzazogdGhpcyB3aWxsIG9wZW4gdXAgYSBtYWpvciBEb1MgdmVjdG9yLlkBIEluIGNhc2UgeW91IGhhdmUgbXVsdGlwbGUgc291cmNlcyBvZiBwcm92aWRlciByZWZlcmVuY2VzLCB5b3UgbWF5IGFsc28gZ2V0IHVuZXhwZWN0ZWSMIGJlaGF2aW91ciBpZiB5b3Ugc2V0IHRoaXMgdG8gemVyby4A8CBCb3R0b20gbGluZTogRG8geW91cnNlbGYgYSBmYXZvdXIgYW5kIG1ha2UgaXQgYXQgbGVhc3Qgb25lIQAgTWF4TG9ja3MQEDIAAAAQ9CBUaGUgbWF4aW11bSBudW1iZXIgb2YgbG9ja3MgdGhhdCBzaG91bGQgZXhpc3Qgb24gYW4gYWNjb3VudC7cIE5vdCBzdHJpY3RseSBlbmZvcmNlZCwgYnV0IHVzZWQgZm9yIHdlaWdodCBlc3RpbWF0aW9uLgCtASBVc2Ugb2YgbG9ja3MgaXMgZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgZnJlZXplcy4gU2VlIGBodHRwczovL2dpdGh1Yi5jb20vcGFyaXR5dGVjaC9zdWJzdHJhdGUvcHVsbC8xMjk1MS9gACxNYXhSZXNlcnZlcxAQMgAAAAwNASBUaGUgbWF4aW11bSBudW1iZXIgb2YgbmFtZWQgcmVzZXJ2ZXMgdGhhdCBjYW4gZXhpc3Qgb24gYW4gYWNjb3VudC4AsQEgVXNlIG9mIHJlc2VydmVzIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGhvbGRzLiBTZWUgYGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJpdHl0ZWNoL3N1YnN0cmF0ZS9wdWxsLzEyOTUxL2AAKE1heEZyZWV6ZXMQEAgAAAAEYQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGluZGl2aWR1YWwgZnJlZXplIGxvY2tzIHRoYXQgY2FuIGV4aXN0IG9uIGFuIGFjY291bnQgYXQgYW55IHRpbWUuAAE1CgAQRFJ1bnRpbWVIb2xkUmVhc29uAQoEdCBUaGUgb3ZlcmFyY2hpbmcgaG9sZCByZWFzb24uHEJhbGFuY2UYBGwgVGhlIGJhbGFuY2Ugb2YgYW4gYWNjb3VudC5EUmVzZXJ2ZUlkZW50aWZpZXKxBQxoIFRoZSBJRCB0eXBlIGZvciByZXNlcnZlcy4AsQEgVXNlIG9mIHJlc2VydmVzIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGhvbGRzLiBTZWUgYGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJpdHl0ZWNoL3N1YnN0cmF0ZS9wdWxsLzEyOTUxL2BARnJlZXplSWRlbnRpZmllcikKBGQgVGhlIElEIHR5cGUgZm9yIGZyZWV6ZXMuAAUAAEhUcmFuc2FjdGlvblBheW1lbnQBSFRyYW5zYWN0aW9uUGF5bWVudAhETmV4dEZlZU11bHRpcGxpZXIBAAkHQAAAZKeztuANAAAAAAAAAAAAADhTdG9yYWdlVmVyc2lvbgEAOQoEAAAAAAGoAARgT3BlcmF0aW9uYWxGZWVNdWx0aXBsaWVyCAQFVFkBIEEgZmVlIG11bHRpcGxpZXIgZm9yIGBPcGVyYXRpb25hbGAgZXh0cmluc2ljcyB0byBjb21wdXRlICJ2aXJ0dWFsIHRpcCIgdG8gYm9vc3QgdGhlaXIsIGBwcmlvcml0eWAAUQEgVGhpcyB2YWx1ZSBpcyBtdWx0aXBsaWVkIGJ5IHRoZSBgZmluYWxfZmVlYCB0byBvYnRhaW4gYSAidmlydHVhbCB0aXAiIHRoYXQgaXMgbGF0ZXL0IGFkZGVkIHRvIGEgdGlwIGNvbXBvbmVudCBpbiByZWd1bGFyIGBwcmlvcml0eWAgY2FsY3VsYXRpb25zLk0BIEl0IG1lYW5zIHRoYXQgYSBgTm9ybWFsYCB0cmFuc2FjdGlvbiBjYW4gZnJvbnQtcnVuIGEgc2ltaWxhcmx5LXNpemVkIGBPcGVyYXRpb25hbGBBASBleHRyaW5zaWMgKHdpdGggbm8gdGlwKSwgYnkgaW5jbHVkaW5nIGEgdGlwIHZhbHVlIGdyZWF0ZXIgdGhhbiB0aGUgdmlydHVhbCB0aXAuADwgYGBgcnVzdCxpZ25vcmVAIC8vIEZvciBgTm9ybWFsYIwgbGV0IHByaW9yaXR5ID0gcHJpb3JpdHlfY2FsYyh0aXApOwBUIC8vIEZvciBgT3BlcmF0aW9uYWxgEQEgbGV0IHZpcnR1YWxfdGlwID0gKGluY2x1c2lvbl9mZWUgKyB0aXApICogT3BlcmF0aW9uYWxGZWVNdWx0aXBsaWVyO8QgbGV0IHByaW9yaXR5ID0gcHJpb3JpdHlfY2FsYyh0aXAgKyB2aXJ0dWFsX3RpcCk7ECBgYGAAUQEgTm90ZSB0aGF0IHNpbmNlIHdlIHVzZSBgZmluYWxfZmVlYCB0aGUgbXVsdGlwbGllciBhcHBsaWVzIGFsc28gdG8gdGhlIHJlZ3VsYXIgYHRpcGBdASBzZW50IHdpdGggdGhlIHRyYW5zYWN0aW9uLiBTbywgbm90IG9ubHkgZG9lcyB0aGUgdHJhbnNhY3Rpb24gZ2V0IGEgcHJpb3JpdHkgYnVtcCBiYXNlZGEBIG9uIHRoZSBgaW5jbHVzaW9uX2ZlZWAsIGJ1dCB3ZSBhbHNvIGFtcGxpZnkgdGhlIGltcGFjdCBvZiB0aXBzIGFwcGxpZWQgdG8gYE9wZXJhdGlvbmFsYDggdHJhbnNhY3Rpb25zLgAAAAAgAAAoQXV0aG9yc2hpcAEoQXV0aG9yc2hpcAQYQXV0aG9yAAAABAAEZCBBdXRob3Igb2YgY3VycmVudCBibG9jay4AAAAAAAAABgAAHFN0YWtpbmcBHFN0YWtpbmeoOFZhbGlkYXRvckNvdW50AQAQEAAAAAAEnCBUaGUgaWRlYWwgbnVtYmVyIG9mIGFjdGl2ZSB2YWxpZGF0b3JzLgBUTWluaW11bVZhbGlkYXRvckNvdW50AQAQEAAAAAAEQQEgTWluaW11bSBudW1iZXIgb2Ygc3Rha2luZyBwYXJ0aWNpcGFudHMgYmVmb3JlIGVtZXJnZW5jeSBjb25kaXRpb25zIGFyZSBpbXBvc2VkLgA0SW52dWxuZXJhYmxlcwEABQIEAAxZASBBbnkgdmFsaWRhdG9ycyB0aGF0IG1heSBuZXZlciBiZSBzbGFzaGVkIG9yIGZvcmNpYmx5IGtpY2tlZC4gSXQncyBhIFZlYyBzaW5jZSB0aGV5J3JlTQEgZWFzeSB0byBpbml0aWFsaXplIGFuZCB0aGUgcGVyZm9ybWFuY2UgaGl0IGlzIG1pbmltYWwgKHdlIGV4cGVjdCBubyBtb3JlIHRoYW4gZm91cqwgaW52dWxuZXJhYmxlcykgYW5kIHJlc3RyaWN0ZWQgdG8gdGVzdG5ldHMuABhCb25kZWQAAQQFAAAEAAwBASBNYXAgZnJvbSBhbGwgbG9ja2VkICJzdGFzaCIgYWNjb3VudHMgdG8gdGhlIGNvbnRyb2xsZXIgYWNjb3VudC4A0CBUV09YLU5PVEU6IFNBRkUgc2luY2UgYEFjY291bnRJZGAgaXMgYSBzZWN1cmUgaGFzaC4AQE1pbk5vbWluYXRvckJvbmQBABhAAAAAAAAAAAAAAAAAAAAAAAQhASBUaGUgbWluaW11bSBhY3RpdmUgYm9uZCB0byBiZWNvbWUgYW5kIG1haW50YWluIHRoZSByb2xlIG9mIGEgbm9taW5hdG9yLgBATWluVmFsaWRhdG9yQm9uZAEAGEAAAAAAAAAAAAAAAAAAAAAABCEBIFRoZSBtaW5pbXVtIGFjdGl2ZSBib25kIHRvIGJlY29tZSBhbmQgbWFpbnRhaW4gdGhlIHJvbGUgb2YgYSB2YWxpZGF0b3IuAEhNaW5pbXVtQWN0aXZlU3Rha2UBABhAAAAAAAAAAAAAAAAAAAAAAAQRASBUaGUgbWluaW11bSBhY3RpdmUgbm9taW5hdG9yIHN0YWtlIG9mIHRoZSBsYXN0IHN1Y2Nlc3NmdWwgZWxlY3Rpb24uADRNaW5Db21taXNzaW9uAQC0EAAAAAAM6CBUaGUgbWluaW11bSBhbW91bnQgb2YgY29tbWlzc2lvbiB0aGF0IHZhbGlkYXRvcnMgY2FuIHNldC4AgCBJZiBzZXQgdG8gYDBgLCBubyBsaW1pdCBleGlzdHMuABhMZWRnZXIAAQQCAD0KBAAQRQEgTWFwIGZyb20gYWxsICh1bmxvY2tlZCkgImNvbnRyb2xsZXIiIGFjY291bnRzIHRvIHRoZSBpbmZvIHJlZ2FyZGluZyB0aGUgc3Rha2luZy4AdQEgTm90ZTogQWxsIHRoZSByZWFkcyBhbmQgbXV0YXRpb25zIHRvIHRoaXMgc3RvcmFnZSAqTVVTVCogYmUgZG9uZSB0aHJvdWdoIHRoZSBtZXRob2RzIGV4cG9zZWToIGJ5IFtgU3Rha2luZ0xlZGdlcmBdIHRvIGVuc3VyZSBkYXRhIGFuZCBsb2NrIGNvbnNpc3RlbmN5LgAUUGF5ZWUAAQQFALAEAAzkIFdoZXJlIHRoZSByZXdhcmQgcGF5bWVudCBzaG91bGQgYmUgbWFkZS4gS2V5ZWQgYnkgc3Rhc2guANAgVFdPWC1OT1RFOiBTQUZFIHNpbmNlIGBBY2NvdW50SWRgIGlzIGEgc2VjdXJlIGhhc2guAChWYWxpZGF0b3JzAQEEBQC8CAAADEUBIFRoZSBtYXAgZnJvbSAod2FubmFiZSkgdmFsaWRhdG9yIHN0YXNoIGtleSB0byB0aGUgcHJlZmVyZW5jZXMgb2YgdGhhdCB2YWxpZGF0b3IuANAgVFdPWC1OT1RFOiBTQUZFIHNpbmNlIGBBY2NvdW50SWRgIGlzIGEgc2VjdXJlIGhhc2guAFBDb3VudGVyRm9yVmFsaWRhdG9ycwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwAEhNYXhWYWxpZGF0b3JzQ291bnQAABAEAAwxASBUaGUgbWF4aW11bSB2YWxpZGF0b3IgY291bnQgYmVmb3JlIHdlIHN0b3AgYWxsb3dpbmcgbmV3IHZhbGlkYXRvcnMgdG8gam9pbi4A0CBXaGVuIHRoaXMgdmFsdWUgaXMgbm90IHNldCwgbm8gbGltaXRzIGFyZSBlbmZvcmNlZC4AKE5vbWluYXRvcnMAAQQFAEUKBABMdQEgVGhlIG1hcCBmcm9tIG5vbWluYXRvciBzdGFzaCBrZXkgdG8gdGhlaXIgbm9taW5hdGlvbiBwcmVmZXJlbmNlcywgbmFtZWx5IHRoZSB2YWxpZGF0b3JzIHRoYXRYIHRoZXkgd2lzaCB0byBzdXBwb3J0LgA5ASBOb3RlIHRoYXQgdGhlIGtleXMgb2YgdGhpcyBzdG9yYWdlIG1hcCBtaWdodCBiZWNvbWUgbm9uLWRlY29kYWJsZSBpbiBjYXNlIHRoZS0BIGFjY291bnQncyBbYE5vbWluYXRpb25zUXVvdGE6Ok1heE5vbWluYXRpb25zYF0gY29uZmlndXJhdGlvbiBpcyBkZWNyZWFzZWQukCBJbiB0aGlzIHJhcmUgY2FzZSwgdGhlc2Ugbm9taW5hdG9yc2UBIGFyZSBzdGlsbCBleGlzdGVudCBpbiBzdG9yYWdlLCB0aGVpciBrZXkgaXMgY29ycmVjdCBhbmQgcmV0cmlldmFibGUgKGkuZS4gYGNvbnRhaW5zX2tleWBxASBpbmRpY2F0ZXMgdGhhdCB0aGV5IGV4aXN0KSwgYnV0IHRoZWlyIHZhbHVlIGNhbm5vdCBiZSBkZWNvZGVkLiBUaGVyZWZvcmUsIHRoZSBub24tZGVjb2RhYmxlbQEgbm9taW5hdG9ycyB3aWxsIGVmZmVjdGl2ZWx5IG5vdC1leGlzdCwgdW50aWwgdGhleSByZS1zdWJtaXQgdGhlaXIgcHJlZmVyZW5jZXMgc3VjaCB0aGF0IGl0AQEgaXMgd2l0aGluIHRoZSBib3VuZHMgb2YgdGhlIG5ld2x5IHNldCBgQ29uZmlnOjpNYXhOb21pbmF0aW9uc2AuAGEBIFRoaXMgaW1wbGllcyB0aGF0IGA6Oml0ZXJfa2V5cygpLmNvdW50KClgIGFuZCBgOjppdGVyKCkuY291bnQoKWAgbWlnaHQgcmV0dXJuIGRpZmZlcmVudG0BIHZhbHVlcyBmb3IgdGhpcyBtYXAuIE1vcmVvdmVyLCB0aGUgbWFpbiBgOjpjb3VudCgpYCBpcyBhbGlnbmVkIHdpdGggdGhlIGZvcm1lciwgbmFtZWx5IHRoZWwgbnVtYmVyIG9mIGtleXMgdGhhdCBleGlzdC4AbQEgTGFzdGx5LCBpZiBhbnkgb2YgdGhlIG5vbWluYXRvcnMgYmVjb21lIG5vbi1kZWNvZGFibGUsIHRoZXkgY2FuIGJlIGNoaWxsZWQgaW1tZWRpYXRlbHkgdmlhuCBbYENhbGw6OmNoaWxsX290aGVyYF0gZGlzcGF0Y2hhYmxlIGJ5IGFueW9uZS4A0CBUV09YLU5PVEU6IFNBRkUgc2luY2UgYEFjY291bnRJZGAgaXMgYSBzZWN1cmUgaGFzaC4AUENvdW50ZXJGb3JOb21pbmF0b3JzAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXAAOFZpcnR1YWxTdGFrZXJzAAEEBQCQBAAYyCBTdGFrZXJzIHdob3NlIGZ1bmRzIGFyZSBtYW5hZ2VkIGJ5IG90aGVyIHBhbGxldHMuAHUBIFRoaXMgcGFsbGV0IGRvZXMgbm90IGFwcGx5IGFueSBsb2NrcyBvbiB0aGVtLCB0aGVyZWZvcmUgdGhleSBhcmUgb25seSB2aXJ0dWFsbHkgYm9uZGVkLiBUaGV5bQEgYXJlIGV4cGVjdGVkIHRvIGJlIGtleWxlc3MgYWNjb3VudHMgYW5kIGhlbmNlIHNob3VsZCBub3QgYmUgYWxsb3dlZCB0byBtdXRhdGUgdGhlaXIgbGVkZ2VycQEgZGlyZWN0bHkgdmlhIHRoaXMgcGFsbGV0LiBJbnN0ZWFkLCB0aGVzZSBhY2NvdW50cyBhcmUgbWFuYWdlZCBieSBvdGhlciBwYWxsZXRzIGFuZCBhY2Nlc3NlZCkBIHZpYSBsb3cgbGV2ZWwgYXBpcy4gV2Uga2VlcCB0cmFjayBvZiB0aGVtIHRvIGRvIG1pbmltYWwgaW50ZWdyaXR5IGNoZWNrcy4AYENvdW50ZXJGb3JWaXJ0dWFsU3Rha2VycwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwAEhNYXhOb21pbmF0b3JzQ291bnQAABAEAAwxASBUaGUgbWF4aW11bSBub21pbmF0b3IgY291bnQgYmVmb3JlIHdlIHN0b3AgYWxsb3dpbmcgbmV3IHZhbGlkYXRvcnMgdG8gam9pbi4A0CBXaGVuIHRoaXMgdmFsdWUgaXMgbm90IHNldCwgbm8gbGltaXRzIGFyZSBlbmZvcmNlZC4AKEN1cnJlbnRFcmEAABAEABBcIFRoZSBjdXJyZW50IGVyYSBpbmRleC4AZQEgVGhpcyBpcyB0aGUgbGF0ZXN0IHBsYW5uZWQgZXJhLCBkZXBlbmRpbmcgb24gaG93IHRoZSBTZXNzaW9uIHBhbGxldCBxdWV1ZXMgdGhlIHZhbGlkYXRvcoAgc2V0LCBpdCBtaWdodCBiZSBhY3RpdmUgb3Igbm90LgAkQWN0aXZlRXJhAABNCgQAENggVGhlIGFjdGl2ZSBlcmEgaW5mb3JtYXRpb24sIGl0IGhvbGRzIGluZGV4IGFuZCBzdGFydC4AWQEgVGhlIGFjdGl2ZSBlcmEgaXMgdGhlIGVyYSBiZWluZyBjdXJyZW50bHkgcmV3YXJkZWQuIFZhbGlkYXRvciBzZXQgb2YgdGhpcyBlcmEgbXVzdCBiZawgZXF1YWwgdG8gW2BTZXNzaW9uSW50ZXJmYWNlOjp2YWxpZGF0b3JzYF0uAFRFcmFzU3RhcnRTZXNzaW9uSW5kZXgAAQQFEBAEABBVASBUaGUgc2Vzc2lvbiBpbmRleCBhdCB3aGljaCB0aGUgZXJhIHN0YXJ0IGZvciB0aGUgbGFzdCBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy4AYQEgTm90ZTogVGhpcyB0cmFja3MgdGhlIHN0YXJ0aW5nIHNlc3Npb24gKGkuZS4gc2Vzc2lvbiBpbmRleCB3aGVuIGVyYSBzdGFydCBiZWluZyBhY3RpdmUp8CBmb3IgdGhlIGVyYXMgaW4gYFtDdXJyZW50RXJhIC0gSElTVE9SWV9ERVBUSCwgQ3VycmVudEVyYV1gLgAsRXJhc1N0YWtlcnMBAQgFBekHUQoMAAAAIHggRXhwb3N1cmUgb2YgdmFsaWRhdG9yIGF0IGVyYS4AYQEgVGhpcyBpcyBrZXllZCBmaXJzdCBieSB0aGUgZXJhIGluZGV4IHRvIGFsbG93IGJ1bGsgZGVsZXRpb24gYW5kIHRoZW4gdGhlIHN0YXNoIGFjY291bnQuAMwgSXMgaXQgcmVtb3ZlZCBhZnRlciBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy5BASBJZiBzdGFrZXJzIGhhc24ndCBiZWVuIHNldCBvciBoYXMgYmVlbiByZW1vdmVkIHRoZW4gZW1wdHkgZXhwb3N1cmUgaXMgcmV0dXJuZWQuACkBIE5vdGU6IERlcHJlY2F0ZWQgc2luY2UgdjE0LiBVc2UgYEVyYUluZm9gIGluc3RlYWQgdG8gd29yayB3aXRoIGV4cG9zdXJlcy4ATEVyYXNTdGFrZXJzT3ZlcnZpZXcAAQgFBekHXQoEADC4IFN1bW1hcnkgb2YgdmFsaWRhdG9yIGV4cG9zdXJlIGF0IGEgZ2l2ZW4gZXJhLgBxASBUaGlzIGNvbnRhaW5zIHRoZSB0b3RhbCBzdGFrZSBpbiBzdXBwb3J0IG9mIHRoZSB2YWxpZGF0b3IgYW5kIHRoZWlyIG93biBzdGFrZS4gSW4gYWRkaXRpb24sdQEgaXQgY2FuIGFsc28gYmUgdXNlZCB0byBnZXQgdGhlIG51bWJlciBvZiBub21pbmF0b3JzIGJhY2tpbmcgdGhpcyB2YWxpZGF0b3IgYW5kIHRoZSBudW1iZXIgb2ZpASBleHBvc3VyZSBwYWdlcyB0aGV5IGFyZSBkaXZpZGVkIGludG8uIFRoZSBwYWdlIGNvdW50IGlzIHVzZWZ1bCB0byBkZXRlcm1pbmUgdGhlIG51bWJlciBvZqwgcGFnZXMgb2YgcmV3YXJkcyB0aGF0IG5lZWRzIHRvIGJlIGNsYWltZWQuAGEBIFRoaXMgaXMga2V5ZWQgZmlyc3QgYnkgdGhlIGVyYSBpbmRleCB0byBhbGxvdyBidWxrIGRlbGV0aW9uIGFuZCB0aGVuIHRoZSBzdGFzaCBhY2NvdW50LqwgU2hvdWxkIG9ubHkgYmUgYWNjZXNzZWQgdGhyb3VnaCBgRXJhSW5mb2AuAMwgSXMgaXQgcmVtb3ZlZCBhZnRlciBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy5BASBJZiBzdGFrZXJzIGhhc24ndCBiZWVuIHNldCBvciBoYXMgYmVlbiByZW1vdmVkIHRoZW4gZW1wdHkgb3ZlcnZpZXcgaXMgcmV0dXJuZWQuAEhFcmFzU3Rha2Vyc0NsaXBwZWQBAQgFBekHUQoMAAAAQJggQ2xpcHBlZCBFeHBvc3VyZSBvZiB2YWxpZGF0b3IgYXQgZXJhLgBlASBOb3RlOiBUaGlzIGlzIGRlcHJlY2F0ZWQsIHNob3VsZCBiZSB1c2VkIGFzIHJlYWQtb25seSBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBmdXR1cmUuMQEgTmV3IGBFeHBvc3VyZWBzIGFyZSBzdG9yZWQgaW4gYSBwYWdlZCBtYW5uZXIgaW4gYEVyYXNTdGFrZXJzUGFnZWRgIGluc3RlYWQuAFkBIFRoaXMgaXMgc2ltaWxhciB0byBbYEVyYXNTdGFrZXJzYF0gYnV0IG51bWJlciBvZiBub21pbmF0b3JzIGV4cG9zZWQgaXMgcmVkdWNlZCB0byB0aGWoIGBUOjpNYXhFeHBvc3VyZVBhZ2VTaXplYCBiaWdnZXN0IHN0YWtlcnMuHQEgKE5vdGU6IHRoZSBmaWVsZCBgdG90YWxgIGFuZCBgb3duYCBvZiB0aGUgZXhwb3N1cmUgcmVtYWlucyB1bmNoYW5nZWQpLvQgVGhpcyBpcyB1c2VkIHRvIGxpbWl0IHRoZSBpL28gY29zdCBmb3IgdGhlIG5vbWluYXRvciBwYXlvdXQuAF0BIFRoaXMgaXMga2V5ZWQgZmlzdCBieSB0aGUgZXJhIGluZGV4IHRvIGFsbG93IGJ1bGsgZGVsZXRpb24gYW5kIHRoZW4gdGhlIHN0YXNoIGFjY291bnQuAMwgSXQgaXMgcmVtb3ZlZCBhZnRlciBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy5BASBJZiBzdGFrZXJzIGhhc24ndCBiZWVuIHNldCBvciBoYXMgYmVlbiByZW1vdmVkIHRoZW4gZW1wdHkgZXhwb3N1cmUgaXMgcmV0dXJuZWQuACkBIE5vdGU6IERlcHJlY2F0ZWQgc2luY2UgdjE0LiBVc2UgYEVyYUluZm9gIGluc3RlYWQgdG8gd29yayB3aXRoIGV4cG9zdXJlcy4AQEVyYXNTdGFrZXJzUGFnZWQAAQwFBQXxB2EKBAAYwCBQYWdpbmF0ZWQgZXhwb3N1cmUgb2YgYSB2YWxpZGF0b3IgYXQgZ2l2ZW4gZXJhLgBxASBUaGlzIGlzIGtleWVkIGZpcnN0IGJ5IHRoZSBlcmEgaW5kZXggdG8gYWxsb3cgYnVsayBkZWxldGlvbiwgdGhlbiBzdGFzaCBhY2NvdW50IGFuZCBmaW5hbGx51CB0aGUgcGFnZS4gU2hvdWxkIG9ubHkgYmUgYWNjZXNzZWQgdGhyb3VnaCBgRXJhSW5mb2AuANQgVGhpcyBpcyBjbGVhcmVkIGFmdGVyIFtgQ29uZmlnOjpIaXN0b3J5RGVwdGhgXSBlcmFzLgA4Q2xhaW1lZFJld2FyZHMBAQgFBekHGQIEABjcIEhpc3Rvcnkgb2YgY2xhaW1lZCBwYWdlZCByZXdhcmRzIGJ5IGVyYSBhbmQgdmFsaWRhdG9yLgBpASBUaGlzIGlzIGtleWVkIGJ5IGVyYSBhbmQgdmFsaWRhdG9yIHN0YXNoIHdoaWNoIG1hcHMgdG8gdGhlIHNldCBvZiBwYWdlIGluZGV4ZXMgd2hpY2ggaGF2ZTggYmVlbiBjbGFpbWVkLgDMIEl0IGlzIHJlbW92ZWQgYWZ0ZXIgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuAEhFcmFzVmFsaWRhdG9yUHJlZnMBAQgFBekHvAgAABQRASBTaW1pbGFyIHRvIGBFcmFzU3Rha2Vyc2AsIHRoaXMgaG9sZHMgdGhlIHByZWZlcmVuY2VzIG9mIHZhbGlkYXRvcnMuAGEBIFRoaXMgaXMga2V5ZWQgZmlyc3QgYnkgdGhlIGVyYSBpbmRleCB0byBhbGxvdyBidWxrIGRlbGV0aW9uIGFuZCB0aGVuIHRoZSBzdGFzaCBhY2NvdW50LgDMIElzIGl0IHJlbW92ZWQgYWZ0ZXIgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuAExFcmFzVmFsaWRhdG9yUmV3YXJkAAEEBRAYBAAMLQEgVGhlIHRvdGFsIHZhbGlkYXRvciBlcmEgcGF5b3V0IGZvciB0aGUgbGFzdCBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy4AIQEgRXJhcyB0aGF0IGhhdmVuJ3QgZmluaXNoZWQgeWV0IG9yIGhhcyBiZWVuIHJlbW92ZWQgZG9lc24ndCBoYXZlIHJld2FyZC4AQEVyYXNSZXdhcmRQb2ludHMBAQQFEGUKFAAAAAAACNAgUmV3YXJkcyBmb3IgdGhlIGxhc3QgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuJQEgSWYgcmV3YXJkIGhhc24ndCBiZWVuIHNldCBvciBoYXMgYmVlbiByZW1vdmVkIHRoZW4gMCByZXdhcmQgaXMgcmV0dXJuZWQuADhFcmFzVG90YWxTdGFrZQEBBAUQGEAAAAAAAAAAAAAAAAAAAAAACBEBIFRoZSB0b3RhbCBhbW91bnQgc3Rha2VkIGZvciB0aGUgbGFzdCBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy4dASBJZiB0b3RhbCBoYXNuJ3QgYmVlbiBzZXQgb3IgaGFzIGJlZW4gcmVtb3ZlZCB0aGVuIDAgc3Rha2UgaXMgcmV0dXJuZWQuACBGb3JjZUVyYQEAxAQABFQgTW9kZSBvZiBlcmEgZm9yY2luZy4AQE1heFN0YWtlZFJld2FyZHMAABUCBAAMGQEgTWF4aW11bSBzdGFrZWQgcmV3YXJkcywgaS5lLiB0aGUgcGVyY2VudGFnZSBvZiB0aGUgZXJhIGluZmxhdGlvbiB0aGF0bCBpcyB1c2VkIGZvciBzdGFrZSByZXdhcmRzLqwgU2VlIFtFcmEgcGF5b3V0XSguL2luZGV4Lmh0bWwjZXJhLXBheW91dCkuAExTbGFzaFJld2FyZEZyYWN0aW9uAQC0EAAAAAAM+CBUaGUgcGVyY2VudGFnZSBvZiB0aGUgc2xhc2ggdGhhdCBpcyBkaXN0cmlidXRlZCB0byByZXBvcnRlcnMuAOQgVGhlIHJlc3Qgb2YgdGhlIHNsYXNoZWQgdmFsdWUgaXMgaGFuZGxlZCBieSB0aGUgYFNsYXNoYC4ATENhbmNlbGVkU2xhc2hQYXlvdXQBABhAAAAAAAAAAAAAAAAAAAAAAAgVASBUaGUgYW1vdW50IG9mIGN1cnJlbmN5IGdpdmVuIHRvIHJlcG9ydGVycyBvZiBhIHNsYXNoIGV2ZW50IHdoaWNoIHdhc+wgY2FuY2VsZWQgYnkgZXh0cmFvcmRpbmFyeSBjaXJjdW1zdGFuY2VzIChlLmcuIGdvdmVybmFuY2UpLgBAVW5hcHBsaWVkU2xhc2hlcwEBBAUQcQoEAATEIEFsbCB1bmFwcGxpZWQgc2xhc2hlcyB0aGF0IGFyZSBxdWV1ZWQgZm9yIGxhdGVyLgAoQm9uZGVkRXJhcwEA3QgEABAlASBBIG1hcHBpbmcgZnJvbSBzdGlsbC1ib25kZWQgZXJhcyB0byB0aGUgZmlyc3Qgc2Vzc2lvbiBpbmRleCBvZiB0aGF0IGVyYS4AyCBNdXN0IGNvbnRhaW5zIGluZm9ybWF0aW9uIGZvciBlcmFzIGZvciB0aGUgcmFuZ2U6vCBgW2FjdGl2ZV9lcmEgLSBib3VuZGluZ19kdXJhdGlvbjsgYWN0aXZlX2VyYV1gAExWYWxpZGF0b3JTbGFzaEluRXJhAAEIBQXpB3kKBAAIRQEgQWxsIHNsYXNoaW5nIGV2ZW50cyBvbiB2YWxpZGF0b3JzLCBtYXBwZWQgYnkgZXJhIHRvIHRoZSBoaWdoZXN0IHNsYXNoIHByb3BvcnRpb25wIGFuZCBzbGFzaCB2YWx1ZSBvZiB0aGUgZXJhLgBMTm9taW5hdG9yU2xhc2hJbkVyYQABCAUF6QcYBAAEYQEgQWxsIHNsYXNoaW5nIGV2ZW50cyBvbiBub21pbmF0b3JzLCBtYXBwZWQgYnkgZXJhIHRvIHRoZSBoaWdoZXN0IHNsYXNoIHZhbHVlIG9mIHRoZSBlcmEuADRTbGFzaGluZ1NwYW5zAAEEBQB9CgQABIwgU2xhc2hpbmcgc3BhbnMgZm9yIHN0YXNoIGFjY291bnRzLgAkU3BhblNsYXNoAQEEBfkHgQqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIPQEgUmVjb3JkcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbWF4aW11bSBzbGFzaCBvZiBhIHN0YXNoIHdpdGhpbiBhIHNsYXNoaW5nIHNwYW4suCBhcyB3ZWxsIGFzIGhvdyBtdWNoIHJld2FyZCBoYXMgYmVlbiBwYWlkIG91dC4AVEN1cnJlbnRQbGFubmVkU2Vzc2lvbgEAEBAAAAAADOggVGhlIGxhc3QgcGxhbm5lZCBzZXNzaW9uIHNjaGVkdWxlZCBieSB0aGUgc2Vzc2lvbiBwYWxsZXQuAHEBIFRoaXMgaXMgYmFzaWNhbGx5IGluIHN5bmMgd2l0aCB0aGUgY2FsbCB0byBbYHBhbGxldF9zZXNzaW9uOjpTZXNzaW9uTWFuYWdlcjo6bmV3X3Nlc3Npb25gXS4AOENoaWxsVGhyZXNob2xkAAAVAgQADFEBIFRoZSB0aHJlc2hvbGQgZm9yIHdoZW4gdXNlcnMgY2FuIHN0YXJ0IGNhbGxpbmcgYGNoaWxsX290aGVyYCBmb3Igb3RoZXIgdmFsaWRhdG9ycyAvWQEgbm9taW5hdG9ycy4gVGhlIHRocmVzaG9sZCBpcyBjb21wYXJlZCB0byB0aGUgYWN0dWFsIG51bWJlciBvZiB2YWxpZGF0b3JzIC8gbm9taW5hdG9ycykBIChgQ291bnRGb3IqYCkgaW4gdGhlIHN5c3RlbSBjb21wYXJlZCB0byB0aGUgY29uZmlndXJlZCBtYXggKGBNYXgqQ291bnRgKS4AAQ0CAAGsABwwSGlzdG9yeURlcHRoEBBUAAAAUIwgTnVtYmVyIG9mIGVyYXMgdG8ga2VlcCBpbiBoaXN0b3J5LgDoIEZvbGxvd2luZyBpbmZvcm1hdGlvbiBpcyBrZXB0IGZvciBlcmFzIGluIGBbY3VycmVudF9lcmEgLQkBIEhpc3RvcnlEZXB0aCwgY3VycmVudF9lcmFdYDogYEVyYXNTdGFrZXJzYCwgYEVyYXNTdGFrZXJzQ2xpcHBlZGAsBQEgYEVyYXNWYWxpZGF0b3JQcmVmc2AsIGBFcmFzVmFsaWRhdG9yUmV3YXJkYCwgYEVyYXNSZXdhcmRQb2ludHNgLEUBIGBFcmFzVG90YWxTdGFrZWAsIGBFcmFzU3RhcnRTZXNzaW9uSW5kZXhgLCBgQ2xhaW1lZFJld2FyZHNgLCBgRXJhc1N0YWtlcnNQYWdlZGAsXCBgRXJhc1N0YWtlcnNPdmVydmlld2AuAOQgTXVzdCBiZSBtb3JlIHRoYW4gdGhlIG51bWJlciBvZiBlcmFzIGRlbGF5ZWQgYnkgc2Vzc2lvbi74IEkuZS4gYWN0aXZlIGVyYSBtdXN0IGFsd2F5cyBiZSBpbiBoaXN0b3J5LiBJLmUuIGBhY3RpdmVfZXJhID7EIGN1cnJlbnRfZXJhIC0gaGlzdG9yeV9kZXB0aGAgbXVzdCBiZSBndWFyYW50ZWVkLgARASBJZiBtaWdyYXRpbmcgYW4gZXhpc3RpbmcgcGFsbGV0IGZyb20gc3RvcmFnZSB2YWx1ZSB0byBjb25maWcgdmFsdWUs7CB0aGlzIHNob3VsZCBiZSBzZXQgdG8gc2FtZSB2YWx1ZSBvciBncmVhdGVyIGFzIGluIHN0b3JhZ2UuABUBIE5vdGU6IGBIaXN0b3J5RGVwdGhgIGlzIHVzZWQgYXMgdGhlIHVwcGVyIGJvdW5kIGZvciB0aGUgYEJvdW5kZWRWZWNgLQEgaXRlbSBgU3Rha2luZ0xlZGdlci5sZWdhY3lfY2xhaW1lZF9yZXdhcmRzYC4gU2V0dGluZyB0aGlzIHZhbHVlIGxvd2VyIHRoYW7YIHRoZSBleGlzdGluZyB2YWx1ZSBjYW4gbGVhZCB0byBpbmNvbnNpc3RlbmNpZXMgaW4gdGhlFQEgYFN0YWtpbmdMZWRnZXJgIGFuZCB3aWxsIG5lZWQgdG8gYmUgaGFuZGxlZCBwcm9wZXJseSBpbiBhIG1pZ3JhdGlvbi7wIFRoZSB0ZXN0IGByZWR1Y2luZ19oaXN0b3J5X2RlcHRoX2FicnVwdGAgc2hvd3MgdGhpcyBlZmZlY3QuADhTZXNzaW9uc1BlckVyYRAQBgAAAARwIE51bWJlciBvZiBzZXNzaW9ucyBwZXIgZXJhLgA8Qm9uZGluZ0R1cmF0aW9uEBAcAAAABOQgTnVtYmVyIG9mIGVyYXMgdGhhdCBzdGFrZWQgZnVuZHMgbXVzdCByZW1haW4gYm9uZGVkIGZvci4ASFNsYXNoRGVmZXJEdXJhdGlvbhAQGwAAABABASBOdW1iZXIgb2YgZXJhcyB0aGF0IHNsYXNoZXMgYXJlIGRlZmVycmVkIGJ5LCBhZnRlciBjb21wdXRhdGlvbi4ADQEgVGhpcyBzaG91bGQgYmUgbGVzcyB0aGFuIHRoZSBib25kaW5nIGR1cmF0aW9uLiBTZXQgdG8gMCBpZiBzbGFzaGVzFQEgc2hvdWxkIGJlIGFwcGxpZWQgaW1tZWRpYXRlbHksIHdpdGhvdXQgb3Bwb3J0dW5pdHkgZm9yIGludGVydmVudGlvbi4ATE1heEV4cG9zdXJlUGFnZVNpemUQEAACAAAssCBUaGUgbWF4aW11bSBzaXplIG9mIGVhY2ggYFQ6OkV4cG9zdXJlUGFnZWAuACkBIEFuIGBFeHBvc3VyZVBhZ2VgIGlzIHdlYWtseSBib3VuZGVkIHRvIGEgbWF4aW11bSBvZiBgTWF4RXhwb3N1cmVQYWdlU2l6ZWAwIG5vbWluYXRvcnMuACEBIEZvciBvbGRlciBub24tcGFnZWQgZXhwb3N1cmUsIGEgcmV3YXJkIHBheW91dCB3YXMgcmVzdHJpY3RlZCB0byB0aGUgdG9wIQEgYE1heEV4cG9zdXJlUGFnZVNpemVgIG5vbWluYXRvcnMuIFRoaXMgaXMgdG8gbGltaXQgdGhlIGkvbyBjb3N0IGZvciB0aGVIIG5vbWluYXRvciBwYXlvdXQuAFkBIE5vdGU6IGBNYXhFeHBvc3VyZVBhZ2VTaXplYCBpcyB1c2VkIHRvIGJvdW5kIGBDbGFpbWVkUmV3YXJkc2AgYW5kIGlzIHVuc2FmZSB0byByZWR1Y2WQIHdpdGhvdXQgaGFuZGxpbmcgaXQgaW4gYSBtaWdyYXRpb24uADxNYXhWYWxpZGF0b3JTZXQQELAEAAAEFQEgVGhlIGFic29sdXRlIG1heGltdW0gb2Ygd2lubmVyIHZhbGlkYXRvcnMgdGhpcyBwYWxsZXQgc2hvdWxkIHJldHVybi4ASE1heFVubG9ja2luZ0NodW5rcxAQIAAAACgFASBUaGUgbWF4aW11bSBudW1iZXIgb2YgYHVubG9ja2luZ2AgY2h1bmtzIGEgW2BTdGFraW5nTGVkZ2VyYF0gY2FuCQEgaGF2ZS4gRWZmZWN0aXZlbHkgZGV0ZXJtaW5lcyBob3cgbWFueSB1bmlxdWUgZXJhcyBhIHN0YWtlciBtYXkgYmU4IHVuYm9uZGluZyBpbi4A+CBOb3RlOiBgTWF4VW5sb2NraW5nQ2h1bmtzYCBpcyB1c2VkIGFzIHRoZSB1cHBlciBib3VuZCBmb3IgdGhlAQEgYEJvdW5kZWRWZWNgIGl0ZW0gYFN0YWtpbmdMZWRnZXIudW5sb2NraW5nYC4gU2V0dGluZyB0aGlzIHZhbHVlBQEgbG93ZXIgdGhhbiB0aGUgZXhpc3RpbmcgdmFsdWUgY2FuIGxlYWQgdG8gaW5jb25zaXN0ZW5jaWVzIGluIHRoZQkBIGBTdGFraW5nTGVkZ2VyYCBhbmQgd2lsbCBuZWVkIHRvIGJlIGhhbmRsZWQgcHJvcGVybHkgaW4gYSBydW50aW1lBQEgbWlncmF0aW9uLiBUaGUgdGVzdCBgcmVkdWNpbmdfbWF4X3VubG9ja2luZ19jaHVua3NfYWJydXB0YCBzaG93czQgdGhpcyBlZmZlY3QuAAGFCgAEPEN1cnJlbmN5QmFsYW5jZRgIUQEgSnVzdCB0aGUgYEN1cnJlbmN5OjpCYWxhbmNlYCB0eXBlOyB3ZSBoYXZlIHRoaXMgaXRlbSB0byBhbGxvdyB1cyB0byBjb25zdHJhaW4gaXQgdG80IGBGcm9tPHU2ND5gLgAHAAAgT2ZmZW5jZXMBIE9mZmVuY2VzCBxSZXBvcnRzAAEEBTSJCgQABEkBIFRoZSBwcmltYXJ5IHN0cnVjdHVyZSB0aGF0IGhvbGRzIGFsbCBvZmZlbmNlIHJlY29yZHMga2V5ZWQgYnkgcmVwb3J0IGlkZW50aWZpZXJzLgBYQ29uY3VycmVudFJlcG9ydHNJbmRleAEBCAUFkQrJAQQABCkBIEEgdmVjdG9yIG9mIHJlcG9ydHMgb2YgdGhlIHNhbWUga2luZCB0aGF0IGhhcHBlbmVkIGF0IHRoZSBzYW1lIHRpbWUgc2xvdC4AAAHIAAAABExJZGVudGlmaWNhdGlvblR1cGxljQoEmCBGdWxsIGlkZW50aWZpY2F0aW9uIG9mIHRoZSB2YWxpZGF0b3IuAAgAAChIaXN0b3JpY2FsAShIaXN0b3JpY2FsCEhIaXN0b3JpY2FsU2Vzc2lvbnMAAQQFEHUHBAAEXQEgTWFwcGluZyBmcm9tIGhpc3RvcmljYWwgc2Vzc2lvbiBpbmRpY2VzIHRvIHNlc3Npb24tZGF0YSByb290IGhhc2ggYW5kIHZhbGlkYXRvciBjb3VudC4ALFN0b3JlZFJhbmdlAACEBAAE5CBUaGUgcmFuZ2Ugb2YgaGlzdG9yaWNhbCBzZXNzaW9ucyB3ZSBzdG9yZS4gW2ZpcnN0LCBsYXN0KQAAAdAAAAAESEZ1bGxJZGVudGlmaWNhdGlvblEKBJggRnVsbCBpZGVudGlmaWNhdGlvbiBvZiB0aGUgdmFsaWRhdG9yLgAhAAAcU2Vzc2lvbgEcU2Vzc2lvbhwoVmFsaWRhdG9ycwEABQIEAAR8IFRoZSBjdXJyZW50IHNldCBvZiB2YWxpZGF0b3JzLgAwQ3VycmVudEluZGV4AQAQEAAAAAAEeCBDdXJyZW50IGluZGV4IG9mIHRoZSBzZXNzaW9uLgA0UXVldWVkQ2hhbmdlZAEAIAQACDkBIFRydWUgaWYgdGhlIHVuZGVybHlpbmcgZWNvbm9taWMgaWRlbnRpdGllcyBvciB3ZWlnaHRpbmcgYmVoaW5kIHRoZSB2YWxpZGF0b3JzpCBoYXMgY2hhbmdlZCBpbiB0aGUgcXVldWVkIHZhbGlkYXRvciBzZXQuAChRdWV1ZWRLZXlzAQCVCgQACD0BIFRoZSBxdWV1ZWQga2V5cyBmb3IgdGhlIG5leHQgc2Vzc2lvbi4gV2hlbiB0aGUgbmV4dCBzZXNzaW9uIGJlZ2lucywgdGhlc2Uga2V5c+Agd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSB0aGUgdmFsaWRhdG9yJ3Mgc2Vzc2lvbiBrZXlzLgBIRGlzYWJsZWRWYWxpZGF0b3JzAQCdCgQAFIAgSW5kaWNlcyBvZiBkaXNhYmxlZCB2YWxpZGF0b3JzLgA9ASBUaGUgdmVjIGlzIGFsd2F5cyBrZXB0IHNvcnRlZCBzbyB0aGF0IHdlIGNhbiBmaW5kIHdoZXRoZXIgYSBnaXZlbiB2YWxpZGF0b3IgaXM9ASBkaXNhYmxlZCB1c2luZyBiaW5hcnkgc2VhcmNoLiBJdCBnZXRzIGNsZWFyZWQgd2hlbiBgb25fc2Vzc2lvbl9lbmRpbmdgIHJldHVybnNkIGEgbmV3IHNldCBvZiBpZGVudGl0aWVzLgAgTmV4dEtleXMAAQQFAE0CBAAEnCBUaGUgbmV4dCBzZXNzaW9uIGtleXMgZm9yIGEgdmFsaWRhdG9yLgAgS2V5T3duZXIAAQQFqQoABAAECQEgVGhlIG93bmVyIG9mIGEga2V5LiBUaGUga2V5IGlzIHRoZSBgS2V5VHlwZUlkYCArIHRoZSBlbmNvZGVkIGtleS4AAUkCAAHUAAQoS2V5RGVwb3NpdBhAAAAAAAAAAAAAAAAAAAAAAASkIFRoZSBhbW91bnQgdG8gYmUgaGVsZCB3aGVuIHNldHRpbmcga2V5cy4AAbEKAAgsVmFsaWRhdG9ySWQABHQgQSBzdGFibGUgSUQgZm9yIGEgdmFsaWRhdG9yLhBLZXlzTQIEKCBUaGUga2V5cy4ACQAAHEdyYW5kcGEBHEdyYW5kcGEcFFN0YXRlAQC1CgQABJAgU3RhdGUgb2YgdGhlIGN1cnJlbnQgYXV0aG9yaXR5IHNldC4ANFBlbmRpbmdDaGFuZ2UAALkKBAAExCBQZW5kaW5nIGNoYW5nZTogKHNpZ25hbGVkIGF0LCBzY2hlZHVsZWQgY2hhbmdlKS4AKE5leHRGb3JjZWQAABAEAAS8IG5leHQgYmxvY2sgbnVtYmVyIHdoZXJlIHdlIGNhbiBmb3JjZSBhIGNoYW5nZS4AHFN0YWxsZWQAAIQEAASQIGB0cnVlYCBpZiB3ZSBhcmUgY3VycmVudGx5IHN0YWxsZWQuADBDdXJyZW50U2V0SWQBADAgAAAAAAAAAAAIXQEgVGhlIG51bWJlciBvZiBjaGFuZ2VzIChib3RoIGluIHRlcm1zIG9mIGtleXMgYW5kIHVuZGVybHlpbmcgZWNvbm9taWMgcmVzcG9uc2liaWxpdGllcynEIGluIHRoZSAic2V0IiBvZiBHcmFuZHBhIHZhbGlkYXRvcnMgZnJvbSBnZW5lc2lzLgAwU2V0SWRTZXNzaW9uAAEEBTAQBAAoWQEgQSBtYXBwaW5nIGZyb20gZ3JhbmRwYSBzZXQgSUQgdG8gdGhlIGluZGV4IG9mIHRoZSAqbW9zdCByZWNlbnQqIHNlc3Npb24gZm9yIHdoaWNoIGl0c2ggbWVtYmVycyB3ZXJlIHJlc3BvbnNpYmxlLgBFASBUaGlzIGlzIG9ubHkgdXNlZCBmb3IgdmFsaWRhdGluZyBlcXVpdm9jYXRpb24gcHJvb2ZzLiBBbiBlcXVpdm9jYXRpb24gcHJvb2YgbXVzdE0BIGNvbnRhaW5zIGEga2V5LW93bmVyc2hpcCBwcm9vZiBmb3IgYSBnaXZlbiBzZXNzaW9uLCB0aGVyZWZvcmUgd2UgbmVlZCBhIHdheSB0byB0aWVFASB0b2dldGhlciBzZXNzaW9ucyBhbmQgR1JBTkRQQSBzZXQgaWRzLCBpLmUuIHdlIG5lZWQgdG8gdmFsaWRhdGUgdGhhdCBhIHZhbGlkYXRvckEBIHdhcyB0aGUgb3duZXIgb2YgYSBnaXZlbiBrZXkgb24gYSBnaXZlbiBzZXNzaW9uLCBhbmQgd2hhdCB0aGUgYWN0aXZlIHNldCBJRCB3YXNUIGR1cmluZyB0aGF0IHNlc3Npb24uALggVFdPWC1OT1RFOiBgU2V0SWRgIGlzIG5vdCB1bmRlciB1c2VyIGNvbnRyb2wuACxBdXRob3JpdGllcwEAvQoEAASEIFRoZSBjdXJyZW50IGxpc3Qgb2YgYXV0aG9yaXRpZXMuAAFlAgAB2AAMOE1heEF1dGhvcml0aWVzEBCghgEABFwgTWF4IEF1dGhvcml0aWVzIGluIHVzZQA0TWF4Tm9taW5hdG9ycxAQAAIAAATUIFRoZSBtYXhpbXVtIG51bWJlciBvZiBub21pbmF0b3JzIGZvciBlYWNoIHZhbGlkYXRvci4AWE1heFNldElkU2Vzc2lvbkVudHJpZXMwIKgAAAAAAAAAGDkBIFRoZSBtYXhpbXVtIG51bWJlciBvZiBlbnRyaWVzIHRvIGtlZXAgaW4gdGhlIHNldCBpZCB0byBzZXNzaW9uIGluZGV4IG1hcHBpbmcuADEBIFNpbmNlIHRoZSBgU2V0SWRTZXNzaW9uYCBtYXAgaXMgb25seSB1c2VkIGZvciB2YWxpZGF0aW5nIGVxdWl2b2NhdGlvbnMgdGhpcykBIHZhbHVlIHNob3VsZCByZWxhdGUgdG8gdGhlIGJvbmRpbmcgZHVyYXRpb24gb2Ygd2hhdGV2ZXIgc3Rha2luZyBzeXN0ZW0gaXM1ASBiZWluZyB1c2VkIChpZiBhbnkpLiBJZiBlcXVpdm9jYXRpb24gaGFuZGxpbmcgaXMgbm90IGVuYWJsZWQgdGhlbiB0aGlzIHZhbHVlNCBjYW4gYmUgemVyby4AAcEKAAQ0S2V5T3duZXJQcm9vZuEBDBUBIFRoZSBwcm9vZiBvZiBrZXkgb3duZXJzaGlwLCB1c2VkIGZvciB2YWxpZGF0aW5nIGVxdWl2b2NhdGlvbiByZXBvcnRz/CBUaGUgcHJvb2YgaW5jbHVkZSB0aGUgc2Vzc2lvbiBpbmRleCBhbmQgdmFsaWRhdG9yIGNvdW50IG9mIHRoZbAgc2Vzc2lvbiBhdCB3aGljaCB0aGUgZXF1aXZvY2F0aW9uIG9jY3VycmVkLgALAABIQXV0aG9yaXR5RGlzY292ZXJ5AUhBdXRob3JpdHlEaXNjb3ZlcnkIEEtleXMBAMUKBAAEjCBLZXlzIG9mIHRoZSBjdXJyZW50IGF1dGhvcml0eSBzZXQuACBOZXh0S2V5cwEAxQoEAASAIEtleXMgb2YgdGhlIG5leHQgYXV0aG9yaXR5IHNldC4AAAAAAAAADQAAIFRyZWFzdXJ5ASBUcmVhc3VyeRw0UHJvcG9zYWxDb3VudAEAEBAAAAAAEEEBIERFUFJFQ0FURUQ6IGFzc29jaWF0ZWQgd2l0aCBgc3BlbmRfbG9jYWxgIGNhbGwgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBNYXkgMjAyNS5pASBSZWZlciB0byA8aHR0cHM6Ly9naXRodWIuY29tL3Bhcml0eXRlY2gvcG9sa2Fkb3Qtc2RrL3B1bGwvNTk2MT4gZm9yIG1pZ3JhdGlvbiB0byBgc3BlbmRgLgCkIE51bWJlciBvZiBwcm9wb3NhbHMgdGhhdCBoYXZlIGJlZW4gbWFkZS4AJFByb3Bvc2FscwABBAUQzQoEABBBASBERVBSRUNBVEVEOiBhc3NvY2lhdGVkIHdpdGggYHNwZW5kX2xvY2FsYCBjYWxsIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gTWF5IDIwMjUuaQEgUmVmZXIgdG8gPGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJpdHl0ZWNoL3BvbGthZG90LXNkay9wdWxsLzU5NjE+IGZvciBtaWdyYXRpb24gdG8gYHNwZW5kYC4AfCBQcm9wb3NhbHMgdGhhdCBoYXZlIGJlZW4gbWFkZS4ALERlYWN0aXZhdGVkAQAYQAAAAAAAAAAAAAAAAAAAAAAE8CBUaGUgYW1vdW50IHdoaWNoIGhhcyBiZWVuIHJlcG9ydGVkIGFzIGluYWN0aXZlIHRvIEN1cnJlbmN5LgAkQXBwcm92YWxzAQDRCgQAEEEBIERFUFJFQ0FURUQ6IGFzc29jaWF0ZWQgd2l0aCBgc3BlbmRfbG9jYWxgIGNhbGwgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBNYXkgMjAyNS5pASBSZWZlciB0byA8aHR0cHM6Ly9naXRodWIuY29tL3Bhcml0eXRlY2gvcG9sa2Fkb3Qtc2RrL3B1bGwvNTk2MT4gZm9yIG1pZ3JhdGlvbiB0byBgc3BlbmRgLgD4IFByb3Bvc2FsIGluZGljZXMgdGhhdCBoYXZlIGJlZW4gYXBwcm92ZWQgYnV0IG5vdCB5ZXQgYXdhcmRlZC4AKFNwZW5kQ291bnQBABAQAAAAAASkIFRoZSBjb3VudCBvZiBzcGVuZHMgdGhhdCBoYXZlIGJlZW4gbWFkZS4AGFNwZW5kcwABBAUQ1QoEAATQIFNwZW5kcyB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBhbmQgYmVpbmcgcHJvY2Vzc2VkLgA8TGFzdFNwZW5kUGVyaW9kAAAQBAAE1CBUaGUgYmxvY2tudW1iZXIgZm9yIHRoZSBsYXN0IHRyaWdnZXJlZCBzcGVuZCBwZXJpb2QuAAGRAggDApUBVGhlIGBzcGVuZF9sb2NhbGAgY2FsbCB3aWxsIGJlIHJlbW92ZWQgYnkgTWF5IDIwMjUuIE1pZ3JhdGUgdG8gdGhlIG5ldyBmbG93IGFuZCB1c2UgdGhlIGBzcGVuZGAgY2FsbC4ABAK1AVRoZSBgcmVtb3ZlX2FwcHJvdmFsYCBjYWxsIHdpbGwgYmUgcmVtb3ZlZCBieSBNYXkgMjAyNS4gSXQgYXNzb2NpYXRlZCB3aXRoIHRoZSBkZXByZWNhdGVkIGBzcGVuZF9sb2NhbGAgY2FsbC4AAegAGCxTcGVuZFBlcmlvZBAQAEYFAASIIFBlcmlvZCBiZXR3ZWVuIHN1Y2Nlc3NpdmUgc3BlbmRzLgAQQnVybt0KEBAnAAAEEQEgUGVyY2VudGFnZSBvZiBzcGFyZSBmdW5kcyAoaWYgYW55KSB0aGF0IGFyZSBidXJudCBwZXIgc3BlbmQgcGVyaW9kLgAgUGFsbGV0SWThCiBweS90cnNyeQQZASBUaGUgdHJlYXN1cnkncyBwYWxsZXQgaWQsIHVzZWQgZm9yIGRlcml2aW5nIGl0cyBzb3ZlcmVpZ24gYWNjb3VudCBJRC4AME1heEFwcHJvdmFscxAQZAAAABhBASBERVBSRUNBVEVEOiBhc3NvY2lhdGVkIHdpdGggYHNwZW5kX2xvY2FsYCBjYWxsIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gTWF5IDIwMjUuaQEgUmVmZXIgdG8gPGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJpdHl0ZWNoL3BvbGthZG90LXNkay9wdWxsLzU5NjE+IGZvciBtaWdyYXRpb24gdG8gYHNwZW5kYC4AFQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGFwcHJvdmFscyB0aGF0IGNhbiB3YWl0IGluIHRoZSBzcGVuZGluZyBxdWV1ZS4ATQEgTk9URTogVGhpcyBwYXJhbWV0ZXIgaXMgYWxzbyB1c2VkIHdpdGhpbiB0aGUgQm91bnRpZXMgUGFsbGV0IGV4dGVuc2lvbiBpZiBlbmFibGVkLgAwUGF5b3V0UGVyaW9kEBCAlwYABBkBIFRoZSBwZXJpb2QgZHVyaW5nIHdoaWNoIGFuIGFwcHJvdmVkIHRyZWFzdXJ5IHNwZW5kIGhhcyB0byBiZSBjbGFpbWVkLgAscG90X2FjY291bnQAgG1vZGxweS90cnNyeQAAAAAAAAAAAAAAAAAAAAAAAAAABKAgR2V0cyB0aGlzIHBhbGxldCdzIGRlcml2ZWQgcG90IGFjY291bnQuAAHlCgAIJEFzc2V0S2luZOwELQEgVHlwZSBwYXJhbWV0ZXIgcmVwcmVzZW50aW5nIHRoZSBhc3NldCBraW5kcyB0byBiZSBzcGVudCBmcm9tIHRoZSB0cmVhc3VyeS4sQmVuZWZpY2lhcnmNAQRdASBUeXBlIHBhcmFtZXRlciB1c2VkIHRvIGlkZW50aWZ5IHRoZSBiZW5lZmljaWFyaWVzIGVsaWdpYmxlIHRvIHJlY2VpdmUgdHJlYXN1cnkgc3BlbmRzLgATAABAQ29udmljdGlvblZvdGluZwFAQ29udmljdGlvblZvdGluZwgkVm90aW5nRm9yAQEIBQWxB+kK2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAh1ASBBbGwgdm90aW5nIGZvciBhIHBhcnRpY3VsYXIgdm90ZXIgaW4gYSBwYXJ0aWN1bGFyIHZvdGluZyBjbGFzcy4gV2Ugc3RvcmUgdGhlIGJhbGFuY2UgZm9yIHRoZZwgbnVtYmVyIG9mIHZvdGVzIHRoYXQgd2UgaGF2ZSByZWNvcmRlZC4ANENsYXNzTG9ja3NGb3IBAQQFAAkLBAAMaQEgVGhlIHZvdGluZyBjbGFzc2VzIHdoaWNoIGhhdmUgYSBub24temVybyBsb2NrIHJlcXVpcmVtZW50IGFuZCB0aGUgbG9jayBhbW91bnRzIHdoaWNoIHRoZXltASByZXF1aXJlLiBUaGUgYWN0dWFsIGFtb3VudCBsb2NrZWQgb24gYmVoYWxmIG9mIHRoaXMgcGFsbGV0IHNob3VsZCBhbHdheXMgYmUgdGhlIG1heGltdW0gb2YsIHRoaXMgbGlzdC4AAZUCAAGRAQAIIE1heFZvdGVzEBAAAgAAEPAgVGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbmN1cnJlbnQgdm90ZXMgYW4gYWNjb3VudCBtYXkgaGF2ZS4AVQEgQWxzbyB1c2VkIHRvIGNvbXB1dGUgd2VpZ2h0LCBhbiBvdmVybHkgbGFyZ2UgdmFsdWUgY2FuIGxlYWQgdG8gZXh0cmluc2ljcyB3aXRoIGxhcmdlwCB3ZWlnaHQgZXN0aW1hdGlvbjogc2VlIGBkZWxlZ2F0ZWAgZm9yIGluc3RhbmNlLgBEVm90ZUxvY2tpbmdQZXJpb2QQEMCJAQAQkCBUaGUgbWluaW11bSBwZXJpb2Qgb2Ygdm90ZSBsb2NraW5nLgBlASBJdCBzaG91bGQgYmUgbm8gc2hvcnRlciB0aGFuIGVuYWN0bWVudCBwZXJpb2QgdG8gZW5zdXJlIHRoYXQgaW4gdGhlIGNhc2Ugb2YgYW4gYXBwcm92YWwsSQEgdGhvc2Ugc3VjY2Vzc2Z1bCB2b3RlcnMgYXJlIGxvY2tlZCBpbnRvIHRoZSBjb25zZXF1ZW5jZXMgdGhhdCB0aGVpciB2b3RlcyBlbnRhaWwuAAEVCwAAABQAACRSZWZlcmVuZGEBJFJlZmVyZW5kYRQ8UmVmZXJlbmR1bUNvdW50AQAQEAAAAAAEMQEgVGhlIG5leHQgZnJlZSByZWZlcmVuZHVtIGluZGV4LCBha2EgdGhlIG51bWJlciBvZiByZWZlcmVuZGEgc3RhcnRlZCBzbyBmYXIuAERSZWZlcmVuZHVtSW5mb0ZvcgABBAIQGQsEAAS0IEluZm9ybWF0aW9uIGNvbmNlcm5pbmcgYW55IGdpdmVuIHJlZmVyZW5kdW0uAChUcmFja1F1ZXVlAQEEBZ0BOQsEABBdASBUaGUgc29ydGVkIGxpc3Qgb2YgcmVmZXJlbmRhIHJlYWR5IHRvIGJlIGRlY2lkZWQgYnV0IG5vdCB5ZXQgYmVpbmcgZGVjaWRlZCwgb3JkZXJlZCBieXwgY29udmljdGlvbi13ZWlnaHRlZCBhcHByb3ZhbHMuAEEBIFRoaXMgc2hvdWxkIGJlIGVtcHR5IGlmIGBEZWNpZGluZ0NvdW50YCBpcyBsZXNzIHRoYW4gYFRyYWNrSW5mbzo6bWF4X2RlY2lkaW5nYC4ANERlY2lkaW5nQ291bnQBAQQFnQEQEAAAAAAExCBUaGUgbnVtYmVyIG9mIHJlZmVyZW5kYSBiZWluZyBkZWNpZGVkIGN1cnJlbnRseS4AKE1ldGFkYXRhT2YAAQQCEDQEABgFASBUaGUgbWV0YWRhdGEgaXMgYSBnZW5lcmFsIGluZm9ybWF0aW9uIGNvbmNlcm5pbmcgdGhlIHJlZmVyZW5kdW0uSQEgVGhlIGBIYXNoYCByZWZlcnMgdG8gdGhlIHByZWltYWdlIG9mIHRoZSBgUHJlaW1hZ2VzYCBwcm92aWRlciB3aGljaCBjYW4gYmUgYSBKU09OiCBkdW1wIG9yIElQRlMgaGFzaCBvZiBhIEpTT04gZmlsZS4AdQEgQ29uc2lkZXIgYSBnYXJiYWdlIGNvbGxlY3Rpb24gZm9yIGEgbWV0YWRhdGEgb2YgZmluaXNoZWQgcmVmZXJlbmR1bXMgdG8gYHVucmVxdWVzdGAgKHJlbW92ZSlEIGxhcmdlIHByZWltYWdlcy4AAaECAAGhAQAURFN1Ym1pc3Npb25EZXBvc2l0GEAA5AtUAgAAAAAAAAAAAAAABDUBIFRoZSBtaW5pbXVtIGFtb3VudCB0byBiZSB1c2VkIGFzIGEgZGVwb3NpdCBmb3IgYSBwdWJsaWMgcmVmZXJlbmR1bSBwcm9wb3NhbC4AJE1heFF1ZXVlZBAQZAAAAATkIE1heGltdW0gc2l6ZSBvZiB0aGUgcmVmZXJlbmR1bSBxdWV1ZSBmb3IgYSBzaW5nbGUgdHJhY2suAERVbmRlY2lkaW5nVGltZW91dBAQgBMDAAhVASBUaGUgbnVtYmVyIG9mIGJsb2NrcyBhZnRlciBzdWJtaXNzaW9uIHRoYXQgYSByZWZlcmVuZHVtIG11c3QgYmVnaW4gYmVpbmcgZGVjaWRlZCBieS7kIE9uY2UgdGhpcyBwYXNzZXMsIHRoZW4gYW55b25lIG1heSBjYW5jZWwgdGhlIHJlZmVyZW5kdW0uADRBbGFybUludGVydmFsEBABAAAADF0BIFF1YW50aXphdGlvbiBsZXZlbCBmb3IgdGhlIHJlZmVyZW5kdW0gd2FrZXVwIHNjaGVkdWxlci4gQSBoaWdoZXIgbnVtYmVyIHdpbGwgcmVzdWx0IGluXQEgZmV3ZXIgc3RvcmFnZSByZWFkcy93cml0ZXMgbmVlZGVkIGZvciBzbWFsbGVyIHZvdGVycywgYnV0IGFsc28gcmVzdWx0IGluIGRlbGF5cyB0byB0aGVVASBhdXRvbWF0aWMgcmVmZXJlbmR1bSBzdGF0dXMgY2hhbmdlcy4gRXhwbGljaXQgc2VydmljaW5nIGluc3RydWN0aW9ucyBhcmUgdW5hZmZlY3RlZC4AGFRyYWNrc0ULtRlAAABkcm9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAMFv8oYjAAAAAAAAAAAAsAQAAAAnBgBAOAAAQDgAAAAAypo7AMqaOwDKmjsAAMqaOwDKmjsAypo7AQBkd2hpdGVsaXN0ZWRfY2FsbGVyAAAAAAAAAGQAAAAAQHoQ81oAAAAAAAAAAAAALAEAAAAnBgBkAAAAZAAAAALslyUQAAAAAHtXPBcAAAAAQjkvEgAAAAACDgCEAAAAAADW5h8BAAAAADlieQIAAAAAAgBkd2lzaF9mb3JfY2hhbmdlAAAAAAAAAAAAAAoAAAAAgPQg5rUAAAAAAAAAAAAAsAQAAAAnBgBAOAAAZAAAAAAAypo7AMqaOwDKmjsAAMqaOwDKmjsAypo7CgBkc3Rha2luZ19hZG1pbgAAAAAAAAAAAAAAAAoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////CwBkdHJlYXN1cmVyAAAAAAAAAAAAAAAAAAAAAAoAAAAAoHJOGAkAAAAAAAAAAAAAsAQAAAAnBgDAiQEAQDgAAAKQ1z4NAAAAAFdD3hMAAAAAVEPeEwAAAAAAAMqaOwAAAAAAZc0dDABkbGVhc2VfYWRtaW4AAAAAAAAAAAAAAAAAAAoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////DQBkZmVsbG93c2hpcF9hZG1pbgAAAAAAAAAAAAoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////DgBkZ2VuZXJhbF9hZG1pbgAAAAAAAAAAAAAAAAoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAAKQ1z4NAAAAAFdD3hMAAAAAVEPeEwAAAAACWaL0AgAAAACjKWsFAAAAAC5rSv3/////DwBkYXVjdGlvbl9hZG1pbgAAAAAAAAAAAAAAAAoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAAKQ1z4NAAAAAFdD3hMAAAAAVEPeEwAAAAACWaL0AgAAAACjKWsFAAAAAC5rSv3/////FABkcmVmZXJlbmR1bV9jYW5jZWxsZXIAAAAAAOgDAAAAQHoQ81oAAAAAAAAAAAAAsAQAAMCJAQAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////FQBkcmVmZXJlbmR1bV9raWxsZXIAAAAAAAAAAOgDAAAAQGNSv8YBAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////HgBkc21hbGxfdGlwcGVyAAAAAAAAAAAAAAAAAMgAAAAA5AtUAgAAAAAAAAAAAAAACgAAAMCJAQBkAAAACgAAAABJkUkVAGXNHQDKmjsC+boYAAAAAAAqTTEAAAAAAGtZ5///////HwBkYmlnX3RpcHBlcgAAAAAAAAAAAAAAAAAAAGQAAAAA6HZIFwAAAAAAAAAAAAAAZAAAAMCJAQBYAgAAZAAAAABJkUkVAGXNHQDKmjsCaU8/AAAAAAA1ln0AAAAAAOU0wf//////IABkc21hbGxfc3BlbmRlcgAAAAAAAAAAAAAAADIAAAAAEKXU6AAAAAAAAAAAAAAAYAkAAAAnBgCAcAAAQDgAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////IQBkbWVkaXVtX3NwZW5kZXIAAAAAAAAAAAAAADIAAAAAIEqp0QEAAAAAAAAAAAAAYAkAAAAnBgAA4QAAQDgAAABbAfYwAGXNHQDKmjsCEWHbAAAAAAC/0aoBAAAAACCXKv//////IgBkYmlnX3NwZW5kZXIAAAAAAAAAAAAAAAAAADIAAAAAQJRSowMAAAAAAAAAAAAAYAkAAAAnBgDAiQEAQDgAAAAAypo7AGXNHQDKmjsCQTywAQAAAAB1XTQDAAAAAEXRZf7/////DEggQSBsaXN0IG9mIHRyYWNrcy4AXQEgTm90ZTogaWYgdGhlIHRyYWNrcyBhcmUgZHluYW1pYywgdGhlIHZhbHVlIGluIHRoZSBzdGF0aWMgbWV0YWRhdGEgbWlnaHQgYmUgaW5hY2N1cmF0ZS4AAV0LAAwsUnVudGltZUNhbGypAQAUVm90ZXMYBMwgVGhlIGNvdW50aW5nIHR5cGUgZm9yIHZvdGVzLiBVc3VhbGx5IGp1c3QgYmFsYW5jZS4UVGFsbHkJCARMIFRoZSB0YWxseWluZyB0eXBlLgAVAAAcT3JpZ2lucwAAAAAAAAAWAAAkV2hpdGVsaXN0ASRXaGl0ZWxpc3QEPFdoaXRlbGlzdGVkQ2FsbAABBAU0kAQAAAABxQIAAQ0IAAABYQsABCxSdW50aW1lQ2FsbKkBBGwgVGhlIG92ZXJhcmNoaW5nIGNhbGwgdHlwZS4AFwAAGENsYWltcwEYQ2xhaW1zFBhDbGFpbXMAAQQG1QIYBAAAABRUb3RhbAEAGEAAAAAAAAAAAAAAAAAAAAAAAAAcVmVzdGluZwABBAbVAt0CBAAQeCBWZXN0aW5nIHNjaGVkdWxlIGZvciBhIGNsYWltLg0BIEZpcnN0IGJhbGFuY2UgaXMgdGhlIHRvdGFsIGFtb3VudCB0aGF0IHNob3VsZCBiZSBoZWxkIGZvciB2ZXN0aW5nLuQgU2Vjb25kIGJhbGFuY2UgaXMgaG93IG11Y2ggc2hvdWxkIGJlIHVubG9ja2VkIHBlciBibG9jay7MIFRoZSBibG9jayBudW1iZXIgaXMgd2hlbiB0aGUgdmVzdGluZyBzaG91bGQgc3RhcnQuABxTaWduaW5nAAEEBtUC5QIEAATAIFRoZSBzdGF0ZW1lbnQga2luZCB0aGF0IG11c3QgYmUgc2lnbmVkLCBpZiBhbnkuACRQcmVjbGFpbXMAAQQGANUCBAAELQEgUHJlLWNsYWltZWQgRXRoZXJldW0gYWNjb3VudHMsIGJ5IHRoZSBBY2NvdW50IElEIHRoYXQgdGhleSBhcmUgY2xhaW1lZCB0by4AAckCAAEdCAAEGFByZWZpeDh8eFBheSBQQVNzIHRvIHRoZSBQYXNlbyBhY2NvdW50OgAAAWULAAAAGAAAHFZlc3RpbmcBHFZlc3RpbmcIHFZlc3RpbmcAAQQCAGkLBAAE2CBJbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhlIHZlc3Rpbmcgb2YgYSBnaXZlbiBhY2NvdW50LgA4U3RvcmFnZVZlcnNpb24BAHELBAAMfCBTdG9yYWdlIHZlcnNpb24gb2YgdGhlIHBhbGxldC4AMQEgTmV3IG5ldHdvcmtzIHN0YXJ0IHdpdGggbGF0ZXN0IHZlcnNpb24sIGFzIGRldGVybWluZWQgYnkgdGhlIGdlbmVzaXMgYnVpbGQuAAHpAgABIQgACERNaW5WZXN0ZWRUcmFuc2ZlchhAAOQLVAIAAAAAAAAAAAAAAAToIFRoZSBtaW5pbXVtIGFtb3VudCB0cmFuc2ZlcnJlZCB0byBjYWxsIGB2ZXN0ZWRfdHJhbnNmZXJgLgBMTWF4VmVzdGluZ1NjaGVkdWxlcxAQHAAAAAAAAXULAAAAGQAAHFV0aWxpdHkAAfECAAElCAAETGJhdGNoZWRfY2FsbHNfbGltaXQQEKoqAAAEqCBUaGUgbGltaXQgb24gdGhlIG51bWJlciBvZiBiYXRjaGVkIGNhbGxzLgABeQsACCxSdW50aW1lQ2FsbKkBBGwgVGhlIG92ZXJhcmNoaW5nIGNhbGwgdHlwZS40UGFsbGV0c09yaWdpbqUCBPAgVGhlIGNhbGxlciBvcmlnaW4sIG92ZXJhcmNoaW5nIHR5cGUgb2YgYWxsIHBhbGxldHMgb3JpZ2lucy4AGgAAFFByb3h5ARRQcm94eQgcUHJveGllcwEBBAUAfQtEAAAAAAAAAAAAAAAAAAAAAAAIRQEgVGhlIHNldCBvZiBhY2NvdW50IHByb3hpZXMuIE1hcHMgdGhlIGFjY291bnQgd2hpY2ggaGFzIGRlbGVnYXRlZCB0byB0aGUgYWNjb3VudHMhASB3aGljaCBhcmUgYmVpbmcgZGVsZWdhdGVkIHRvLCB0b2dldGhlciB3aXRoIHRoZSBhbW91bnQgaGVsZCBvbiBkZXBvc2l0LgA0QW5ub3VuY2VtZW50cwEBBAUAjQtEAAAAAAAAAAAAAAAAAAAAAAAErCBUaGUgYW5ub3VuY2VtZW50cyBtYWRlIGJ5IHRoZSBwcm94eSAoa2V5KS4AAfkCAAEpCAAYQFByb3h5RGVwb3NpdEJhc2UYQACEspUuAAAAAAAAAAAAAAAQEQEgVGhlIGJhc2UgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCB0byByZXNlcnZlIGZvciBjcmVhdGluZyBhIHByb3h5LgABASBUaGlzIGlzIGhlbGQgZm9yIGFuIGFkZGl0aW9uYWwgc3RvcmFnZSBpdGVtIHdob3NlIHZhbHVlIHNpemUgaXMlASBgc2l6ZW9mKEJhbGFuY2UpYCBieXRlcyBhbmQgd2hvc2Uga2V5IHNpemUgaXMgYHNpemVvZihBY2NvdW50SWQpYCBieXRlcy4ASFByb3h5RGVwb3NpdEZhY3RvchhAgGarEwAAAAAAAAAAAAAAABS8IFRoZSBhbW91bnQgb2YgY3VycmVuY3kgbmVlZGVkIHBlciBwcm94eSBhZGRlZC4ANQEgVGhpcyBpcyBoZWxkIGZvciBhZGRpbmcgMzIgYnl0ZXMgcGx1cyBhbiBpbnN0YW5jZSBvZiBgUHJveHlUeXBlYCBtb3JlIGludG8gYWEBIHByZS1leGlzdGluZyBzdG9yYWdlIHZhbHVlLiBUaHVzLCB3aGVuIGNvbmZpZ3VyaW5nIGBQcm94eURlcG9zaXRGYWN0b3JgIG9uZSBzaG91bGQgdGFrZfQgaW50byBhY2NvdW50IGAzMiArIHByb3h5X3R5cGUuZW5jb2RlKCkubGVuKClgIGJ5dGVzIG9mIGRhdGEuAChNYXhQcm94aWVzEBAgAAAABPAgVGhlIG1heGltdW0gYW1vdW50IG9mIHByb3hpZXMgYWxsb3dlZCBmb3IgYSBzaW5nbGUgYWNjb3VudC4AKE1heFBlbmRpbmcQECAAAAAERQEgVGhlIG1heGltdW0gYW1vdW50IG9mIHRpbWUtZGVsYXllZCBhbm5vdW5jZW1lbnRzIHRoYXQgYXJlIGFsbG93ZWQgdG8gYmUgcGVuZGluZy4AXEFubm91bmNlbWVudERlcG9zaXRCYXNlGEAAhLKVLgAAAAAAAAAAAAAAEDEBIFRoZSBiYXNlIGFtb3VudCBvZiBjdXJyZW5jeSBuZWVkZWQgdG8gcmVzZXJ2ZSBmb3IgY3JlYXRpbmcgYW4gYW5ub3VuY2VtZW50LgBJASBUaGlzIGlzIGhlbGQgd2hlbiBhIG5ldyBzdG9yYWdlIGl0ZW0gaG9sZGluZyBhIGBCYWxhbmNlYCBpcyBjcmVhdGVkICh0eXBpY2FsbHkgMTYgIGJ5dGVzKS4AZEFubm91bmNlbWVudERlcG9zaXRGYWN0b3IYQADNVicAAAAAAAAAAAAAAAAQ1CBUaGUgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCBwZXIgYW5ub3VuY2VtZW50IG1hZGUuAFkBIFRoaXMgaXMgaGVsZCBmb3IgYWRkaW5nIGFuIGBBY2NvdW50SWRgLCBgSGFzaGAgYW5kIGBCbG9ja051bWJlcmAgKHR5cGljYWxseSA2OCBieXRlcymMIGludG8gYSBwcmUtZXhpc3Rpbmcgc3RvcmFnZSB2YWx1ZS4AAZ0LAAgsUnVudGltZUNhbGypAQRsIFRoZSBvdmVyYXJjaGluZyBjYWxsIHR5cGUuJFByb3h5VHlwZQEDEFUBIEEga2luZCBvZiBwcm94eTsgc3BlY2lmaWVkIHdpdGggdGhlIHByb3h5IGFuZCBwYXNzZWQgaW4gdG8gdGhlIGBJc1Byb3h5YWJsZWAgZmlsdGVyLlEBIFRoZSBpbnN0YW5jZSBmaWx0ZXIgZGV0ZXJtaW5lcyB3aGV0aGVyIGEgZ2l2ZW4gY2FsbCBtYXkgYmUgcHJveGllZCB1bmRlciB0aGlzIHR5cGUuAE0BIElNUE9SVEFOVDogYERlZmF1bHRgIG11c3QgYmUgcHJvdmlkZWQgYW5kIE1VU1QgQkUgdGhlIHRoZSAqbW9zdCBwZXJtaXNzaXZlKiB2YWx1ZS4IGAnXg0Zyeg71jA+gO6+jI8vFFIjZKhqnE3sDv7UO/BdEY2hlY2tfcGVybWlzc2lvbnMIEGNhbGypAShwcm94eV90eXBlAQMgBPQgQ2hlY2sgaWYgYSBgUnVudGltZUNhbGxgIGlzIGFsbG93ZWQgZm9yIGEgZ2l2ZW4gYFByb3h5VHlwZWAuABgJ14NGcnoO9YwPoDuvoyMXFLBgfWKvCjs7CtLF1VxYLGlzX3N1cGVyc2V0CCB0b19jaGVjawEDHGFnYWluc3QBAyAE9CBDaGVjayBpZiBvbmUgYFByb3h5VHlwZWAgaXMgYSBzdWJzZXQgb2YgYW5vdGhlciBgUHJveHlUeXBlYC4AHQAAIE11bHRpc2lnASBNdWx0aXNpZwQkTXVsdGlzaWdzAAEIBQJdB6ELBAAElCBUaGUgc2V0IG9mIG9wZW4gbXVsdGlzaWcgb3BlcmF0aW9ucy4AAQUDAAExCAAMLERlcG9zaXRCYXNlGEAAjGHFLgAAAAAAAAAAAAAAGFkBIFRoZSBiYXNlIGFtb3VudCBvZiBjdXJyZW5jeSBuZWVkZWQgdG8gcmVzZXJ2ZSBmb3IgY3JlYXRpbmcgYSBtdWx0aXNpZyBleGVjdXRpb24gb3IgdG+EIHN0b3JlIGEgZGlzcGF0Y2ggY2FsbCBmb3IgbGF0ZXIuAAEBIFRoaXMgaXMgaGVsZCBmb3IgYW4gYWRkaXRpb25hbCBzdG9yYWdlIGl0ZW0gd2hvc2UgdmFsdWUgc2l6ZSBpczEBIGA0ICsgc2l6ZW9mKChCbG9ja051bWJlciwgQmFsYW5jZSwgQWNjb3VudElkKSlgIGJ5dGVzIGFuZCB3aG9zZSBrZXkgc2l6ZSBpc4AgYDMyICsgc2l6ZW9mKEFjY291bnRJZClgIGJ5dGVzLgA0RGVwb3NpdEZhY3RvchhAANASEwAAAAAAAAAAAAAAAAxVASBUaGUgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCBwZXIgdW5pdCB0aHJlc2hvbGQgd2hlbiBjcmVhdGluZyBhIG11bHRpc2lnIGV4ZWN1dGlvbi4AJQEgVGhpcyBpcyBoZWxkIGZvciBhZGRpbmcgMzIgYnl0ZXMgbW9yZSBpbnRvIGEgcHJlLWV4aXN0aW5nIHN0b3JhZ2UgdmFsdWUuADhNYXhTaWduYXRvcmllcxAQZAAAAATsIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBzaWduYXRvcmllcyBhbGxvd2VkIGluIHRoZSBtdWx0aXNpZy4AAakLAAQsUnVudGltZUNhbGypAQRsIFRoZSBvdmVyYXJjaGluZyBjYWxsIHR5cGUuAB4AACBCb3VudGllcwEgQm91bnRpZXMQLEJvdW50eUNvdW50AQAQEAAAAAAEwCBOdW1iZXIgb2YgYm91bnR5IHByb3Bvc2FscyB0aGF0IGhhdmUgYmVlbiBtYWRlLgAgQm91bnRpZXMAAQQFEK0LBAAEeCBCb3VudGllcyB0aGF0IGhhdmUgYmVlbiBtYWRlLgBIQm91bnR5RGVzY3JpcHRpb25zAAEEBRC1CwQABIAgVGhlIGRlc2NyaXB0aW9uIG9mIGVhY2ggYm91bnR5LgA8Qm91bnR5QXBwcm92YWxzAQDRCgQABOwgQm91bnR5IGluZGljZXMgdGhhdCBoYXZlIGJlZW4gYXBwcm92ZWQgYnV0IG5vdCB5ZXQgZnVuZGVkLgABEQMAATUIACREQm91bnR5RGVwb3NpdEJhc2UYQADkC1QCAAAAAAAAAAAAAAAE6CBUaGUgYW1vdW50IGhlbGQgb24gZGVwb3NpdCBmb3IgcGxhY2luZyBhIGJvdW50eSBwcm9wb3NhbC4AYEJvdW50eURlcG9zaXRQYXlvdXREZWxheRAQAAAAAARZASBUaGUgZGVsYXkgcGVyaW9kIGZvciB3aGljaCBhIGJvdW50eSBiZW5lZmljaWFyeSBuZWVkIHRvIHdhaXQgYmVmb3JlIGNsYWltIHRoZSBwYXlvdXQuAEhCb3VudHlVcGRhdGVQZXJpb2QQEIDGEwAY9CBUaGUgdGltZSBsaW1pdCBmb3IgYSBjdXJhdG9yIHRvIGFjdCBiZWZvcmUgYSBib3VudHkgZXhwaXJlcy4AVQEgVGhlIHBlcmlvZCB0aGF0IHN0YXJ0cyB3aGVuIGEgY3VyYXRvciBpcyBhcHByb3ZlZCwgZHVyaW5nIHdoaWNoIHRoZXkgbXVzdCBleGVjdXRlIG9yVQEgdXBkYXRlIHRoZSBib3VudHkgdmlhIGBleHRlbmRfYm91bnR5X2V4cGlyeWAuIElmIG1pc3NlZCwgdGhlIGJvdW50eSBleHBpcmVzLCBhbmQgdGhlVQEgY3VyYXRvciBtYXkgYmUgc2xhc2hlZC4gSWYgYEJsb2NrTnVtYmVyRm9yOjpNQVhgLCBib3VudGllcyBzdGF5IGFjdGl2ZSBpbmRlZmluaXRlbHksuCByZW1vdmluZyB0aGUgbmVlZCBmb3IgYGV4dGVuZF9ib3VudHlfZXhwaXJ5YC4AYEN1cmF0b3JEZXBvc2l0TXVsdGlwbGllct0KECChBwAQGQEgVGhlIGN1cmF0b3IgZGVwb3NpdCBpcyBjYWxjdWxhdGVkIGFzIGEgcGVyY2VudGFnZSBvZiB0aGUgY3VyYXRvciBmZWUuADkBIFRoaXMgZGVwb3NpdCBoYXMgb3B0aW9uYWwgdXBwZXIgYW5kIGxvd2VyIGJvdW5kcyB3aXRoIGBDdXJhdG9yRGVwb3NpdE1heGAgYW5kVCBgQ3VyYXRvckRlcG9zaXRNaW5gLgBEQ3VyYXRvckRlcG9zaXRNYXg1AkQBACBKqdEBAAAAAAAAAAAAAARJASBNYXhpbXVtIGFtb3VudCBvZiBmdW5kcyB0aGF0IHNob3VsZCBiZSBwbGFjZWQgaW4gYSBkZXBvc2l0IGZvciBtYWtpbmcgYSBwcm9wb3NhbC4AREN1cmF0b3JEZXBvc2l0TWluNQJEAQDodkgXAAAAAAAAAAAAAAAESQEgTWluaW11bSBhbW91bnQgb2YgZnVuZHMgdGhhdCBzaG91bGQgYmUgcGxhY2VkIGluIGEgZGVwb3NpdCBmb3IgbWFraW5nIGEgcHJvcG9zYWwuAEhCb3VudHlWYWx1ZU1pbmltdW0YQADodkgXAAAAAAAAAAAAAAAEcCBNaW5pbXVtIHZhbHVlIGZvciBhIGJvdW50eS4ASERhdGFEZXBvc2l0UGVyQnl0ZRhAAOH1BQAAAAAAAAAAAAAAAARhASBUaGUgYW1vdW50IGhlbGQgb24gZGVwb3NpdCBwZXIgYnl0ZSB3aXRoaW4gdGhlIHRpcCByZXBvcnQgcmVhc29uIG9yIGJvdW50eSBkZXNjcmlwdGlvbi4ATE1heGltdW1SZWFzb25MZW5ndGgQEABAAAAMiCBNYXhpbXVtIGFjY2VwdGFibGUgcmVhc29uIGxlbmd0aC4AZQEgQmVuY2htYXJrcyBkZXBlbmQgb24gdGhpcyB2YWx1ZSwgYmUgc3VyZSB0byB1cGRhdGUgd2VpZ2h0cyBmaWxlIHdoZW4gY2hhbmdpbmcgdGhpcyB2YWx1ZQABuQsAAAAiAAA0Q2hpbGRCb3VudGllcwE0Q2hpbGRCb3VudGllcxxAQ2hpbGRCb3VudHlDb3VudAEAEBAAAAAACG0BIERFUFJFQ0FURUQ6IFJlcGxhY2VkIHdpdGggYFBhcmVudFRvdGFsQ2hpbGRCb3VudGllc2Agc3RvcmFnZSBpdGVtIGtlZXBpbmcgZGVkaWNhdGVkIGNvdW50c1UBIGZvciBlYWNoIHBhcmVudCBib3VudHkuIE51bWJlciBvZiB0b3RhbCBjaGlsZCBib3VudGllcy4gV2lsbCBiZSByZW1vdmVkIGluIE1heSAyMDI1LgBMUGFyZW50Q2hpbGRCb3VudGllcwEBBAUQEBAAAAAACMwgTnVtYmVyIG9mIGFjdGl2ZSBjaGlsZCBib3VudGllcyBwZXIgcGFyZW50IGJvdW50eS7gIE1hcCBvZiBwYXJlbnQgYm91bnR5IGluZGV4IHRvIG51bWJlciBvZiBjaGlsZCBib3VudGllcy4AYFBhcmVudFRvdGFsQ2hpbGRCb3VudGllcwEBBAUQEBAAAAAABEEBIE51bWJlciBvZiB0b3RhbCBjaGlsZCBib3VudGllcyBwZXIgcGFyZW50IGJvdW50eSwgaW5jbHVkaW5nIGNvbXBsZXRlZCBib3VudGllcy4ANENoaWxkQm91bnRpZXMAAQgFBYS9CwQABJQgQ2hpbGQgYm91bnRpZXMgdGhhdCBoYXZlIGJlZW4gYWRkZWQuAGRDaGlsZEJvdW50eURlc2NyaXB0aW9uc1YxAAEIBQWEtQsEAAwpASBUaGUgZGVzY3JpcHRpb24gb2YgZWFjaCBjaGlsZC1ib3VudHkuIEluZGV4ZWQgYnkgYChwYXJlbnRfaWQsIGNoaWxkX2lkKWAuAG0BIFRoaXMgaXRlbSByZXBsYWNlcyB0aGUgYENoaWxkQm91bnR5RGVzY3JpcHRpb25zYCBzdG9yYWdlIGl0ZW0gZnJvbSB0aGUgVjAgc3RvcmFnZSB2ZXJzaW9uLgBQVjBUb1YxQ2hpbGRCb3VudHlJZHMAAQQFEIQEABRdASBUaGUgbWFwcGluZyBvZiB0aGUgY2hpbGQgYm91bnR5IGlkcyBmcm9tIHN0b3JhZ2UgdmVyc2lvbiBgVjBgIHRvIHRoZSBuZXcgYFYxYCB2ZXJzaW9uLgBtASBUaGUgYFYwYCBpZHMgYmFzZWQgb24gdG90YWwgY2hpbGQgYm91bnR5IGNvdW50IFtgQ2hpbGRCb3VudHlDb3VudGBdYC4gVGhlIGBWMWAgdmVyc2lvbiBpZHNBASBiYXNlZCBvbiB0aGUgY2hpbGQgYm91bnR5IGNvdW50IHBlciBwYXJlbnQgYm91bnR5IFtgUGFyZW50VG90YWxDaGlsZEJvdW50aWVzYF0uZQEgVGhlIGl0ZW0gaW50ZW5kZWQgc29sZWx5IGZvciBjbGllbnQgY29udmVuaWVuY2UgYW5kIG5vdCB1c2VkIGluIHRoZSBwYWxsZXQncyBjb3JlIGxvZ2ljLgBMQ2hpbGRyZW5DdXJhdG9yRmVlcwEBBAUQGEAAAAAAAAAAAAAAAAAAAAAABAEBIFRoZSBjdW11bGF0aXZlIGNoaWxkLWJvdW50eSBjdXJhdG9yIGZlZSBmb3IgZWFjaCBwYXJlbnQgYm91bnR5LgABFQMAATkIAAhkTWF4QWN0aXZlQ2hpbGRCb3VudHlDb3VudBAQZAAAAAQdASBNYXhpbXVtIG51bWJlciBvZiBjaGlsZCBib3VudGllcyB0aGF0IGNhbiBiZSBhZGRlZCB0byBhIHBhcmVudCBib3VudHkuAFxDaGlsZEJvdW50eVZhbHVlTWluaW11bRhAAOQLVAIAAAAAAAAAAAAAAASIIE1pbmltdW0gdmFsdWUgZm9yIGEgY2hpbGQtYm91bnR5LgABxQsAAAAmAABoRWxlY3Rpb25Qcm92aWRlck11bHRpUGhhc2UBaEVsZWN0aW9uUHJvdmlkZXJNdWx0aVBoYXNlKBRSb3VuZAEAEBABAAAAGKwgSW50ZXJuYWwgY291bnRlciBmb3IgdGhlIG51bWJlciBvZiByb3VuZHMuAFUBIFRoaXMgaXMgdXNlZnVsIGZvciBkZS1kdXBsaWNhdGlvbiBvZiB0cmFuc2FjdGlvbnMgc3VibWl0dGVkIHRvIHRoZSBwb29sLCBhbmQgZ2VuZXJhbGwgZGlhZ25vc3RpY3Mgb2YgdGhlIHBhbGxldC4ATQEgVGhpcyBpcyBtZXJlbHkgaW5jcmVtZW50ZWQgb25jZSBwZXIgZXZlcnkgdGltZSB0aGF0IGFuIHVwc3RyZWFtIGBlbGVjdGAgaXMgY2FsbGVkLgAwQ3VycmVudFBoYXNlAQBFCAQABDwgQ3VycmVudCBwaGFzZS4AOFF1ZXVlZFNvbHV0aW9uAADJCwQADD0BIEN1cnJlbnQgYmVzdCBzb2x1dGlvbiwgc2lnbmVkIG9yIHVuc2lnbmVkLCBxdWV1ZWQgdG8gYmUgcmV0dXJuZWQgdXBvbiBgZWxlY3RgLgBgIEFsd2F5cyBzb3J0ZWQgYnkgc2NvcmUuACBTbmFwc2hvdAAA5QsEABBwIFNuYXBzaG90IGRhdGEgb2YgdGhlIHJvdW5kLgBdASBUaGlzIGlzIGNyZWF0ZWQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgc2lnbmVkIHBoYXNlIGFuZCBjbGVhcmVkIHVwb24gY2FsbGluZyBgZWxlY3RgLikBIE5vdGU6IFRoaXMgc3RvcmFnZSB0eXBlIG11c3Qgb25seSBiZSBtdXRhdGVkIHRocm91Z2ggW2BTbmFwc2hvdFdyYXBwZXJgXS4AOERlc2lyZWRUYXJnZXRzAAAQBAAQzCBEZXNpcmVkIG51bWJlciBvZiB0YXJnZXRzIHRvIGVsZWN0IGZvciB0aGlzIHJvdW5kLgCoIE9ubHkgZXhpc3RzIHdoZW4gW2BTbmFwc2hvdGBdIGlzIHByZXNlbnQuKQEgTm90ZTogVGhpcyBzdG9yYWdlIHR5cGUgbXVzdCBvbmx5IGJlIG11dGF0ZWQgdGhyb3VnaCBbYFNuYXBzaG90V3JhcHBlcmBdLgBAU25hcHNob3RNZXRhZGF0YQAA8QMEABCYIFRoZSBtZXRhZGF0YSBvZiB0aGUgW2BSb3VuZFNuYXBzaG90YF0AqCBPbmx5IGV4aXN0cyB3aGVuIFtgU25hcHNob3RgXSBpcyBwcmVzZW50LikBIE5vdGU6IFRoaXMgc3RvcmFnZSB0eXBlIG11c3Qgb25seSBiZSBtdXRhdGVkIHRocm91Z2ggW2BTbmFwc2hvdFdyYXBwZXJgXS4AZFNpZ25lZFN1Ym1pc3Npb25OZXh0SW5kZXgBABAQAAAAACQBASBUaGUgbmV4dCBpbmRleCB0byBiZSBhc3NpZ25lZCB0byBhbiBpbmNvbWluZyBzaWduZWQgc3VibWlzc2lvbi4AdQEgRXZlcnkgYWNjZXB0ZWQgc3VibWlzc2lvbiBpcyBhc3NpZ25lZCBhIHVuaXF1ZSBpbmRleDsgdGhhdCBpbmRleCBpcyBib3VuZCB0byB0aGF0IHBhcnRpY3VsYXJlASBzdWJtaXNzaW9uIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGVsZWN0aW9uLiBPbiBlbGVjdGlvbiBmaW5hbGl6YXRpb24sIHRoZSBuZXh0IGluZGV4IGlzMCByZXNldCB0byAwLgBpASBXZSBjYW4ndCBqdXN0IHVzZSBgU2lnbmVkU3VibWlzc2lvbkluZGljZXMubGVuKClgLCBiZWNhdXNlIHRoYXQncyBhIGJvdW5kZWQgc2V0OyBwYXN0IGl0c1kBIGNhcGFjaXR5LCBpdCB3aWxsIHNpbXBseSBzYXR1cmF0ZS4gV2UgY2FuJ3QganVzdCBpdGVyYXRlIG92ZXIgYFNpZ25lZFN1Ym1pc3Npb25zTWFwYCz0IGJlY2F1c2UgaXRlcmF0aW9uIGlzIHNsb3cuIEluc3RlYWQsIHdlIHN0b3JlIHRoZSB2YWx1ZSBoZXJlLgBcU2lnbmVkU3VibWlzc2lvbkluZGljZXMBAPELBAAYbQEgQSBzb3J0ZWQsIGJvdW5kZWQgdmVjdG9yIG9mIGAoc2NvcmUsIGJsb2NrX251bWJlciwgaW5kZXgpYCwgd2hlcmUgZWFjaCBgaW5kZXhgIHBvaW50cyB0byBheCB2YWx1ZSBpbiBgU2lnbmVkU3VibWlzc2lvbnNgLgBxASBXZSBuZXZlciBuZWVkIHRvIHByb2Nlc3MgbW9yZSB0aGFuIGEgc2luZ2xlIHNpZ25lZCBzdWJtaXNzaW9uIGF0IGEgdGltZS4gU2lnbmVkIHN1Ym1pc3Npb25zdQEgY2FuIGJlIHF1aXRlIGxhcmdlLCBzbyB3ZSdyZSB3aWxsaW5nIHRvIHBheSB0aGUgY29zdCBvZiBtdWx0aXBsZSBkYXRhYmFzZSBhY2Nlc3NlcyB0byBhY2Nlc3MhASB0aGVtIG9uZSBhdCBhIHRpbWUgaW5zdGVhZCBvZiByZWFkaW5nIGFuZCBkZWNvZGluZyBhbGwgb2YgdGhlbSBhdCBvbmNlLgBQU2lnbmVkU3VibWlzc2lvbnNNYXAAAQQFEP0LBAAcdCBVbmNoZWNrZWQsIHNpZ25lZCBzb2x1dGlvbnMuAGkBIFRvZ2V0aGVyIHdpdGggYFN1Ym1pc3Npb25JbmRpY2VzYCwgdGhpcyBzdG9yZXMgYSBib3VuZGVkIHNldCBvZiBgU2lnbmVkU3VibWlzc2lvbnNgIHdoaWxl7CBhbGxvd2luZyB1cyB0byBrZWVwIG9ubHkgYSBzaW5nbGUgb25lIGluIG1lbW9yeSBhdCBhIHRpbWUuAGkBIFR3b3ggbm90ZTogdGhlIGtleSBvZiB0aGUgbWFwIGlzIGFuIGF1dG8taW5jcmVtZW50aW5nIGluZGV4IHdoaWNoIHVzZXJzIGNhbm5vdCBpbnNwZWN0IG9y9CBhZmZlY3Q7IHdlIHNob3VsZG4ndCBuZWVkIGEgY3J5cHRvZ3JhcGhpY2FsbHkgc2VjdXJlIGhhc2hlci4AVE1pbmltdW1VbnRydXN0ZWRTY29yZQAA7QMEABBdASBUaGUgbWluaW11bSBzY29yZSB0aGF0IGVhY2ggJ3VudHJ1c3RlZCcgc29sdXRpb24gbXVzdCBhdHRhaW4gaW4gb3JkZXIgdG8gYmUgY29uc2lkZXJlZCggZmVhc2libGUuALggQ2FuIGJlIHNldCB2aWEgYHNldF9taW5pbXVtX3VudHJ1c3RlZF9zY29yZWAuAAEZAwABPQgAPFRCZXR0ZXJTaWduZWRUaHJlc2hvbGS0EAAAAAAITQEgVGhlIG1pbmltdW0gYW1vdW50IG9mIGltcHJvdmVtZW50IHRvIHRoZSBzb2x1dGlvbiBzY29yZSB0aGF0IGRlZmluZXMgYSBzb2x1dGlvbiBhc3ggImJldHRlciIgaW4gdGhlIFNpZ25lZCBwaGFzZS4AOE9mZmNoYWluUmVwZWF0EBAEAAAAELQgVGhlIHJlcGVhdCB0aHJlc2hvbGQgb2YgdGhlIG9mZmNoYWluIHdvcmtlci4AYQEgRm9yIGV4YW1wbGUsIGlmIGl0IGlzIDUsIHRoYXQgbWVhbnMgdGhhdCBhdCBsZWFzdCA1IGJsb2NrcyB3aWxsIGVsYXBzZSBiZXR3ZWVuIGF0dGVtcHRzhCB0byBzdWJtaXQgdGhlIHdvcmtlcidzIHNvbHV0aW9uLgA8TWluZXJUeFByaW9yaXR5MCBlZmZmZmZm5gQlASBUaGUgcHJpb3JpdHkgb2YgdGhlIHVuc2lnbmVkIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCBpbiB0aGUgdW5zaWduZWQtcGhhc2UAUFNpZ25lZE1heFN1Ym1pc3Npb25zEBAQAAAAHOQgTWF4aW11bSBudW1iZXIgb2Ygc2lnbmVkIHN1Ym1pc3Npb25zIHRoYXQgY2FuIGJlIHF1ZXVlZC4AVQEgSXQgaXMgYmVzdCB0byBhdm9pZCBhZGp1c3RpbmcgdGhpcyBkdXJpbmcgYW4gZWxlY3Rpb24sIGFzIGl0IGltcGFjdHMgZG93bnN0cmVhbSBkYXRhZQEgc3RydWN0dXJlcy4gSW4gcGFydGljdWxhciwgYFNpZ25lZFN1Ym1pc3Npb25JbmRpY2VzPFQ+YCBpcyBib3VuZGVkIG9uIHRoaXMgdmFsdWUuIElmIHlvdfQgdXBkYXRlIHRoaXMgdmFsdWUgZHVyaW5nIGFuIGVsZWN0aW9uLCB5b3UgX211c3RfIGVuc3VyZSB0aGF0TQEgYFNpZ25lZFN1Ym1pc3Npb25JbmRpY2VzLmxlbigpYCBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG5ldyB2YWx1ZS4gT3RoZXJ3aXNlLPAgYXR0ZW1wdHMgdG8gc3VibWl0IG5ldyBzb2x1dGlvbnMgbWF5IGNhdXNlIGEgcnVudGltZSBwYW5pYy4APFNpZ25lZE1heFdlaWdodChACwjHclhVAROjcD0K16NwvRSUIE1heGltdW0gd2VpZ2h0IG9mIGEgc2lnbmVkIHNvbHV0aW9uLgBdASBJZiBbYENvbmZpZzo6TWluZXJDb25maWdgXSBpcyBiZWluZyBpbXBsZW1lbnRlZCB0byBzdWJtaXQgc2lnbmVkIHNvbHV0aW9ucyAob3V0c2lkZSBvZj0BIHRoaXMgcGFsbGV0KSwgdGhlbiBbYE1pbmVyQ29uZmlnOjpzb2x1dGlvbl93ZWlnaHRgXSBpcyB1c2VkIHRvIGNvbXBhcmUgYWdhaW5zdDAgdGhpcyB2YWx1ZS4AQFNpZ25lZE1heFJlZnVuZHMQEAQAAAAEGQEgVGhlIG1heGltdW0gYW1vdW50IG9mIHVuY2hlY2tlZCBzb2x1dGlvbnMgdG8gcmVmdW5kIHRoZSBjYWxsIGZlZSBmb3IuAEBTaWduZWRSZXdhcmRCYXNlGEAA5AtUAgAAAAAAAAAAAAAABIggQmFzZSByZXdhcmQgZm9yIGEgc2lnbmVkIHNvbHV0aW9uAERTaWduZWREZXBvc2l0Qnl0ZRhAeH0BAAAAAAAAAAAAAAAAAASgIFBlci1ieXRlIGRlcG9zaXQgZm9yIGEgc2lnbmVkIHNvbHV0aW9uLgBMU2lnbmVkRGVwb3NpdFdlaWdodBhAAAAAAAAAAAAAAAAAAAAAAASoIFBlci13ZWlnaHQgZGVwb3NpdCBmb3IgYSBzaWduZWQgc29sdXRpb24uAChNYXhXaW5uZXJzEBCwBAAADNQgTWF4aW11bSBudW1iZXIgb2Ygd2lubmVycyB0aGF0IGFuIGVsZWN0aW9uIHN1cHBvcnRzLgBRASBOb3RlOiBUaGlzIG11c3QgYWx3YXlzIGJlIGdyZWF0ZXIgb3IgZXF1YWwgdG8gYFQ6OkRhdGFQcm92aWRlcjo6ZGVzaXJlZF90YXJnZXRzKClgLgBMTWF4QmFja2Vyc1Blcldpbm5lchAQ5FcAAAwxASBNYXhpbXVtIG51bWJlciBvZiB2b3RlcnMgdGhhdCBjYW4gc3VwcG9ydCBhIHdpbm5lciBpbiBhbiBlbGVjdGlvbiBzb2x1dGlvbi4A6CBUaGlzIGlzIG5lZWRlZCB0byBlbnN1cmUgZWxlY3Rpb24gY29tcHV0YXRpb24gaXMgYm91bmRlZC4AOE1pbmVyTWF4TGVuZ3RoEBAAADYAAAA4TWluZXJNYXhXZWlnaHQoQAsIx3JYVQETo3A9CtejcL0AAFRNaW5lck1heFZvdGVzUGVyVm90ZXIQEBAAAAAAADxNaW5lck1heFdpbm5lcnMQELAEAAAAAAEBDAAAACQAACRWb3Rlckxpc3QBJFZvdGVyTGlzdBQkTGlzdE5vZGVzAAEEBQAFDAQADIAgQSBzaW5nbGUgbm9kZSwgd2l0aGluIHNvbWUgYmFnLgAFASBOb2RlcyBzdG9yZSBsaW5rcyBmb3J3YXJkIGFuZCBiYWNrIHdpdGhpbiB0aGVpciByZXNwZWN0aXZlIGJhZ3MuAExDb3VudGVyRm9yTGlzdE5vZGVzAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXAAIExpc3RCYWdzAAEEBTAJDAQADGQgQSBiYWcgc3RvcmVkIGluIHN0b3JhZ2UuABkBIFN0b3JlcyBhIGBCYWdgIHN0cnVjdCwgd2hpY2ggc3RvcmVzIGhlYWQgYW5kIHRhaWwgcG9pbnRlcnMgdG8gaXRzZWxmLgBQTmV4dE5vZGVBdXRvUmViYWdnZWQAAAAEAAgFASBQb2ludGVyIHRoYXQgcmVtZW1iZXJzIHRoZSBuZXh0IG5vZGUgdGhhdCB3aWxsIGJlIGF1dG8tcmViYWdnZWQuAQEgV2hlbiBgTm9uZWAsIHRoZSBuZXh0IHNjYW4gd2lsbCBzdGFydCBmcm9tIHRoZSBsaXN0IGhlYWQgYWdhaW4uABBMb2NrAACQBAAQhCBMb2NrIGFsbCB1cGRhdGVzIHRvIHRoaXMgcGFsbGV0LgA5ASBJZiBhbnkgbm9kZXMgbmVlZHMgdXBkYXRpbmcsIHJlbW92YWwgb3IgYWRkaXRpb24gZHVlIHRvIGEgdGVtcG9yYXJ5IGxvY2ssIHRoZXQgW2BDYWxsOjpyZWJhZ2BdIGNhbiBiZSB1c2VkLgABDQQAAU0IAAg0QmFnVGhyZXNob2xkcw0MCRkhAwDkC1QCAAAA856AlwIAAACosZfiAgAAAJRJLjYDAAAAJ5w6kwMAAAADvM76AwAAAELAG24EAAAAG0d17gQAAAA4XlV9BQAAAEbcYBwGAAAAiThszQYAAAC27oCSBwAAAP5+420IAAAA6BsaYgkAAACwGfRxCgAAABA1kqALAAAAz8lv8QwAAABBFG1oDgAAAOeb2gkQAAAAzuiF2hEAAAAoqcffEwAAALtwkx8WAAAAjkCJoBgAAACBCglqGwAAADZqSIQeAAAAW9Nq+CEAAACAfJzQJQAAAMlVMBgqAAAAvWPB2y4AAABx4FcpNAAAAGiQkhA6AAAA7cTUokAAAABpk3nzRwAAAI/YDBhQAAAAS6+KKFkAAABqFqY/YwAAAAmVF3tuAAAAeMX0+3oAAABiyBHniAAAAFG/bWWYAAAABI6rpKkAAABURpjXvAAAAJHKwDbSAAAAF18YAeoAAAC9FbJ8BAEAAEM1j/chAQAAuPyEyEIBAACZZzxQZwEAAAfkTvqPAQAAs0GDPr0BAAACfy6i7wEAAJiDvLknAgAAFk1lKmYCAAC0lROsqwIAAC2Oggv5AgAAoeaYLE8DAACmFggNrwMAAMydN8cZBAAAoNWElZAEAABC5+DVFAUAAAKM1w2oBQAAD3UK70sGAADqjS5cAgcAAMPLmW7NBwAAseVxfK8IAACqK44fqwkAALXBID3DCgAAJtA9DvsLAABwx1kpVg0AAOut2ozYDgAA95fbqoYQAADP8ER2ZRIAAB8mYHF6FAAACaYRvssWAAAd++gvYBkAAJQ6PGA/HAAAiv6JxHEfAADO2WPHACMAAAOpKuT2JgAA/nLuxV8rAAA2ycxpSDAAANrjMkW/NQAABip0cNQ7AAB8lzLWmUIAAISjJGgjSgAAVxrUWYdSAADn8QJi3lsAAA24dgNEZgAArgQB3tZxAAB9nrMIuX4AAB4ESnYQjQAAOh3wZAedAADgT6/azK4AAFZ58C+VwgAAlcOqqZrYAACWfAUlHvEAABd6ZtZnDAEAKMsfHsgqAQD6KC91mEwBANV9yHQ8cgEAfcSz+yKcAQA2XN50x8oBAJ644UKz/gEADDGuVH84AgBf4QHo1XgCAGNz2n50wAIAUdGmDS4QAwDH6aRo7WgDAGHAkfe3ywMAvyeht7A5BAB7FJmUG7QEAIUj7SJhPAUAaaXUxRLUBQDsjJNN73wGAPWqkBvoOAcAjL5d2yYKCAACl4zhE/MIAPrjFENd9gkA3fEtuv4WCwAuutxvSlgMAAxVGMTyvQ0A8LtUMRVMDwBJjoZrRgcRALLBU96f9BIAJ4ovss4ZFQCyOZ+EJH0XAOGZ5wSqJRoAuhP1qzMbHQAmR4XMeGYgAIi/gD8tESQAHJgj+B0mKADMxCLUULEsAPCIggUowDEANnxtfolhNwBukynTCqY9AIy8bBMioEQAAHDzKlxkTAC0O4RpmQlVAIC0q+RQqV4AoM2pedtfaQBMwn9Mx0x1ANCsDro0k4IASD4Mzz1akQBoxo50ac2hACgeb6UrHbQAmKkjJnR/yADwmnRjTTDfAIDN/EuNcvgAkBRgLZqQFAHwtBPZRd0zASCXNZbBtFYBUNz7rq19fQHgEZi5R6qoATDH7ha7udgBIG5Ihpc5DgKg+ksdcsdJAsARcXC1EowCgIoWQ6be1QLA+COxogQoA4CvWXCidoMDwG8th/9B6QNAk3+sj5JaBACRCXEXttgEQA/fWyEgZQUAScFJRG4BBgCOvKblbK8GAFlWhoUccQeAaKo0pLdICICh4p5SuTgJAL2r6IDkQwoAKnK0IExtC4DxwBMzXLgMAKA8y9zjKA6AuGKaniDDDwDeVpPSyosRAF1/TJMjiBMAGoffNQS+FQCnzkuE7zMYAAEQ++ok8RoAgCrl0bX9HQAioTRgnWIhAEQha/DaKSUAAmHxgo9eKQBmIM+FHg0uAIQQGVJSQzMAoMGPyoQQOQAmrRSTzIU/ANDNJGYvtkYAnOGaHNq2TgBYzMIMX59XACAKdXj7iWEAMLu71uSTbABgy6fcnt14ALg7wEJbi4YAuIYjYWTFlQD48V/ck7imACBqkcDWlrkA2O/ij8CXzgBoKZv1Lvnl//////////+s0CBUaGUgbGlzdCBvZiB0aHJlc2hvbGRzIHNlcGFyYXRpbmcgdGhlIHZhcmlvdXMgYmFncy4ASQEgSWRzIGFyZSBzZXBhcmF0ZWQgaW50byB1bnNvcnRlZCBiYWdzIGFjY29yZGluZyB0byB0aGVpciBzY29yZS4gVGhpcyBzcGVjaWZpZXMgdGhlYQEgdGhyZXNob2xkcyBzZXBhcmF0aW5nIHRoZSBiYWdzLiBBbiBpZCdzIGJhZyBpcyB0aGUgbGFyZ2VzdCBiYWcgZm9yIHdoaWNoIHRoZSBpZCdzIHNjb3JluCBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gaXRzIHVwcGVyIHRocmVzaG9sZC4AZQEgV2hlbiBpZHMgYXJlIGl0ZXJhdGVkLCBoaWdoZXIgYmFncyBhcmUgaXRlcmF0ZWQgY29tcGxldGVseSBiZWZvcmUgbG93ZXIgYmFncy4gVGhpcyBtZWFuc1kBIHRoYXQgaXRlcmF0aW9uIGlzIF9zZW1pLXNvcnRlZF86IGlkcyBvZiBoaWdoZXIgc2NvcmUgdGVuZCB0byBjb21lIGJlZm9yZSBpZHMgb2YgbG93ZXItASBzY29yZSwgYnV0IHBlZXIgaWRzIHdpdGhpbiBhIHBhcnRpY3VsYXIgYmFnIGFyZSBzb3J0ZWQgaW4gaW5zZXJ0aW9uIG9yZGVyLgBoICMgRXhwcmVzc2luZyB0aGUgY29uc3RhbnQATQEgVGhpcyBjb25zdGFudCBtdXN0IGJlIHNvcnRlZCBpbiBzdHJpY3RseSBpbmNyZWFzaW5nIG9yZGVyLiBEdXBsaWNhdGUgaXRlbXMgYXJlIG5vdCwgcGVybWl0dGVkLgBBASBUaGVyZSBpcyBhbiBpbXBsaWVkIHVwcGVyIGxpbWl0IG9mIGBTY29yZTo6TUFYYDsgdGhhdCB2YWx1ZSBkb2VzIG5vdCBuZWVkIHRvIGJlIQEgc3BlY2lmaWVkIHdpdGhpbiB0aGUgYmFnLiBGb3IgYW55IHR3byB0aHJlc2hvbGQgbGlzdHMsIGlmIG9uZSBlbmRzIHdpdGgxASBgU2NvcmU6Ok1BWGAsIHRoZSBvdGhlciBvbmUgZG9lcyBub3QsIGFuZCB0aGV5IGFyZSBvdGhlcndpc2UgZXF1YWwsIHRoZSB0d298IGxpc3RzIHdpbGwgYmVoYXZlIGlkZW50aWNhbGx5LgA4ICMgQ2FsY3VsYXRpb24AVQEgSXQgaXMgcmVjb21tZW5kZWQgdG8gZ2VuZXJhdGUgdGhlIHNldCBvZiB0aHJlc2hvbGRzIGluIGEgZ2VvbWV0cmljIHNlcmllcywgc3VjaCB0aGF0QQEgdGhlcmUgZXhpc3RzIHNvbWUgY29uc3RhbnQgcmF0aW8gc3VjaCB0aGF0IGB0aHJlc2hvbGRbayArIDFdID09ICh0aHJlc2hvbGRba10gKtAgY29uc3RhbnRfcmF0aW8pLm1heCh0aHJlc2hvbGRba10gKyAxKWAgZm9yIGFsbCBga2AuAFkBIFRoZSBoZWxwZXJzIGluIHRoZSBgL3V0aWxzL2ZyYW1lL2dlbmVyYXRlLWJhZ3NgIG1vZHVsZSBjYW4gc2ltcGxpZnkgdGhpcyBjYWxjdWxhdGlvbi4ALCAjIEV4YW1wbGVzAFEBIC0gSWYgYEJhZ1RocmVzaG9sZHM6OmdldCgpLmlzX2VtcHR5KClgLCB0aGVuIGFsbCBpZHMgYXJlIHB1dCBpbnRvIHRoZSBzYW1lIGJhZywgYW5ksCAgIGl0ZXJhdGlvbiBpcyBzdHJpY3RseSBpbiBpbnNlcnRpb24gb3JkZXIuYQEgLSBJZiBgQmFnVGhyZXNob2xkczo6Z2V0KCkubGVuKCkgPT0gNjRgLCBhbmQgdGhlIHRocmVzaG9sZHMgYXJlIGRldGVybWluZWQgYWNjb3JkaW5nIHRvEQEgICB0aGUgcHJvY2VkdXJlIGdpdmVuIGFib3ZlLCB0aGVuIHRoZSBjb25zdGFudCByYXRpbyBpcyBlcXVhbCB0byAyLmUBIC0gSWYgYEJhZ1RocmVzaG9sZHM6OmdldCgpLmxlbigpID09IDIwMGAsIGFuZCB0aGUgdGhyZXNob2xkcyBhcmUgZGV0ZXJtaW5lZCBhY2NvcmRpbmcgdG9ZASAgIHRoZSBwcm9jZWR1cmUgZ2l2ZW4gYWJvdmUsIHRoZW4gdGhlIGNvbnN0YW50IHJhdGlvIGlzIGFwcHJveGltYXRlbHkgZXF1YWwgdG8gMS4yNDguYQEgLSBJZiB0aGUgdGhyZXNob2xkIGxpc3QgYmVnaW5zIGBbMSwgMiwgMywgLi4uXWAsIHRoZW4gYW4gaWQgd2l0aCBzY29yZSAwIG9yIDEgd2lsbCBmYWxs8CAgIGludG8gYmFnIDAsIGFuIGlkIHdpdGggc2NvcmUgMiB3aWxsIGZhbGwgaW50byBiYWcgMSwgZXRjLgAwICMgTWlncmF0aW9uAGEBIEluIHRoZSBldmVudCB0aGF0IHRoaXMgbGlzdCBldmVyIGNoYW5nZXMsIGEgY29weSBvZiB0aGUgb2xkIGJhZ3MgbGlzdCBtdXN0IGJlIHJldGFpbmVkLl0BIFdpdGggdGhhdCBgTGlzdDo6bWlncmF0ZWAgY2FuIGJlIGNhbGxlZCwgd2hpY2ggd2lsbCBwZXJmb3JtIHRoZSBhcHByb3ByaWF0ZSBtaWdyYXRpb24uAFBNYXhBdXRvUmViYWdQZXJCbG9jaxAQAAAAABA1ASBNYXhpbXVtIG51bWJlciBvZiBhY2NvdW50cyB0aGF0IG1heSBiZSByZS1iYWdnZWQgYXV0b21hdGljYWxseSBpbiBgb25faWRsZWAuAFEBIEEgdmFsdWUgb2YgYDBgIChvYnRhaW5lZCBieSBjb25maWd1cmluZyBgdHlwZSBNYXhBdXRvUmViYWdQZXJCbG9jayA9ICgpO2ApIGRpc2FibGVzNCB0aGUgZmVhdHVyZS4AAREMAAQUU2NvcmUwBAkBIFRoZSB0eXBlIHVzZWQgdG8gZGljdGF0ZSBhIG5vZGUgcG9zaXRpb24gcmVsYXRpdmUgdG8gb3RoZXIgbm9kZXMuBHTdcC2kb3fXrPd/WkjUr30SRlCdIc2xJui6xWgTxKKeGHNjb3JlcwQMd2hvABkMHLAgR2V0IHRoZSBjdXJyZW50IGBzY29yZWAgb2YgYSBnaXZlbiBhY2NvdW50LgBhASBSZXR1cm5zIGAoY3VycmVudCwgcmVhbF9zY29yZSlgLCB0aGUgZm9ybWVyIGJlaW5nIHRoZSBjdXJyZW50IHNjb3JlIHRoYXQgdGhpcyBwYWxsZXQgaXNZASBhd2FyZSBvZiwgd2hpY2ggbWF5IG9yIG1heSBub3QgYmUgdXAgdG8gZGF0ZSwgYW5kIHRoZSBsYXR0ZXIgYmVpbmcgdGhlIHJlYWwgc2NvcmUsIGFzMCBwcm92aWRlZCBieQAdASBJZiB0aGUgdHdvIGRpZmZlciwgaXQgbWVhbnMgdGhpcyBub2RlIGlzIGVsaWdpYmxlIGZvciBbYENhbGw6OnJlYmFnYF0uACUAADxOb21pbmF0aW9uUG9vbHMBPE5vbWluYXRpb25Qb29sc1RAVG90YWxWYWx1ZUxvY2tlZAEAGEAAAAAAAAAAAAAAAAAAAAAAFIwgVGhlIHN1bSBvZiBmdW5kcyBhY3Jvc3MgYWxsIHBvb2xzLgBxASBUaGlzIG1pZ2h0IGJlIGxvd2VyIGJ1dCBuZXZlciBoaWdoZXIgdGhhbiB0aGUgc3VtIG9mIGB0b3RhbF9iYWxhbmNlYCBvZiBhbGwgW2BQb29sTWVtYmVyc2BdWQEgYmVjYXVzZSBjYWxsaW5nIGBwb29sX3dpdGhkcmF3X3VuYm9uZGVkYCBtaWdodCBkZWNyZWFzZSB0aGUgdG90YWwgc3Rha2Ugb2YgdGhlIHBvb2wncykBIGBib25kZWRfYWNjb3VudGAgd2l0aG91dCBhZGp1c3RpbmcgdGhlIHBhbGxldC1pbnRlcm5hbCBgVW5ib25kaW5nUG9vbGAncy4ALE1pbkpvaW5Cb25kAQAYQAAAAAAAAAAAAAAAAAAAAAAEnCBNaW5pbXVtIGFtb3VudCB0byBib25kIHRvIGpvaW4gYSBwb29sLgA0TWluQ3JlYXRlQm9uZAEAGEAAAAAAAAAAAAAAAAAAAAAAHKAgTWluaW11bSBib25kIHJlcXVpcmVkIHRvIGNyZWF0ZSBhIHBvb2wuAGUBIFRoaXMgaXMgdGhlIGFtb3VudCB0aGF0IHRoZSBkZXBvc2l0b3IgbXVzdCBwdXQgYXMgdGhlaXIgaW5pdGlhbCBzdGFrZSBpbiB0aGUgcG9vbCwgYXMgYW6IIGluZGljYXRpb24gb2YgInNraW4gaW4gdGhlIGdhbWUiLgBpASBUaGlzIGlzIHRoZSB2YWx1ZSB0aGF0IHdpbGwgYWx3YXlzIGV4aXN0IGluIHRoZSBzdGFraW5nIGxlZGdlciBvZiB0aGUgcG9vbCBib25kZWQgYWNjb3VudIAgd2hpbGUgYWxsIG90aGVyIGFjY291bnRzIGxlYXZlLgAgTWF4UG9vbHMAABAEAAhpASBNYXhpbXVtIG51bWJlciBvZiBub21pbmF0aW9uIHBvb2xzIHRoYXQgY2FuIGV4aXN0LiBJZiBgTm9uZWAsIHRoZW4gYW4gdW5ib3VuZGVkIG51bWJlciBvZkQgcG9vbHMgY2FuIGV4aXN0LgA4TWF4UG9vbE1lbWJlcnMAABAEAAhJASBNYXhpbXVtIG51bWJlciBvZiBtZW1iZXJzIHRoYXQgY2FuIGV4aXN0IGluIHRoZSBzeXN0ZW0uIElmIGBOb25lYCwgdGhlbiB0aGUgY291bnS4IG1lbWJlcnMgYXJlIG5vdCBib3VuZCBvbiBhIHN5c3RlbSB3aWRlIGJhc2lzLgBUTWF4UG9vbE1lbWJlcnNQZXJQb29sAAAQBAAIQQEgTWF4aW11bSBudW1iZXIgb2YgbWVtYmVycyB0aGF0IG1heSBiZWxvbmcgdG8gcG9vbC4gSWYgYE5vbmVgLCB0aGVuIHRoZSBjb3VudCBvZqggbWVtYmVycyBpcyBub3QgYm91bmQgb24gYSBwZXIgcG9vbCBiYXNpcy4ATEdsb2JhbE1heENvbW1pc3Npb24AALQEAAxpASBUaGUgbWF4aW11bSBjb21taXNzaW9uIHRoYXQgY2FuIGJlIGNoYXJnZWQgYnkgYSBwb29sLiBVc2VkIG9uIGNvbW1pc3Npb24gcGF5b3V0cyB0byBib3VuZCUBIHBvb2wgY29tbWlzc2lvbnMgdGhhdCBhcmUgPiBgR2xvYmFsTWF4Q29tbWlzc2lvbmAsIG5lY2Vzc2FyeSBpZiBhIGZ1dHVyZQ0BIGBHbG9iYWxNYXhDb21taXNzaW9uYCBpcyBsb3dlciB0aGFuIHNvbWUgY3VycmVudCBwb29sIGNvbW1pc3Npb25zLgAsUG9vbE1lbWJlcnMAAQQFAB0MBAAMQCBBY3RpdmUgbWVtYmVycy4A0CBUV09YLU5PVEU6IFNBRkUgc2luY2UgYEFjY291bnRJZGAgaXMgYSBzZWN1cmUgaGFzaC4AVENvdW50ZXJGb3JQb29sTWVtYmVycwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwACxCb25kZWRQb29scwABBAUQKQwEAARoIFN0b3JhZ2UgZm9yIGJvbmRlZCBwb29scy4AVENvdW50ZXJGb3JCb25kZWRQb29scwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwACxSZXdhcmRQb29scwABBAUQOQwEAAh1ASBSZXdhcmQgcG9vbHMuIFRoaXMgaXMgd2hlcmUgdGhlcmUgcmV3YXJkcyBmb3IgZWFjaCBwb29sIGFjY3VtdWxhdGUuIFdoZW4gYSBtZW1iZXJzIHBheW91dCBpc1kBIGNsYWltZWQsIHRoZSBiYWxhbmNlIGNvbWVzIG91dCBvZiB0aGUgcmV3YXJkIHBvb2wuIEtleWVkIGJ5IHRoZSBib25kZWQgcG9vbHMgYWNjb3VudC4AVENvdW50ZXJGb3JSZXdhcmRQb29scwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwADxTdWJQb29sc1N0b3JhZ2UAAQQFED0MBAAIGQEgR3JvdXBzIG9mIHVuYm9uZGluZyBwb29scy4gRWFjaCBncm91cCBvZiB1bmJvbmRpbmcgcG9vbHMgYmVsb25ncyB0byBhKQEgYm9uZGVkIHBvb2wsIGhlbmNlIHRoZSBuYW1lIHN1Yi1wb29scy4gS2V5ZWQgYnkgdGhlIGJvbmRlZCBwb29scyBhY2NvdW50LgBkQ291bnRlckZvclN1YlBvb2xzU3RvcmFnZQEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwACBNZXRhZGF0YQEBBAUQVQwEAARcIE1ldGFkYXRhIGZvciB0aGUgcG9vbC4ASENvdW50ZXJGb3JNZXRhZGF0YQEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwAChMYXN0UG9vbElkAQAQEAAAAAAE0CBFdmVyIGluY3JlYXNpbmcgbnVtYmVyIG9mIGFsbCBwb29scyBjcmVhdGVkIHNvIGZhci4ATFJldmVyc2VQb29sSWRMb29rdXAAAQQFABAEABDcIEEgcmV2ZXJzZSBsb29rdXAgZnJvbSB0aGUgcG9vbCdzIGFjY291bnQgaWQgdG8gaXRzIGlkLgB1ASBUaGlzIGlzIG9ubHkgdXNlZCBmb3Igc2xhc2hpbmcgYW5kIG9uIGF1dG9tYXRpYyB3aXRoZHJhdyB1cGRhdGUuIEluIGFsbCBvdGhlciBpbnN0YW5jZXMsIHRoZSUBIHBvb2wgaWQgaXMgdXNlZCwgYW5kIHRoZSBhY2NvdW50cyBhcmUgZGV0ZXJtaW5pc3RpY2FsbHkgZGVyaXZlZCBmcm9tIGl0LgB0Q291bnRlckZvclJldmVyc2VQb29sSWRMb29rdXABABAQAAAAAASsQ291bnRlciBmb3IgdGhlIHJlbGF0ZWQgY291bnRlZCBzdG9yYWdlIG1hcABAQ2xhaW1QZXJtaXNzaW9ucwEBBAUALQQEAgQBASBNYXAgZnJvbSBhIHBvb2wgbWVtYmVyIGFjY291bnQgdG8gdGhlaXIgb3B0ZWQgY2xhaW0gcGVybWlzc2lvbi4AAREEAAFRCAAMIFBhbGxldElk4QogcHkvbm9wbHMEhCBUaGUgbm9taW5hdGlvbiBwb29sJ3MgcGFsbGV0IGlkLgBITWF4UG9pbnRzVG9CYWxhbmNlCAQKMB0BIFRoZSBtYXhpbXVtIHBvb2wgcG9pbnRzLXRvLWJhbGFuY2UgcmF0aW8gdGhhdCBhbiBgb3BlbmAgcG9vbCBjYW4gaGF2ZS4AVQEgVGhpcyBpcyBpbXBvcnRhbnQgaW4gdGhlIGV2ZW50IHNsYXNoaW5nIHRha2VzIHBsYWNlIGFuZCB0aGUgcG9vbCdzIHBvaW50cy10by1iYWxhbmNlfCByYXRpbyBiZWNvbWVzIGRpc3Byb3BvcnRpb25hbC4AZQEgTW9yZW92ZXIsIHRoaXMgcmVsYXRlcyB0byB0aGUgYFJld2FyZENvdW50ZXJgIHR5cGUgYXMgd2VsbCwgYXMgdGhlIGFyaXRobWV0aWMgb3BlcmF0aW9uc1UBIGFyZSBhIGZ1bmN0aW9uIG9mIG51bWJlciBvZiBwb2ludHMsIGFuZCBieSBzZXR0aW5nIHRoaXMgdmFsdWUgdG8gZS5nLiAxMCwgeW91IGVuc3VyZWUBIHRoYXQgdGhlIHRvdGFsIG51bWJlciBvZiBwb2ludHMgaW4gdGhlIHN5c3RlbSBhcmUgYXQgbW9zdCAxMCB0aW1lcyB0aGUgdG90YWxfaXNzdWFuY2Ugb2acIHRoZSBjaGFpbiwgaW4gdGhlIGFic29sdXRlIHdvcnNlIGNhc2UuAEkBIEZvciBhIHZhbHVlIG9mIDEwLCB0aGUgdGhyZXNob2xkIHdvdWxkIGJlIGEgcG9vbCBwb2ludHMtdG8tYmFsYW5jZSByYXRpbyBvZiAxMDoxLjEBIFN1Y2ggYSBzY2VuYXJpbyB3b3VsZCBhbHNvIGJlIHRoZSBlcXVpdmFsZW50IG9mIHRoZSBwb29sIGJlaW5nIDkwJSBzbGFzaGVkLgAwTWF4VW5ib25kaW5nEBAgAAAABD0BIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzaW11bHRhbmVvdXMgdW5ib25kaW5nIGNodW5rcyB0aGF0IGNhbiBleGlzdCBwZXIgbWVtYmVyLgABWQwABDRSZXdhcmRDb3VudGVyCQcwqCBUaGUgdHlwZSB0aGF0IGlzIHVzZWQgZm9yIHJld2FyZCBjb3VudGVyLgA1ASBUaGUgYXJpdGhtZXRpYyBvZiB0aGUgcmV3YXJkIGNvdW50ZXIgbWlnaHQgc2F0dXJhdGUgYmFzZWQgb24gdGhlIHNpemUgb2YgdGhlZQEgYEN1cnJlbmN5OjpCYWxhbmNlYC4gSWYgdGhpcyBoYXBwZW5zLCBvcGVyYXRpb25zIGZhaWxzLiBOb25ldGhlbGVzcywgdGhpcyB0eXBlIHNob3VsZCBiZWUBIGNob3NlbiBzdWNoIHRoYXQgdGhpcyBmYWlsdXJlIGFsbW9zdCBuZXZlciBoYXBwZW5zLCBhcyBpZiBpdCBoYXBwZW5zLCB0aGUgcG9vbCBiYXNpY2FsbHllASBuZWVkcyB0byBiZSBkaXNtYW50bGVkIChvciBhbGwgcG9vbHMgbWlncmF0ZWQgdG8gYSBsYXJnZXIgYFJld2FyZENvdW50ZXJgIHR5cGUsIHdoaWNoIGlzPCBhIFBJVEEgdG8gZG8pLgBhASBTZWUgdGhlIGlubGluZSBjb2RlIGRvY3Mgb2YgYE1lbWJlcjo6cGVuZGluZ19yZXdhcmRzYCBhbmQgYFJld2FyZFBvb2w6OnVwZGF0ZV9yZWNvcmRlZGBlASBmb3IgZXhhbXBsZSBhbmFseXNpcy4gQSBbYHNwX3J1bnRpbWU6OkZpeGVkVTEyOGBdIHNob3VsZCBiZSBmaW5lIGZvciBjaGFpbnMgd2l0aCBiYWxhbmNlUQEgdHlwZXMgc2ltaWxhciB0byB0aGF0IG9mIFBvbGthZG90IGFuZCBLdXNhbWEsIGluIHRoZSBhYnNlbmNlIG9mIHNldmVyZSBzbGFzaGluZyAob3I9ASBwcmV2ZW50ZWQgdmlhIGEgcmVhc29uYWJsZSBgTWF4UG9pbnRzVG9CYWxhbmNlYCksIGZvciBtYW55IG1hbnkgeWVhcnMgdG8gY29tZS4AJwAALEZhc3RVbnN0YWtlASxGYXN0VW5zdGFrZRAQSGVhZAAAYQwEAAzAIFRoZSBjdXJyZW50ICJoZWFkIG9mIHRoZSBxdWV1ZSIgYmVpbmcgdW5zdGFrZWQuACkBIFRoZSBoZWFkIGluIGl0c2VsZiBjYW4gYmUgYSBiYXRjaCBvZiB1cCB0byBbYENvbmZpZzo6QmF0Y2hTaXplYF0gc3Rha2Vycy4AFFF1ZXVlAAEEBQAYBAAMwCBUaGUgbWFwIG9mIGFsbCBhY2NvdW50cyB3aXNoaW5nIHRvIGJlIHVuc3Rha2VkLgA5ASBLZWVwcyB0cmFjayBvZiBgQWNjb3VudElkYCB3aXNoaW5nIHRvIHVuc3Rha2UgYW5kIGl0J3MgY29ycmVzcG9uZGluZyBkZXBvc2l0LgA8Q291bnRlckZvclF1ZXVlAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXAATEVyYXNUb0NoZWNrUGVyQmxvY2sBABAQAAAAACCMIE51bWJlciBvZiBlcmFzIHRvIGNoZWNrIHBlciBibG9jay4ANQEgSWYgc2V0IHRvIDAsIHRoaXMgcGFsbGV0IGRvZXMgYWJzb2x1dGVseSBub3RoaW5nLiBDYW5ub3QgYmUgc2V0IHRvIG1vcmUgdGhhbpAgW2BDb25maWc6Ok1heEVyYXNUb0NoZWNrUGVyQmxvY2tgXS4AZQEgQmFzZWQgb24gdGhlIGFtb3VudCBvZiB3ZWlnaHQgYXZhaWxhYmxlIGF0IFtgUGFsbGV0Ojpvbl9pZGxlYF0sIHVwIHRvIHRoaXMgbWFueSBlcmFzIGFyZV0BIGNoZWNrZWQuIFRoZSBjaGVja2luZyBpcyByZXByZXNlbnRlZCBieSB1cGRhdGluZyBbYFVuc3Rha2VSZXF1ZXN0OjpjaGVja2VkYF0sIHdoaWNoIGlzUCBzdG9yZWQgaW4gW2BIZWFkYF0uAAFFBAABWQgABBxEZXBvc2l0GEAA5AtUAgAAAAAAAAAAAAAACGUBIERlcG9zaXQgdG8gdGFrZSBmb3IgdW5zdGFraW5nLCB0byBtYWtlIHN1cmUgd2UncmUgYWJsZSB0byBzbGFzaCB0aGUgaXQgaW4gb3JkZXIgdG8gY292ZXLAIHRoZSBjb3N0cyBvZiByZXNvdXJjZXMgb24gdW5zdWNjZXNzZnVsIHVuc3Rha2UuAAFtDAAAACgAAEBEZWxlZ2F0ZWRTdGFraW5nAUBEZWxlZ2F0ZWRTdGFraW5nEChEZWxlZ2F0b3JzAAEEBQBxDAQAEKQgTWFwIG9mIERlbGVnYXRvcnMgdG8gdGhlaXIgYERlbGVnYXRpb25gLgBhASBJbXBsZW1lbnRhdGlvbiBub3RlOiBXZSBhcmUgbm90IHVzaW5nIGEgZG91YmxlIG1hcCB3aXRoIGBkZWxlZ2F0b3JgIGFuZCBgYWdlbnRgIGFjY291bnRhASBhcyBrZXlzIHNpbmNlIHdlIHdhbnQgdG8gcmVzdHJpY3QgZGVsZWdhdG9ycyB0byBkZWxlZ2F0ZSBvbmx5IHRvIG9uZSBhY2NvdW50IGF0IGEgdGltZS4AUENvdW50ZXJGb3JEZWxlZ2F0b3JzAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXAAGEFnZW50cwABBAUAdQwEAASIIE1hcCBvZiBgQWdlbnRgIHRvIHRoZWlyIGBMZWRnZXJgLgBAQ291bnRlckZvckFnZW50cwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwAAABXQgACCBQYWxsZXRJZOEKIHB5L2Rsc3RrBJAgSW5qZWN0ZWQgaWRlbnRpZmllciBmb3IgdGhlIHBhbGxldC4ATFNsYXNoUmV3YXJkRnJhY3Rpb260EICWmAAEUQEgRnJhY3Rpb24gb2YgdGhlIHNsYXNoIHRoYXQgaXMgcmV3YXJkZWQgdG8gdGhlIGNhbGxlciBvZiBwZW5kaW5nIHNsYXNoIHRvIHRoZSBhZ2VudC4AAXkMAAAAKQAAPFN0YWtpbmdBaENsaWVudAE8U3Rha2luZ0FoQ2xpZW50HDBWYWxpZGF0b3JTZXQAAH0MBAAM+CBUaGUgcXVldWVkIHZhbGlkYXRvciBzZXRzIGZvciBhIGdpdmVuIHBsYW5uaW5nIHNlc3Npb24gaW5kZXguAKwgVGhpcyBpcyByZWNlaXZlZCB2aWEgYSBjYWxsIGZyb20gQXNzZXRIdWIuAHBJbmNvbXBsZXRlVmFsaWRhdG9yU2V0UmVwb3J0AABNBAQABJAgQW4gaW5jb21wbGV0ZSB2YWxpZGF0b3Igc2V0IHJlcG9ydC4APFZhbGlkYXRvclBvaW50cwEBBAUAEBAAAAAAEJQgQWxsIG9mIHRoZSBwb2ludHMgb2YgdGhlIHZhbGlkYXRvcnMuAGEBIFRoaXMgaXMgcG9wdWxhdGVkIGR1cmluZyBhIHNlc3Npb24sIGFuZCBpcyBmbHVzaGVkIGFuZCBzZW50IG92ZXIgdmlhIFtgU2VuZFRvQXNzZXRIdWJgXVQgYXQgZWFjaCBzZXNzaW9uIGVuZC4AEE1vZGUBAFEEBAAQ0CBJbmRpY2F0ZXMgdGhlIGN1cnJlbnQgb3BlcmF0aW5nIG1vZGUgb2YgdGhlIHBhbGxldC4AcQEgVGhpcyB2YWx1ZSBkZXRlcm1pbmVzIGhvdyB0aGUgcGFsbGV0IGJlaGF2ZXMgaW4gcmVzcG9uc2UgdG8gaW5jb21pbmcgYW5kIG91dGdvaW5nIG1lc3NhZ2VzLGkBIHBhcnRpY3VsYXJseSB3aGV0aGVyIGl0IHNob3VsZCBleGVjdXRlIGxvZ2ljIGRpcmVjdGx5LCBkZWZlciBpdCwgb3IgZGVsZWdhdGUgaXQgZW50aXJlbHkuAHBOZXh0U2Vzc2lvbkNoYW5nZXNWYWxpZGF0b3JzAAAQBAAgaQEgQSBzdG9yYWdlIHZhbHVlIHRoYXQgaXMgc2V0IHdoZW4gYSBgbmV3X3Nlc3Npb25gIGdpdmVzIGEgbmV3IHZhbGlkYXRvciBzZXQgdG8gdGhlIHNlc3Npb26kIHBhbGxldCwgYW5kIGlzIGNsZWFyZWQgb24gdGhlIG5leHQgY2FsbC4AbQEgVGhlIGlubmVyIHUzMiBpcyB0aGUgaWQgb2YgdGhlIHNhaWQgYWN0aXZhdGVkIHZhbGlkYXRvciBzZXQuIFdoaWxlIG5vdCByZWxldmFudCBoZXJlLCBnb29k/CB0byBrbm93IHRoaXMgaXMgdGhlIHBsYW5uaW5nIGVyYSBpbmRleCBvZiBzdGFraW5nLWFzeW5jIG9uIEFILgBZASBPbmNlIGNsZWFyZWQsIHdlIGtub3cgYSB2YWxpZGF0b3Igc2V0IGhhcyBiZWVuIGFjdGl2YXRlZCwgYW5kIHRoZXJlZm9yZSB3ZSBjYW4gc2VuZCBhRCB0aW1lc3RhbXAgdG8gQUguAFRWYWxpZGF0b3JTZXRBcHBsaWVkQXQAABAEABAlASBUaGUgc2Vzc2lvbiBpbmRleCBhdCB3aGljaCB0aGUgbGF0ZXN0IGVsZWN0ZWQgdmFsaWRhdG9yIHNldCB3YXMgYXBwbGllZC4AdQEgVGhpcyBpcyB1c2VkIHRvIGRldGVybWluZSBpZiBhbiBvZmZlbmNlLCBnaXZlbiBhIHNlc3Npb24gaW5kZXgsIGlzIGluIHRoZSBjdXJyZW50IGFjdGl2ZSBlcmEgIG9yIG5vdC4AQEJ1ZmZlcmVkT2ZmZW5jZXMBAIEMBAAo+CBPZmZlbmNlcyBjb2xsZWN0ZWQgd2hpbGUgaW4gW2BPcGVyYXRpbmdNb2RlOjpCdWZmZXJlZGBdIG1vZGUuAHUBIFRoZXNlIGFyZSB0ZW1wb3JhcmlseSBzdG9yZWQgYW5kIHNlbnQgb25jZSB0aGUgcGFsbGV0IHN3aXRjaGVzIHRvIFtgT3BlcmF0aW5nTW9kZTo6QWN0aXZlYF0u+CBGb3IgZWFjaCBvZmZlbmRlciwgb25seSB0aGUgaGlnaGVzdCBgc2xhc2hfZnJhY3Rpb25gIGlzIGtlcHQuAKAgSW50ZXJuYWxseSBzdG9yZXMgYXMgYSBuZXN0ZWQgQlRyZWVNYXA69CBgc2Vzc2lvbl9pbmRleCAtPiAob2ZmZW5kZXIgLT4gKHJlcG9ydGVyLCBzbGFzaF9mcmFjdGlvbikpYC4AcQEgTm90ZTogV2hpbGUgdGhlIFtgcmNfY2xpZW50OjpPZmZlbmNlYF0gdHlwZSBpbmNsdWRlcyBhIGxpc3Qgb2YgcmVwb3J0ZXJzLCBpbiBwcmFjdGljZSB0aGVyZW0BIGlzIG9ubHkgb25lLiBJbiB0aGlzIHBhbGxldCwgd2UgYXNzdW1lIHRoaXMgaXMgdGhlIGNhc2UgYW5kIHN0b3JlIG9ubHkgdGhlIGZpcnN0IHJlcG9ydGVyLgABSQQAAWEIAAABnQwABDxDdXJyZW5jeUJhbGFuY2UYBNggVGhlIGJhbGFuY2UgdHlwZSBvZiB0aGUgcnVudGltZSdzIGN1cnJlbmN5IGludGVyZmFjZS4AKgAAQFBhcmFjaGFpbnNPcmlnaW4AAAAAAAAAMhB5ASBUaGVyZSBpcyBubyB3YXkgdG8gcmVnaXN0ZXIgYW4gb3JpZ2luIHR5cGUgaW4gYGNvbnN0cnVjdF9ydW50aW1lYCB3aXRob3V0IGEgcGFsbGV0IHRoZSBvcmlnaW4wIGJlbG9uZ3MgdG8uAHUBIFRoaXMgbW9kdWxlIGZ1bGZpbGxzIG9ubHkgdGhlIHNpbmdsZSBwdXJwb3NlIG9mIGhvdXNpbmcgdGhlIGBPcmlnaW5gIGluIGBjb25zdHJ1Y3RfcnVudGltZWAuADRDb25maWd1cmF0aW9uATRDb25maWd1cmF0aW9uDDBBY3RpdmVDb25maWcBAKEMQQMAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAABkAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAAAAQAAAAEAAAABAAAAAAEAAAAAAAAAAAAAABAnAACAsuYOgMPJAYCWmAAAAAAAAAAAAAAAAAAFAAAABMggVGhlIGFjdGl2ZSBjb25maWd1cmF0aW9uIGZvciB0aGUgY3VycmVudCBzZXNzaW9uLgA4UGVuZGluZ0NvbmZpZ3MBAKUMBAAcfCBQZW5kaW5nIGNvbmZpZ3VyYXRpb24gY2hhbmdlcy4AWQEgVGhpcyBpcyBhIGxpc3Qgb2YgY29uZmlndXJhdGlvbiBjaGFuZ2VzLCBlYWNoIHdpdGggYSBzZXNzaW9uIGluZGV4IGF0IHdoaWNoIGl0IHNob3VsZDAgYmUgYXBwbGllZC4AYQEgVGhlIGxpc3QgaXMgc29ydGVkIGFzY2VuZGluZyBieSBzZXNzaW9uIGluZGV4LiBBbHNvLCB0aGlzIGxpc3QgY2FuIG9ubHkgY29udGFpbiBhdCBtb3N0/CAyIGl0ZW1zOiBmb3IgdGhlIG5leHQgc2Vzc2lvbiBhbmQgZm9yIHRoZSBgc2NoZWR1bGVkX3Nlc3Npb25gLgBYQnlwYXNzQ29uc2lzdGVuY3lDaGVjawEAIAQACGEBIElmIHRoaXMgaXMgc2V0LCB0aGVuIHRoZSBjb25maWd1cmF0aW9uIHNldHRlcnMgd2lsbCBieXBhc3MgdGhlIGNvbnNpc3RlbmN5IGNoZWNrcy4gVGhpc7QgaXMgbWVhbnQgdG8gYmUgdXNlZCBvbmx5IGFzIHRoZSBsYXN0IHJlc29ydC4AAVUEAAAAAa0MAAAAMwAALFBhcmFzU2hhcmVkASxQYXJhc1NoYXJlZBBMQ3VycmVudFNlc3Npb25JbmRleAEAEBAAAAAABGwgVGhlIGN1cnJlbnQgc2Vzc2lvbiBpbmRleC4AWEFjdGl2ZVZhbGlkYXRvckluZGljZXMBALEMBAAICQEgQWxsIHRoZSB2YWxpZGF0b3JzIGFjdGl2ZWx5IHBhcnRpY2lwYXRpbmcgaW4gcGFyYWNoYWluIGNvbnNlbnN1cy6wIEluZGljZXMgYXJlIGludG8gdGhlIGJyb2FkZXIgdmFsaWRhdG9yIHNldC4ATEFjdGl2ZVZhbGlkYXRvcktleXMBALUMBAAIVQEgVGhlIHBhcmFjaGFpbiBhdHRlc3RhdGlvbiBrZXlzIG9mIHRoZSB2YWxpZGF0b3JzIGFjdGl2ZWx5IHBhcnRpY2lwYXRpbmcgaW4gcGFyYWNoYWluHQEgY29uc2Vuc3VzLiBUaGlzIHNob3VsZCBiZSB0aGUgc2FtZSBsZW5ndGggYXMgYEFjdGl2ZVZhbGlkYXRvckluZGljZXNgLgBMQWxsb3dlZFJlbGF5UGFyZW50cwEAuQwUAAAAAAAEbCBBbGwgYWxsb3dlZCByZWxheS1wYXJlbnRzLgABeQQAAAAAAAA0AAA0UGFyYUluY2x1c2lvbgE0UGFyYUluY2x1c2lvbgQIVjEAAQQFtQLlDAQAFGEBIENhbmRpZGF0ZXMgcGVuZGluZyBhdmFpbGFiaWxpdHkgYnkgYFBhcmFJZGAuIFRoZXkgZm9ybSBhIGNoYWluIHN0YXJ0aW5nIGZyb20gdGhlIGxhdGVzdGwgaW5jbHVkZWQgaGVhZCBvZiB0aGUgcGFyYS5hASBVc2UgYSBkaWZmZXJlbnQgcHJlZml4IHBvc3QtbWlncmF0aW9uIHRvIHYxLCBzaW5jZSB0aGUgdjAgYFBlbmRpbmdBdmFpbGFiaWxpdHlgIHN0b3JhZ2VxASB3b3VsZCBvdGhlcndpc2UgaGF2ZSB0aGUgZXhhY3Qgc2FtZSBwcmVmaXggd2hpY2ggY291bGQgY2F1c2UgdW5kZWZpbmVkIGJlaGF2aW91ciB3aGVuIGRvaW5nPCB0aGUgbWlncmF0aW9uLgABfQQAAWkIAAAB7QwAAAA1AAAwUGFyYUluaGVyZW50ATBQYXJhSW5oZXJlbnQIIEluY2x1ZGVkAACQBAAY7CBXaGV0aGVyIHRoZSBwYXJhcyBpbmhlcmVudCB3YXMgaW5jbHVkZWQgd2l0aGluIHRoaXMgYmxvY2suAGkBIFRoZSBgT3B0aW9uPCgpPmAgaXMgZWZmZWN0aXZlbHkgYSBgYm9vbGAsIGJ1dCBpdCBuZXZlciBoaXRzIHN0b3JhZ2UgaW4gdGhlIGBOb25lYCB2YXJpYW50vCBkdWUgdG8gdGhlIGd1YXJhbnRlZXMgb2YgRlJBTUUncyBzdG9yYWdlIEFQSXMuAEkBIElmIHRoaXMgaXMgYE5vbmVgIGF0IHRoZSBlbmQgb2YgdGhlIGJsb2NrLCB3ZSBwYW5pYyBhbmQgcmVuZGVyIHRoZSBibG9jayBpbnZhbGlkLgAwT25DaGFpblZvdGVzAADxDAQABEUBIFNjcmFwZWQgb24gY2hhaW4gZGF0YSBmb3IgZXh0cmFjdGluZyByZXNvbHZlZCBkaXNwdXRlcyBhcyB3ZWxsIGFzIGJhY2tpbmcgdm90ZXMuAAGBBAAAAAEFDQAAADYAADRQYXJhU2NoZWR1bGVyATRQYXJhU2NoZWR1bGVyDDxWYWxpZGF0b3JHcm91cHMBAAkNBAAcbQEgQWxsIHRoZSB2YWxpZGF0b3IgZ3JvdXBzLiBPbmUgZm9yIGVhY2ggY29yZS4gSW5kaWNlcyBhcmUgaW50byBgQWN0aXZlVmFsaWRhdG9yc2AgLSBub3QgdGhlbQEgYnJvYWRlciBzZXQgb2YgUG9sa2Fkb3QgdmFsaWRhdG9ycywgYnV0IGluc3RlYWQganVzdCB0aGUgc3Vic2V0IHVzZWQgZm9yIHBhcmFjaGFpbnMgZHVyaW5nOCB0aGlzIHNlc3Npb24uAEkBIEJvdW5kOiBUaGUgbnVtYmVyIG9mIGNvcmVzIGlzIHRoZSBzdW0gb2YgdGhlIG51bWJlcnMgb2YgcGFyYWNoYWlucyBhbmQgcGFyYXRocmVhZGkBIG11bHRpcGxleGVycy4gUmVhc29uYWJseSwgMTAwLTEwMDAuIFRoZSBkb21pbmFudCBmYWN0b3IgaXMgdGhlIG51bWJlciBvZiB2YWxpZGF0b3JzOiBzYWZlUCB1cHBlciBib3VuZCBhdCAxMGsuAERTZXNzaW9uU3RhcnRCbG9jawEAEBAAAAAAHGkBIFRoZSBibG9jayBudW1iZXIgd2hlcmUgdGhlIHNlc3Npb24gc3RhcnQgb2NjdXJyZWQuIFVzZWQgdG8gdHJhY2sgaG93IG1hbnkgZ3JvdXAgcm90YXRpb25zPCBoYXZlIG9jY3VycmVkLgBVASBOb3RlIHRoYXQgaW4gdGhlIGNvbnRleHQgb2YgcGFyYWNoYWlucyBtb2R1bGVzIHRoZSBzZXNzaW9uIGNoYW5nZSBpcyBzaWduYWxlZCBkdXJpbmdhASB0aGUgYmxvY2sgYW5kIGVuYWN0ZWQgYXQgdGhlIGVuZCBvZiB0aGUgYmxvY2sgKGF0IHRoZSBmaW5hbGl6YXRpb24gc3RhZ2UsIHRvIGJlIGV4YWN0KS5ZASBUaHVzIGZvciBhbGwgaW50ZW50cyBhbmQgcHVycG9zZXMgdGhlIGVmZmVjdCBvZiB0aGUgc2Vzc2lvbiBjaGFuZ2UgaXMgb2JzZXJ2ZWQgYXQgdGhlZQEgYmxvY2sgZm9sbG93aW5nIHRoZSBzZXNzaW9uIGNoYW5nZSwgYmxvY2sgbnVtYmVyIG9mIHdoaWNoIHdlIHNhdmUgaW4gdGhpcyBzdG9yYWdlIHZhbHVlLgAoQ2xhaW1RdWV1ZQEADQ0EAAhZASBPbmUgZW50cnkgZm9yIGVhY2ggYXZhaWxhYmlsaXR5IGNvcmUuIFRoZSBgVmVjRGVxdWVgIHJlcHJlc2VudHMgdGhlIGFzc2lnbm1lbnRzIHRvIGJlYCBzY2hlZHVsZWQgb24gdGhhdCBjb3JlLgAAAAAAAAA3AAAUUGFyYXMBFFBhcmFzWEBQdmZBY3RpdmVWb3RlTWFwAAEEBb0EIQ0EABC0IEFsbCBjdXJyZW50bHkgYWN0aXZlIFBWRiBwcmUtY2hlY2tpbmcgdm90ZXMuACwgSW52YXJpYW50OnUBIC0gVGhlcmUgYXJlIG5vIFBWRiBwcmUtY2hlY2tpbmcgdm90ZXMgdGhhdCBleGlzdHMgaW4gbGlzdCBidXQgbm90IGluIHRoZSBzZXQgYW5kIHZpY2UgdmVyc2EuAERQdmZBY3RpdmVWb3RlTGlzdAEAMQ0EAAQ1ASBUaGUgbGlzdCBvZiBhbGwgY3VycmVudGx5IGFjdGl2ZSBQVkYgdm90ZXMuIEF1eGlsaWFyeSB0byBgUHZmQWN0aXZlVm90ZU1hcGAuAChQYXJhY2hhaW5zAQA1DQQAEGkBIEFsbCBsZWFzZSBob2xkaW5nIHBhcmFjaGFpbnMuIE9yZGVyZWQgYXNjZW5kaW5nIGJ5IGBQYXJhSWRgLiBPbiBkZW1hbmQgcGFyYWNoYWlucyBhcmUgbm90KCBpbmNsdWRlZC4A6CBDb25zaWRlciB1c2luZyB0aGUgW2BQYXJhY2hhaW5zQ2FjaGVgXSB0eXBlIG9mIG1vZGlmeWluZy4AOFBhcmFMaWZlY3ljbGVzAAEEBbUCOQ0EAAS8IFRoZSBjdXJyZW50IGxpZmVjeWNsZSBvZiBhIGFsbCBrbm93biBQYXJhIElEcy4AFEhlYWRzAAEEBbUC3QQEAASgIFRoZSBoZWFkLWRhdGEgb2YgZXZlcnkgcmVnaXN0ZXJlZCBwYXJhLgBETW9zdFJlY2VudENvbnRleHQAAQQFtQIQBAAEKQEgVGhlIGNvbnRleHQgKHJlbGF5LWNoYWluIGJsb2NrIG51bWJlcikgb2YgdGhlIG1vc3QgcmVjZW50IHBhcmFjaGFpbiBoZWFkLgA8Q3VycmVudENvZGVIYXNoAAEEBbUCvQQEAAy0IFRoZSB2YWxpZGF0aW9uIGNvZGUgaGFzaCBvZiBldmVyeSBsaXZlIHBhcmEuAOQgQ29ycmVzcG9uZGluZyBjb2RlIGNhbiBiZSByZXRyaWV2ZWQgd2l0aCBbYENvZGVCeUhhc2hgXS4AMFBhc3RDb2RlSGFzaAABBAU9Db0EBAAQYQEgQWN0dWFsIHBhc3QgY29kZSBoYXNoLCBpbmRpY2F0ZWQgYnkgdGhlIHBhcmEgaWQgYXMgd2VsbCBhcyB0aGUgYmxvY2sgbnVtYmVyIGF0IHdoaWNoIGl0RCBiZWNhbWUgb3V0ZGF0ZWQuAOQgQ29ycmVzcG9uZGluZyBjb2RlIGNhbiBiZSByZXRyaWV2ZWQgd2l0aCBbYENvZGVCeUhhc2hgXS4AMFBhc3RDb2RlTWV0YQEBBAW1AkENCAAADEkBIFBhc3QgY29kZSBvZiBwYXJhY2hhaW5zLiBUaGUgcGFyYWNoYWlucyB0aGVtc2VsdmVzIG1heSBub3QgYmUgcmVnaXN0ZXJlZCBhbnltb3JlLEkBIGJ1dCB3ZSBhbHNvIGtlZXAgdGhlaXIgY29kZSBvbi1jaGFpbiBmb3IgdGhlIHNhbWUgYW1vdW50IG9mIHRpbWUgYXMgb3V0ZGF0ZWQgY29kZbAgdG8ga2VlcCBpdCBhdmFpbGFibGUgZm9yIGFwcHJvdmFsIGNoZWNrZXJzLgA8UGFzdENvZGVQcnVuaW5nAQBNDQQAGGkBIFdoaWNoIHBhcmFzIGhhdmUgcGFzdCBjb2RlIHRoYXQgbmVlZHMgcHJ1bmluZyBhbmQgdGhlIHJlbGF5LWNoYWluIGJsb2NrIGF0IHdoaWNoIHRoZSBjb2RlaQEgd2FzIHJlcGxhY2VkLiBOb3RlIHRoYXQgdGhpcyBpcyB0aGUgYWN0dWFsIGhlaWdodCBvZiB0aGUgaW5jbHVkZWQgYmxvY2ssIG5vdCB0aGUgZXhwZWN0ZWQ9ASBoZWlnaHQgYXQgd2hpY2ggdGhlIGNvZGUgdXBncmFkZSB3b3VsZCBiZSBhcHBsaWVkLCBhbHRob3VnaCB0aGV5IG1heSBiZSBlcXVhbC5tASBUaGlzIGlzIHRvIGVuc3VyZSB0aGUgZW50aXJlIGFjY2VwdGFuY2UgcGVyaW9kIGlzIGNvdmVyZWQsIG5vdCBhbiBvZmZzZXQgYWNjZXB0YW5jZSBwZXJpb2RtASBzdGFydGluZyBmcm9tIHRoZSB0aW1lIGF0IHdoaWNoIHRoZSBwYXJhY2hhaW4gcGVyY2VpdmVzIGEgY29kZSB1cGdyYWRlIGFzIGhhdmluZyBvY2N1cnJlZC5VASBNdWx0aXBsZSBlbnRyaWVzIGZvciBhIHNpbmdsZSBwYXJhIGFyZSBwZXJtaXR0ZWQuIE9yZGVyZWQgYXNjZW5kaW5nIGJ5IGJsb2NrIG51bWJlci4ASEZ1dHVyZUNvZGVVcGdyYWRlcwABBAW1AhAEABA9ASBUaGUgYmxvY2sgbnVtYmVyIGF0IHdoaWNoIHRoZSBwbGFubmVkIGNvZGUgY2hhbmdlIGlzIGV4cGVjdGVkIGZvciBhIHBhcmFjaGFpbi4AZQEgVGhlIGNoYW5nZSB3aWxsIGJlIGFwcGxpZWQgYWZ0ZXIgdGhlIGZpcnN0IHBhcmFibG9jayBmb3IgdGhpcyBJRCBpbmNsdWRlZCB3aGljaCBleGVjdXRlcxkBIGluIHRoZSBjb250ZXh0IG9mIGEgcmVsYXkgY2hhaW4gYmxvY2sgd2l0aCBhIG51bWJlciA+PSBgZXhwZWN0ZWRfYXRgLgBQRnV0dXJlQ29kZVVwZ3JhZGVzQXQBAE0NBAAgrCBUaGUgbGlzdCBvZiB1cGNvbWluZyBmdXR1cmUgY29kZSB1cGdyYWRlcy4AbQEgRWFjaCBpdGVtIGlzIGEgcGFpciBvZiB0aGUgcGFyYWNoYWluIGFuZCB0aGUgZXhwZWN0ZWQgYmxvY2sgYXQgd2hpY2ggdGhlIHVwZ3JhZGUgc2hvdWxkIGJlUQEgYXBwbGllZC4gVGhlIHVwZ3JhZGUgd2lsbCBiZSBhcHBsaWVkIGF0IHRoZSBnaXZlbiByZWxheSBjaGFpbiBibG9jay4gSW4gY29udHJhc3QgdG91ASBbYEZ1dHVyZUNvZGVVcGdyYWRlc2BdIHRoaXMgY29kZSB1cGdyYWRlIHdpbGwgYmUgYXBwbGllZCByZWdhcmRsZXNzIHRoZSBwYXJhY2hhaW4gbWFraW5nIGFueUQgcHJvZ3Jlc3Mgb3Igbm90LgCMIE9yZGVyZWQgYXNjZW5kaW5nIGJ5IGJsb2NrIG51bWJlci4AOEZ1dHVyZUNvZGVIYXNoAAEEBbUCvQQEAAycIFRoZSBhY3R1YWwgZnV0dXJlIGNvZGUgaGFzaCBvZiBhIHBhcmEuAOQgQ29ycmVzcG9uZGluZyBjb2RlIGNhbiBiZSByZXRyaWV2ZWQgd2l0aCBbYENvZGVCeUhhc2hgXS4ASEF1dGhvcml6ZWRDb2RlSGFzaAABBAW1AlENBAAEbQEgVGhlIGNvZGUgaGFzaCBhdXRob3JpemF0aW9ucyBmb3IgYSBwYXJhIHdoaWNoIHdpbGwgZXhwaXJlIGBleHBpcmVfYXRgIGBCbG9ja051bWJlckZvcjxUPmAuAFBVcGdyYWRlR29BaGVhZFNpZ25hbAABBAW1AlUNBAAodQEgVGhpcyBpcyB1c2VkIGJ5IHRoZSByZWxheS1jaGFpbiB0byBjb21tdW5pY2F0ZSB0byBhIHBhcmFjaGFpbiBhIGdvLWFoZWFkIHdpdGggaW4gdGhlIHVwZ3JhZGUsIHByb2NlZHVyZS4AdQEgVGhpcyB2YWx1ZSBpcyBhYnNlbnQgd2hlbiB0aGVyZSBhcmUgbm8gdXBncmFkZXMgc2NoZWR1bGVkIG9yIGR1cmluZyB0aGUgdGltZSB0aGUgcmVsYXkgY2hhaW5VASBwZXJmb3JtcyB0aGUgY2hlY2tzLiBJdCBpcyBzZXQgYXQgdGhlIGZpcnN0IHJlbGF5LWNoYWluIGJsb2NrIHdoZW4gdGhlIGNvcnJlc3BvbmRpbmd1ASBwYXJhY2hhaW4gY2FuIHN3aXRjaCBpdHMgdXBncmFkZSBmdW5jdGlvbi4gQXMgc29vbiBhcyB0aGUgcGFyYWNoYWluJ3MgYmxvY2sgaXMgaW5jbHVkZWQsIHRoZXAgdmFsdWUgZ2V0cyByZXNldCB0byBgTm9uZWAuAGUBIE5PVEUgdGhhdCB0aGlzIGZpZWxkIGlzIHVzZWQgYnkgcGFyYWNoYWlucyB2aWEgbWVya2xlIHN0b3JhZ2UgcHJvb2ZzLCB0aGVyZWZvcmUgY2hhbmdpbmfEIHRoZSBmb3JtYXQgd2lsbCByZXF1aXJlIG1pZ3JhdGlvbiBvZiBwYXJhY2hhaW5zLgBgVXBncmFkZVJlc3RyaWN0aW9uU2lnbmFsAAEEBbUCWQ0EACRpASBUaGlzIGlzIHVzZWQgYnkgdGhlIHJlbGF5LWNoYWluIHRvIGNvbW11bmljYXRlIHRoYXQgdGhlcmUgYXJlIHJlc3RyaWN0aW9ucyBmb3IgcGVyZm9ybWluZ3wgYW4gdXBncmFkZSBmb3IgdGhpcyBwYXJhY2hhaW4uAFkBIFRoaXMgbWF5IGJlIGEgYmVjYXVzZSB0aGUgcGFyYWNoYWluIHdhaXRzIGZvciB0aGUgdXBncmFkZSBjb29sZG93biB0byBleHBpcmUuIEFub3RoZXJtASBwb3RlbnRpYWwgdXNlIGNhc2UgaXMgd2hlbiB3ZSB3YW50IHRvIHBlcmZvcm0gc29tZSBtYWludGVuYW5jZSAoc3VjaCBhcyBzdG9yYWdlIG1pZ3JhdGlvbingIHdlIGNvdWxkIHJlc3RyaWN0IHVwZ3JhZGVzIHRvIG1ha2UgdGhlIHByb2Nlc3Mgc2ltcGxlci4AZQEgTk9URSB0aGF0IHRoaXMgZmllbGQgaXMgdXNlZCBieSBwYXJhY2hhaW5zIHZpYSBtZXJrbGUgc3RvcmFnZSBwcm9vZnMsIHRoZXJlZm9yZSBjaGFuZ2luZ8QgdGhlIGZvcm1hdCB3aWxsIHJlcXVpcmUgbWlncmF0aW9uIG9mIHBhcmFjaGFpbnMuAEBVcGdyYWRlQ29vbGRvd25zAQBNDQQADFEBIFRoZSBsaXN0IG9mIHBhcmFjaGFpbnMgdGhhdCBhcmUgYXdhaXRpbmcgZm9yIHRoZWlyIHVwZ3JhZGUgcmVzdHJpY3Rpb24gdG8gY29vbGRvd24uAIwgT3JkZXJlZCBhc2NlbmRpbmcgYnkgYmxvY2sgbnVtYmVyLgBAVXBjb21pbmdVcGdyYWRlcwEATQ0EABiQIFRoZSBsaXN0IG9mIHVwY29taW5nIGNvZGUgdXBncmFkZXMuAHEBIEVhY2ggaXRlbSBpcyBhIHBhaXIgb2Ygd2hpY2ggcGFyYSBwZXJmb3JtcyBhIGNvZGUgdXBncmFkZSBhbmQgYXQgd2hpY2ggcmVsYXktY2hhaW4gYmxvY2sgaXRAIGlzIGV4cGVjdGVkIGF0LgCMIE9yZGVyZWQgYXNjZW5kaW5nIGJ5IGJsb2NrIG51bWJlci4AMEFjdGlvbnNRdWV1ZQEBBAUQNQ0EAAQVASBUaGUgYWN0aW9ucyB0byBwZXJmb3JtIGR1cmluZyB0aGUgc3RhcnQgb2YgYSBzcGVjaWZpYyBzZXNzaW9uIGluZGV4LgBQVXBjb21pbmdQYXJhc0dlbmVzaXMAAQQFtQJJBwQAEKAgVXBjb21pbmcgcGFyYXMgaW5zdGFudGlhdGlvbiBhcmd1bWVudHMuAGUBIE5PVEUgdGhhdCBhZnRlciBQVkYgcHJlLWNoZWNraW5nIGlzIGVuYWJsZWQgdGhlIHBhcmEgZ2VuZXNpcyBhcmcgd2lsbCBoYXZlIGl0J3MgY29kZSBzZXRhASB0byBlbXB0eS4gSW5zdGVhZCwgdGhlIGNvZGUgd2lsbCBiZSBzYXZlZCBpbnRvIHRoZSBzdG9yYWdlIHJpZ2h0IGF3YXkgdmlhIGBDb2RlQnlIYXNoYC4AOENvZGVCeUhhc2hSZWZzAQEEBr0EEBAAAAAABCkBIFRoZSBudW1iZXIgb2YgcmVmZXJlbmNlIG9uIHRoZSB2YWxpZGF0aW9uIGNvZGUgaW4gW2BDb2RlQnlIYXNoYF0gc3RvcmFnZS4AKENvZGVCeUhhc2gAAQQGvQTZBAQAEJAgVmFsaWRhdGlvbiBjb2RlIHN0b3JlZCBieSBpdHMgaGFzaC4AMQEgVGhpcyBzdG9yYWdlIGlzIGNvbnNpc3RlbnQgd2l0aCBbYEZ1dHVyZUNvZGVIYXNoYF0sIFtgQ3VycmVudENvZGVIYXNoYF0gYW5kSCBbYFBhc3RDb2RlSGFzaGBdLgABDQUAAXkIAARAVW5zaWduZWRQcmlvcml0eTAg//////////8AAAFdDQAABM1xCzC9LqsDUt3MJkF6oZR1ygRJAdr/aJAUe8l/QVY5cHJlbW92ZV91cGdyYWRlX2Nvb2xkb3duX2Nvc3QEEHBhcmG1AhgEIQEgUmV0dXJucyB0aGUgY29zdCBmb3IgcmVtb3ZpbmcgYW4gdXBncmFkZSBjb29sZG93biBmb3IgdGhlIGdpdmVuIGBwYXJhYC4AOAAALEluaXRpYWxpemVyASxJbml0aWFsaXplcgg4SGFzSW5pdGlhbGl6ZWQAAJAEACAhASBXaGV0aGVyIHRoZSBwYXJhY2hhaW5zIG1vZHVsZXMgaGF2ZSBiZWVuIGluaXRpYWxpemVkIHdpdGhpbiB0aGlzIGJsb2NrLgAlASBTZW1hbnRpY2FsbHkgYSBgYm9vbGAsIGJ1dCB0aGlzIGd1YXJhbnRlZXMgaXQgc2hvdWxkIG5ldmVyIGhpdCB0aGUgdHJpZSxpASBhcyB0aGlzIGlzIGNsZWFyZWQgaW4gYG9uX2ZpbmFsaXplYCBhbmQgRnJhbWUgb3B0aW1pemVzIGBOb25lYCB2YWx1ZXMgdG8gYmUgZW1wdHkgdmFsdWVzLgBxASBBcyBhIGBib29sYCwgYHNldChmYWxzZSlgIGFuZCBgcmVtb3ZlKClgIGJvdGggbGVhZCB0byB0aGUgbmV4dCBgZ2V0KClgIGJlaW5nIGZhbHNlLCBidXQgb25ldQEgb2YgdGhlbSB3cml0ZXMgdG8gdGhlIHRyaWUgYW5kIG9uZSBkb2VzIG5vdC4gVGhpcyBjb25mdXNpb24gbWFrZXMgYE9wdGlvbjwoKT5gIG1vcmUgc3VpdGFibGWQIGZvciB0aGUgc2VtYW50aWNzIG9mIHRoaXMgdmFyaWFibGUuAFhCdWZmZXJlZFNlc3Npb25DaGFuZ2VzAQBhDQQAHGggQnVmZmVyZWQgc2Vzc2lvbiBjaGFuZ2VzLgBdASBUeXBpY2FsbHkgdGhpcyB3aWxsIGJlIGVtcHR5IG9yIG9uZSBlbGVtZW50IGxvbmcuIEFwYXJ0IGZyb20gdGhhdCB0aGlzIGl0ZW0gbmV2ZXIgaGl0czQgdGhlIHN0b3JhZ2UuAGkBIEhvd2V2ZXIgdGhpcyBpcyBhIGBWZWNgIHJlZ2FyZGxlc3MgdG8gaGFuZGxlIHZhcmlvdXMgZWRnZSBjYXNlcyB0aGF0IG1heSBvY2N1ciBhdCBydW50aW1lwCB1cGdyYWRlIGJvdW5kYXJpZXMgb3IgaWYgZ292ZXJuYW5jZSBpbnRlcnZlbmVzLgABFQUAAAAAAAA5AAAMRG1wAQxEbXAMVERvd253YXJkTWVzc2FnZVF1ZXVlcwEBBAW1AmkNBAAE0CBUaGUgZG93bndhcmQgbWVzc2FnZXMgYWRkcmVzc2VkIGZvciBhIGNlcnRhaW4gcGFyYS4AZERvd253YXJkTWVzc2FnZVF1ZXVlSGVhZHMBAQQFtQI0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCUBIEEgbWFwcGluZyB0aGF0IHN0b3JlcyB0aGUgZG93bndhcmQgbWVzc2FnZSBxdWV1ZSBNUUMgaGVhZCBmb3IgZWFjaCBwYXJhLgCQIEVhY2ggbGluayBpbiB0aGlzIGNoYWluIGhhcyBhIGZvcm06eCBgKHByZXZfaGVhZCwgQiwgSChNKSlgLCB3aGVyZeggLSBgcHJldl9oZWFkYDogaXMgdGhlIHByZXZpb3VzIGhlYWQgaGFzaCBvciB6ZXJvIGlmIG5vbmUuIQEgLSBgQmA6IGlzIHRoZSByZWxheS1jaGFpbiBibG9jayBudW1iZXIgaW4gd2hpY2ggYSBtZXNzYWdlIHdhcyBhcHBlbmRlZC7UIC0gYEgoTSlgOiBpcyB0aGUgaGFzaCBvZiB0aGUgbWVzc2FnZSBiZWluZyBhcHBlbmRlZC4ARERlbGl2ZXJ5RmVlRmFjdG9yAQEEBbUCCQdAAABkp7O24A0AAAAAAAAAAATEIFRoZSBmYWN0b3IgdG8gbXVsdGlwbHkgdGhlIGJhc2UgZGVsaXZlcnkgZmVlIGJ5LgAAAAAAAAA6AAAQSHJtcAEQSHJtcDBcSHJtcE9wZW5DaGFubmVsUmVxdWVzdHMAAQQFHQVxDQQAGLwgVGhlIHNldCBvZiBwZW5kaW5nIEhSTVAgb3BlbiBjaGFubmVsIHJlcXVlc3RzLgDAIFRoZSBzZXQgaXMgYWNjb21wYW5pZWQgYnkgYSBsaXN0IGZvciBpdGVyYXRpb24uACwgSW52YXJpYW50Oj0BIC0gVGhlcmUgYXJlIG5vIGNoYW5uZWxzIHRoYXQgZXhpc3RzIGluIGxpc3QgYnV0IG5vdCBpbiB0aGUgc2V0IGFuZCB2aWNlIHZlcnNhLgBsSHJtcE9wZW5DaGFubmVsUmVxdWVzdHNMaXN0AQB1DQQAAABsSHJtcE9wZW5DaGFubmVsUmVxdWVzdENvdW50AQEEBbUCEBAAAAAADGUBIFRoaXMgbWFwcGluZyB0cmFja3MgaG93IG1hbnkgb3BlbiBjaGFubmVsIHJlcXVlc3RzIGFyZSBpbml0aWF0ZWQgYnkgYSBnaXZlbiBzZW5kZXIgcGFyYS5ZASBJbnZhcmlhbnQ6IGBIcm1wT3BlbkNoYW5uZWxSZXF1ZXN0c2Agc2hvdWxkIGNvbnRhaW4gdGhlIHNhbWUgbnVtYmVyIG9mIGl0ZW1zIHRoYXQgaGFzBQEgYChYLCBfKWAgYXMgdGhlIG51bWJlciBvZiBgSHJtcE9wZW5DaGFubmVsUmVxdWVzdENvdW50YCBmb3IgYFhgLgB8SHJtcEFjY2VwdGVkQ2hhbm5lbFJlcXVlc3RDb3VudAEBBAW1AhAQAAAAAAxxASBUaGlzIG1hcHBpbmcgdHJhY2tzIGhvdyBtYW55IG9wZW4gY2hhbm5lbCByZXF1ZXN0cyB3ZXJlIGFjY2VwdGVkIGJ5IGEgZ2l2ZW4gcmVjaXBpZW50IHBhcmEubQEgSW52YXJpYW50OiBgSHJtcE9wZW5DaGFubmVsUmVxdWVzdHNgIHNob3VsZCBjb250YWluIHRoZSBzYW1lIG51bWJlciBvZiBpdGVtcyBgKF8sIFgpYCB3aXRoVQEgYGNvbmZpcm1lZGAgc2V0IHRvIHRydWUsIGFzIHRoZSBudW1iZXIgb2YgYEhybXBBY2NlcHRlZENoYW5uZWxSZXF1ZXN0Q291bnRgIGZvciBgWGAuAGBIcm1wQ2xvc2VDaGFubmVsUmVxdWVzdHMAAQQFHQWQBAAccQEgQSBzZXQgb2YgcGVuZGluZyBIUk1QIGNsb3NlIGNoYW5uZWwgcmVxdWVzdHMgdGhhdCBhcmUgZ29pbmcgdG8gYmUgY2xvc2VkIGR1cmluZyB0aGUgc2Vzc2lvbiEBIGNoYW5nZS4gVXNlZCBmb3IgY2hlY2tpbmcgaWYgYSBnaXZlbiBjaGFubmVsIGlzIHJlZ2lzdGVyZWQgZm9yIGNsb3N1cmUuAMAgVGhlIHNldCBpcyBhY2NvbXBhbmllZCBieSBhIGxpc3QgZm9yIGl0ZXJhdGlvbi4ALCBJbnZhcmlhbnQ6PQEgLSBUaGVyZSBhcmUgbm8gY2hhbm5lbHMgdGhhdCBleGlzdHMgaW4gbGlzdCBidXQgbm90IGluIHRoZSBzZXQgYW5kIHZpY2UgdmVyc2EuAHBIcm1wQ2xvc2VDaGFubmVsUmVxdWVzdHNMaXN0AQB1DQQAAAA4SHJtcFdhdGVybWFya3MAAQQFtQIQBAAQuCBUaGUgSFJNUCB3YXRlcm1hcmsgYXNzb2NpYXRlZCB3aXRoIGVhY2ggcGFyYS4sIEludmFyaWFudDpVASAtIGVhY2ggcGFyYSBgUGAgdXNlZCBoZXJlIGFzIGEga2V5IHNob3VsZCBzYXRpc2Z5IGBQYXJhczo6aXNfdmFsaWRfcGFyYShQKWAgd2l0aGluIGEsICAgc2Vzc2lvbi4AMEhybXBDaGFubmVscwABBAUdBXkNBAAMtCBIUk1QIGNoYW5uZWwgZGF0YSBhc3NvY2lhdGVkIHdpdGggZWFjaCBwYXJhLiwgSW52YXJpYW50OnUBIC0gZWFjaCBwYXJ0aWNpcGFudCBpbiB0aGUgY2hhbm5lbCBzaG91bGQgc2F0aXNmeSBgUGFyYXM6OmlzX3ZhbGlkX3BhcmEoUClgIHdpdGhpbiBhIHNlc3Npb24uAGBIcm1wSW5ncmVzc0NoYW5uZWxzSW5kZXgBAQQFtQI1DQQANHEBIEluZ3Jlc3MvZWdyZXNzIGluZGV4ZXMgYWxsb3cgdG8gZmluZCBhbGwgdGhlIHNlbmRlcnMgYW5kIHJlY2VpdmVycyBnaXZlbiB0aGUgb3Bwb3NpdGUgc2lkZS4UIEkuZS4AIQEgKGEpIGluZ3Jlc3MgaW5kZXggYWxsb3dzIHRvIGZpbmQgYWxsIHRoZSBzZW5kZXJzIGZvciBhIGdpdmVuIHJlY2lwaWVudC4dASAoYikgZWdyZXNzIGluZGV4IGFsbG93cyB0byBmaW5kIGFsbCB0aGUgcmVjaXBpZW50cyBmb3IgYSBnaXZlbiBzZW5kZXIuADAgSW52YXJpYW50czpRASAtIGZvciBlYWNoIGluZ3Jlc3MgaW5kZXggZW50cnkgZm9yIGBQYCBlYWNoIGl0ZW0gYElgIGluIHRoZSBpbmRleCBzaG91bGQgcHJlc2VudCBpbnggICBgSHJtcENoYW5uZWxzYCBhcyBgKEksIFApYC5NASAtIGZvciBlYWNoIGVncmVzcyBpbmRleCBlbnRyeSBmb3IgYFBgIGVhY2ggaXRlbSBgRWAgaW4gdGhlIGluZGV4IHNob3VsZCBwcmVzZW50IGlueCAgIGBIcm1wQ2hhbm5lbHNgIGFzIGAoUCwgRSlgLgEBIC0gdGhlcmUgc2hvdWxkIGJlIG5vIG90aGVyIGRhbmdsaW5nIGNoYW5uZWxzIGluIGBIcm1wQ2hhbm5lbHNgLmggLSB0aGUgdmVjdG9ycyBhcmUgc29ydGVkLgBcSHJtcEVncmVzc0NoYW5uZWxzSW5kZXgBAQQFtQI1DQQAAABMSHJtcENoYW5uZWxDb250ZW50cwEBBAUdBX0NBAAIrCBTdG9yYWdlIGZvciB0aGUgbWVzc2FnZXMgZm9yIGVhY2ggY2hhbm5lbC5lASBJbnZhcmlhbnQ6IGNhbm5vdCBiZSBub24tZW1wdHkgaWYgdGhlIGNvcnJlc3BvbmRpbmcgY2hhbm5lbCBpbiBgSHJtcENoYW5uZWxzYCBpcyBgTm9uZWAuAEhIcm1wQ2hhbm5lbERpZ2VzdHMBAQQFtQKFDQQAGGkBIE1haW50YWlucyBhIG1hcHBpbmcgdGhhdCBjYW4gYmUgdXNlZCB0byBhbnN3ZXIgdGhlIHF1ZXN0aW9uOiBXaGF0IHBhcmFzIHNlbnQgYSBtZXNzYWdlIGF05CB0aGUgZ2l2ZW4gYmxvY2sgbnVtYmVyIGZvciBhIGdpdmVuIHJlY2VpdmVyLiBJbnZhcmlhbnRzOqggLSBUaGUgaW5uZXIgYFZlYzxQYXJhSWQ+YCBpcyBuZXZlciBlbXB0eS7oIC0gVGhlIGlubmVyIGBWZWM8UGFyYUlkPmAgY2Fubm90IHN0b3JlIHR3byBzYW1lIGBQYXJhSWRgLm0BIC0gVGhlIG91dGVyIHZlY3RvciBpcyBzb3J0ZWQgYXNjZW5kaW5nIGJ5IGJsb2NrIG51bWJlciBhbmQgY2Fubm90IHN0b3JlIHR3byBpdGVtcyB3aXRoIHRoZVQgICBzYW1lIGJsb2NrIG51bWJlci4AARkFAAF9CAAAAY0NAAAAPAAAPFBhcmFTZXNzaW9uSW5mbwE8UGFyYVNlc3Npb25JbmZvFFBBc3NpZ25tZW50S2V5c1Vuc2FmZQEAkQ0EAAykIEFzc2lnbm1lbnQga2V5cyBmb3IgdGhlIGN1cnJlbnQgc2Vzc2lvbi5tASBOb3RlIHRoYXQgdGhpcyBBUEkgaXMgcHJpdmF0ZSBkdWUgdG8gaXQgYmVpbmcgcHJvbmUgdG8gJ29mZi1ieS1vbmUnIGF0IHNlc3Npb24gYm91bmRhcmllcy6sIFdoZW4gaW4gZG91YnQsIHVzZSBgU2Vzc2lvbnNgIEFQSSBpbnN0ZWFkLgBURWFybGllc3RTdG9yZWRTZXNzaW9uAQAQEAAAAAAEAQEgVGhlIGVhcmxpZXN0IHNlc3Npb24gZm9yIHdoaWNoIHByZXZpb3VzIHNlc3Npb24gaW5mbyBpcyBzdG9yZWQuACBTZXNzaW9ucwABBAYQlQ0EAAykIFNlc3Npb24gaW5mb3JtYXRpb24gaW4gYSByb2xsaW5nIHdpbmRvdy41ASBTaG91bGQgaGF2ZSBhbiBlbnRyeSBpbiByYW5nZSBgRWFybGllc3RTdG9yZWRTZXNzaW9uLi49Q3VycmVudFNlc3Npb25JbmRleGAudQEgRG9lcyBub3QgaGF2ZSBhbnkgZW50cmllcyBiZWZvcmUgdGhlIHNlc3Npb24gaW5kZXggaW4gdGhlIGZpcnN0IHNlc3Npb24gY2hhbmdlIG5vdGlmaWNhdGlvbi4ALEFjY291bnRLZXlzAAEEBhAFAgQABHEBIFRoZSB2YWxpZGF0b3IgYWNjb3VudCBrZXlzIG9mIHRoZSB2YWxpZGF0b3JzIGFjdGl2ZWx5IHBhcnRpY2lwYXRpbmcgaW4gcGFyYWNoYWluIGNvbnNlbnN1cy4AVFNlc3Npb25FeGVjdXRvclBhcmFtcwABBAYQXQQEAATEIEV4ZWN1dG9yIHBhcmFtZXRlciBzZXQgZm9yIGEgZ2l2ZW4gc2Vzc2lvbiBpbmRleAAAAAAAAAA9AAA0UGFyYXNEaXNwdXRlcwE0UGFyYXNEaXNwdXRlcxRETGFzdFBydW5lZFNlc3Npb24AABAEAAgBASBUaGUgbGFzdCBwcnVuZWQgc2Vzc2lvbiwgaWYgYW55LiBBbGwgZGF0YSBzdG9yZWQgYnkgdGhpcyBtb2R1bGVUIHJlZmVyZW5jZXMgc2Vzc2lvbnMuACBEaXNwdXRlcwABCAUCoQ2lDQQABAUBIEFsbCBvbmdvaW5nIG9yIGNvbmNsdWRlZCBkaXNwdXRlcyBmb3IgdGhlIGxhc3Qgc2V2ZXJhbCBzZXNzaW9ucy4AREJhY2tlcnNPbkRpc3B1dGVzAAEIBQKhDakNBAAInCBCYWNraW5nIHZvdGVzIHN0b3JlZCBmb3IgZWFjaCBkaXNwdXRlLowgVGhpcyBzdG9yYWdlIGlzIHVzZWQgZm9yIHNsYXNoaW5nLgAgSW5jbHVkZWQAAQgFAqENEAQACEUBIEFsbCBpbmNsdWRlZCBibG9ja3Mgb24gdGhlIGNoYWluLCBhcyB3ZWxsIGFzIHRoZSBibG9jayBudW1iZXIgaW4gdGhpcyBjaGFpbiB0aGF0WQEgc2hvdWxkIGJlIHJldmVydGVkIGJhY2sgdG8gaWYgdGhlIGNhbmRpZGF0ZSBpcyBkaXNwdXRlZCBhbmQgZGV0ZXJtaW5lZCB0byBiZSBpbnZhbGlkLgAYRnJvemVuAQC4BAAQEQEgV2hldGhlciB0aGUgY2hhaW4gaXMgZnJvemVuLiBTdGFydHMgYXMgYE5vbmVgLiBXaGVuIHRoaXMgaXMgYFNvbWVgLDUBIHRoZSBjaGFpbiB3aWxsIG5vdCBhY2NlcHQgYW55IG5ldyBwYXJhY2hhaW4gYmxvY2tzIGZvciBiYWNraW5nIG9yIGluY2x1c2lvbiwJASBhbmQgaXRzIHZhbHVlIGluZGljYXRlcyB0aGUgbGFzdCB2YWxpZCBibG9jayBudW1iZXIgaW4gdGhlIGNoYWluLvggSXQgY2FuIG9ubHkgYmUgc2V0IGJhY2sgdG8gYE5vbmVgIGJ5IGdvdmVybmFuY2UgaW50ZXJ2ZW50aW9uLgABIQUAAYEIAAABrQ0AAAA+AAA0UGFyYXNTbGFzaGluZwE0UGFyYXNTbGFzaGluZwhAVW5hcHBsaWVkU2xhc2hlcwABCAUCoQ2xDQQABJAgVmFsaWRhdG9ycyBwZW5kaW5nIGRpc3B1dGUgc2xhc2hlcy4ASFZhbGlkYXRvclNldENvdW50cwABBAUQEAQABIQgYFZhbGlkYXRvclNldENvdW50YCBwZXIgc2Vzc2lvbi4AASUFAAAAAcENAAg0S2V5T3duZXJQcm9vZuEBDAkBIFRoZSBwcm9vZiBvZiBrZXkgb3duZXJzaGlwLCB1c2VkIGZvciB2YWxpZGF0aW5nIHNsYXNoaW5nIHJlcG9ydHMuEQEgVGhlIHByb29mIG11c3QgaW5jbHVkZSB0aGUgc2Vzc2lvbiBpbmRleCBhbmQgdmFsaWRhdG9yIGNvdW50IG9mIHRoZZwgc2Vzc2lvbiBhdCB3aGljaCB0aGUgb2ZmZW5jZSBvY2N1cnJlZC5YS2V5T3duZXJJZGVudGlmaWNhdGlvbo0KBAEBIFRoZSBpZGVudGlmaWNhdGlvbiBvZiBhIGtleSBvd25lciwgdXNlZCB3aGVuIHJlcG9ydGluZyBzbGFzaGVzLgA/AAAgT25EZW1hbmQBIE9uRGVtYW5kGDhQYXJhSWRBZmZpbml0eQABBAW1AsUNBAAMcQEgTWFwcyBhIGBQYXJhSWRgIHRvIGBDb3JlSW5kZXhgIGFuZCBrZWVwcyB0cmFjayBvZiBob3cgbWFueSBhc3NpZ25tZW50cyB0aGUgc2NoZWR1bGVyIGhhcyBpbl0BIGl0J3MgbG9va2FoZWFkLiBLZWVwaW5nIHRyYWNrIG9mIHRoaXMgYWZmaW5pdHkgcHJldmVudHMgcGFyYWxsZWwgZXhlY3V0aW9uIG9mIHRoZSBzYW1lnCBgUGFyYUlkYCBvbiB0d28gb3IgbW9yZSBgQ29yZUluZGV4YGVzLgAsUXVldWVTdGF0dXMBAMkNZAAAZKeztuANAAAAAAAAAAAAAAAAAAAAAAAE3CBPdmVyYWxsIHN0YXR1cyBvZiBxdWV1ZSAoYm90aCBmcmVlICsgYWZmaW5pdHkgZW50cmllcykALEZyZWVFbnRyaWVzAQDdDQQABGEBIFByaW9yaXR5IHF1ZXVlIGZvciBhbGwgb3JkZXJzIHdoaWNoIGRvbid0IHlldCAob3Igbm90IGFueSBtb3JlKSBoYXZlIGFueSBjb3JlIGFmZmluaXR5LgA8QWZmaW5pdHlFbnRyaWVzAQEEBXEI3Q0EAARJASBRdWV1ZSBlbnRyaWVzIHRoYXQgYXJlIGN1cnJlbnRseSBib3VuZCB0byBhIHBhcnRpY3VsYXIgY29yZSBkdWUgdG8gY29yZSBhZmZpbml0eS4AHFJldmVudWUBAOkNBAAE/CBLZWVwcyB0cmFjayBvZiBhY2N1bXVsYXRlZCByZXZlbnVlIGZyb20gb24gZGVtYW5kIG9yZGVyIHNhbGVzLgAcQ3JlZGl0cwEBBAIAGEAAAAAAAAAAAAAAAAAAAAAABLggS2VlcHMgdHJhY2sgb2YgY3JlZGl0cyBvd25lZCBieSBlYWNoIGFjY291bnQuAAE1BQgAAgUBVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gZmF2b3Igb2YgdXNpbmcgYHBsYWNlX29yZGVyX3dpdGhfY3JlZGl0c2AAAQIFAVRoaXMgd2lsbCBiZSByZW1vdmVkIGluIGZhdm9yIG9mIHVzaW5nIGBwbGFjZV9vcmRlcl93aXRoX2NyZWRpdHNgAAGNCAAMTFRyYWZmaWNEZWZhdWx0VmFsdWUJB0AAAGSns7bgDQAAAAAAAAAABMwgVGhlIGRlZmF1bHQgdmFsdWUgZm9yIHRoZSBzcG90IHRyYWZmaWMgbXVsdGlwbGllci4AUE1heEhpc3RvcmljYWxSZXZlbnVlEBCgAAAACNQgVGhlIG1heGltdW0gbnVtYmVyIG9mIGJsb2NrcyBzb21lIGhpc3RvcmljYWwgcmV2ZW51ZWAgaW5mb3JtYXRpb24gc3RvcmVkIGZvci4AIFBhbGxldElk4QogcHkvb25kbWQEtCBJZGVudGlmaWVyIGZvciB0aGUgaW50ZXJuYWwgcmV2ZW51ZSBiYWxhbmNlLgAB8Q0AAABAAABoQ29yZXRpbWVBc3NpZ25tZW50UHJvdmlkZXIBaENvcmV0aW1lQXNzaWdubWVudFByb3ZpZGVyCDRDb3JlU2NoZWR1bGVzAAEEBPUN+Q0EABBsIFNjaGVkdWxlZCBhc3NpZ25tZW50IHNldHMuAG0BIEFzc2lnbm1lbnRzIGFzIG9mIHRoZSBnaXZlbiBibG9jayBudW1iZXIuIFRoZXkgd2lsbCBnbyBpbnRvIHN0YXRlIG9uY2UgdGhlIGJsb2NrIG51bWJlciBpc9AgcmVhY2hlZCAoYW5kIHJlcGxhY2Ugd2hhdGV2ZXIgd2FzIGluIHRoZXJlIGJlZm9yZSkuADxDb3JlRGVzY3JpcHRvcnMBAQQEcQj9DQgAABCgIEFzc2lnbm1lbnRzIHdoaWNoIGFyZSBjdXJyZW50bHkgYWN0aXZlLgBpASBUaGV5IHdpbGwgYmUgcGlja2VkIGZyb20gYFBlbmRpbmdBc3NpZ25tZW50c2Agb25jZSB3ZSByZWFjaCB0aGUgc2NoZWR1bGVkIGJsb2NrIG51bWJlciBpblggYFBlbmRpbmdBc3NpZ25tZW50c2AuAAAAAAEdDgAAAEEAACRSZWdpc3RyYXIBJFJlZ2lzdHJhcgwsUGVuZGluZ1N3YXAAAQQFtQK1AgQABGQgUGVuZGluZyBzd2FwIG9wZXJhdGlvbnMuABRQYXJhcwABBAW1AiEOBAAQBQEgQW1vdW50IGhlbGQgb24gZGVwb3NpdCBmb3IgZWFjaCBwYXJhIGFuZCB0aGUgb3JpZ2luYWwgZGVwb3NpdG9yLgBxASBUaGUgZ2l2ZW4gYWNjb3VudCBJRCBpcyByZXNwb25zaWJsZSBmb3IgcmVnaXN0ZXJpbmcgdGhlIGNvZGUgYW5kIGluaXRpYWwgaGVhZCBkYXRhLCBidXQgbWF5VQEgb25seSBkbyBzbyBpZiBpdCBpc24ndCB5ZXQgcmVnaXN0ZXJlZC4gKEFmdGVyIHRoYXQsIGl0J3MgdXAgdG8gZ292ZXJuYW5jZSB0byBkbyBzby4pADhOZXh0RnJlZVBhcmFJZAEAtQIQAAAAAARgIFRoZSBuZXh0IGZyZWUgYFBhcmFJZGAuAAE5BQABkQgACCxQYXJhRGVwb3NpdBhAABCl1OgAAAAAAAAAAAAAAAjUIFRoZSBkZXBvc2l0IHRvIGJlIHBhaWQgdG8gcnVuIGEgb24tZGVtYW5kIHBhcmFjaGFpbi49ASBUaGlzIHNob3VsZCBpbmNsdWRlIHRoZSBjb3N0IGZvciBzdG9yaW5nIHRoZSBnZW5lc2lzIGhlYWQgYW5kIHZhbGlkYXRpb24gY29kZS4ASERhdGFEZXBvc2l0UGVyQnl0ZRhAgJaYAAAAAAAAAAAAAAAAAATEIFRoZSBkZXBvc2l0IHRvIGJlIHBhaWQgcGVyIGJ5dGUgc3RvcmVkIG9uIGNoYWluLgABKQ4AAABGAAAUU2xvdHMBFFNsb3RzBBhMZWFzZXMBAQQFtQItDgQAQBUBIEFtb3VudHMgaGVsZCBvbiBkZXBvc2l0IGZvciBlYWNoIChwb3NzaWJseSBmdXR1cmUpIGxlYXNlZCBwYXJhY2hhaW4uAGEBIFRoZSBhY3R1YWwgYW1vdW50IGxvY2tlZCBvbiBpdHMgYmVoYWxmIGJ5IGFueSBhY2NvdW50IGF0IGFueSB0aW1lIGlzIHRoZSBtYXhpbXVtIG9mIHRoZSkBIHNlY29uZCB2YWx1ZXMgb2YgdGhlIGl0ZW1zIGluIHRoaXMgbGlzdCB3aG9zZSBmaXJzdCB2YWx1ZSBpcyB0aGUgYWNjb3VudC4AYQEgVGhlIGZpcnN0IGl0ZW0gaW4gdGhlIGxpc3QgaXMgdGhlIGFtb3VudCBsb2NrZWQgZm9yIHRoZSBjdXJyZW50IExlYXNlIFBlcmlvZC4gRm9sbG93aW5nsCBpdGVtcyBhcmUgZm9yIHRoZSBzdWJzZXF1ZW50IGxlYXNlIHBlcmlvZHMuAGEBIFRoZSBkZWZhdWx0IHZhbHVlIChhbiBlbXB0eSBsaXN0KSBpbXBsaWVzIHRoYXQgdGhlIHBhcmFjaGFpbiBubyBsb25nZXIgZXhpc3RzIChvciBuZXZlcrQgZXhpc3RlZCkgYXMgZmFyIGFzIHRoaXMgcGFsbGV0IGlzIGNvbmNlcm5lZC4AUQEgSWYgYSBwYXJhY2hhaW4gZG9lc24ndCBleGlzdCAqeWV0KiBidXQgaXMgc2NoZWR1bGVkIHRvIGV4aXN0IGluIHRoZSBmdXR1cmUsIHRoZW4gaXRhASB3aWxsIGJlIGxlZnQtcGFkZGVkIHdpdGggb25lIG9yIG1vcmUgYE5vbmVgcyB0byBkZW5vdGUgdGhlIGZhY3QgdGhhdCBub3RoaW5nIGlzIGhlbGQgb25dASBkZXBvc2l0IGZvciB0aGUgbm9uLWV4aXN0ZW50IGNoYWluIGN1cnJlbnRseSwgYnV0IGlzIGhlbGQgYXQgc29tZSBwb2ludCBpbiB0aGUgZnV0dXJlLgDcIEl0IGlzIGlsbGVnYWwgZm9yIGEgYE5vbmVgIHZhbHVlIHRvIHRyYWlsIGluIHRoZSBsaXN0LgABPQUAAZUIAAgsTGVhc2VQZXJpb2QQEMCJAQAE3CBUaGUgbnVtYmVyIG9mIGJsb2NrcyBvdmVyIHdoaWNoIGEgc2luZ2xlIHBlcmlvZCBsYXN0cy4ALExlYXNlT2Zmc2V0EBAAAAAABNQgVGhlIG51bWJlciBvZiBibG9ja3MgdG8gb2Zmc2V0IGVhY2ggbGVhc2UgcGVyaW9kIGJ5LgABMQ4AAABHAAAgQXVjdGlvbnMBIEF1Y3Rpb25zEDhBdWN0aW9uQ291bnRlcgEAEBAAAAAABIwgTnVtYmVyIG9mIGF1Y3Rpb25zIHN0YXJ0ZWQgc28gZmFyLgAsQXVjdGlvbkluZm8AAIQEABT4IEluZm9ybWF0aW9uIHJlbGF0aW5nIHRvIHRoZSBjdXJyZW50IGF1Y3Rpb24sIGlmIHRoZXJlIGlzIG9uZS4ARQEgVGhlIGZpcnN0IGl0ZW0gaW4gdGhlIHR1cGxlIGlzIHRoZSBsZWFzZSBwZXJpb2QgaW5kZXggdGhhdCB0aGUgZmlyc3Qgb2YgdGhlIGZvdXJRASBjb250aWd1b3VzIGxlYXNlIHBlcmlvZHMgb24gYXVjdGlvbiBpcyBmb3IuIFRoZSBzZWNvbmQgaXMgdGhlIGJsb2NrIG51bWJlciB3aGVuIHRoZV0BIGF1Y3Rpb24gd2lsbCAiYmVnaW4gdG8gZW5kIiwgaS5lLiB0aGUgZmlyc3QgYmxvY2sgb2YgdGhlIEVuZGluZyBQZXJpb2Qgb2YgdGhlIGF1Y3Rpb24uADxSZXNlcnZlZEFtb3VudHMAAQQFNQ4YBAAIMQEgQW1vdW50cyBjdXJyZW50bHkgcmVzZXJ2ZWQgaW4gdGhlIGFjY291bnRzIG9mIHRoZSBiaWRkZXJzIGN1cnJlbnRseSB3aW5uaW5nOCAoc3ViLSlyYW5nZXMuABxXaW5uaW5nAAEEBRA5DgQADGEBIFRoZSB3aW5uaW5nIGJpZHMgZm9yIGVhY2ggb2YgdGhlIDEwIHJhbmdlcyBhdCBlYWNoIHNhbXBsZSBpbiB0aGUgZmluYWwgRW5kaW5nIFBlcmlvZCBvZkkBIHRoZSBjdXJyZW50IGF1Y3Rpb24uIFRoZSBtYXAncyBrZXkgaXMgdGhlIDAtYmFzZWQgaW5kZXggaW50byB0aGUgU2FtcGxlIFNpemUuIFRoZR0BIGZpcnN0IHNhbXBsZSBvZiB0aGUgZW5kaW5nIHBlcmlvZCBpcyAwOyB0aGUgbGFzdCBpcyBgU2FtcGxlIFNpemUgLSAxYC4AAUEFAAGZCAAQMEVuZGluZ1BlcmlvZBAQQBkBAAQdASBUaGUgbnVtYmVyIG9mIGJsb2NrcyBvdmVyIHdoaWNoIGFuIGF1Y3Rpb24gbWF5IGJlIHJldHJvYWN0aXZlbHkgZW5kZWQuADBTYW1wbGVMZW5ndGgQEBQAAAAM8CBUaGUgbGVuZ3RoIG9mIGVhY2ggc2FtcGxlIHRvIHRha2UgZHVyaW5nIHRoZSBlbmRpbmcgcGVyaW9kLgDUIGBFbmRpbmdQZXJpb2RgIC8gYFNhbXBsZUxlbmd0aGAgPSBUb3RhbCAjIG9mIFNhbXBsZXMAOFNsb3RSYW5nZUNvdW50EBAkAAAAAABMTGVhc2VQZXJpb2RzUGVyU2xvdBAQCAAAAAAAAUUOAAAASAAAJENyb3dkbG9hbgEkQ3Jvd2Rsb2FuEBRGdW5kcwABBAW1AkkOBAAEaCBJbmZvIG9uIGFsbCBvZiB0aGUgZnVuZHMuACBOZXdSYWlzZQEANQ0EAAhVASBUaGUgZnVuZHMgdGhhdCBoYXZlIGhhZCBhZGRpdGlvbmFsIGNvbnRyaWJ1dGlvbnMgZHVyaW5nIHRoZSBsYXN0IGJsb2NrLiBUaGlzIGlzIHVzZWQVASBpbiBvcmRlciB0byBkZXRlcm1pbmUgd2hpY2ggZnVuZHMgc2hvdWxkIHN1Ym1pdCBuZXcgb3IgdXBkYXRlZCBiaWRzLgAwRW5kaW5nc0NvdW50AQAQEAAAAAAEKQEgVGhlIG51bWJlciBvZiBhdWN0aW9ucyB0aGF0IGhhdmUgZW50ZXJlZCBpbnRvIHRoZWlyIGVuZGluZyBwZXJpb2Qgc28gZmFyLgA0TmV4dEZ1bmRJbmRleAEAEBAAAAAABKggVHJhY2tlciBmb3IgdGhlIG5leHQgYXZhaWxhYmxlIGZ1bmQgaW5kZXgAAUkFAAGdCAAMIFBhbGxldElk4QogcHkvY2Z1bmQIDQEgYFBhbGxldElkYCBmb3IgdGhlIGNyb3dkbG9hbiBwYWxsZXQuIEFuIGFwcHJvcHJpYXRlIHZhbHVlIGNvdWxkIGJlZCBgUGFsbGV0SWQoKmIicHkvY2Z1bmQiKWAAPE1pbkNvbnRyaWJ1dGlvbhhAAHQ7pAsAAAAAAAAAAAAAAAhhASBUaGUgbWluaW11bSBhbW91bnQgdGhhdCBtYXkgYmUgY29udHJpYnV0ZWQgaW50byBhIGNyb3dkbG9hbi4gU2hvdWxkIGFsbW9zdCBjZXJ0YWlubHkgYmV8IGF0IGxlYXN0IGBFeGlzdGVudGlhbERlcG9zaXRgLgA8UmVtb3ZlS2V5c0xpbWl0EBDoAwAABOQgTWF4IG51bWJlciBvZiBzdG9yYWdlIGtleXMgdG8gcmVtb3ZlIHBlciBleHRyaW5zaWMgY2FsbC4AAVEOAAAASQAAIENvcmV0aW1lAAFdBQABoQgACCBCcm9rZXJJZBAQ7QMAAASIIFRoZSBQYXJhSWQgb2YgdGhlIGNvcmV0aW1lIGNoYWluLgBEQnJva2VyUG90TG9jYXRpb25ZAYwBAQBtb2RscHkvYnJva2UAAAAAAAAAAAAAAAAAAAAAAAAAAASEIFRoZSBjb3JldGltZSBjaGFpbiBwb3QgbG9jYXRpb24uAAFVDgAAAEoAAEhTdGF0ZVRyaWVNaWdyYXRpb24BSFN0YXRlVHJpZU1pZ3JhdGlvbgxATWlncmF0aW9uUHJvY2VzcwEAfQU4AAAAAAAAAAAAAAAAAAAQUCBNaWdyYXRpb24gcHJvZ3Jlc3MuAF0BIFRoaXMgc3RvcmVzIHRoZSBzbmFwc2hvdCBvZiB0aGUgbGFzdCBtaWdyYXRlZCBrZXlzLiBJdCBjYW4gYmUgc2V0IGludG8gbW90aW9uIGFuZCBtb3Zl1CBmb3J3YXJkIGJ5IGFueSBvZiB0aGUgbWVhbnMgcHJvdmlkZWQgYnkgdGhpcyBwYWxsZXQuAChBdXRvTGltaXRzAQB1BQQADNQgVGhlIGxpbWl0cyB0aGF0IGFyZSBpbXBvc2VkIG9uIGF1dG9tYXRpYyBtaWdyYXRpb25zLgDUIElmIHNldCB0byBOb25lLCB0aGVuIG5vIGF1dG9tYXRpYyBtaWdyYXRpb24gaGFwcGVucy4AYFNpZ25lZE1pZ3JhdGlvbk1heExpbWl0cwAAeQUEAAzgIFRoZSBtYXhpbXVtIGxpbWl0cyB0aGF0IHRoZSBzaWduZWQgbWlncmF0aW9uIGNvdWxkIHVzZS4AtCBJZiBub3Qgc2V0LCBubyBzaWduZWQgc3VibWlzc2lvbiBpcyBhbGxvd2VkLgABcQUAAaUIAAQkTWF4S2V5TGVuEBAAAgAAVLQgTWF4aW1hbCBudW1iZXIgb2YgYnl0ZXMgdGhhdCBhIGtleSBjYW4gaGF2ZS4AsCBGUkFNRSBpdHNlbGYgZG9lcyBub3QgbGltaXQgdGhlIGtleSBsZW5ndGguAQEgVGhlIGNvbmNyZXRlIHZhbHVlIG11c3QgdGhlcmVmb3JlIGRlcGVuZCBvbiB5b3VyIHN0b3JhZ2UgdXNhZ2UuWQEgQSBbYGZyYW1lX3N1cHBvcnQ6OnN0b3JhZ2U6OlN0b3JhZ2VOTWFwYF0gZm9yIGV4YW1wbGUgY2FuIGhhdmUgYW4gYXJiaXRyYXJ5IG51bWJlciBvZkUBIGtleXMgd2hpY2ggYXJlIHRoZW4gaGFzaGVkIGFuZCBjb25jYXRlbmF0ZWQsIHJlc3VsdGluZyBpbiBhcmJpdHJhcmlseSBsb25nIGtleXMuAEEBIFVzZSB0aGUgKnN0YXRlIG1pZ3JhdGlvbiBSUEMqIHRvIHJldHJpZXZlIHRoZSBsZW5ndGggb2YgdGhlIGxvbmdlc3Qga2V5IGluIHlvdXIBASBzdG9yYWdlOiA8aHR0cHM6Ly9naXRodWIuY29tL3Bhcml0eXRlY2gvc3Vic3RyYXRlL2lzc3Vlcy8xMTY0Mj4AKQEgVGhlIG1pZ3JhdGlvbiB3aWxsIGhhbHQgd2l0aCBhIGBIYWx0ZWRgIGV2ZW50IGlmIHRoaXMgdmFsdWUgaXMgdG9vIHNtYWxsLkkBIFNpbmNlIHRoZXJlIGlzIG5vIHJlYWwgcGVuYWx0eSBmcm9tIG92ZXItZXN0aW1hdGluZywgaXQgaXMgYWR2aXNlZCB0byB1c2UgYSBsYXJnZYAgdmFsdWUuIFRoZSBkZWZhdWx0IGlzIDUxMiBieXRlLgCAIFNvbWUga2V5IGxlbmd0aHMgZm9yIHJlZmVyZW5jZTrQIC0gW2BmcmFtZV9zdXBwb3J0OjpzdG9yYWdlOjpTdG9yYWdlVmFsdWVgXTogMzIgYnl0ZcggLSBbYGZyYW1lX3N1cHBvcnQ6OnN0b3JhZ2U6OlN0b3JhZ2VNYXBgXTogNjQgYnl0ZeAgLSBbYGZyYW1lX3N1cHBvcnQ6OnN0b3JhZ2U6OlN0b3JhZ2VEb3VibGVNYXBgXTogOTYgYnl0ZQBIIEZvciBtb3JlIGluZm8gc2VlSQEgPGh0dHBzOi8vd3d3LnNoYXdudGFicml6aS5jb20vYmxvZy9zdWJzdHJhdGUvcXVlcnlpbmctc3Vic3RyYXRlLXN0b3JhZ2UtdmlhLXJwYy8+AAGtCAAAAGIAACRYY21QYWxsZXQBJFhjbVBhbGxldDwwUXVlcnlDb3VudGVyAQAwIAAAAAAAAAAABIggVGhlIGxhdGVzdCBhdmFpbGFibGUgcXVlcnkgaW5kZXguABxRdWVyaWVzAAEEAjBZDgQABFQgVGhlIG9uZ29pbmcgcXVlcmllcy4AKEFzc2V0VHJhcHMBAQQGNBAQAAAAABBoIFRoZSBleGlzdGluZyBhc3NldCB0cmFwcy4AYQEgS2V5IGlzIHRoZSBibGFrZTIgMjU2IGhhc2ggb2YgKG9yaWdpbiwgdmVyc2lvbmVkIGBBc3NldHNgKSBwYWlyLiBWYWx1ZSBpcyB0aGUgbnVtYmVyIG9mHQEgdGltZXMgdGhpcyBwYWlyIGhhcyBiZWVuIHRyYXBwZWQgKHVzdWFsbHkganVzdCAxIGlmIGl0IGV4aXN0cyBhdCBhbGwpLgA4U2FmZVhjbVZlcnNpb24AABAEAAhhASBEZWZhdWx0IHZlcnNpb24gdG8gZW5jb2RlIFhDTSB3aGVuIGxhdGVzdCB2ZXJzaW9uIG9mIGRlc3RpbmF0aW9uIGlzIHVua25vd24uIElmIGBOb25lYCw9ASB0aGVuIHRoZSBkZXN0aW5hdGlvbnMgd2hvc2UgWENNIHZlcnNpb24gaXMgdW5rbm93biBhcmUgY29uc2lkZXJlZCB1bnJlYWNoYWJsZS4AQFN1cHBvcnRlZFZlcnNpb24AAQgFAm0OEAQABPAgVGhlIExhdGVzdCB2ZXJzaW9ucyB0aGF0IHdlIGtub3cgdmFyaW91cyBsb2NhdGlvbnMgc3VwcG9ydC4AQFZlcnNpb25Ob3RpZmllcnMAAQgFAm0OMAQABAUBIEFsbCBsb2NhdGlvbnMgdGhhdCB3ZSBoYXZlIHJlcXVlc3RlZCB2ZXJzaW9uIG5vdGlmaWNhdGlvbnMgZnJvbS4AUFZlcnNpb25Ob3RpZnlUYXJnZXRzAAEIBQJtDnEOBAAIcQEgVGhlIHRhcmdldCBsb2NhdGlvbnMgdGhhdCBhcmUgc3Vic2NyaWJlZCB0byBvdXIgdmVyc2lvbiBjaGFuZ2VzLCBhcyB3ZWxsIGFzIHRoZSBtb3N0IHJlY2VudJQgb2Ygb3VyIHZlcnNpb25zIHdlIGluZm9ybWVkIHRoZW0gb2YuAFRWZXJzaW9uRGlzY292ZXJ5UXVldWUBAHUOBAAMZQEgRGVzdGluYXRpb25zIHdob3NlIGxhdGVzdCBYQ00gdmVyc2lvbiB3ZSB3b3VsZCBsaWtlIHRvIGtub3cuIER1cGxpY2F0ZXMgbm90IGFsbG93ZWQsIGFuZHEBIHRoZSBgdTMyYCBjb3VudGVyIGlzIHRoZSBudW1iZXIgb2YgdGltZXMgdGhhdCBhIHNlbmQgdG8gdGhlIGRlc3RpbmF0aW9uIGhhcyBiZWVuIGF0dGVtcHRlZCyMIHdoaWNoIGlzIHVzZWQgYXMgYSBwcmlvcml0aXphdGlvbi4AQEN1cnJlbnRNaWdyYXRpb24AAIEOBAAEnCBUaGUgY3VycmVudCBtaWdyYXRpb24ncyBzdGFnZSwgaWYgYW55LgBUUmVtb3RlTG9ja2VkRnVuZ2libGVzAAEMBQICiQ6NDgQABPAgRnVuZ2libGUgYXNzZXRzIHdoaWNoIHdlIGtub3cgYXJlIGxvY2tlZCBvbiBhIHJlbW90ZSBjaGFpbi4APExvY2tlZEZ1bmdpYmxlcwABBAIAnQ4EAATgIEZ1bmdpYmxlIGFzc2V0cyB3aGljaCB3ZSBrbm93IGFyZSBsb2NrZWQgb24gdGhpcyBjaGFpbi4AVFhjbUV4ZWN1dGlvblN1c3BlbmRlZAEAIAQABLQgR2xvYmFsIHN1c3BlbnNpb24gc3RhdGUgb2YgdGhlIFhDTSBleGVjdXRvci4APFNob3VsZFJlY29yZFhjbQEAIAQAHFkBIFdoZXRoZXIgb3Igbm90IGluY29taW5nIFhDTXMgKGJvdGggZXhlY3V0ZWQgbG9jYWxseSBhbmQgcmVjZWl2ZWQpIHNob3VsZCBiZSByZWNvcmRlZC7EIE9ubHkgb25lIFhDTSBwcm9ncmFtIHdpbGwgYmUgcmVjb3JkZWQgYXQgYSB0aW1lLikBIFRoaXMgaXMgbWVhbnQgdG8gYmUgdXNlZCBpbiBydW50aW1lIEFQSXMsIGFuZCBpdCdzIGFkdmlzZWQgaXQgc3RheXMgZmFsc2UNASBmb3IgYWxsIG90aGVyIHVzZSBjYXNlcywgc28gYXMgdG8gbm90IGRlZ3JhZGUgcmVndWxhciBwZXJmb3JtYW5jZS4AWQEgT25seSByZWxldmFudCBpZiB0aGlzIHBhbGxldCBpcyBiZWluZyB1c2VkIGFzIHRoZSBbYHhjbV9leGVjdXRvcjo6dHJhaXRzOjpSZWNvcmRYY21gXcggaW1wbGVtZW50YXRpb24gaW4gdGhlIFhDTSBleGVjdXRvciBjb25maWd1cmF0aW9uLgAsUmVjb3JkZWRYY20AAEUGBAAYSQEgSWYgW2BTaG91bGRSZWNvcmRYY21gXSBpcyBzZXQgdG8gdHJ1ZSwgdGhlbiB0aGUgbGFzdCBYQ00gcHJvZ3JhbSBleGVjdXRlZCBsb2NhbGx5VCB3aWxsIGJlIHN0b3JlZCBoZXJlLikBIFJ1bnRpbWUgQVBJcyBjYW4gZmV0Y2ggdGhlIFhDTSB0aGF0IHdhcyBleGVjdXRlZCBieSBhY2Nlc3NpbmcgdGhpcyB2YWx1ZS4AWQEgT25seSByZWxldmFudCBpZiB0aGlzIHBhbGxldCBpcyBiZWluZyB1c2VkIGFzIHRoZSBbYHhjbV9leGVjdXRvcjo6dHJhaXRzOjpSZWNvcmRYY21gXcggaW1wbGVtZW50YXRpb24gaW4gdGhlIFhDTSBleGVjdXRvciBjb25maWd1cmF0aW9uLgBEQXV0aG9yaXplZEFsaWFzZXMAAQQCjQGpDgQADGUBIE1hcCBvZiBhdXRob3JpemVkIGFsaWFzZXJzIG9mIGxvY2FsIG9yaWdpbnMuIEVhY2ggbG9jYWwgbG9jYXRpb24gY2FuIGF1dGhvcml6ZSBhIGxpc3Qgb2ZZASBvdGhlciBsb2NhdGlvbnMgdG8gYWxpYXMgaW50byBpdC4gRWFjaCBhbGlhc2VyIGlzIG9ubHkgdmFsaWQgdW50aWwgaXRzIGlubmVyIGBleHBpcnlgOCBibG9jayBudW1iZXIuAAGJBQgBArkBVGhpcyBleHRyaW5zaWMgdXNlcyBgV2VpZ2h0TGltaXQ6OlVubGltaXRlZGAsIHBsZWFzZSBtaWdyYXRlIHRvIGBsaW1pdGVkX3RlbGVwb3J0X2Fzc2V0c2Agb3IgYHRyYW5zZmVyX2Fzc2V0c2AAAgLZAVRoaXMgZXh0cmluc2ljIHVzZXMgYFdlaWdodExpbWl0OjpVbmxpbWl0ZWRgLCBwbGVhc2UgbWlncmF0ZSB0byBgbGltaXRlZF9yZXNlcnZlX3RyYW5zZmVyX2Fzc2V0c2Agb3IgYHRyYW5zZmVyX2Fzc2V0c2AAAbEIABBEVW5pdmVyc2FsTG9jYXRpb25ZAQwBCQIEhCBUaGlzIGNoYWluJ3MgVW5pdmVyc2FsIExvY2F0aW9uLgBQQWR2ZXJ0aXNlZFhjbVZlcnNpb24QEAUAAAAIJQEgVGhlIGxhdGVzdCBzdXBwb3J0ZWQgdmVyc2lvbiB0aGF0IHdlIGFkdmVydGlzZS4gR2VuZXJhbGx5IGp1c3Qgc2V0IGl0IHRvhCBgcGFsbGV0X3hjbTo6Q3VycmVudFhjbVZlcnNpb25gLgAoTWF4TG9ja2VycxAQCAAAAAQZASBUaGUgbWF4aW11bSBudW1iZXIgb2YgbG9jYWwgWENNIGxvY2tzIHRoYXQgYSBzaW5nbGUgYWNjb3VudCBtYXkgaGF2ZS4AWE1heFJlbW90ZUxvY2tDb25zdW1lcnMQEAAAAAAE/CBUaGUgbWF4aW11bSBudW1iZXIgb2YgY29uc3VtZXJzIGEgc2luZ2xlIHJlbW90ZSBsb2NrIG1heSBoYXZlLgABwQ4EGAK8VXNlIGBMb2NhbEV4ZWN1dGlvbkluY29tcGxldGVXaXRoRXJyb3JgIGluc3RlYWQBGDIwLjAuMAgsUnVudGltZUNhbGypAQRkIFRoZSBydW50aW1lIGBDYWxsYCB0eXBlLnBSZW1vdGVMb2NrQ29uc3VtZXJJZGVudGlmaWVykATEIFRoZSBJRCB0eXBlIGZvciBsb2NhbCBjb25zdW1lcnMgb2YgcmVtb3RlIGxvY2tzLgBjAAAwTWVzc2FnZVF1ZXVlATBNZXNzYWdlUXVldWUMMEJvb2tTdGF0ZUZvcgEBBAX9BskOdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwgVGhlIGluZGV4IG9mIHRoZSBmaXJzdCBhbmQgbGFzdCAobm9uLWVtcHR5KSBwYWdlcy4ALFNlcnZpY2VIZWFkAAD9BgQABLwgVGhlIG9yaWdpbiBhdCB3aGljaCB3ZSBzaG91bGQgYmVnaW4gc2VydmljaW5nLgAUUGFnZXMAAQgFBdUO2Q4EAASIIFRoZSBtYXAgb2YgcGFnZSBpbmRpY2VzIHRvIHBhZ2VzLgAB+QYAAcEIABAgSGVhcFNpemUQEAAAAQAUPQEgVGhlIHNpemUgb2YgdGhlIHBhZ2U7IHRoaXMgaW1wbGllcyB0aGUgbWF4aW11bSBtZXNzYWdlIHNpemUgd2hpY2ggY2FuIGJlIHNlbnQuAFkBIEEgZ29vZCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBleHBlY3RlZCBtZXNzYWdlIHNpemVzLCB0aGVpciB3ZWlnaHRzLCB0aGUgd2VpZ2h0IHRoYXQgaXNdASBhdmFpbGFibGUgZm9yIHByb2Nlc3NpbmcgdGhlbSBhbmQgdGhlIG1heGltYWwgbmVlZGVkIG1lc3NhZ2Ugc2l6ZS4gVGhlIG1heGltYWwgbWVzc2FnZREBIHNpemUgaXMgc2xpZ2h0bHkgbG93ZXIgdGhhbiB0aGlzIGFzIGRlZmluZWQgYnkgW2BNYXhNZXNzYWdlTGVuT2ZgXS4AIE1heFN0YWxlEBAIAAAADF0BIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzdGFsZSBwYWdlcyAoaS5lLiBvZiBvdmVyd2VpZ2h0IG1lc3NhZ2VzKSBhbGxvd2VkIGJlZm9yZSBjdWxsaW5nUQEgY2FuIGhhcHBlbi4gT25jZSB0aGVyZSBhcmUgbW9yZSBzdGFsZSBwYWdlcyB0aGFuIHRoaXMsIHRoZW4gaGlzdG9yaWNhbCBwYWdlcyBtYXkgYmX8IGRyb3BwZWQsIGV2ZW4gaWYgdGhleSBjb250YWluIHVucHJvY2Vzc2VkIG92ZXJ3ZWlnaHQgbWVzc2FnZXMuADRTZXJ2aWNlV2VpZ2h0iQZAAQcAoNshXRMzMzMzMzMzMxhBASBUaGUgYW1vdW50IG9mIHdlaWdodCAoaWYgYW55KSB3aGljaCBzaG91bGQgYmUgcHJvdmlkZWQgdG8gdGhlIG1lc3NhZ2UgcXVldWUgZm9yqCBzZXJ2aWNpbmcgZW5xdWV1ZWQgaXRlbXMgYG9uX2luaXRpYWxpemVgLgD8IFRoaXMgbWF5IGJlIGxlZ2l0aW1hdGVseSBgTm9uZWAgaW4gdGhlIGNhc2UgdGhhdCB5b3Ugd2lsbCBjYWxsXQEgYFNlcnZpY2VRdWV1ZXM6OnNlcnZpY2VfcXVldWVzYCBtYW51YWxseSBvciBzZXQgW2BTZWxmOjpJZGxlTWF4U2VydmljZVdlaWdodGBdIHRvIGhhdmVUIGl0IHJ1biBpbiBgb25faWRsZWAuAFBJZGxlTWF4U2VydmljZVdlaWdodIkGQAEHAKDbIV0TMzMzMzMzMzMUXQEgVGhlIG1heGltdW0gYW1vdW50IG9mIHdlaWdodCAoaWYgYW55KSB0byBiZSB1c2VkIGZyb20gcmVtYWluaW5nIHdlaWdodCBgb25faWRsZWAgd2hpY2hBASBzaG91bGQgYmUgcHJvdmlkZWQgdG8gdGhlIG1lc3NhZ2UgcXVldWUgZm9yIHNlcnZpY2luZyBlbnF1ZXVlZCBpdGVtcyBgb25faWRsZWAuPQEgVXNlZnVsIGZvciBwYXJhY2hhaW5zIHRvIHByb2Nlc3MgbWVzc2FnZXMgYXQgdGhlIHNhbWUgYmxvY2sgdGhleSBhcmUgcmVjZWl2ZWQuACkBIElmIGBOb25lYCwgaXQgd2lsbCBub3QgY2FsbCBgU2VydmljZVF1ZXVlczo6c2VydmljZV9xdWV1ZXNgIGluIGBvbl9pZGxlYC4AAeEOAAQQU2l6ZRAEVCBQYWdlL2hlYXAgc2l6ZSB0eXBlLgBkAAAkQXNzZXRSYXRlASRBc3NldFJhdGUEWENvbnZlcnNpb25SYXRlVG9OYXRpdmUAAQQC7AkHBAAMHQEgTWFwcyBhbiBhc3NldCB0byBpdHMgZml4ZWQgcG9pbnQgcmVwcmVzZW50YXRpb24gaW4gdGhlIG5hdGl2ZSBiYWxhbmNlLgBNASBFLmcuIGBuYXRpdmVfYW1vdW50ID0gYXNzZXRfYW1vdW50ICogQ29udmVyc2lvblJhdGVUb05hdGl2ZTo6PFQ+OjpnZXQoYXNzZXRfa2luZClgAAEFBwAByQgAAAHlDgAEJEFzc2V0S2luZOwERQEgVGhlIHR5cGUgZm9yIGFzc2V0IGtpbmRzIGZvciB3aGljaCB0aGUgY29udmVyc2lvbiByYXRlIHRvIG5hdGl2ZSBiYWxhbmNlIGlzIHNldC4AZQAAFEJlZWZ5ARRCZWVmeRQsQXV0aG9yaXRpZXMBAOkOBAAEcCBUaGUgY3VycmVudCBhdXRob3JpdGllcyBzZXQAOFZhbGlkYXRvclNldElkAQAwIAAAAAAAAAAABHQgVGhlIGN1cnJlbnQgdmFsaWRhdG9yIHNldCBpZAA8TmV4dEF1dGhvcml0aWVzAQDpDgQABOwgQXV0aG9yaXRpZXMgc2V0IHNjaGVkdWxlZCB0byBiZSB1c2VkIHdpdGggdGhlIG5leHQgc2Vzc2lvbgAwU2V0SWRTZXNzaW9uAAEEBTAQBAAoUQEgQSBtYXBwaW5nIGZyb20gQkVFRlkgc2V0IElEIHRvIHRoZSBpbmRleCBvZiB0aGUgKm1vc3QgcmVjZW50KiBzZXNzaW9uIGZvciB3aGljaCBpdHNoIG1lbWJlcnMgd2VyZSByZXNwb25zaWJsZS4ARQEgVGhpcyBpcyBvbmx5IHVzZWQgZm9yIHZhbGlkYXRpbmcgZXF1aXZvY2F0aW9uIHByb29mcy4gQW4gZXF1aXZvY2F0aW9uIHByb29mIG11c3RNASBjb250YWlucyBhIGtleS1vd25lcnNoaXAgcHJvb2YgZm9yIGEgZ2l2ZW4gc2Vzc2lvbiwgdGhlcmVmb3JlIHdlIG5lZWQgYSB3YXkgdG8gdGllPQEgdG9nZXRoZXIgc2Vzc2lvbnMgYW5kIEJFRUZZIHNldCBpZHMsIGkuZS4gd2UgbmVlZCB0byB2YWxpZGF0ZSB0aGF0IGEgdmFsaWRhdG9yQQEgd2FzIHRoZSBvd25lciBvZiBhIGdpdmVuIGtleSBvbiBhIGdpdmVuIHNlc3Npb24sIGFuZCB3aGF0IHRoZSBhY3RpdmUgc2V0IElEIHdhc1QgZHVyaW5nIHRoYXQgc2Vzc2lvbi4A3CBUV09YLU5PVEU6IGBWYWxpZGF0b3JTZXRJZGAgaXMgbm90IHVuZGVyIHVzZXIgY29udHJvbC4AMEdlbmVzaXNCbG9jawEAuAQADNwgQmxvY2sgbnVtYmVyIHdoZXJlIEJFRUZZIGNvbnNlbnN1cyBpcyBlbmFibGVkL3N0YXJ0ZWQuaQEgQnkgY2hhbmdpbmcgdGhpcyAodGhyb3VnaCBwcml2aWxlZ2VkIGBzZXRfbmV3X2dlbmVzaXMoKWApLCBCRUVGWSBjb25zZW5zdXMgaXMgZWZmZWN0aXZlbHmsIHJlc3RhcnRlZCBmcm9tIHRoZSBuZXdseSBzZXQgYmxvY2sgbnVtYmVyLgABDQcAAAw4TWF4QXV0aG9yaXRpZXMQEKCGAQAE1CBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXV0aG9yaXRpZXMgdGhhdCBjYW4gYmUgYWRkZWQuADRNYXhOb21pbmF0b3JzEBAAAgAABNQgVGhlIG1heGltdW0gbnVtYmVyIG9mIG5vbWluYXRvcnMgZm9yIGVhY2ggdmFsaWRhdG9yLgBYTWF4U2V0SWRTZXNzaW9uRW50cmllczAgqAAAAAAAAAAYOQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGVudHJpZXMgdG8ga2VlcCBpbiB0aGUgc2V0IGlkIHRvIHNlc3Npb24gaW5kZXggbWFwcGluZy4AMQEgU2luY2UgdGhlIGBTZXRJZFNlc3Npb25gIG1hcCBpcyBvbmx5IHVzZWQgZm9yIHZhbGlkYXRpbmcgZXF1aXZvY2F0aW9ucyB0aGlzKQEgdmFsdWUgc2hvdWxkIHJlbGF0ZSB0byB0aGUgYm9uZGluZyBkdXJhdGlvbiBvZiB3aGF0ZXZlciBzdGFraW5nIHN5c3RlbSBpczUBIGJlaW5nIHVzZWQgKGlmIGFueSkuIElmIGVxdWl2b2NhdGlvbiBoYW5kbGluZyBpcyBub3QgZW5hYmxlZCB0aGVuIHRoaXMgdmFsdWU0IGNhbiBiZSB6ZXJvLgAB8Q4ACBxCZWVmeUlkXQIEaCBBdXRob3JpdHkgaWRlbnRpZmllciB0eXBlNEtleU93bmVyUHJvb2bhAQwVASBUaGUgcHJvb2Ygb2Yga2V5IG93bmVyc2hpcCwgdXNlZCBmb3IgdmFsaWRhdGluZyBlcXVpdm9jYXRpb24gcmVwb3J0cxEBIFRoZSBwcm9vZiBtdXN0IGluY2x1ZGUgdGhlIHNlc3Npb24gaW5kZXggYW5kIHZhbGlkYXRvciBjb3VudCBvZiB0aGWwIHNlc3Npb24gYXQgd2hpY2ggdGhlIGVxdWl2b2NhdGlvbiBvY2N1cnJlZC4AyAAADE1tcgEMTW1yDCBSb290SGFzaAEANIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARYIExhdGVzdCBNTVIgUm9vdCBoYXNoLgA4TnVtYmVyT2ZMZWF2ZXMBADAgAAAAAAAAAAAEsCBDdXJyZW50IHNpemUgb2YgdGhlIE1NUiAobnVtYmVyIG9mIGxlYXZlcykuABROb2RlcwABBAYwNAQAEIAgSGFzaGVzIG9mIHRoZSBub2RlcyBpbiB0aGUgTU1SLgAtASBOb3RlIHRoaXMgY29sbGVjdGlvbiBvbmx5IGNvbnRhaW5zIE1NUiBwZWFrcywgdGhlIGlubmVyIG5vZGVzIChhbmQgbGVhdmVzKbwgYXJlIHBydW5lZCBhbmQgb25seSBzdG9yZWQgaW4gdGhlIE9mZmNoYWluIERCLgAAAAAAAADJAAAwQmVlZnlNbXJMZWFmATBCZWVmeU1tckxlYWYIQEJlZWZ5QXV0aG9yaXRpZXMBAPUOsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKAgRGV0YWlscyBvZiBjdXJyZW50IEJFRUZZIGF1dGhvcml0eSBzZXQuAFBCZWVmeU5leHRBdXRob3JpdGllcwEA9Q6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMlCBEZXRhaWxzIG9mIG5leHQgQkVFRlkgYXV0aG9yaXR5IHNldC4AUQEgVGhpcyBzdG9yYWdlIGVudHJ5IGlzIHVzZWQgYXMgY2FjaGUgZm9yIGNhbGxzIHRvIGB1cGRhdGVfYmVlZnlfbmV4dF9hdXRob3JpdHlfc2V0YC4AAAAAAAAAygAAPFBhcmFTdWRvV3JhcHBlcgABRQcAAAAB+Q4AAAD5AAAQU3VkbwEQU3VkbwQMS2V5AAAABAAEhCBUaGUgYEFjY291bnRJZGAgb2YgdGhlIHN1ZG8ga2V5LgABTQcAAc0IAAAB/Q4ABCxSdW50aW1lQ2FsbKkBBEggQSBzdWRvLWFibGUgY2FsbC4A+wAAKFJjTWlncmF0b3IBKFJjTWlncmF0b3JEQFJjTWlncmF0aW9uU3RhZ2UBAFUHBAAEhCBUaGUgUmVsYXkgQ2hhaW4gbWlncmF0aW9uIHN0YXRlLgAoUmNBY2NvdW50cwABBAUAAQ8EAAhxASBIZWxwZXIgc3RvcmFnZSBpdGVtIHRvIG9idGFpbiBhbmQgc3RvcmUgdGhlIGtub3duIGFjY291bnRzIHRoYXQgc2hvdWxkIGJlIGtlcHQgcGFydGlhbGx5IG9yWCBmdWxseSBvbiBSZWxheSBDaGFpbi4AUENvdW50ZXJGb3JSY0FjY291bnRzAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXAARFJjTWlncmF0ZWRCYWxhbmNlAQAFD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARNASBIZWxwZXIgc3RvcmFnZSBpdGVtIHRvIHN0b3JlIHRoZSB0b3RhbCBiYWxhbmNlIHRoYXQgc2hvdWxkIGJlIGtlcHQgb24gUmVsYXkgQ2hhaW4uAGBSY01pZ3JhdGVkQmFsYW5jZUFyY2hpdmUBAAUPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGEBIEhlbHBlciBzdG9yYWdlIGl0ZW0gdG8gc3RvcmUgdGhlIHRvdGFsIGJhbGFuY2UgdGhhdCBzaG91bGQgYmUga2VwdCBvbiBSZWxheSBDaGFpbiBhZnRlclEBIGl0IGlzIGNvbnN1bWVkIGZyb20gdGhlIGBSY01pZ3JhdGVkQmFsYW5jZWAgc3RvcmFnZSBpdGVtIGFuZCBzZW50IHRvIHRoZSBBc3NldCBIdWIuAFUBIFRoaXMgbGV0IHVzIHRvIHRha2UgdGhlIHZhbHVlIGZyb20gdGhlIGBSY01pZ3JhdGVkQmFsYW5jZWAgc3RvcmFnZSBpdGVtIGFuZCBrZWVwIHRoZW0BIGBTaWduYWxNaWdyYXRpb25GaW5pc2hgIHN0YWdlIHRvIGJlIGlkZW1wb3RlbnQgd2hpbGUgcHJlc2VydmluZyB0aGVzZSB2YWx1ZXMgZm9yIHRlc3RzIGFuZEwgbGF0ZXIgZGlzY292ZXJpZXMuAEhQZW5kaW5nWGNtTWVzc2FnZXMAAQQFNEUGBAAUaCBUaGUgcGVuZGluZyBYQ00gbWVzc2FnZXMuAE0BIENvbnRhaW5zIGRhdGEgbWVzc2FnZXMgdGhhdCBoYXZlIGJlZW4gc2VudCB0byB0aGUgQXNzZXQgSHViIGJ1dCBub3QgeWV0IGNvbmZpcm1lZC4ATQEgVW5jb25maXJtZWQgbWVzc2FnZXMgY2FuIGJlIHJlc2VudCBieSBjYWxsaW5nIHRoZSBbYFBhbGxldDo6cmVzZW5kX3hjbWBdIGZ1bmN0aW9uLgBwQ291bnRlckZvclBlbmRpbmdYY21NZXNzYWdlcwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwAGxQdXJlUHJveHlDYW5kaWRhdGVzTWlncmF0ZWQAAQQFACAEAAw5ASBBY2NvdW50cyB0aGF0IHVzZSB0aGUgcHJveHkgcGFsbGV0IHRvIGRlbGVnYXRlIHBlcm1pc3Npb25zIGFuZCBoYXZlIG5vIG5vbmNlLgBtASBCb29sZWFuIHZhbHVlIGlzIHdoZXRoZXIgdGhleSBoYXZlIGJlZW4gbWlncmF0ZWQgdG8gdGhlIEFzc2V0IEh1Yi4gTmVlZGVkIGZvciBpZGVtcG90ZW5jeS4ARFBlbmRpbmdYY21RdWVyaWVzAAEEBTA0BAAcTQEgVGhlIHBlbmRpbmcgWENNIHJlc3BvbnNlIHF1ZXJpZXMgYW5kIHRoZWlyIFhDTSBoYXNoIHJlZmVyZW5jaW5nIHRoZSBtZXNzYWdlIGluIHRoZYAgW2BQZW5kaW5nWGNtTWVzc2FnZXNgXSBzdG9yYWdlLgBhASBUaGUgYFF1ZXJ5SWRgIGlzIHRoZSBpZGVudGlmaWVyIGZyb20gdGhlIFtgcGFsbGV0X3hjbWBdIHF1ZXJ5IGhhbmRsZXIgcmVnaXN0cnkuIFRoZSBYQ00JASBwYWxsZXQgd2lsbCBub3RpZnkgYWJvdXQgdGhlIHN0YXR1cyBvZiB0aGUgbWVzc2FnZSBieSBjYWxsaW5nIHRoZR0BIFtgUGFsbGV0OjpyZWNlaXZlX3F1ZXJ5X3Jlc3BvbnNlYF0gZnVuY3Rpb24gd2l0aCB0aGUgYFF1ZXJ5SWRgIGFuZCB0aGUoIHJlc3BvbnNlLgBQVW5wcm9jZXNzZWRNc2dCdWZmZXIAABAEAARBASBNYW51YWwgb3ZlcnJpZGUgZm9yIGB0eXBlIFVucHJvY2Vzc2VkTXNnQnVmZmVyOiBHZXQ8dTMyPmAuIExvb2sgdGhlcmUgZm9yIGRvY3MuAGBBaFVtcFF1ZXVlUHJpb3JpdHlDb25maWcBAP0HBAAY6CBUaGUgcHJpb3JpdHkgb2YgdGhlIEFzc2V0IEh1YiBVTVAgcXVldWUgZHVyaW5nIG1pZ3JhdGlvbi4AdQEgQ29udHJvbHMgaG93IHRoZSBBc3NldCBIdWIgVU1QIChVcHdhcmQgTWVzc2FnZSBQYXNzaW5nKSBxdWV1ZSBpcyBwcm9jZXNzZWQgcmVsYXRpdmUgdG8gb3RoZXJZASBxdWV1ZXMgZHVyaW5nIHRoZSBtaWdyYXRpb24gcHJvY2Vzcy4gVGhpcyBoZWxwcyBlbnN1cmUgdGltZWx5IHByb2Nlc3Npbmcgb2YgbWlncmF0aW9uaQEgbWVzc2FnZXMuIFRoZSBkZWZhdWx0IHByaW9yaXR5IHBhdHRlcm4gaXMgZGVmaW5lZCBpbiB0aGUgcGFsbGV0IGNvbmZpZ3VyYXRpb24sIGJ1dCBjYW4gYmWwIG92ZXJyaWRkZW4gYnkgYSBzdG9yYWdlIHZhbHVlIG9mIHRoaXMgdHlwZS4AHE1hbmFnZXIAAAAEABCUIEFuIG9wdGlvbmFsIGFjY291bnQgaWQgb2YgYSBtYW5hZ2VyLgBFASBUaGlzIGFjY291bnQgaWQgaGFzIHNpbWlsYXIgcHJpdmlsZWdlcyB0byBbYENvbmZpZzo6QWRtaW5PcmlnaW5gXSBleGNlcHQgdGhhdCBpdOwgY2FuIG5vdCBzZXQgdGhlIG1hbmFnZXIgYWNjb3VudCBpZCB2aWEgYHNldF9tYW5hZ2VyYCBjYWxsLgAkQ2FuY2VsbGVyAAAABAAMnCBBbiBvcHRpb25hbCBhY2NvdW50IGlkIG9mIGEgY2FuY2VsbGVyLgDMIFRoaXMgYWNjb3VudCBpZCBjYW4gb25seSBzdG9wIHNjaGVkdWxlZCBtaWdyYXRpb24uAExNaWdyYXRpb25TdGFydEJsb2NrAAAQBAAQXQEgVGhlIGJsb2NrIG51bWJlciBhdCB3aGljaCB0aGUgbWlncmF0aW9uIGJlZ2FuIGFuZCB0aGUgcGFsbGV0J3MgZXh0cmluc2ljcyB3ZXJlIGxvY2tlZC4AFQEgVGhpcyB2YWx1ZSBpcyBzZXQgd2hlbiBlbnRlcmluZyB0aGUgYFdhaXRpbmdGb3JBaGAgc3RhZ2UsIGkuZS4sIHdoZW7EIGBSY01pZ3JhdGlvblN0YWdlOjppc19vbmdvaW5nKClgIGJlY29tZXMgYHRydWVgLgBETWlncmF0aW9uRW5kQmxvY2sAABAEABANASBCbG9jayBudW1iZXIgd2hlbiBtaWdyYXRpb24gZmluaXNoZWQgYW5kIGV4dHJpbnNpY3Mgd2VyZSB1bmxvY2tlZC4A/CBUaGlzIGlzIHNldCB3aGVuIGVudGVyaW5nIHRoZSBgTWlncmF0aW9uRG9uZWAgc3RhZ2UgaGVuY2Ugd2hlbsggYFJjTWlncmF0aW9uU3RhZ2U6OmlzX2ZpbmlzaGVkKClgIGJlY29tZXMgYHRydWVgLgAwV2FybVVwUGVyaW9kAAC9AgQAEMggVGhlIGR1cmF0aW9uIG9mIHRoZSBwcmUgbWlncmF0aW9uIHdhcm0tdXAgcGVyaW9kLgBlASBUaGlzIGlzIHRoZSBkdXJhdGlvbiBvZiB0aGUgd2FybS11cCBwZXJpb2QgYmVmb3JlIHRoZSBkYXRhIG1pZ3JhdGlvbiBzdGFydHMuIER1cmluZyB0aGlzcQEgcGVyaW9kLCB0aGUgbWlncmF0aW9uIHdpbGwgYmUgaW4gb25nb2luZyBzdGF0ZSBhbmQgdGhlIGNvbmNlcm5lZCBleHRyaW5zaWNzIHdpbGwgYmUgbG9ja2VkLgA0Q29vbE9mZlBlcmlvZAAAvQIEABTQIFRoZSBkdXJhdGlvbiBvZiB0aGUgcG9zdCBtaWdyYXRpb24gY29vbC1vZmYgcGVyaW9kLgBlASBUaGlzIGlzIHRoZSBkdXJhdGlvbiBvZiB0aGUgY29vbC1vZmYgcGVyaW9kIGFmdGVyIHRoZSBkYXRhIG1pZ3JhdGlvbiBpcyBmaW5pc2hlZC4gRHVyaW5ncQEgdGhpcyBwZXJpb2QsIHRoZSBtaWdyYXRpb24gd2lsbCBiZSBzdGlsbCBpbiBvbmdvaW5nIHN0YXRlIGFuZCB0aGUgY29uY2VybmVkIGV4dHJpbnNpY3Mgd2lsbCwgYmUgbG9ja2VkLgABUQcAAdEIAAABCQ8ACERSdW50aW1lSG9sZFJlYXNvbgEKBGggVGhlIHJ1bnRpbWUgaG9sZCByZWFzb25zLkxSdW50aW1lRnJlZXplUmVhc29uKQoEcCBUaGUgcnVudGltZSBmcmVlemUgcmVhc29ucy4A/wAACAQF+QGpAVkFBAAoAAQIDBAUGBwgJChIQ2hlY2tOb25aZXJvU2VuZGVyKQmQQENoZWNrU3BlY1ZlcnNpb24tCRA4Q2hlY2tUeFZlcnNpb24xCRAwQ2hlY2tHZW5lc2lzNQk0OENoZWNrTW9ydGFsaXR5OQk0KENoZWNrTm9uY2VBCZAsQ2hlY2tXZWlnaHRFCZBgQ2hhcmdlVHJhbnNhY3Rpb25QYXltZW50SQmQSFByZXZhbGlkYXRlQXR0ZXN0c00JkERDaGVja01ldGFkYXRhSGFzaFEJiFwkSW5mbGF0aW9uBJhleHBlcmltZW50YWxfaW5mbGF0aW9uX3ByZWRpY3Rpb25faW5mbwANDxDYIFJldHVybiB0aGUgY3VycmVudCBlc3RpbWF0ZXMgb2YgdGhlIGluZmxhdGlvbiBhbW91bnQuAFEBIFRoaXMgaXMgbWFya2VkIGFzIGV4cGVyaW1lbnRhbCBpbiBsaWdodCBvZiBSRkMjODkuIE5vbmV0aGVsZXNzLCBpdHMgdXNhZ2UgaXMgaGlnaGx5JQEgcmVjb21tZW5kZWQgb3ZlciB0cnlpbmcgdG8gcmVhZC1zdG9yYWdlLCBvciByZS1jcmVhdGUgdGhlIG9uY2hhaW4gbG9naWMuAAAEABBDb3JlDBx2ZXJzaW9uAAkJBJAgUmV0dXJucyB0aGUgdmVyc2lvbiBvZiB0aGUgcnVudGltZS4ANGV4ZWN1dGVfYmxvY2sEFGJsb2NrHQmQBGQgRXhlY3V0ZSB0aGUgZ2l2ZW4gYmxvY2suAEBpbml0aWFsaXplX2Jsb2NrBBhoZWFkZXLVARkPBEEBIEluaXRpYWxpemUgYSBibG9jayB3aXRoIHRoZSBnaXZlbiBoZWFkZXIgYW5kIHJldHVybiB0aGUgcnVudGltZSBleGVjdXRpdmUgbW9kZS4ABCEBIFRoZSBgQ29yZWAgcnVudGltZSBhcGkgdGhhdCBldmVyeSBTdWJzdHJhdGUgcnVudGltZSBuZWVkcyB0byBpbXBsZW1lbnQuFAAgTWV0YWRhdGEMIG1ldGFkYXRhAB0PBIwgUmV0dXJucyB0aGUgbWV0YWRhdGEgb2YgYSBydW50aW1lLgBMbWV0YWRhdGFfYXRfdmVyc2lvbgQcdmVyc2lvbhAhDxCkIFJldHVybnMgdGhlIG1ldGFkYXRhIGF0IGEgZ2l2ZW4gdmVyc2lvbi4ABQEgSWYgdGhlIGdpdmVuIGB2ZXJzaW9uYCBpc24ndCBzdXBwb3J0ZWQsIHRoaXMgd2lsbCByZXR1cm4gYE5vbmVgLnUBIFVzZSBbYFNlbGY6Om1ldGFkYXRhX3ZlcnNpb25zYF0gdG8gZmluZCBvdXQgYWJvdXQgc3VwcG9ydGVkIG1ldGFkYXRhIHZlcnNpb24gb2YgdGhlIHJ1bnRpbWUuAERtZXRhZGF0YV92ZXJzaW9ucwAZAgykIFJldHVybnMgdGhlIHN1cHBvcnRlZCBtZXRhZGF0YSB2ZXJzaW9ucy4AwCBUaGlzIGNhbiBiZSB1c2VkIHRvIGNhbGwgYG1ldGFkYXRhX2F0X3ZlcnNpb25gLgAEAQEgVGhlIGBNZXRhZGF0YWAgYXBpIHRyYWl0IHRoYXQgcmV0dXJucyBtZXRhZGF0YSBmb3IgdGhlIHJ1bnRpbWUuCAAwQmxvY2tCdWlsZGVyEDxhcHBseV9leHRyaW5zaWMEJGV4dHJpbnNpYyEJJQ8QbCBBcHBseSB0aGUgZ2l2ZW4gZXh0cmluc2ljLgA5ASBSZXR1cm5zIGFuIGluY2x1c2lvbiBvdXRjb21lIHdoaWNoIHNwZWNpZmllcyBpZiB0aGlzIGV4dHJpbnNpYyBpcyBpbmNsdWRlZCBpbkwgdGhpcyBibG9jayBvciBub3QuADhmaW5hbGl6ZV9ibG9jawDVAQRoIEZpbmlzaCB0aGUgY3VycmVudCBibG9jay4ATGluaGVyZW50X2V4dHJpbnNpY3MEIGluaGVyZW50NQ9ZCQQ9ASBHZW5lcmF0ZSBpbmhlcmVudCBleHRyaW5zaWNzLiBUaGUgaW5oZXJlbnQgZGF0YSB3aWxsIHZhcnkgZnJvbSBjaGFpbiB0byBjaGFpbi4APGNoZWNrX2luaGVyZW50cwgUYmxvY2sdCRBkYXRhNQ9FDwRVASBDaGVjayB0aGF0IHRoZSBpbmhlcmVudHMgYXJlIHZhbGlkLiBUaGUgaW5oZXJlbnQgZGF0YSB3aWxsIHZhcnkgZnJvbSBjaGFpbiB0byBjaGFpbi4ABHEBIFRoZSBgQmxvY2tCdWlsZGVyYCBhcGkgdHJhaXQgdGhhdCBwcm92aWRlcyB0aGUgcmVxdWlyZWQgZnVuY3Rpb25hbGl0eSBmb3IgYnVpbGRpbmcgYSBibG9jay4YAEhOb21pbmF0aW9uUG9vbHNBcGkoPHBlbmRpbmdfcmV3YXJkcwQMd2hvABgENQEgUmV0dXJucyB0aGUgcGVuZGluZyByZXdhcmRzIGZvciB0aGUgbWVtYmVyIHRoYXQgdGhlIEFjY291bnRJZCB3YXMgZ2l2ZW4gZm9yLgBEcG9pbnRzX3RvX2JhbGFuY2UIHHBvb2xfaWQQGHBvaW50cxgYBPQgUmV0dXJucyB0aGUgZXF1aXZhbGVudCBiYWxhbmNlIG9mIGBwb2ludHNgIGZvciBhIGdpdmVuIHBvb2wuAERiYWxhbmNlX3RvX3BvaW50cwgccG9vbF9pZBAkbmV3X2Z1bmRzGBgE/CBSZXR1cm5zIHRoZSBlcXVpdmFsZW50IHBvaW50cyBvZiBgbmV3X2Z1bmRzYCBmb3IgYSBnaXZlbiBwb29sLgBIcG9vbF9wZW5kaW5nX3NsYXNoBBxwb29sX2lkEBgEsCBSZXR1cm5zIHRoZSBwZW5kaW5nIHNsYXNoIGZvciBhIGdpdmVuIHBvb2wuAFBtZW1iZXJfcGVuZGluZ19zbGFzaAQYbWVtYmVyABgQzCBSZXR1cm5zIHRoZSBwZW5kaW5nIHNsYXNoIGZvciBhIGdpdmVuIHBvb2wgbWVtYmVyLgBNASBJZiBwZW5kaW5nIHNsYXNoIG9mIHRoZSBtZW1iZXIgZXhjZWVkcyBgRXhpc3RlbnRpYWxEZXBvc2l0YCwgaXQgY2FuIGJlIHJlcG9ydGVkIG9uHCBjaGFpbi4AdHBvb2xfbmVlZHNfZGVsZWdhdGVfbWlncmF0aW9uBBxwb29sX2lkECAg5CBSZXR1cm5zIHRydWUgaWYgdGhlIHBvb2wgd2l0aCBgcG9vbF9pZGAgbmVlZHMgbWlncmF0aW9uLgBJASBUaGlzIGNhbiBoYXBwZW4gd2hlbiB0aGUgYHBhbGxldC1ub21pbmF0aW9uLXBvb2xzYCBoYXMgc3dpdGNoZWQgdG8gdXNpbmcgc3RyYXRlZ3lBASBbYERlbGVnYXRlU3Rha2VgXShwYWxsZXRfbm9taW5hdGlvbl9wb29sczo6YWRhcHRlcjo6RGVsZWdhdGVTdGFrZSkgYnV0IHRoZSBwb29s6CBzdGlsbCBoYXMgZnVuZHMgdGhhdCB3ZXJlIHN0YWtlZCB1c2luZyB0aGUgb2xkZXIgc3RyYXRlZ3kZASBbVHJhbnNmZXJTdGFrZV0ocGFsbGV0X25vbWluYXRpb25fcG9vbHM6OmFkYXB0ZXI6OlRyYW5zZmVyU3Rha2UpLiBVc2WJASBbYG1pZ3JhdGVfcG9vbF90b19kZWxlZ2F0ZV9zdGFrZWBdKHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzOjpDYWxsOjptaWdyYXRlX3Bvb2xfdG9fZGVsZWdhdGVfc3Rha2UpVCB0byBtaWdyYXRlIHRoZSBwb29sLgB8bWVtYmVyX25lZWRzX2RlbGVnYXRlX21pZ3JhdGlvbgQYbWVtYmVyACAcKQEgUmV0dXJucyB0cnVlIGlmIHRoZSBkZWxlZ2F0ZWQgZnVuZHMgb2YgdGhlIHBvb2wgYG1lbWJlcmAgbmVlZHMgbWlncmF0aW9uLgDYIE9uY2UgYSBwb29sIGhhcyBzdWNjZXNzZnVsbHkgbWlncmF0ZWQgdG8gdGhlIHN0cmF0ZWd5VQEgW2BEZWxlZ2F0ZVN0YWtlYF0ocGFsbGV0X25vbWluYXRpb25fcG9vbHM6OmFkYXB0ZXI6OkRlbGVnYXRlU3Rha2UpLCB0aGUgZnVuZHMgb2YgdGhlGQEgbWVtYmVyIGNhbiBiZSBtaWdyYXRlZCBmcm9tIHBvb2wgYWNjb3VudCB0byB0aGUgbWVtYmVyJ3MgYWNjb3VudC4gVXNlKQEgW2BtaWdyYXRlX2RlbGVnYXRpb25gXShwYWxsZXRfbm9taW5hdGlvbl9wb29sczo6Q2FsbDo6bWlncmF0ZV9kZWxlZ2F0aW9uKaQgdG8gbWlncmF0ZSB0aGUgZnVuZHMgb2YgdGhlIHBvb2wgbWVtYmVyLgBQbWVtYmVyX3RvdGFsX2JhbGFuY2UEDHdobwAYBGUBIFJldHVybnMgdGhlIHRvdGFsIGNvbnRyaWJ1dGlvbiBvZiBhIHBvb2wgbWVtYmVyIGluY2x1ZGluZyBhbnkgYmFsYW5jZSB0aGF0IGlzIHVuYm9uZGluZy4AMHBvb2xfYmFsYW5jZQQccG9vbF9pZBAYBJwgVG90YWwgYmFsYW5jZSBjb250cmlidXRlZCB0byB0aGUgcG9vbC4ANHBvb2xfYWNjb3VudHMEHHBvb2xfaWQQSQ8ELQEgUmV0dXJucyB0aGUgYm9uZGVkIGFjY291bnQgYW5kIHJld2FyZCBhY2NvdW50IGFzc29jaWF0ZWQgd2l0aCB0aGUgcG9vbF9pZC4ABPggUnVudGltZSBhcGkgZm9yIGFjY2Vzc2luZyBpbmZvcm1hdGlvbiBhYm91dCBub21pbmF0aW9uIHBvb2xzLgQAKFN0YWtpbmdBcGkMRG5vbWluYXRpb25zX3F1b3RhBBxiYWxhbmNlGBAEEQEgUmV0dXJucyB0aGUgbm9taW5hdGlvbnMgcXVvdGEgZm9yIGEgbm9taW5hdG9yIHdpdGggYSBnaXZlbiBiYWxhbmNlLgBcZXJhc19zdGFrZXJzX3BhZ2VfY291bnQIDGVyYRAcYWNjb3VudAAQBDkBIFJldHVybnMgdGhlIHBhZ2UgY291bnQgb2YgZXhwb3N1cmVzIGZvciBhIHZhbGlkYXRvciBgYWNjb3VudGAgaW4gYSBnaXZlbiBlcmEuADxwZW5kaW5nX3Jld2FyZHMIDGVyYRAcYWNjb3VudAAgBD0BIFJldHVybnMgdHJ1ZSBpZiB2YWxpZGF0b3IgYGFjY291bnRgIGhhcyBwYWdlcyB0byBiZSBjbGFpbWVkIGZvciB0aGUgZ2l2ZW4gZXJhLgAABABYVGFnZ2VkVHJhbnNhY3Rpb25RdWV1ZQRQdmFsaWRhdGVfdHJhbnNhY3Rpb24MGHNvdXJjZU0PCHR4IQkoYmxvY2tfaGFzaDRRDyRoIFZhbGlkYXRlIHRoZSB0cmFuc2FjdGlvbi4AZQEgVGhpcyBtZXRob2QgaXMgaW52b2tlZCBieSB0aGUgdHJhbnNhY3Rpb24gcG9vbCB0byBsZWFybiBkZXRhaWxzIGFib3V0IGdpdmVuIHRyYW5zYWN0aW9uLkUBIFRoZSBpbXBsZW1lbnRhdGlvbiBzaG91bGQgbWFrZSBzdXJlIHRvIHZlcmlmeSB0aGUgY29ycmVjdG5lc3Mgb2YgdGhlIHRyYW5zYWN0aW9uTQEgYWdhaW5zdCBjdXJyZW50IHN0YXRlLiBUaGUgZ2l2ZW4gYGJsb2NrX2hhc2hgIGNvcnJlc3BvbmRzIHRvIHRoZSBoYXNoIG9mIHRoZSBibG9ja3wgdGhhdCBpcyB1c2VkIGFzIGN1cnJlbnQgc3RhdGUuAEUBIE5vdGUgdGhhdCB0aGlzIGNhbGwgbWF5IGJlIHBlcmZvcm1lZCBieSB0aGUgcG9vbCBtdWx0aXBsZSB0aW1lcyBhbmQgdHJhbnNhY3Rpb25zpCBtaWdodCBiZSB2ZXJpZmllZCBpbiBhbnkgcG9zc2libGUgb3JkZXIuAARNASBUaGUgYFRhZ2dlZFRyYW5zYWN0aW9uUXVldWVgIGFwaSB0cmFpdCBmb3IgaW50ZXJmZXJpbmcgd2l0aCB0aGUgdHJhbnNhY3Rpb24gcXVldWUuDABET2ZmY2hhaW5Xb3JrZXJBcGkEPG9mZmNoYWluX3dvcmtlcgQYaGVhZGVy1QGQBMggU3RhcnRzIHRoZSBvZmYtY2hhaW4gdGFzayBmb3IgZ2l2ZW4gYmxvY2sgaGVhZGVyLgAEZCBUaGUgb2ZmY2hhaW4gd29ya2VyIGFwaS4IADRQYXJhY2hhaW5Ib3N0iCh2YWxpZGF0b3JzALUMBHAgR2V0IHRoZSBjdXJyZW50IHZhbGlkYXRvcnMuAEB2YWxpZGF0b3JfZ3JvdXBzAFkPDGUBIFJldHVybnMgdGhlIHZhbGlkYXRvciBncm91cHMgYW5kIHJvdGF0aW9uIGluZm8gbG9jYWxpemVkIGJhc2VkIG9uIHRoZSBoeXBvdGhldGljYWwgY2hpbGRhASAgb2YgYSBibG9jayB3aG9zZSBzdGF0ZSAgdGhpcyBpcyBpbnZva2VkIG9uLiBOb3RlIHRoYXQgYG5vd2AgaW4gdGhlIGBHcm91cFJvdGF0aW9uSW5mb2DQIHNob3VsZCBiZSB0aGUgc3VjY2Vzc29yIG9mIHRoZSBudW1iZXIgb2YgdGhlIGJsb2NrLgBIYXZhaWxhYmlsaXR5X2NvcmVzAGEPCDUBIFlpZWxkcyBpbmZvcm1hdGlvbiBvbiBhbGwgYXZhaWxhYmlsaXR5IGNvcmVzIGFzIHJlbGV2YW50IHRvIHRoZSBjaGlsZCBibG9jay49ASBDb3JlcyBhcmUgZWl0aGVyIGZyZWUgb3Igb2NjdXBpZWQuIEZyZWUgY29yZXMgY2FuIGhhdmUgcGFyYXMgYXNzaWduZWQgdG8gdGhlbS4AZHBlcnNpc3RlZF92YWxpZGF0aW9uX2RhdGEIHHBhcmFfaWS1Aihhc3N1bXB0aW9ufQ+BDxRpASBZaWVsZHMgdGhlIHBlcnNpc3RlZCB2YWxpZGF0aW9uIGRhdGEgZm9yIHRoZSBnaXZlbiBgUGFyYUlkYCBhbG9uZyB3aXRoIGFuIGFzc3VtcHRpb24gdGhhdNggc2hvdWxkIGJlIHVzZWQgaWYgdGhlIHBhcmEgY3VycmVudGx5IG9jY3VwaWVzIGEgY29yZS4ARQEgUmV0dXJucyBgTm9uZWAgaWYgZWl0aGVyIHRoZSBwYXJhIGlzIG5vdCByZWdpc3RlcmVkIG9yIHRoZSBhc3N1bXB0aW9uIGlzIGBGcmVlZGCYIGFuZCB0aGUgcGFyYSBhbHJlYWR5IG9jY3VwaWVzIGEgY29yZS4AXGFzc3VtZWRfdmFsaWRhdGlvbl9kYXRhCBxwYXJhX2lktQKcZXhwZWN0ZWRfcGVyc2lzdGVkX3ZhbGlkYXRpb25fZGF0YV9oYXNoNIkPDGkBIFJldHVybnMgdGhlIHBlcnNpc3RlZCB2YWxpZGF0aW9uIGRhdGEgZm9yIHRoZSBnaXZlbiBgUGFyYUlkYCBhbG9uZyB3aXRoIHRoZSBjb3JyZXNwb25kaW5ndQEgdmFsaWRhdGlvbiBjb2RlIGhhc2guIEluc3RlYWQgb2YgYWNjZXB0aW5nIGFzc3VtcHRpb24gYWJvdXQgdGhlIHBhcmEsIG1hdGNoZXMgdGhlIHZhbGlkYXRpb24pASBkYXRhIGhhc2ggYWdhaW5zdCBhbiBleHBlY3RlZCBvbmUgYW5kIHlpZWxkcyBgTm9uZWAgaWYgdGhleSdyZSBub3QgZXF1YWwuAGBjaGVja192YWxpZGF0aW9uX291dHB1dHMIHHBhcmFfaWS1AhxvdXRwdXRzwQQgBBUBIENoZWNrcyBpZiB0aGUgZ2l2ZW4gdmFsaWRhdGlvbiBvdXRwdXRzIHBhc3MgdGhlIGFjY2VwdGFuY2UgY3JpdGVyaWEuAFxzZXNzaW9uX2luZGV4X2Zvcl9jaGlsZAAQDPAgUmV0dXJucyB0aGUgc2Vzc2lvbiBpbmRleCBleHBlY3RlZCBhdCBhIGNoaWxkIG9mIHRoZSBibG9jay4A0CBUaGlzIGNhbiBiZSB1c2VkIHRvIGluc3RhbnRpYXRlIGEgYFNpZ25pbmdDb250ZXh0YC4APHZhbGlkYXRpb25fY29kZQgccGFyYV9pZLUCKGFzc3VtcHRpb259D9UEEFUBIEZldGNoIHRoZSB2YWxpZGF0aW9uIGNvZGUgdXNlZCBieSBhIHBhcmEsIG1ha2luZyB0aGUgZ2l2ZW4gYE9jY3VwaWVkQ29yZUFzc3VtcHRpb25gLgBFASBSZXR1cm5zIGBOb25lYCBpZiBlaXRoZXIgdGhlIHBhcmEgaXMgbm90IHJlZ2lzdGVyZWQgb3IgdGhlIGFzc3VtcHRpb24gaXMgYEZyZWVkYJggYW5kIHRoZSBwYXJhIGFscmVhZHkgb2NjdXBpZXMgYSBjb3JlLgB4Y2FuZGlkYXRlX3BlbmRpbmdfYXZhaWxhYmlsaXR5BBxwYXJhX2lktQKRDwhdASBHZXQgdGhlIHJlY2VpcHQgb2YgYSBjYW5kaWRhdGUgcGVuZGluZyBhdmFpbGFiaWxpdHkuIFRoaXMgcmV0dXJucyBgU29tZWAgZm9yIGFueSBwYXJhcyUBIGFzc2lnbmVkIHRvIG9jY3VwaWVkIGNvcmVzIGluIGBhdmFpbGFiaWxpdHlfY29yZXNgIGFuZCBgTm9uZWAgb3RoZXJ3aXNlLgBAY2FuZGlkYXRlX2V2ZW50cwCVDwQtASBHZXQgYSB2ZWN0b3Igb2YgZXZlbnRzIGNvbmNlcm5pbmcgY2FuZGlkYXRlcyB0aGF0IG9jY3VycmVkIHdpdGhpbiBhIGJsb2NrLgAwZG1xX2NvbnRlbnRzBCRyZWNpcGllbnS1AmkNBD0BIEdldCBhbGwgdGhlIHBlbmRpbmcgaW5ib3VuZCBtZXNzYWdlcyBpbiB0aGUgZG93bndhcmQgbWVzc2FnZSBxdWV1ZSBmb3IgYSBwYXJhLgB4aW5ib3VuZF9ocm1wX2NoYW5uZWxzX2NvbnRlbnRzBCRyZWNpcGllbnS1Ap0PCGUBIEdldCB0aGUgY29udGVudHMgb2YgYWxsIGNoYW5uZWxzIGFkZHJlc3NlZCB0byB0aGUgZ2l2ZW4gcmVjaXBpZW50LiBDaGFubmVscyB0aGF0IGhhdmUgbm+QIG1lc3NhZ2VzIGluIHRoZW0gYXJlIGFsc28gaW5jbHVkZWQuAFx2YWxpZGF0aW9uX2NvZGVfYnlfaGFzaAQQaGFzaL0E1QQEnCBHZXQgdGhlIHZhbGlkYXRpb24gY29kZSBmcm9tIGl0cyBoYXNoLgA4b25fY2hhaW5fdm90ZXMAqQ8EMQEgU2NyYXBlIGRpc3B1dGUgcmVsZXZhbnQgZnJvbSBvbi1jaGFpbiwgYmFja2luZyB2b3RlcyBhbmQgcmVzb2x2ZWQgZGlzcHV0ZXMuADBzZXNzaW9uX2luZm8EFGluZGV4EK0PDNwgR2V0IHRoZSBzZXNzaW9uIGluZm8gZm9yIHRoZSBnaXZlbiBzZXNzaW9uLCBpZiBzdG9yZWQuABkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiAyLgBoc3VibWl0X3B2Zl9jaGVja19zdGF0ZW1lbnQIEHN0bXQRBSRzaWduYXR1cmWhBJAMAQEgU3VibWl0cyBhIFBWRiBwcmUtY2hlY2tpbmcgc3RhdGVtZW50IGludG8gdGhlIHRyYW5zYWN0aW9uIHBvb2wuABkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiAyLgBUcHZmc19yZXF1aXJlX3ByZWNoZWNrADENDF0BIFJldHVybnMgY29kZSBoYXNoZXMgb2YgUFZGcyB0aGF0IHJlcXVpcmUgcHJlLWNoZWNraW5nIGJ5IHZhbGlkYXRvcnMgaW4gdGhlIGFjdGl2ZSBzZXQuABkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiAyLgBQdmFsaWRhdGlvbl9jb2RlX2hhc2gIHHBhcmFfaWS1Aihhc3N1bXB0aW9ufQ+xDwyFASBGZXRjaCB0aGUgaGFzaCBvZiB0aGUgdmFsaWRhdGlvbiBjb2RlIHVzZWQgYnkgYSBwYXJhLCBtYWtpbmcgdGhlIGdpdmVuIGBPY2N1cGllZENvcmVBc3N1bXB0aW9uYC4AGQEgTk9URTogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBwYXJhY2hhaW4gaG9zdCB2ZXJzaW9uIDIuACBkaXNwdXRlcwC1DwR4IFJldHVybnMgYWxsIG9uY2hhaW4gZGlzcHV0ZXMuAFxzZXNzaW9uX2V4ZWN1dG9yX3BhcmFtcwQ0c2Vzc2lvbl9pbmRleBC9DwS4IFJldHVybnMgZXhlY3V0aW9uIHBhcmFtZXRlcnMgZm9yIHRoZSBzZXNzaW9uLgBEdW5hcHBsaWVkX3NsYXNoZXMAwQ8IWQEgUmV0dXJucyBhIGxpc3Qgb2YgdmFsaWRhdG9ycyB0aGF0IGxvc3QgYSBwYXN0IHNlc3Npb24gZGlzcHV0ZSBhbmQgbmVlZCB0byBiZSBzbGFzaGVkLhkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiA1LgBMa2V5X293bmVyc2hpcF9wcm9vZgQwdmFsaWRhdG9yX2lkUQLRDwjMIFJldHVybnMgYSBtZXJrbGUgcHJvb2Ygb2YgYSB2YWxpZGF0b3Igc2Vzc2lvbiBrZXkuGQEgTk9URTogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBwYXJhY2hhaW4gaG9zdCB2ZXJzaW9uIDUuAGhzdWJtaXRfcmVwb3J0X2Rpc3B1dGVfbG9zdAg0ZGlzcHV0ZV9wcm9vZtkPTGtleV9vd25lcnNoaXBfcHJvb2bVD4kHDCkBIFN1Ym1pdCBhbiB1bnNpZ25lZCBleHRyaW5zaWMgdG8gc2xhc2ggdmFsaWRhdG9ycyB3aG8gbG9zdCBhIGRpc3B1dGUgYWJvdXR8IGEgY2FuZGlkYXRlIG9mIGEgcGFzdCBzZXNzaW9uLhkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiA1LgBUbWluaW11bV9iYWNraW5nX3ZvdGVzABAIDQEgR2V0IHRoZSBtaW5pbXVtIG51bWJlciBvZiBiYWNraW5nIHZvdGVzIGZvciBhIHBhcmFjaGFpbiBjYW5kaWRhdGUu9CBUaGlzIGlzIGEgc3RhZ2luZyBtZXRob2QhIERvIG5vdCB1c2Ugb24gcHJvZHVjdGlvbiBydW50aW1lcyEASHBhcmFfYmFja2luZ19zdGF0ZQSAX19ydW50aW1lX2FwaV9nZW5lcmF0ZWRfbmFtZV8wX1+1At0PBOQgUmV0dXJucyB0aGUgc3RhdGUgb2YgcGFyYWNoYWluIGJhY2tpbmcgZm9yIGEgZ2l2ZW4gcGFyYS4AUGFzeW5jX2JhY2tpbmdfcGFyYW1zAFkEBGEBIFJldHVybnMgY2FuZGlkYXRlJ3MgYWNjZXB0YW5jZSBsaW1pdGF0aW9ucyBmb3IgYXN5bmNocm9ub3VzIGJhY2tpbmcgZm9yIGEgcmVsYXkgcGFyZW50LgBMZGlzYWJsZWRfdmFsaWRhdG9ycwCxDAT4IFJldHVybnMgYSBsaXN0IG9mIGFsbCBkaXNhYmxlZCB2YWxpZGF0b3JzIGF0IHRoZSBnaXZlbiBibG9jay4ANG5vZGVfZmVhdHVyZXMAlQQITCBHZXQgbm9kZSBmZWF0dXJlcy70IFRoaXMgaXMgYSBzdGFnaW5nIG1ldGhvZCEgRG8gbm90IHVzZSBvbiBwcm9kdWN0aW9uIHJ1bnRpbWVzIQBYYXBwcm92YWxfdm90aW5nX3BhcmFtcwBxBASkIEFwcHJvdmFsIHZvdGluZyBjb25maWd1cmF0aW9uIHBhcmFtZXRlcnMALGNsYWltX3F1ZXVlAA0QBDAgQ2xhaW0gcXVldWUAfGNhbmRpZGF0ZXNfcGVuZGluZ19hdmFpbGFiaWxpdHkEHHBhcmFfaWS1AhkQBGAgRWxhc3RpYyBzY2FsaW5nIHN1cHBvcnQAaHZhbGlkYXRpb25fY29kZV9ib21iX2xpbWl0ABAEtCBSZXRyaWV2ZSB0aGUgbWF4aW11bSB1bmNvbXByZXNzZWQgY29kZSBzaXplLgBMYmFja2luZ19jb25zdHJhaW50cwQccGFyYV9pZLUCHRAIMQEgUmV0dXJucyB0aGUgY29uc3RyYWludHMgb24gdGhlIGFjdGlvbnMgdGhhdCBjYW4gYmUgdGFrZW4gYnkgYSBuZXcgcGFyYWNoYWluHCBibG9jay4AUHNjaGVkdWxpbmdfbG9va2FoZWFkABAEiCBSZXRyaWV2ZSB0aGUgc2NoZWR1bGluZyBsb29rYWhlYWQABNwgVGhlIEFQSSBmb3IgcXVlcnlpbmcgdGhlIHN0YXRlIG9mIHBhcmFjaGFpbnMgb24tY2hhaW4uNAAgQmVlZnlBcGkcNGJlZWZ5X2dlbmVzaXMAuAQFASBSZXR1cm4gdGhlIGJsb2NrIG51bWJlciB3aGVyZSBCRUVGWSBjb25zZW5zdXMgaXMgZW5hYmxlZC9zdGFydGVkADR2YWxpZGF0b3Jfc2V0ACUQBLggUmV0dXJuIHRoZSBjdXJyZW50IGFjdGl2ZSBCRUVGWSB2YWxpZGF0b3Igc2V0ALhzdWJtaXRfcmVwb3J0X2RvdWJsZV92b3RpbmdfdW5zaWduZWRfZXh0cmluc2ljCEhlcXVpdm9jYXRpb25fcHJvb2YRBzxrZXlfb3duZXJfcHJvb2YtEIkHIEUBIFN1Ym1pdHMgYW4gdW5zaWduZWQgZXh0cmluc2ljIHRvIHJlcG9ydCBhIGRvdWJsZSB2b3RpbmcgZXF1aXZvY2F0aW9uLiBUaGUgY2FsbGVy/CBtdXN0IHByb3ZpZGUgdGhlIGRvdWJsZSB2b3RpbmcgcHJvb2YgYW5kIGEga2V5IG93bmVyc2hpcCBwcm9vZvwgKHNob3VsZCBiZSBvYnRhaW5lZCB1c2luZyBgZ2VuZXJhdGVfa2V5X293bmVyc2hpcF9wcm9vZmApLiBUaGUFASBleHRyaW5zaWMgd2lsbCBiZSB1bnNpZ25lZCBhbmQgc2hvdWxkIG9ubHkgYmUgYWNjZXB0ZWQgZm9yIGxvY2FsFQEgYXV0aG9yc2hpcCAobm90IHRvIGJlIGJyb2FkY2FzdCB0byB0aGUgbmV0d29yaykuIFRoaXMgbWV0aG9kIHJldHVybnMJASBgTm9uZWAgd2hlbiBjcmVhdGlvbiBvZiB0aGUgZXh0cmluc2ljIGZhaWxzLCBlLmcuIGlmIGVxdWl2b2NhdGlvbgUBIHJlcG9ydGluZyBpcyBkaXNhYmxlZCBmb3IgdGhlIGdpdmVuIHJ1bnRpbWUgKGkuZS4gdGhpcyBtZXRob2QgaXMFASBoYXJkY29kZWQgdG8gcmV0dXJuIGBOb25lYCkuIE9ubHkgdXNlZnVsIGluIGFuIG9mZmNoYWluIGNvbnRleHQuALBzdWJtaXRfcmVwb3J0X2Zvcmtfdm90aW5nX3Vuc2lnbmVkX2V4dHJpbnNpYwhIZXF1aXZvY2F0aW9uX3Byb29mMRA8a2V5X293bmVyX3Byb29mLRCJByA9ASBTdWJtaXRzIGFuIHVuc2lnbmVkIGV4dHJpbnNpYyB0byByZXBvcnQgYSBmb3JrIHZvdGluZyBlcXVpdm9jYXRpb24uIFRoZSBjYWxsZXJBASBtdXN0IHByb3ZpZGUgdGhlIGZvcmsgdm90aW5nIHByb29mICh0aGUgYW5jZXN0cnkgcHJvb2Ygc2hvdWxkIGJlIG9idGFpbmVkIHVzaW5nPQEgYGdlbmVyYXRlX2FuY2VzdHJ5X3Byb29mYCkgYW5kIGEga2V5IG93bmVyc2hpcCBwcm9vZiAoc2hvdWxkIGJlIG9idGFpbmVkIHVzaW5nQQEgYGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2ZgKS4gVGhlIGV4dHJpbnNpYyB3aWxsIGJlIHVuc2lnbmVkIGFuZCBzaG91bGQgb25seU0BIGJlIGFjY2VwdGVkIGZvciBsb2NhbCBhdXRob3JzaGlwIChub3QgdG8gYmUgYnJvYWRjYXN0IHRvIHRoZSBuZXR3b3JrKS4gVGhpcyBtZXRob2QpASByZXR1cm5zIGBOb25lYCB3aGVuIGNyZWF0aW9uIG9mIHRoZSBleHRyaW5zaWMgZmFpbHMsIGUuZy4gaWYgZXF1aXZvY2F0aW9uBQEgcmVwb3J0aW5nIGlzIGRpc2FibGVkIGZvciB0aGUgZ2l2ZW4gcnVudGltZSAoaS5lLiB0aGlzIG1ldGhvZCBpcwUBIGhhcmRjb2RlZCB0byByZXR1cm4gYE5vbmVgKS4gT25seSB1c2VmdWwgaW4gYW4gb2ZmY2hhaW4gY29udGV4dC4A0HN1Ym1pdF9yZXBvcnRfZnV0dXJlX2Jsb2NrX3ZvdGluZ191bnNpZ25lZF9leHRyaW5zaWMISGVxdWl2b2NhdGlvbl9wcm9vZkEHPGtleV9vd25lcl9wcm9vZi0QiQcgXQEgU3VibWl0cyBhbiB1bnNpZ25lZCBleHRyaW5zaWMgdG8gcmVwb3J0IGEgZnV0dXJlIGJsb2NrIHZvdGluZyBlcXVpdm9jYXRpb24uIFRoZSBjYWxsZXIVASBtdXN0IHByb3ZpZGUgdGhlIGZ1dHVyZSBibG9jayB2b3RpbmcgcHJvb2YgYW5kIGEga2V5IG93bmVyc2hpcCBwcm9vZuwgKHNob3VsZCBiZSBvYnRhaW5lZCB1c2luZyBgZ2VuZXJhdGVfa2V5X293bmVyc2hpcF9wcm9vZmApLhUBIFRoZSBleHRyaW5zaWMgd2lsbCBiZSB1bnNpZ25lZCBhbmQgc2hvdWxkIG9ubHkgYmUgYWNjZXB0ZWQgZm9yIGxvY2FsFQEgYXV0aG9yc2hpcCAobm90IHRvIGJlIGJyb2FkY2FzdCB0byB0aGUgbmV0d29yaykuIFRoaXMgbWV0aG9kIHJldHVybnMJASBgTm9uZWAgd2hlbiBjcmVhdGlvbiBvZiB0aGUgZXh0cmluc2ljIGZhaWxzLCBlLmcuIGlmIGVxdWl2b2NhdGlvbgUBIHJlcG9ydGluZyBpcyBkaXNhYmxlZCBmb3IgdGhlIGdpdmVuIHJ1bnRpbWUgKGkuZS4gdGhpcyBtZXRob2QgaXMFASBoYXJkY29kZWQgdG8gcmV0dXJuIGBOb25lYCkuIE9ubHkgdXNlZnVsIGluIGFuIG9mZmNoYWluIGNvbnRleHQuAHBnZW5lcmF0ZV9rZXlfb3duZXJzaGlwX3Byb29mCBhzZXRfaWQwMGF1dGhvcml0eV9pZF0CNRAsCQEgR2VuZXJhdGVzIGEgcHJvb2Ygb2Yga2V5IG93bmVyc2hpcCBmb3IgdGhlIGdpdmVuIGF1dGhvcml0eSBpbiB0aGX8IGdpdmVuIHNldC4gQW4gZXhhbXBsZSB1c2FnZSBvZiB0aGlzIG1vZHVsZSBpcyBjb3VwbGVkIHdpdGggdGhlBQEgc2Vzc2lvbiBoaXN0b3JpY2FsIG1vZHVsZSB0byBwcm92ZSB0aGF0IGEgZ2l2ZW4gYXV0aG9yaXR5IGtleSBpcw0BIHRpZWQgdG8gYSBnaXZlbiBzdGFraW5nIGlkZW50aXR5IGR1cmluZyBhIHNwZWNpZmljIHNlc3Npb24uIFByb29mcxEBIG9mIGtleSBvd25lcnNoaXAgYXJlIG5lY2Vzc2FyeSBmb3Igc3VibWl0dGluZyBlcXVpdm9jYXRpb24gcmVwb3J0cy4RASBOT1RFOiBldmVuIHRob3VnaCB0aGUgQVBJIHRha2VzIGEgYHNldF9pZGAgYXMgcGFyYW1ldGVyIHRoZSBjdXJyZW50CQEgaW1wbGVtZW50YXRpb25zIGlnbm9yZXMgdGhpcyBwYXJhbWV0ZXIgYW5kIGluc3RlYWQgcmVsaWVzIG9uIHRoaXMNASBtZXRob2QgYmVpbmcgY2FsbGVkIGF0IHRoZSBjb3JyZWN0IGJsb2NrIGhlaWdodCwgaS5lLiBhbnkgcG9pbnQgYXQVASB3aGljaCB0aGUgZ2l2ZW4gc2V0IGlkIGlzIGxpdmUgb24tY2hhaW4uIEZ1dHVyZSBpbXBsZW1lbnRhdGlvbnMgd2lsbA0BIGluc3RlYWQgdXNlIGluZGV4ZWQgZGF0YSB0aHJvdWdoIGFuIG9mZmNoYWluIHdvcmtlciwgbm90IHJlcXVpcmluZ3ggb2xkZXIgc3RhdGVzIHRvIGJlIGF2YWlsYWJsZS4AXGdlbmVyYXRlX2FuY2VzdHJ5X3Byb29mCERwcmV2X2Jsb2NrX251bWJlchBcYmVzdF9rbm93bl9ibG9ja19udW1iZXK4NRAIRQEgR2VuZXJhdGVzIGEgcHJvb2YgdGhhdCB0aGUgYHByZXZfYmxvY2tfbnVtYmVyYCBpcyBwYXJ0IG9mIHRoZSBjYW5vbmljYWwgY2hhaW4gYXRsIGBiZXN0X2tub3duX2Jsb2NrX251bWJlcmAuAASAIEFQSSBuZWNlc3NhcnkgZm9yIEJFRUZZIHZvdGVycy4UABhNbXJBcGkUIG1tcl9yb290ADkQBIwgUmV0dXJuIHRoZSBvbi1jaGFpbiBNTVIgcm9vdCBoYXNoLgA4bW1yX2xlYWZfY291bnQAQRAEuCBSZXR1cm4gdGhlIG51bWJlciBvZiBNTVIgYmxvY2tzIGluIHRoZSBjaGFpbi4AOGdlbmVyYXRlX3Byb29mCDRibG9ja19udW1iZXJzGQJcYmVzdF9rbm93bl9ibG9ja19udW1iZXK4RRAIaQEgR2VuZXJhdGUgTU1SIHByb29mIGZvciBhIHNlcmllcyBvZiBibG9jayBudW1iZXJzLiBJZiBgYmVzdF9rbm93bl9ibG9ja19udW1iZXIgPSBTb21lKG4pYCxFASB1c2UgaGlzdG9yaWNhbCBNTVIgc3RhdGUgYXQgZ2l2ZW4gYmxvY2sgaGVpZ2h0IGBuYC4gRWxzZSwgdXNlIGN1cnJlbnQgTU1SIHN0YXRlLgAwdmVyaWZ5X3Byb29mCBhsZWF2ZXNNEBRwcm9vZlUQWRAU9CBWZXJpZnkgTU1SIHByb29mIGFnYWluc3Qgb24tY2hhaW4gTU1SIGZvciBhIGJhdGNoIG9mIGxlYXZlcy4AcQEgTm90ZSB0aGlzIGZ1bmN0aW9uIHdpbGwgdXNlIG9uLWNoYWluIE1NUiByb290IGhhc2ggYW5kIGNoZWNrIGlmIHRoZSBwcm9vZiBtYXRjaGVzIHRoZSBoYXNoLm0BIE5vdGUsIHRoZSBsZWF2ZXMgc2hvdWxkIGJlIHNvcnRlZCBzdWNoIHRoYXQgY29ycmVzcG9uZGluZyBsZWF2ZXMgYW5kIGxlYWYgaW5kaWNlcyBoYXZlIHRoZZUBIHNhbWUgcG9zaXRpb24gaW4gYm90aCB0aGUgYGxlYXZlc2AgdmVjdG9yIGFuZCB0aGUgYGxlYWZfaW5kaWNlc2AgdmVjdG9yIGNvbnRhaW5lZCBpbiB0aGUgW0xlYWZQcm9vZl0AWHZlcmlmeV9wcm9vZl9zdGF0ZWxlc3MMEHJvb3Q0GGxlYXZlc00QFHByb29mVRBZEBwBASBWZXJpZnkgTU1SIHByb29mIGFnYWluc3QgZ2l2ZW4gcm9vdCBoYXNoIGZvciBhIGJhdGNoIG9mIGxlYXZlcy4A/CBOb3RlIHRoaXMgZnVuY3Rpb24gZG9lcyBub3QgcmVxdWlyZSBhbnkgb24tY2hhaW4gc3RvcmFnZSAtIHRoZbwgcHJvb2YgaXMgdmVyaWZpZWQgYWdhaW5zdCBnaXZlbiBNTVIgcm9vdCBoYXNoLgBtASBOb3RlLCB0aGUgbGVhdmVzIHNob3VsZCBiZSBzb3J0ZWQgc3VjaCB0aGF0IGNvcnJlc3BvbmRpbmcgbGVhdmVzIGFuZCBsZWFmIGluZGljZXMgaGF2ZSB0aGWVASBzYW1lIHBvc2l0aW9uIGluIGJvdGggdGhlIGBsZWF2ZXNgIHZlY3RvciBhbmQgdGhlIGBsZWFmX2luZGljZXNgIHZlY3RvciBjb250YWluZWQgaW4gdGhlIFtMZWFmUHJvb2ZdAASEIEFQSSB0byBpbnRlcmFjdCB3aXRoIE1NUiBwYWxsZXQuCAAsQmVlZnlNbXJBcGkITGF1dGhvcml0eV9zZXRfcHJvb2YA9Q4E3CBSZXR1cm4gdGhlIGN1cnJlbnRseSBhY3RpdmUgQkVFRlkgYXV0aG9yaXR5IHNldCBwcm9vZi4AYG5leHRfYXV0aG9yaXR5X3NldF9wcm9vZgD1DgTIIFJldHVybiB0aGUgbmV4dC9xdWV1ZWQgQkVFRlkgYXV0aG9yaXR5IHNldCBwcm9vZi4ABJAgQVBJIHVzZWZ1bCBmb3IgQkVFRlkgbGlnaHQgY2xpZW50cy4EAChHcmFuZHBhQXBpEExncmFuZHBhX2F1dGhvcml0aWVzANwYPQEgR2V0IHRoZSBjdXJyZW50IEdSQU5EUEEgYXV0aG9yaXRpZXMgYW5kIHdlaWdodHMuIFRoaXMgc2hvdWxkIG5vdCBjaGFuZ2UgZXhjZXB0HQEgZm9yIHdoZW4gY2hhbmdlcyBhcmUgc2NoZWR1bGVkIGFuZCB0aGUgY29ycmVzcG9uZGluZyBkZWxheSBoYXMgcGFzc2VkLgA1ASBXaGVuIGNhbGxlZCBhdCBibG9jayBCLCBpdCB3aWxsIHJldHVybiB0aGUgc2V0IG9mIGF1dGhvcml0aWVzIHRoYXQgc2hvdWxkIGJlPQEgdXNlZCB0byBmaW5hbGl6ZSBkZXNjZW5kYW50cyBvZiB0aGlzIGJsb2NrIChCKzEsIEIrMiwgLi4uKS4gVGhlIGJsb2NrIEIgaXRzZWxmwCBpcyBmaW5hbGl6ZWQgYnkgdGhlIGF1dGhvcml0aWVzIGZyb20gYmxvY2sgQi0xLgC0c3VibWl0X3JlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWRfZXh0cmluc2ljCEhlcXVpdm9jYXRpb25fcHJvb2ZpAjxrZXlfb3duZXJfcHJvb2YtEIkHIBEBIFN1Ym1pdHMgYW4gdW5zaWduZWQgZXh0cmluc2ljIHRvIHJlcG9ydCBhbiBlcXVpdm9jYXRpb24uIFRoZSBjYWxsZXL4IG11c3QgcHJvdmlkZSB0aGUgZXF1aXZvY2F0aW9uIHByb29mIGFuZCBhIGtleSBvd25lcnNoaXAgcHJvb2b8IChzaG91bGQgYmUgb2J0YWluZWQgdXNpbmcgYGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2ZgKS4gVGhlBQEgZXh0cmluc2ljIHdpbGwgYmUgdW5zaWduZWQgYW5kIHNob3VsZCBvbmx5IGJlIGFjY2VwdGVkIGZvciBsb2NhbBUBIGF1dGhvcnNoaXAgKG5vdCB0byBiZSBicm9hZGNhc3QgdG8gdGhlIG5ldHdvcmspLiBUaGlzIG1ldGhvZCByZXR1cm5zCQEgYE5vbmVgIHdoZW4gY3JlYXRpb24gb2YgdGhlIGV4dHJpbnNpYyBmYWlscywgZS5nLiBpZiBlcXVpdm9jYXRpb24FASByZXBvcnRpbmcgaXMgZGlzYWJsZWQgZm9yIHRoZSBnaXZlbiBydW50aW1lIChpLmUuIHRoaXMgbWV0aG9kIGlzBQEgaGFyZGNvZGVkIHRvIHJldHVybiBgTm9uZWApLiBPbmx5IHVzZWZ1bCBpbiBhbiBvZmZjaGFpbiBjb250ZXh0LgBwZ2VuZXJhdGVfa2V5X293bmVyc2hpcF9wcm9vZggYc2V0X2lkMDBhdXRob3JpdHlfaWTkNRAsCQEgR2VuZXJhdGVzIGEgcHJvb2Ygb2Yga2V5IG93bmVyc2hpcCBmb3IgdGhlIGdpdmVuIGF1dGhvcml0eSBpbiB0aGX8IGdpdmVuIHNldC4gQW4gZXhhbXBsZSB1c2FnZSBvZiB0aGlzIG1vZHVsZSBpcyBjb3VwbGVkIHdpdGggdGhlBQEgc2Vzc2lvbiBoaXN0b3JpY2FsIG1vZHVsZSB0byBwcm92ZSB0aGF0IGEgZ2l2ZW4gYXV0aG9yaXR5IGtleSBpcw0BIHRpZWQgdG8gYSBnaXZlbiBzdGFraW5nIGlkZW50aXR5IGR1cmluZyBhIHNwZWNpZmljIHNlc3Npb24uIFByb29mcxEBIG9mIGtleSBvd25lcnNoaXAgYXJlIG5lY2Vzc2FyeSBmb3Igc3VibWl0dGluZyBlcXVpdm9jYXRpb24gcmVwb3J0cy4RASBOT1RFOiBldmVuIHRob3VnaCB0aGUgQVBJIHRha2VzIGEgYHNldF9pZGAgYXMgcGFyYW1ldGVyIHRoZSBjdXJyZW50/CBpbXBsZW1lbnRhdGlvbnMgaWdub3JlIHRoaXMgcGFyYW1ldGVyIGFuZCBpbnN0ZWFkIHJlbHkgb24gdGhpcw0BIG1ldGhvZCBiZWluZyBjYWxsZWQgYXQgdGhlIGNvcnJlY3QgYmxvY2sgaGVpZ2h0LCBpLmUuIGFueSBwb2ludCBhdBUBIHdoaWNoIHRoZSBnaXZlbiBzZXQgaWQgaXMgbGl2ZSBvbi1jaGFpbi4gRnV0dXJlIGltcGxlbWVudGF0aW9ucyB3aWxsDQEgaW5zdGVhZCB1c2UgaW5kZXhlZCBkYXRhIHRocm91Z2ggYW4gb2ZmY2hhaW4gd29ya2VyLCBub3QgcmVxdWlyaW5neCBvbGRlciBzdGF0ZXMgdG8gYmUgYXZhaWxhYmxlLgA4Y3VycmVudF9zZXRfaWQAMASYIEdldCBjdXJyZW50IEdSQU5EUEEgYXV0aG9yaXR5IHNldCBpZC4AJAEBIEFQSXMgZm9yIGludGVncmF0aW5nIHRoZSBHUkFORFBBIGZpbmFsaXR5IGdhZGdldCBpbnRvIHJ1bnRpbWVzLsAgVGhpcyBzaG91bGQgYmUgaW1wbGVtZW50ZWQgb24gdGhlIHJ1bnRpbWUgc2lkZS4AFQEgVGhpcyBpcyBwcmltYXJpbHkgdXNlZCBmb3IgbmVnb3RpYXRpbmcgYXV0aG9yaXR5LXNldCBjaGFuZ2VzIGZvciB0aGUNASBnYWRnZXQuIEdSQU5EUEEgdXNlcyBhIHNpZ25hbGluZyBtb2RlbCBvZiBjaGFuZ2luZyBhdXRob3JpdHkgc2V0czoxASBjaGFuZ2VzIHNob3VsZCBiZSBzaWduYWxlZCB3aXRoIGEgZGVsYXkgb2YgTiBibG9ja3MsIGFuZCB0aGVuIGF1dG9tYXRpY2FsbHnkIGFwcGxpZWQgaW4gdGhlIHJ1bnRpbWUgYWZ0ZXIgdGhvc2UgTiBibG9ja3MgaGF2ZSBwYXNzZWQuAPwgVGhlIGNvbnNlbnN1cyBwcm90b2NvbCB3aWxsIGNvb3JkaW5hdGUgdGhlIGhhbmRvZmYgZXh0ZXJuYWxseS4MABxCYWJlQXBpGDRjb25maWd1cmF0aW9uAF0QBIwgUmV0dXJuIHRoZSBjb25maWd1cmF0aW9uIGZvciBCQUJFLgBMY3VycmVudF9lcG9jaF9zdGFydADdAQTEIFJldHVybnMgdGhlIHNsb3QgdGhhdCBzdGFydGVkIHRoZSBjdXJyZW50IGVwb2NoLgA0Y3VycmVudF9lcG9jaABhEATEIFJldHVybnMgaW5mb3JtYXRpb24gcmVnYXJkaW5nIHRoZSBjdXJyZW50IGVwb2NoLgAobmV4dF9lcG9jaABhEAgBASBSZXR1cm5zIGluZm9ybWF0aW9uIHJlZ2FyZGluZyB0aGUgbmV4dCBlcG9jaCAod2hpY2ggd2FzIGFscmVhZHlcIHByZXZpb3VzbHkgYW5ub3VuY2VkKS4AcGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2YIEHNsb3TdATBhdXRob3JpdHlfaWTZAWUQLAkBIEdlbmVyYXRlcyBhIHByb29mIG9mIGtleSBvd25lcnNoaXAgZm9yIHRoZSBnaXZlbiBhdXRob3JpdHkgaW4gdGhlDQEgY3VycmVudCBlcG9jaC4gQW4gZXhhbXBsZSB1c2FnZSBvZiB0aGlzIG1vZHVsZSBpcyBjb3VwbGVkIHdpdGggdGhlBQEgc2Vzc2lvbiBoaXN0b3JpY2FsIG1vZHVsZSB0byBwcm92ZSB0aGF0IGEgZ2l2ZW4gYXV0aG9yaXR5IGtleSBpcw0BIHRpZWQgdG8gYSBnaXZlbiBzdGFraW5nIGlkZW50aXR5IGR1cmluZyBhIHNwZWNpZmljIHNlc3Npb24uIFByb29mcxEBIG9mIGtleSBvd25lcnNoaXAgYXJlIG5lY2Vzc2FyeSBmb3Igc3VibWl0dGluZyBlcXVpdm9jYXRpb24gcmVwb3J0cy4JASBOT1RFOiBldmVuIHRob3VnaCB0aGUgQVBJIHRha2VzIGEgYHNsb3RgIGFzIHBhcmFtZXRlciB0aGUgY3VycmVudAkBIGltcGxlbWVudGF0aW9ucyBpZ25vcmVzIHRoaXMgcGFyYW1ldGVyIGFuZCBpbnN0ZWFkIHJlbGllcyBvbiB0aGlzDQEgbWV0aG9kIGJlaW5nIGNhbGxlZCBhdCB0aGUgY29ycmVjdCBibG9jayBoZWlnaHQsIGkuZS4gYW55IHBvaW50IGF08CB3aGljaCB0aGUgZXBvY2ggZm9yIHRoZSBnaXZlbiBzbG90IGlzIGxpdmUgb24tY2hhaW4uIEZ1dHVyZQkBIGltcGxlbWVudGF0aW9ucyB3aWxsIGluc3RlYWQgdXNlIGluZGV4ZWQgZGF0YSB0aHJvdWdoIGFuIG9mZmNoYWlu0CB3b3JrZXIsIG5vdCByZXF1aXJpbmcgb2xkZXIgc3RhdGVzIHRvIGJlIGF2YWlsYWJsZS4AtHN1Ym1pdF9yZXBvcnRfZXF1aXZvY2F0aW9uX3Vuc2lnbmVkX2V4dHJpbnNpYwhIZXF1aXZvY2F0aW9uX3Byb29m0QE8a2V5X293bmVyX3Byb29maRCJByARASBTdWJtaXRzIGFuIHVuc2lnbmVkIGV4dHJpbnNpYyB0byByZXBvcnQgYW4gZXF1aXZvY2F0aW9uLiBUaGUgY2FsbGVy+CBtdXN0IHByb3ZpZGUgdGhlIGVxdWl2b2NhdGlvbiBwcm9vZiBhbmQgYSBrZXkgb3duZXJzaGlwIHByb29m/CAoc2hvdWxkIGJlIG9idGFpbmVkIHVzaW5nIGBnZW5lcmF0ZV9rZXlfb3duZXJzaGlwX3Byb29mYCkuIFRoZQUBIGV4dHJpbnNpYyB3aWxsIGJlIHVuc2lnbmVkIGFuZCBzaG91bGQgb25seSBiZSBhY2NlcHRlZCBmb3IgbG9jYWwVASBhdXRob3JzaGlwIChub3QgdG8gYmUgYnJvYWRjYXN0IHRvIHRoZSBuZXR3b3JrKS4gVGhpcyBtZXRob2QgcmV0dXJucwkBIGBOb25lYCB3aGVuIGNyZWF0aW9uIG9mIHRoZSBleHRyaW5zaWMgZmFpbHMsIGUuZy4gaWYgZXF1aXZvY2F0aW9uBQEgcmVwb3J0aW5nIGlzIGRpc2FibGVkIGZvciB0aGUgZ2l2ZW4gcnVudGltZSAoaS5lLiB0aGlzIG1ldGhvZCBpcwUBIGhhcmRjb2RlZCB0byByZXR1cm4gYE5vbmVgKS4gT25seSB1c2VmdWwgaW4gYW4gb2ZmY2hhaW4gY29udGV4dC4ABLggQVBJIG5lY2Vzc2FyeSBmb3IgYmxvY2sgYXV0aG9yc2hpcCB3aXRoIEJBQkUuCABUQXV0aG9yaXR5RGlzY292ZXJ5QXBpBCxhdXRob3JpdGllcwDJCgQZASBSZXRyaWV2ZSBhdXRob3JpdHkgaWRlbnRpZmllcnMgb2YgdGhlIGN1cnJlbnQgYW5kIG5leHQgYXV0aG9yaXR5IHNldC4AEHQgVGhlIGF1dGhvcml0eSBkaXNjb3ZlcnkgYXBpLgBRASBUaGlzIGFwaSBpcyB1c2VkIGJ5IHRoZSBgY2xpZW50L2F1dGhvcml0eS1kaXNjb3ZlcnlgIG1vZHVsZSB0byByZXRyaWV2ZSBpZGVudGlmaWVyc5wgb2YgdGhlIGN1cnJlbnQgYW5kIG5leHQgYXV0aG9yaXR5IHNldC4EACxTZXNzaW9uS2V5cwhUZ2VuZXJhdGVfc2Vzc2lvbl9rZXlzBBBzZWVkhQ44HBUBIEdlbmVyYXRlIGEgc2V0IG9mIHNlc3Npb24ga2V5cyB3aXRoIG9wdGlvbmFsbHkgdXNpbmcgdGhlIGdpdmVuIHNlZWQuCQEgVGhlIGtleXMgc2hvdWxkIGJlIHN0b3JlZCB3aXRoaW4gdGhlIGtleXN0b3JlIGV4cG9zZWQgdmlhIHJ1bnRpbWU8IGV4dGVybmFsaXRpZXMuALAgVGhlIHNlZWQgbmVlZHMgdG8gYmUgYSB2YWxpZCBgdXRmOGAgc3RyaW5nLgDQIFJldHVybnMgdGhlIGNvbmNhdGVuYXRlZCBTQ0FMRSBlbmNvZGVkIHB1YmxpYyBrZXlzLgBMZGVjb2RlX3Nlc3Npb25fa2V5cwQcZW5jb2RlZDhtEAyYIERlY29kZSB0aGUgZ2l2ZW4gcHVibGljIHNlc3Npb24ga2V5cy4A3CBSZXR1cm5zIHRoZSBsaXN0IG9mIHB1YmxpYyByYXcgcHVibGljIGtleXMgKyBrZXkgdHlwZS4ABGggU2Vzc2lvbiBrZXlzIHJ1bnRpbWUgYXBpLgQAPEFjY291bnROb25jZUFwaQQ0YWNjb3VudF9ub25jZQQcYWNjb3VudAAQBMAgR2V0IGN1cnJlbnQgYWNjb3VudCBub25jZSBvZiBnaXZlbiBgQWNjb3VudElkYC4ABIAgVGhlIEFQSSB0byBxdWVyeSBhY2NvdW50IG5vbmNlLgQAVFRyYW5zYWN0aW9uUGF5bWVudEFwaRAocXVlcnlfaW5mbwgMdXh0IQkMbGVuEHkQAABEcXVlcnlfZmVlX2RldGFpbHMIDHV4dCEJDGxlbhB9EAAATHF1ZXJ5X3dlaWdodF90b19mZWUEGHdlaWdodCgYAABMcXVlcnlfbGVuZ3RoX3RvX2ZlZQQYbGVuZ3RoEBgAAAAQAGRUcmFuc2FjdGlvblBheW1lbnRDYWxsQXBpEDxxdWVyeV9jYWxsX2luZm8IEGNhbGypAQxsZW4QeRAESQEgUXVlcnkgaW5mb3JtYXRpb24gb2YgYSBkaXNwYXRjaCBjbGFzcywgd2VpZ2h0LCBhbmQgZmVlIG9mIGEgZ2l2ZW4gZW5jb2RlZCBgQ2FsbGAuAFhxdWVyeV9jYWxsX2ZlZV9kZXRhaWxzCBBjYWxsqQEMbGVuEH0QBLQgUXVlcnkgZmVlIGRldGFpbHMgb2YgYSBnaXZlbiBlbmNvZGVkIGBDYWxsYC4ATHF1ZXJ5X3dlaWdodF90b19mZWUEGHdlaWdodCgYBAEBIFF1ZXJ5IHRoZSBvdXRwdXQgb2YgdGhlIGN1cnJlbnQgYFdlaWdodFRvRmVlYCBnaXZlbiBzb21lIGlucHV0LgBMcXVlcnlfbGVuZ3RoX3RvX2ZlZQQYbGVuZ3RoEBgEAQEgUXVlcnkgdGhlIG91dHB1dCBvZiB0aGUgY3VycmVudCBgTGVuZ3RoVG9GZWVgIGdpdmVuIHNvbWUgaW5wdXQuAAAMADRYY21QYXltZW50QXBpEHxxdWVyeV9hY2NlcHRhYmxlX3BheW1lbnRfYXNzZXRzBCx4Y21fdmVyc2lvbhCJEBS0IFJldHVybnMgYSBsaXN0IG9mIGFjY2VwdGFibGUgcGF5bWVudCBhc3NldHMuADAgIyBBcmd1bWVudHMAaCAqIGB4Y21fdmVyc2lvbmA6IFZlcnNpb24uAEBxdWVyeV94Y21fd2VpZ2h0BBxtZXNzYWdljQWVEBSoIFJldHVybnMgYSB3ZWlnaHQgbmVlZGVkIHRvIGV4ZWN1dGUgYSBYQ00uADAgIyBBcmd1bWVudHMAdCAqIGBtZXNzYWdlYDogYFZlcnNpb25lZFhjbWAuAGRxdWVyeV93ZWlnaHRfdG9fYXNzZXRfZmVlCBh3ZWlnaHQoFGFzc2V08QaZEBjoIENvbnZlcnRzIGEgd2VpZ2h0IGludG8gYSBmZWUgZm9yIHRoZSBzcGVjaWZpZWQgYEFzc2V0SWRgLgAwICMgQXJndW1lbnRzAIggKiBgd2VpZ2h0YDogY29udmVydGlibGUgYFdlaWdodGAufCAqIGBhc3NldGA6IGBWZXJzaW9uZWRBc3NldElkYC4ATHF1ZXJ5X2RlbGl2ZXJ5X2ZlZXMILGRlc3RpbmF0aW9ujQEcbWVzc2FnZY0FnRAgHQEgR2V0IGRlbGl2ZXJ5IGZlZXMgZm9yIHNlbmRpbmcgYSBzcGVjaWZpYyBgbWVzc2FnZWAgdG8gYSBgZGVzdGluYXRpb25gLvQgVGhlc2UgYWx3YXlzIGNvbWUgaW4gYSBzcGVjaWZpYyBhc3NldCwgZGVmaW5lZCBieSB0aGUgY2hhaW4uADAgIyBBcmd1bWVudHOBASAqIGBtZXNzYWdlYDogVGhlIG1lc3NhZ2UgdGhhdCdsbCBiZSBzZW50LCBuZWNlc3NhcnkgYmVjYXVzZSBtb3N0IGRlbGl2ZXJ5IGZlZXMgYXJlIGJhc2VkIG9uIHRoZVwgICBzaXplIG9mIHRoZSBtZXNzYWdlLmEBICogYGRlc3RpbmF0aW9uYDogVGhlIGRlc3RpbmF0aW9uIHRvIHNlbmQgdGhlIG1lc3NhZ2UgdG8uIERpZmZlcmVudCBkZXN0aW5hdGlvbnMgbWF5IHVzZcAgICBkaWZmZXJlbnQgc2VuZGVycyB0aGF0IGNoYXJnZSBkaWZmZXJlbnQgZmVlcy4ALHAgQSB0cmFpdCBvZiBYQ00gcGF5bWVudCBBUEkuAKggQVBJIHByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgZm9yIG9idGFpbmluZzoAxCAqIHRoZSB3ZWlnaHQgcmVxdWlyZWQgdG8gZXhlY3V0ZSBhbiBYQ00gbWVzc2FnZSwFASAqIGEgbGlzdCBvZiBhY2NlcHRhYmxlIGBBc3NldElkYHMgZm9yIG1lc3NhZ2UgZXhlY3V0aW9uIHBheW1lbnQsAQEgKiB0aGUgY29zdCBvZiB0aGUgd2VpZ2h0IGluIHRoZSBzcGVjaWZpZWQgYWNjZXB0YWJsZSBgQXNzZXRJZGAuoCAqIHRoZSBmZWVzIGZvciBhbiBYQ00gbWVzc2FnZSBkZWxpdmVyeS4A8CBUbyBkZXRlcm1pbmUgdGhlIGV4ZWN1dGlvbiB3ZWlnaHQgb2YgdGhlIGNhbGxzIHJlcXVpcmVkIGZvcnUBIFtgeGNtOjpsYXRlc3Q6Okluc3RydWN0aW9uOjpUcmFuc2FjdGBdIGluc3RydWN0aW9uLCBgVHJhbnNhY3Rpb25QYXltZW50Q2FsbEFwaWAgY2FuIGJlIHVzZWQuBAAkRHJ5UnVuQXBpCDBkcnlfcnVuX2NhbGwMGG9yaWdpbqUCEGNhbGypAUxyZXN1bHRfeGNtc192ZXJzaW9uEKEQBEQgRHJ5IHJ1biBjYWxsIFYyLgAsZHJ5X3J1bl94Y20IPG9yaWdpbl9sb2NhdGlvbo0BDHhjbcEGwRAEUCBEcnkgcnVuIFhDTSBwcm9ncmFtACSxASBBUEkgZm9yIGRyeS1ydW5uaW5nIGV4dHJpbnNpY3MgYW5kIFhDTSBwcm9ncmFtcyB0byBnZXQgdGhlIHByb2dyYW1zIHRoYXQgbmVlZCB0byBiZSBwYXNzZWQgdG8gdGhlIGZlZXMgQVBJLgCBASBBbGwgY2FsbHMgcmV0dXJuIGEgdmVjdG9yIG9mIHR1cGxlcyAobG9jYXRpb24sIHhjbSkgd2hlcmUgZWFjaCAieGNtIiBpcyBleGVjdXRlZCBpbiAibG9jYXRpb24iLuQgSWYgdGhlcmUncyBsb2NhbCBleGVjdXRpb24sIHRoZSBsb2NhdGlvbiB3aWxsIGJlICJIZXJlIi4dASBUaGlzIHZlY3RvciBjYW4gYmUgdXNlZCB0byBjYWxjdWxhdGUgYm90aCBleGVjdXRpb24gYW5kIGRlbGl2ZXJ5IGZlZXMuAJkBIENhbGxzIG9yIFhDTXMgbWlnaHQgZmFpbCB3aGVuIGV4ZWN1dGVkLCB0aGlzIGRvZXNuJ3QgbWVhbiB0aGUgcmVzdWx0IG9mIHRoZXNlIGNhbGxzIHdpbGwgYmUgYW4gYEVycmAuZQEgSW4gdGhvc2UgY2FzZXMsIHRoZXJlIG1pZ2h0IHN0aWxsIGJlIGEgdmFsaWQgcmVzdWx0LCB3aXRoIHRoZSBleGVjdXRpb24gZXJyb3IgaW5zaWRlIGl0LmUBIFRoZSBvbmx5IHJlYXNvbnMgd2h5IHRoZXNlIGNhbGxzIG1pZ2h0IHJldHVybiBhbiBlcnJvciBhcmUgbGlzdGVkIGluIHRoZSBbYEVycm9yYF0gZW51bS4IAFBMb2NhdGlvblRvQWNjb3VudEFwaQRAY29udmVydF9sb2NhdGlvbgQgbG9jYXRpb26NAckQBJAgQ29udmVydHMgYExvY2F0aW9uYCB0byBgQWNjb3VudElkYC4ABA0BIEFQSSBmb3IgdXNlZnVsIGNvbnZlcnNpb25zIGJldHdlZW4gWENNIGBMb2NhdGlvbmAgYW5kIGBBY2NvdW50SWRgLgQAOEdlbmVzaXNCdWlsZGVyDCxidWlsZF9zdGF0ZQQQanNvbjjREChlASBCdWlsZCBgUnVudGltZUdlbmVzaXNDb25maWdgIGZyb20gYSBKU09OIGJsb2Igbm90IHVzaW5nIGFueSBkZWZhdWx0cyBhbmQgc3RvcmUgaXQgaW4gdGhlJCBzdG9yYWdlLgApASBJbiB0aGUgY2FzZSBvZiBhIEZSQU1FLWJhc2VkIHJ1bnRpbWUsIHRoaXMgZnVuY3Rpb24gZGVzZXJpYWxpemVzIHRoZSBmdWxsVQEgYFJ1bnRpbWVHZW5lc2lzQ29uZmlnYCBmcm9tIHRoZSBnaXZlbiBKU09OIGJsb2IgYW5kIHB1dHMgaXQgaW50byB0aGUgc3RvcmFnZS4gSWYgdGhlVQEgcHJvdmlkZWQgSlNPTiBibG9iIGlzIGluY29ycmVjdCBvciBpbmNvbXBsZXRlIG9yIHRoZSBkZXNlcmlhbGl6YXRpb24gZmFpbHMsIGFuIGVycm9yNCBpcyByZXR1cm5lZC4AXQEgUGxlYXNlIG5vdGUgdGhhdCBwcm92aWRlZCBKU09OIGJsb2IgbXVzdCBjb250YWluIGFsbCBgUnVudGltZUdlbmVzaXNDb25maWdgIGZpZWxkcywgbm9cIGRlZmF1bHRzIHdpbGwgYmUgdXNlZC4AKGdldF9wcmVzZXQECGlk1RCFDjhhASBSZXR1cm5zIGEgSlNPTiBibG9iIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBidWlsdC1pbiBgUnVudGltZUdlbmVzaXNDb25maWdgIGlkZW50aWZpZWQgYnkYIGBpZGAuAFUBIElmIGBpZGAgaXMgYE5vbmVgIHRoZSBmdW5jdGlvbiBzaG91bGQgcmV0dXJuIEpTT04gYmxvYiByZXByZXNlbnRhdGlvbiBvZiB0aGUgZGVmYXVsdEkBIGBSdW50aW1lR2VuZXNpc0NvbmZpZ2Agc3RydWN0IG9mIHRoZSBydW50aW1lLiBJbXBsZW1lbnRhdGlvbiBtdXN0IHByb3ZpZGUgZGVmYXVsdGAgYFJ1bnRpbWVHZW5lc2lzQ29uZmlnYC4AIQEgT3RoZXJ3aXNlIGZ1bmN0aW9uIHJldHVybnMgYSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBidWlsdC1pbiwgbmFtZWRRASBgUnVudGltZUdlbmVzaXNDb25maWdgIHByZXNldCBpZGVudGlmaWVkIGJ5IGBpZGAsIG9yIGBOb25lYCBpZiBzdWNoIHByZXNldCBkb2VzIG5vdGEBIGV4aXN0LiBSZXR1cm5lZCBgVmVjPHU4PmAgY29udGFpbnMgYnl0ZXMgb2YgSlNPTiBibG9iIChwYXRjaCkgd2hpY2ggY29tcHJpc2VzIGEgbGlzdCBvZk0BIChwb3RlbnRpYWxseSBuZXN0ZWQpIGtleS12YWx1ZSBwYWlycyB0aGF0IGFyZSBpbnRlbmRlZCBmb3IgY3VzdG9taXppbmcgdGhlIGRlZmF1bHRlASBydW50aW1lIGdlbmVzaXMgY29uZmlnLiBUaGUgcGF0Y2ggc2hhbGwgYmUgbWVyZ2VkIChyZmM3Mzg2KSB3aXRoIHRoZSBKU09OIHJlcHJlc2VudGF0aW9uYQEgb2YgdGhlIGRlZmF1bHQgYFJ1bnRpbWVHZW5lc2lzQ29uZmlnYCB0byBjcmVhdGUgYSBjb21wcmVoZW5zaXZlIGdlbmVzaXMgY29uZmlnIHRoYXQgY2FuhCBiZSB1c2VkIGluIGBidWlsZF9zdGF0ZWAgbWV0aG9kLgAwcHJlc2V0X25hbWVzANkQEFEBIFJldHVybnMgYSBsaXN0IG9mIGlkZW50aWZpZXJzIGZvciBhdmFpbGFibGUgYnVpbHRpbiBgUnVudGltZUdlbmVzaXNDb25maWdgIHByZXNldHMuAGEBIFRoZSBwcmVzZXRzIGZyb20gdGhlIGxpc3QgY2FuIGJlIHF1ZXJpZWQgd2l0aCBbYEdlbmVzaXNCdWlsZGVyOjpnZXRfcHJlc2V0YF0gbWV0aG9kLiBJZgEBIG5vIG5hbWVkIHByZXNldHMgYXJlIHByb3ZpZGVkIGJ5IHRoZSBydW50aW1lIHRoZSBsaXN0IGlzIGVtcHR5LgAE8CBBUEkgdG8gaW50ZXJhY3Qgd2l0aCBgUnVudGltZUdlbmVzaXNDb25maWdgIGZvciB0aGUgcnVudGltZQQAqQFU3RAA";
var paseo_metadata_default = binMeta;
export {
  paseo_metadata_default as default
};
