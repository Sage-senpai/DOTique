// .papi/descriptors/src/paseo_people_metadata.ts
var binMeta = "";
var paseo_people_metadata_default = binMeta;
export {
  paseo_people_metadata_default as default
};
