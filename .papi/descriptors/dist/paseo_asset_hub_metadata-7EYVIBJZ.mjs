// .papi/descriptors/src/paseo_asset_hub_metadata.ts
var binMeta = "";
var paseo_asset_hub_metadata_default = binMeta;
export {
  paseo_asset_hub_metadata_default as default
};
